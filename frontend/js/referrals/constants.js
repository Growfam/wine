/**
 * –ì–ª–æ–±–∞–ª—å–Ω—ñ –∫–æ–Ω—Å—Ç–∞–Ω—Ç–∏ –¥–ª—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ—ó —Å–∏—Å—Ç–µ–º–∏ –∑ –¥–µ—Ç–∞–ª—å–Ω–∏–º –ª–æ–≥—É–≤–∞–Ω–Ω—è–º
 */
window.ReferralConstants = (function() {
  'use strict';

  console.log('üì¶ [CONSTANTS] ========== –ó–ê–í–ê–ù–¢–ê–ñ–ï–ù–ù–Ø –ú–û–î–£–õ–Ø ReferralConstants ==========');
  console.log('üïê [CONSTANTS] –ß–∞—Å –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è:', new Date().toISOString());

  // actionTypes.js
  console.log('üéØ [CONSTANTS] –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è LevelRewardsActionTypes...');
  const LevelRewardsActionTypes = {
    FETCH_LEVEL_REWARDS_REQUEST: 'FETCH_LEVEL_REWARDS_REQUEST',
    FETCH_LEVEL_REWARDS_SUCCESS: 'FETCH_LEVEL_REWARDS_SUCCESS',
    FETCH_LEVEL_REWARDS_FAILURE: 'FETCH_LEVEL_REWARDS_FAILURE',
    UPDATE_LEVEL1_REWARDS: 'UPDATE_LEVEL1_REWARDS',
    UPDATE_LEVEL2_REWARDS: 'UPDATE_LEVEL2_REWARDS',
    FETCH_REWARDS_HISTORY_REQUEST: 'FETCH_REWARDS_HISTORY_REQUEST',
    FETCH_REWARDS_HISTORY_SUCCESS: 'FETCH_REWARDS_HISTORY_SUCCESS',
    FETCH_REWARDS_HISTORY_FAILURE: 'FETCH_REWARDS_HISTORY_FAILURE',
    CLEAR_LEVEL_REWARDS_ERROR: 'CLEAR_LEVEL_REWARDS_ERROR'
  };
  console.log('‚úÖ [CONSTANTS] LevelRewardsActionTypes —Å—Ç–≤–æ—Ä–µ–Ω–æ:', Object.keys(LevelRewardsActionTypes).length, '—Ç–∏–ø—ñ–≤');

  // activityThresholds.js
  console.log('üìä [CONSTANTS] –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–æ—Ä–æ–≥—ñ–≤ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ...');
  const MIN_DRAWS_PARTICIPATION = 3;
  const MIN_INVITED_REFERRALS = 1;
  console.log('‚úÖ [CONSTANTS] –ü–æ—Ä–æ–≥–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ:', {
    MIN_DRAWS_PARTICIPATION: MIN_DRAWS_PARTICIPATION,
    MIN_INVITED_REFERRALS: MIN_INVITED_REFERRALS
  });

  // badgeRewards.js
  console.log('üèÜ [CONSTANTS] –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –≤–∏–Ω–∞–≥–æ—Ä–æ–¥ –∑–∞ –±–µ–π–¥–∂—ñ...');
  const BRONZE_BADGE_REWARD = 2500;
  const SILVER_BADGE_REWARD = 5000;
  const GOLD_BADGE_REWARD = 10000;
  const PLATINUM_BADGE_REWARD = 20000;

  const BADGE_REWARDS = {
    BRONZE: BRONZE_BADGE_REWARD,
    SILVER: SILVER_BADGE_REWARD,
    GOLD: GOLD_BADGE_REWARD,
    PLATINUM: PLATINUM_BADGE_REWARD
  };
  console.log('‚úÖ [CONSTANTS] –í–∏–Ω–∞–≥–æ—Ä–æ–¥–∏ –∑–∞ –±–µ–π–¥–∂—ñ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ:', BADGE_REWARDS);

  function getRewardByBadgeType(badgeType) {
    console.log('üîç [CONSTANTS] getRewardByBadgeType –≤–∏–∫–ª–∏–∫–∞–Ω–æ –¥–ª—è:', badgeType);
    const reward = BADGE_REWARDS[badgeType] || 0;
    console.log('üí∞ [CONSTANTS] –í–∏–Ω–∞–≥–æ—Ä–æ–¥–∞ –¥–ª—è', badgeType, ':', reward);
    return reward;
  }

  // badgeThresholds.js
  console.log('üéØ [CONSTANTS] –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–æ—Ä–æ–≥—ñ–≤ –¥–ª—è –±–µ–π–¥–∂—ñ–≤...');
  const BRONZE_BADGE_THRESHOLD = 25;
  const SILVER_BADGE_THRESHOLD = 50;
  const GOLD_BADGE_THRESHOLD = 100;
  const PLATINUM_BADGE_THRESHOLD = 500;

  const BADGE_THRESHOLDS = {
    BRONZE: BRONZE_BADGE_THRESHOLD,
    SILVER: SILVER_BADGE_THRESHOLD,
    GOLD: GOLD_BADGE_THRESHOLD,
    PLATINUM: PLATINUM_BADGE_THRESHOLD
  };
  console.log('‚úÖ [CONSTANTS] –ü–æ—Ä–æ–≥–∏ –±–µ–π–¥–∂—ñ–≤ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ:', BADGE_THRESHOLDS);

  const BADGE_TYPES = ['BRONZE', 'SILVER', 'GOLD', 'PLATINUM'];
  console.log('‚úÖ [CONSTANTS] –¢–∏–ø–∏ –±–µ–π–¥–∂—ñ–≤:', BADGE_TYPES);

  // directBonuses.js
  console.log('üí∞ [CONSTANTS] –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –ø—Ä—è–º–æ–≥–æ –±–æ–Ω—É—Å—É...');
  const DIRECT_BONUS_AMOUNT = 50;
  console.log('‚úÖ [CONSTANTS] –ü—Ä—è–º–∏–π –±–æ–Ω—É—Å –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ:', DIRECT_BONUS_AMOUNT, 'winix');

  // rewardRates.js
  console.log('üìà [CONSTANTS] –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞–≤–æ–∫ –≤–∏–Ω–∞–≥–æ—Ä–æ–¥...');
  const LEVEL_1_REWARD_RATE = 0.1;
  const LEVEL_2_REWARD_RATE = 0.05;
  console.log('‚úÖ [CONSTANTS] –°—Ç–∞–≤–∫–∏ –≤–∏–Ω–∞–≥–æ—Ä–æ–¥ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ:', {
    LEVEL_1_REWARD_RATE: (LEVEL_1_REWARD_RATE * 100) + '%',
    LEVEL_2_REWARD_RATE: (LEVEL_2_REWARD_RATE * 100) + '%'
  });

  // taskThresholds.js
  console.log('üìã [CONSTANTS] –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–≤–¥–∞–Ω—å —Ç–∞ —ó—Ö –ø–æ—Ä–æ–≥—ñ–≤...');
  const REFERRAL_TASK_THRESHOLD = 100;
  const REFERRAL_TASK_REWARD = 12000;
  const ACTIVE_REFERRALS_TASK_THRESHOLD = 50;
  const ACTIVE_REFERRALS_TASK_REWARD = 6000;

  const TASK_THRESHOLDS = {
    REFERRAL_COUNT: {
      threshold: REFERRAL_TASK_THRESHOLD,
      reward: REFERRAL_TASK_REWARD,
      title: '–ó–∞–ø—Ä–æ—Å–∏—Ç–∏ 100 —Ä–µ—Ñ–µ—Ä–∞–ª—ñ–≤',
      description: '–ó–∞–ø—Ä–æ—Å—ñ—Ç—å 100 –Ω–æ–≤–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ —Ç–∞ –æ—Ç—Ä–∏–º–∞–π—Ç–µ –¥–æ–¥–∞—Ç–∫–æ–≤—É –≤–∏–Ω–∞–≥–æ—Ä–æ–¥—É'
    },
    ACTIVE_REFERRALS: {
      threshold: ACTIVE_REFERRALS_TASK_THRESHOLD,
      reward: ACTIVE_REFERRALS_TASK_REWARD,
      title: '–ó–∞–ª—É—á–∏—Ç–∏ 50 –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ä–µ—Ñ–µ—Ä–∞–ª—ñ–≤',
      description: '–ó–∞–ª—É—á—ñ—Ç—å 50 –∞–∫—Ç–∏–≤–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –≤–∏–Ω–∞–≥–æ—Ä–æ–¥–∏'
    }
  };
  console.log('‚úÖ [CONSTANTS] –ó–∞–≤–¥–∞–Ω–Ω—è –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ:', Object.keys(TASK_THRESHOLDS));
  console.log('üìä [CONSTANTS] –î–µ—Ç–∞–ª—ñ –∑–∞–≤–¥–∞–Ω—å:');
  Object.keys(TASK_THRESHOLDS).forEach(function(key) {
    console.log(`  - ${key}:`, {
      threshold: TASK_THRESHOLDS[key].threshold,
      reward: TASK_THRESHOLDS[key].reward,
      title: TASK_THRESHOLDS[key].title
    });
  });

  const TASK_TYPES = Object.keys(TASK_THRESHOLDS);
  console.log('‚úÖ [CONSTANTS] –¢–∏–ø–∏ –∑–∞–≤–¥–∞–Ω—å:', TASK_TYPES);

  // urlPatterns.js - –û–ù–û–í–õ–ï–ù–û –¥–ª—è –Ω–æ–≤–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç—É
  console.log('üîó [CONSTANTS] –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è URL —à–∞–±–ª–æ–Ω—ñ–≤...');
  const REFERRAL_URL_PATTERN = 'https://t.me/WINIX_Official_bot?start={id}';
  console.log('‚úÖ [CONSTANTS] –®–∞–±–ª–æ–Ω —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ URL:', REFERRAL_URL_PATTERN);

  // –ë–∞–∑–æ–≤–∏–π URL –¥–ª—è Telegram –±–æ—Ç–∞
  const TELEGRAM_BOT_URL = 'https://t.me/WINIX_Official_bot';
  console.log('‚úÖ [CONSTANTS] URL Telegram –±–æ—Ç–∞:', TELEGRAM_BOT_URL);

  // –§—ñ–Ω–∞–ª—å–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
  console.log('üìä [CONSTANTS] === –ü–Ü–î–°–£–ú–û–ö –ó–ê–í–ê–ù–¢–ê–ñ–ï–ù–ò–• –ö–û–ù–°–¢–ê–ù–¢ ===');
  console.log('  - Action Types:', Object.keys(LevelRewardsActionTypes).length);
  console.log('  - –ê–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å:', { MIN_DRAWS_PARTICIPATION, MIN_INVITED_REFERRALS });
  console.log('  - –ë–µ–π–¥–∂—ñ:', {
    types: BADGE_TYPES.length,
    rewards: Object.keys(BADGE_REWARDS).length,
    thresholds: Object.keys(BADGE_THRESHOLDS).length
  });
  console.log('  - –ë–æ–Ω—É—Å–∏:', { DIRECT_BONUS_AMOUNT });
  console.log('  - –°—Ç–∞–≤–∫–∏:', { LEVEL_1_REWARD_RATE, LEVEL_2_REWARD_RATE });
  console.log('  - –ó–∞–≤–¥–∞–Ω–Ω—è:', TASK_TYPES.length);
  console.log('  - URL:', { REFERRAL_URL_PATTERN, TELEGRAM_BOT_URL });

  // –ü—É–±–ª—ñ—á–Ω–∏–π API
  const publicAPI = {
    LevelRewardsActionTypes: LevelRewardsActionTypes,
    MIN_DRAWS_PARTICIPATION: MIN_DRAWS_PARTICIPATION,
    MIN_INVITED_REFERRALS: MIN_INVITED_REFERRALS,
    BRONZE_BADGE_REWARD: BRONZE_BADGE_REWARD,
    SILVER_BADGE_REWARD: SILVER_BADGE_REWARD,
    GOLD_BADGE_REWARD: GOLD_BADGE_REWARD,
    PLATINUM_BADGE_REWARD: PLATINUM_BADGE_REWARD,
    BADGE_REWARDS: BADGE_REWARDS,
    getRewardByBadgeType: getRewardByBadgeType,
    BRONZE_BADGE_THRESHOLD: BRONZE_BADGE_THRESHOLD,
    SILVER_BADGE_THRESHOLD: SILVER_BADGE_THRESHOLD,
    GOLD_BADGE_THRESHOLD: GOLD_BADGE_THRESHOLD,
    PLATINUM_BADGE_THRESHOLD: PLATINUM_BADGE_THRESHOLD,
    BADGE_THRESHOLDS: BADGE_THRESHOLDS,
    BADGE_TYPES: BADGE_TYPES,
    DIRECT_BONUS_AMOUNT: DIRECT_BONUS_AMOUNT,
    LEVEL_1_REWARD_RATE: LEVEL_1_REWARD_RATE,
    LEVEL_2_REWARD_RATE: LEVEL_2_REWARD_RATE,
    REFERRAL_TASK_THRESHOLD: REFERRAL_TASK_THRESHOLD,
    REFERRAL_TASK_REWARD: REFERRAL_TASK_REWARD,
    ACTIVE_REFERRALS_TASK_THRESHOLD: ACTIVE_REFERRALS_TASK_THRESHOLD,
    ACTIVE_REFERRALS_TASK_REWARD: ACTIVE_REFERRALS_TASK_REWARD,
    TASK_THRESHOLDS: TASK_THRESHOLDS,
    TASK_TYPES: TASK_TYPES,
    REFERRAL_URL_PATTERN: REFERRAL_URL_PATTERN,
    TELEGRAM_BOT_URL: TELEGRAM_BOT_URL
  };

  console.log('‚úÖ [CONSTANTS] –ü—É–±–ª—ñ—á–Ω–∏–π API —Å—Ç–≤–æ—Ä–µ–Ω–æ –∑', Object.keys(publicAPI).length, '–≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—è–º–∏');
  console.log('‚úÖ [CONSTANTS] ========== –ú–û–î–£–õ–¨ ReferralConstants –ó–ê–í–ê–ù–¢–ê–ñ–ï–ù–û –£–°–ü–Ü–®–ù–û ==========');

  return publicAPI;
})();

// –î–ª—è –∑–≤–æ—Ä–æ—Ç–Ω–æ—ó —Å—É–º—ñ—Å–Ω–æ—Å—Ç—ñ
console.log('üîÑ [CONSTANTS] –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –≥–ª–æ–±–∞–ª—å–Ω–∏—Ö –∑–º—ñ–Ω–Ω–∏—Ö –¥–ª—è –∑–≤–æ—Ä–æ—Ç–Ω–æ—ó —Å—É–º—ñ—Å–Ω–æ—Å—Ç—ñ...');
window.DIRECT_BONUS_AMOUNT = window.ReferralConstants.DIRECT_BONUS_AMOUNT;
window.BRONZE_BADGE_THRESHOLD = window.ReferralConstants.BRONZE_BADGE_THRESHOLD;
window.SILVER_BADGE_THRESHOLD = window.ReferralConstants.SILVER_BADGE_THRESHOLD;
window.GOLD_BADGE_THRESHOLD = window.ReferralConstants.GOLD_BADGE_THRESHOLD;
window.PLATINUM_BADGE_THRESHOLD = window.ReferralConstants.PLATINUM_BADGE_THRESHOLD;
window.BRONZE_BADGE_REWARD = window.ReferralConstants.BRONZE_BADGE_REWARD;
window.SILVER_BADGE_REWARD = window.ReferralConstants.SILVER_BADGE_REWARD;
window.GOLD_BADGE_REWARD = window.ReferralConstants.GOLD_BADGE_REWARD;
window.PLATINUM_BADGE_REWARD = window.ReferralConstants.PLATINUM_BADGE_REWARD;

console.log('‚úÖ [CONSTANTS] –ì–ª–æ–±–∞–ª—å–Ω—ñ –∑–º—ñ–Ω–Ω—ñ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ:', {
  DIRECT_BONUS_AMOUNT: window.DIRECT_BONUS_AMOUNT,
  BRONZE_BADGE_THRESHOLD: window.BRONZE_BADGE_THRESHOLD,
  SILVER_BADGE_THRESHOLD: window.SILVER_BADGE_THRESHOLD,
  GOLD_BADGE_THRESHOLD: window.GOLD_BADGE_THRESHOLD,
  PLATINUM_BADGE_THRESHOLD: window.PLATINUM_BADGE_THRESHOLD,
  BRONZE_BADGE_REWARD: window.BRONZE_BADGE_REWARD,
  SILVER_BADGE_REWARD: window.SILVER_BADGE_REWARD,
  GOLD_BADGE_REWARD: window.GOLD_BADGE_REWARD,
  PLATINUM_BADGE_REWARD: window.PLATINUM_BADGE_REWARD
});

// –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—ñ
console.log('üîç [CONSTANTS] –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—ñ window.ReferralConstants:', {
  exists: typeof window.ReferralConstants !== 'undefined',
  type: typeof window.ReferralConstants,
  properties: window.ReferralConstants ? Object.keys(window.ReferralConstants).length : 0
});