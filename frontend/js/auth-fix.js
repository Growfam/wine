// –§–∞–π–ª: frontend/js/auth-fix.js

/**
 * –í–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –ø—Ä–æ–±–ª–µ–º –∞–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
 * –ó–∞–±–µ–∑–ø–µ—á—É—î –æ—Ç—Ä–∏–º–∞–Ω–Ω—è ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —Ç–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ ID –ø—Ä–∏ –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ—Å—Ç—ñ
 */
(function() {
  'use strict';

  console.log('üîê AUTH-FIX: –ü–æ—á–∞—Ç–æ–∫ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –ø—Ä–æ–±–ª–µ–º –∞–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó');

  // –¢–µ—Å—Ç–æ–≤–∏–π ID –¥–ª—è —Ä–µ–∂–∏–º—É —Ä–æ–∑—Ä–æ–±–∫–∏ (–∑ .env —Ñ–∞–π–ª—É - ADMIN_IDS)
  const TEST_USER_ID = '685982514';

  // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –∑–Ω–∞—Ö–æ–¥–∏–º–æ—Å—è –≤ —Ä–µ–∂–∏–º—ñ —Ä–æ–∑—Ä–æ–±–∫–∏
  const isDevelopment =
    window.location.hostname === 'localhost' ||
    window.location.hostname === '127.0.0.1' ||
    window.location.hostname.includes('testenv') ||
    window.location.hostname.includes('staging');

  // –§—É–Ω–∫—Ü—ñ—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –≤–∞–ª—ñ–¥–Ω–æ—Å—Ç—ñ ID
  function isValidId(id) {
    return (
      id &&
      id !== 'undefined' &&
      id !== 'null' &&
      id !== undefined &&
      id !== null &&
      typeof id !== 'function' &&
      id.toString().trim() !== '' &&
      !id.toString().includes('function') &&
      !id.toString().includes('=>')
    );
  }

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó —Å—Ç—ñ–π–∫–æ–≥–æ ID —Å–µ—Å—ñ—ó
  function generateSessionId() {
    let sessionId = localStorage.getItem('winix_session_id');
    if (!sessionId) {
      // –ì–µ–Ω–µ—Ä—É—î–º–æ –ø—Å–µ–≤–¥–æ-–≤–∏–ø–∞–¥–∫–æ–≤–∏–π ID, —è–∫–∏–π –±—É–¥–µ —Å—Ç—ñ–π–∫–∏–º –¥–ª—è –¥–∞–Ω–æ–≥–æ –±—Ä–∞—É–∑–µ—Ä–∞/–ø—Ä–∏—Å—Ç—Ä–æ—é
      const randomPart = Math.floor(Math.random() * 1000000000).toString();
      const datePart = Date.now().toString();
      const browserInfo = (navigator.userAgent || '').substring(0, 10);

      sessionId = `winix_${datePart.substring(datePart.length - 6)}_${randomPart}_${browserInfo.replace(/[^a-z0-9]/gi, '')}`;
      localStorage.setItem('winix_session_id', sessionId);
    }
    return sessionId;
  }

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ —É—Å—ñ—Ö –º–æ–∂–ª–∏–≤–∏—Ö –¥–∂–µ—Ä–µ–ª
  function getUserIdFromAllSources() {
    try {
      // 1. –°–ø–æ—á–∞—Ç–∫—É –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ Telegram WebApp (–Ω–∞–π–±—ñ–ª—å—à –ø—Ä–∞–≤–∏–ª—å–Ω–µ –¥–∂–µ—Ä–µ–ª–æ)
      if (window.Telegram && window.Telegram.WebApp) {
        try {
          // –õ–æ–≥—É—î–º–æ –¥–µ—Ç–∞–ª—å–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –¥–ª—è –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
          console.log('üîê AUTH-FIX: –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ Telegram WebApp:');
          console.log('- window.Telegram.WebApp.initData:', window.Telegram.WebApp.initData);

          // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å initDataUnsafe —ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
          if (window.Telegram.WebApp.initDataUnsafe) {
            console.log('- initDataUnsafe:', window.Telegram.WebApp.initDataUnsafe);

            if (window.Telegram.WebApp.initDataUnsafe.user) {
              console.log('- user:', window.Telegram.WebApp.initDataUnsafe.user);

              if (window.Telegram.WebApp.initDataUnsafe.user.id) {
                // –ö–æ–Ω–≤–µ—Ä—Ç—É—î–º–æ ID –¥–æ —Ä—è–¥–∫–∞ —ñ –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ
                const tgUserId = window.Telegram.WebApp.initDataUnsafe.user.id.toString();

                if (isValidId(tgUserId)) {
                  // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –≤ localStorage —Ç–∞ –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ
                  try {
                    localStorage.setItem('telegram_user_id', tgUserId);
                    console.log('‚úÖ AUTH-FIX: –û—Ç—Ä–∏–º–∞–Ω–æ —Ç–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–æ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ Telegram:', tgUserId);
                  } catch (storageError) {
                    console.warn('‚ö†Ô∏è AUTH-FIX: –ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –≤ localStorage:', storageError);
                  }

                  return tgUserId;
                }
              }
            }
          }

          console.warn('‚ö†Ô∏è AUTH-FIX: –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ ID –∑ Telegram WebApp, –¥–∞–Ω—ñ –Ω–µ–ø–æ–≤–Ω—ñ');

          // –î–æ–¥–∞—Ç–∫–æ–≤–∞ —Å–ø—Ä–æ–±–∞ –∑ WebApp.initData (—è–∫—â–æ –≤—ñ–Ω —É –≤–∏–≥–ª—è–¥—ñ —Ä—è–¥–∫–∞)
          if (typeof window.Telegram.WebApp.initData === 'string' && window.Telegram.WebApp.initData.length > 10) {
            try {
              // –ü–∞—Ä—Å–∏–º–æ —Ä—è–¥–æ–∫ initData, —â–æ –º–∞—î —Ñ–æ—Ä–º–∞—Ç URL-–∑–∞–∫–æ–¥–æ–≤–∞–Ω–∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤
              const params = new URLSearchParams(window.Telegram.WebApp.initData);
              const userParam = params.get('user');

              if (userParam) {
                const userData = JSON.parse(userParam);
                if (userData && userData.id) {
                  const tgUserId = userData.id.toString();

                  if (isValidId(tgUserId)) {
                    localStorage.setItem('telegram_user_id', tgUserId);
                    console.log('‚úÖ AUTH-FIX: –û—Ç—Ä–∏–º–∞–Ω–æ ID –∑ Telegram initData –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤:', tgUserId);
                    return tgUserId;
                  }
                }
              }
            } catch (parseError) {
              console.warn('‚ö†Ô∏è AUTH-FIX: –ü–æ–º–∏–ª–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥—É initData:', parseError);
            }
          }
        } catch (tgError) {
          console.warn('‚ö†Ô∏è AUTH-FIX: –ü–æ–º–∏–ª–∫–∞ –≤–∑–∞—î–º–æ–¥—ñ—ó –∑ Telegram WebApp:', tgError);
        }
      } else {
        console.warn('‚ö†Ô∏è AUTH-FIX: Telegram WebApp –≤—ñ–¥—Å—É—Ç–Ω—ñ–π –∞–±–æ –Ω–µ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–∏–π');
      }

      // 2. –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ localStorage
      try {
        const localId = localStorage.getItem('telegram_user_id');
        if (isValidId(localId)) {
          console.log('‚úÖ AUTH-FIX: –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ ID –∑ localStorage:', localId);
          return localId;
        }
      } catch (storageError) {
        console.warn('‚ö†Ô∏è AUTH-FIX: –ü–æ–º–∏–ª–∫–∞ —á–∏—Ç–∞–Ω–Ω—è –∑ localStorage:', storageError);
      }

      // 3. –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ DOM –µ–ª–µ–º–µ–Ω—Ç
      try {
        const userIdElement = document.getElementById('user-id');
        if (userIdElement && userIdElement.textContent) {
          const domId = userIdElement.textContent.trim();
          if (isValidId(domId)) {
            try {
              localStorage.setItem('telegram_user_id', domId);
            } catch (e) {}

            console.log('‚úÖ AUTH-FIX: –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ ID –∑ DOM –µ–ª–µ–º–µ–Ω—Ç–∞:', domId);
            return domId;
          }
        }
      } catch (domError) {
        console.warn('‚ö†Ô∏è AUTH-FIX: –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è ID –∑ DOM:', domError);
      }

      // 4. –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ URL –ø–∞—Ä–∞–º–µ—Ç—Ä–∏
      try {
        const urlParams = new URLSearchParams(window.location.search);
        const urlId = urlParams.get('id') ||
                     urlParams.get('user_id') ||
                     urlParams.get('telegram_id');

        if (isValidId(urlId)) {
          try {
            localStorage.setItem('telegram_user_id', urlId);
          } catch (e) {}

          console.log('‚úÖ AUTH-FIX: –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ ID –∑ URL –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤:', urlId);
          return urlId;
        }
      } catch (urlError) {
        console.warn('‚ö†Ô∏è AUTH-FIX: –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è ID –∑ URL:', urlError);
      }

      // 5. –Ø–∫—â–æ –≤ —Ä–µ–∂–∏–º—ñ —Ä–æ–∑—Ä–æ–±–∫–∏, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Ç–µ—Å—Ç–æ–≤–∏–π ID
      if (isDevelopment) {
        try {
          localStorage.setItem('telegram_user_id', TEST_USER_ID);
          localStorage.setItem('is_test_user', 'true');

          console.log('‚ö†Ô∏è AUTH-FIX: –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Ç–µ—Å—Ç–æ–≤–∏–π ID –¥–ª—è —Ä–æ–∑—Ä–æ–±–∫–∏:', TEST_USER_ID);
          return TEST_USER_ID;
        } catch (e) {}
      }

      // 6. –°—Ç–≤–æ—Ä—é—î–º–æ —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä —Å–µ—Å—ñ—ó —è–∫ –æ—Å—Ç–∞–Ω–Ω—ñ–π –∑–∞—Å—ñ–±
      if (isDevelopment) {
        const sessionId = generateSessionId();
        console.log('‚ö†Ô∏è AUTH-FIX: –°—Ç–≤–æ—Ä–µ–Ω–æ —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä —Å–µ—Å—ñ—ó –¥–ª—è —Ä–µ–∂–∏–º—É —Ä–æ–∑—Ä–æ–±–∫–∏:', sessionId);
        localStorage.setItem('is_test_user', 'true');
        localStorage.setItem('is_session_id', 'true');
        return TEST_USER_ID; // –í—Å–µ –æ–¥–Ω–æ –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ —Ç–µ—Å—Ç–æ–≤–∏–π ID –¥–ª—è –±–µ–∑–ø–µ–∫–∏
      }

      console.error('‚ùå AUTH-FIX: –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ –∂–æ–¥–Ω–æ–≥–æ –¥–∂–µ—Ä–µ–ª–∞');
      return null;
    } catch (generalError) {
      console.error('‚ùå AUTH-FIX: –ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ ID:', generalError);
      return null;
    }
  }

  // –§—É–Ω–∫—Ü—ñ—è —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó Telegram WebApp
  function initializeTelegramWebApp() {
    console.log('üîÑ AUTH-FIX: –°–ø—Ä–æ–±–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó Telegram WebApp');

    try {
      if (window.Telegram && window.Telegram.WebApp) {
        console.log('‚úÖ AUTH-FIX: Telegram WebApp –≤–∂–µ –¥–æ—Å—Ç—É–ø–Ω–∏–π, –≤–∏–∫–ª–∏–∫–∞—î–º–æ WebApp.ready()');
        window.Telegram.WebApp.ready();
        window.Telegram.WebApp.expand();

        // –î–∏—Å–ø–µ—Ç—á–µ—Ä–∏–∑—É—î–º–æ –∫–∞—Å—Ç–æ–º–Ω—É –ø–æ–¥—ñ—é
        const event = new CustomEvent('telegram-ready', {
          detail: {
            timestamp: Date.now(),
            source: 'auth-fix.js'
          }
        });

        document.dispatchEvent(event);
        console.log('‚úÖ AUTH-FIX: –ü–æ–¥—ñ—é telegram-ready –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ');
      } else {
        console.warn('‚ö†Ô∏è AUTH-FIX: –û–±\'—î–∫—Ç Telegram.WebApp –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');

        // –°—Ç–≤–æ—Ä—é—î–º–æ —Å—Ç–∞–± –¥–ª—è —Ä–µ–∂–∏–º—É —Ä–æ–∑—Ä–æ–±–∫–∏
        if (isDevelopment) {
          console.log('üîß AUTH-FIX: –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å—Ç–∞–±—É Telegram.WebApp –¥–ª—è —Ä–æ–∑—Ä–æ–±–∫–∏');

          window.Telegram = window.Telegram || {};
          window.Telegram.WebApp = {
            ready: function() { console.log('üìù Mock Telegram.WebApp.ready() –≤–∏–∫–ª–∏–∫–∞–Ω–æ'); },
            expand: function() { console.log('üìù Mock Telegram.WebApp.expand() –≤–∏–∫–ª–∏–∫–∞–Ω–æ'); },
            initData: '',
            initDataUnsafe: {
              user: {
                id: TEST_USER_ID,
                first_name: 'Test',
                last_name: 'User',
                username: 'testuser',
                language_code: 'uk'
              }
            }
          };

          // –î–∏—Å–ø–µ—Ç—á–µ—Ä–∏–∑–∞—Ü—ñ—è –ø–æ–¥—ñ—ó
          const event = new CustomEvent('telegram-ready', {
            detail: {
              timestamp: Date.now(),
              source: 'auth-fix.js',
              isMock: true
            }
          });

          document.dispatchEvent(event);
          console.log('‚úÖ AUTH-FIX: –°—Ç–≤–æ—Ä–µ–Ω–æ —Å—Ç–∞–± Telegram.WebApp —ñ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–¥—ñ—é telegram-ready');
        }
      }
    } catch (error) {
      console.error('‚ùå AUTH-FIX: –ü–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó Telegram WebApp:', error);
    }
  }

  // –ü–∞—Ç—á –¥–ª—è —Ñ—É–Ω–∫—Ü—ñ—ó getUserId, —è–∫–∏–π –±—É–¥–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏—Å—è –≤ API.js —Ç–∞ auth.js
  function patchGetUserIdFunction() {
    try {
      // –°—Ç–≤–æ—Ä—é—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é, —è–∫–∞ –±—É–¥–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏—Å—è —è–∫ –ø–∞—Ç—á
      window.getUserId = function() {
        return getUserIdFromAllSources();
      };

      // –ü–∞—Ç—á –¥–ª—è WinixAPI
      if (window.WinixAPI) {
        console.log('üîß AUTH-FIX: –ü–∞—Ç—á —Ñ—É–Ω–∫—Ü—ñ—ó WinixAPI.getUserId');

        // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω—É —Ñ—É–Ω–∫—Ü—ñ—é
        const originalGetUserId = window.WinixAPI.getUserId;

        // –ó–∞–º—ñ–Ω—è—î–º–æ —ó—ó –Ω–∞ –Ω–∞—à—É
        window.WinixAPI.getUserId = function() {
          // –°–ø–æ—á–∞—Ç–∫—É —Å–ø—Ä–æ–±—É—î–º–æ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω—É —Ñ—É–Ω–∫—Ü—ñ—é
          const originalId = originalGetUserId();
          if (isValidId(originalId)) return originalId;

          // –Ø–∫—â–æ –Ω–µ —Å–ø—Ä–∞—Ü—é–≤–∞–ª–æ, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –Ω–∞—à—É —Ñ—É–Ω–∫—Ü—ñ—é
          return getUserIdFromAllSources();
        };
      }

      console.log('‚úÖ AUTH-FIX: –§—É–Ω–∫—Ü—ñ—é getUserId —É—Å–ø—ñ—à–Ω–æ –≤—ñ–¥–∫–æ—Ä–∏–≥–æ–≤–∞–Ω–æ');
    } catch (error) {
      console.error('‚ùå AUTH-FIX: –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø–∞—Ç—á—ñ getUserId:', error);
    }
  }

  // –§—É–Ω–∫—Ü—ñ—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç–æ–∫–µ–Ω—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó
  function getAuthTokenFromAllSources() {
    try {
      // –°–ø–æ—á–∞—Ç–∫—É —Å–ø—Ä–æ–±—É—î–º–æ localStorage
      const token = localStorage.getItem('auth_token');
      if (token && typeof token === 'string' && token.length > 10) {
        return token;
      }

      // –Ø–∫—â–æ —Ä–µ–∂–∏–º —Ä–æ–∑—Ä–æ–±–∫–∏, —Å—Ç–≤–æ—Ä—é—î–º–æ —Ç–µ—Å—Ç–æ–≤–∏–π —Ç–æ–∫–µ–Ω
      if (isDevelopment) {
        const testToken = 'TEST_AUTH_TOKEN_FOR_DEVELOPMENT_' + Date.now();
        localStorage.setItem('auth_token', testToken);
        localStorage.setItem('auth_token_expiry', (Date.now() + 24*60*60*1000).toString());

        console.log('‚ö†Ô∏è AUTH-FIX: –°—Ç–≤–æ—Ä–µ–Ω–æ —Ç–µ—Å—Ç–æ–≤–∏–π —Ç–æ–∫–µ–Ω –¥–ª—è —Ä–æ–∑—Ä–æ–±–∫–∏');
        return testToken;
      }

      return null;
    } catch (error) {
      console.error('‚ùå AUTH-FIX: –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç–æ–∫–µ–Ω—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó:', error);
      return null;
    }
  }

  // –û–Ω–æ–≤–ª—é—î–º–æ —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó
  async function refreshAuthToken() {
    try {
      console.log('üîÑ AUTH-FIX: –ü–æ—á–∞—Ç–æ–∫ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω—É');

      const userId = getUserIdFromAllSources();
      if (!userId) {
        throw new Error('–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞');
      }

      // –£ —Ä–µ–∂–∏–º—ñ —Ä–æ–∑—Ä–æ–±–∫–∏ –ø—Ä–æ—Å—Ç–æ –æ–Ω–æ–≤–ª—é—î–º–æ —Ç–µ—Å—Ç–æ–≤–∏–π —Ç–æ–∫–µ–Ω
      if (isDevelopment && localStorage.getItem('is_test_user') === 'true') {
        const testToken = 'TEST_AUTH_TOKEN_REFRESHED_' + Date.now();
        localStorage.setItem('auth_token', testToken);
        localStorage.setItem('auth_token_expiry', (Date.now() + 24*60*60*1000).toString());

        console.log('‚ö†Ô∏è AUTH-FIX: –û–Ω–æ–≤–ª–µ–Ω–æ —Ç–µ—Å—Ç–æ–≤–∏–π —Ç–æ–∫–µ–Ω –¥–ª—è —Ä–æ–∑—Ä–æ–±–∫–∏');

        // –î–∏—Å–ø–µ—Ç—á–µ—Ä–∏–∑—É—î–º–æ –ø–æ–¥—ñ—é
        document.dispatchEvent(
          new CustomEvent('token-refreshed', {
            detail: {
              token: testToken,
              expires_at: Date.now() + 24*60*60*1000,
              is_test: true
            },
          })
        );

        return testToken;
      }

      // –î–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Å–ø—Ä–∞–≤–∂–Ω—ñ–π –∑–∞–ø–∏—Ç –Ω–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
      const currentToken = getAuthTokenFromAllSources();

      console.log('üîÑ AUTH-FIX: –°–ø—Ä–æ–±–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω—É –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞', userId);

      // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ API –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω—É
      let apiResponse;
      try {
        // –°–ø—Ä–æ–±—É—î–º–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏ WinixAPI —è–∫—â–æ –≤—ñ–Ω —î
        if (window.WinixAPI && window.WinixAPI.apiRequest) {
          console.log('üîÑ AUTH-FIX: –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ WinixAPI –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω—É');
          apiResponse = await window.WinixAPI.apiRequest('auth/refresh-token', 'POST', {
            telegram_id: userId,
            token: currentToken || ''
          });
        } else {
          // –Ü–Ω–∞–∫—à–µ —Ä–æ–±–∏–º–æ –∑–∞–ø–∏—Ç –Ω–∞–ø—Ä—è–º—É
          console.log('üîÑ AUTH-FIX: –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –ø—Ä—è–º–∏–π fetch –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω—É');

          const baseUrl = window.location.origin;
          const response = await fetch(`${baseUrl}/api/auth/refresh-token`, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
              'X-Telegram-User-Id': userId
            },
            body: JSON.stringify({
              telegram_id: userId,
              token: currentToken || ''
            })
          });

          apiResponse = await response.json();
        }

        if (apiResponse && apiResponse.status === 'success' && apiResponse.token) {
          // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –Ω–æ–≤–∏–π —Ç–æ–∫–µ–Ω
          localStorage.setItem('auth_token', apiResponse.token);

          // –í–∏–∑–Ω–∞—á–∞—î–º–æ —á–∞—Å –∑–∞–∫—ñ–Ω—á–µ–Ω–Ω—è
          if (apiResponse.expires_at) {
            const expiryTime = new Date(apiResponse.expires_at).getTime();
            localStorage.setItem('auth_token_expiry', expiryTime.toString());
          } else {
            // –ó–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º 24 –≥–æ–¥–∏–Ω–∏
            localStorage.setItem('auth_token_expiry', (Date.now() + 24*60*60*1000).toString());
          }

          console.log('‚úÖ AUTH-FIX: –¢–æ–∫–µ–Ω —É—Å–ø—ñ—à–Ω–æ –æ–Ω–æ–≤–ª–µ–Ω–æ');

          // –î–∏—Å–ø–µ—Ç—á–µ—Ä–∏–∑—É—î–º–æ –ø–æ–¥—ñ—é
          document.dispatchEvent(
            new CustomEvent('token-refreshed', {
              detail: {
                token: apiResponse.token,
                expires_at: apiResponse.expires_at
              },
            })
          );

          return apiResponse.token;
        } else {
          throw new Error('–í—ñ–¥–ø–æ–≤—ñ–¥—å —Å–µ—Ä–≤–µ—Ä–∞ –Ω–µ –º—ñ—Å—Ç–∏—Ç—å —Ç–æ–∫–µ–Ω—É');
        }
      } catch (apiError) {
        console.error('‚ùå AUTH-FIX: –ü–æ–º–∏–ª–∫–∞ API –∑–∞–ø–∏—Ç—É:', apiError);
        throw apiError;
      }
    } catch (error) {
      console.error('‚ùå AUTH-FIX: –ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω—É:', error);

      // –î–∏—Å–ø–µ—Ç—á–µ—Ä–∏–∑—É—î–º–æ –ø–æ–¥—ñ—é –ø—Ä–æ –ø–æ–º–∏–ª–∫—É
      document.dispatchEvent(
        new CustomEvent('auth-error', {
          detail: {
            error,
            action: 'refresh-token'
          },
        })
      );

      return null;
    }
  }

  // –ü–∞—Ç—á –¥–ª—è —Ñ—É–Ω–∫—Ü—ñ—ó –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç–æ–∫–µ–Ω—É
  function patchAuthTokenFunctions() {
    try {
      // –°—Ç–≤–æ—Ä—é—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é, —è–∫–∞ –±—É–¥–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏—Å—è —è–∫ –ø–∞—Ç—á
      window.getAuthToken = function() {
        return getAuthTokenFromAllSources();
      };

      window.refreshToken = function() {
        return refreshAuthToken();
      };

      // –ü–∞—Ç—á –¥–ª—è WinixAPI
      if (window.WinixAPI) {
        console.log('üîß AUTH-FIX: –ü–∞—Ç—á —Ñ—É–Ω–∫—Ü—ñ–π WinixAPI –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ —Ç–æ–∫–µ–Ω–∞–º–∏');

        // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó
        const originalGetAuthToken = window.WinixAPI.getAuthToken;
        const originalRefreshToken = window.WinixAPI.refreshToken;

        // –ü–∞—Ç—á–∏–º–æ getAuthToken
        window.WinixAPI.getAuthToken = function() {
          // –°–ø–æ—á–∞—Ç–∫—É —Å–ø—Ä–æ–±—É—î–º–æ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω—É —Ñ—É–Ω–∫—Ü—ñ—é
          const originalToken = originalGetAuthToken();
          if (originalToken && typeof originalToken === 'string' && originalToken.length > 10) {
            return originalToken;
          }

          // –Ø–∫—â–æ –Ω–µ —Å–ø—Ä–∞—Ü—é–≤–∞–ª–æ, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –Ω–∞—à—É —Ñ—É–Ω–∫—Ü—ñ—é
          return getAuthTokenFromAllSources();
        };

        // –ü–∞—Ç—á–∏–º–æ refreshToken
        window.WinixAPI.refreshToken = async function() {
          try {
            // –°–ø–æ—á–∞—Ç–∫—É —Å–ø—Ä–æ–±—É—î–º–æ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω—É —Ñ—É–Ω–∫—Ü—ñ—é
            const originalResult = await originalRefreshToken();
            if (originalResult && typeof originalResult === 'string' && originalResult.length > 10) {
              return originalResult;
            }
          } catch (originalError) {
            console.warn('‚ö†Ô∏è AUTH-FIX: –ü–æ–º–∏–ª–∫–∞ –≤ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–æ–º—É refreshToken:', originalError);
          }

          // –Ø–∫—â–æ –Ω–µ —Å–ø—Ä–∞—Ü—é–≤–∞–ª–æ, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –Ω–∞—à—É —Ñ—É–Ω–∫—Ü—ñ—é
          return refreshAuthToken();
        };
      }

      console.log('‚úÖ AUTH-FIX: –§—É–Ω–∫—Ü—ñ—ó —Ä–æ–±–æ—Ç–∏ –∑ —Ç–æ–∫–µ–Ω–∞–º–∏ —É—Å–ø—ñ—à–Ω–æ –≤—ñ–¥–∫–æ—Ä–∏–≥–æ–≤–∞–Ω–æ');
    } catch (error) {
      console.error('‚ùå AUTH-FIX: –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø–∞—Ç—á—ñ —Ñ—É–Ω–∫—Ü—ñ–π —Ç–æ–∫–µ–Ω—ñ–≤:', error);
    }
  }

  // –§—É–Ω–∫—Ü—ñ—è, —â–æ –ø–æ–∫–∞–∑—É—î –≤—ñ–∫–Ω–æ –ø–æ–º–∏–ª–∫–∏ –∞–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó
  function showAuthErrorModal(message) {
    try {
      // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —ñ—Å–Ω—É—î –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
      let modal = document.getElementById('auth-error-modal');

      // –Ø–∫—â–æ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞ –Ω–µ–º–∞—î, —Å—Ç–≤–æ—Ä—é—î–º–æ –π–æ–≥–æ
      if (!modal) {
        modal = document.createElement('div');
        modal.id = 'auth-error-modal';
        modal.className = 'auth-error-modal';
        modal.innerHTML = `
          <div class="auth-error-content">
            <div class="auth-error-header">
              <h3>–ü–æ–º–∏–ª–∫–∞ –∞–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó</h3>
              <span class="auth-error-close">&times;</span>
            </div>
            <div class="auth-error-body">
              <p id="auth-error-message"></p>
            </div>
            <div class="auth-error-footer">
              <button id="auth-retry-button">–°–ø—Ä–æ–±—É–≤–∞—Ç–∏ –∑–Ω–æ–≤—É</button>
            </div>
          </div>
        `;

        // –î–æ–¥–∞—î–º–æ —Å—Ç–∏–ª—ñ
        const style = document.createElement('style');
        style.textContent = `
          .auth-error-modal {
            display: none;
            position: fixed;
            z-index: 9999;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0,0,0,0.7);
            align-items: center;
            justify-content: center;
          }
          .auth-error-content {
            background-color: #fff;
            margin: auto;
            padding: 20px;
            border-radius: 8px;
            max-width: 80%;
            width: 400px;
          }
          .auth-error-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            border-bottom: 1px solid #eee;
            padding-bottom: 10px;
          }
          .auth-error-header h3 {
            margin: 0;
            color: #e74c3c;
          }
          .auth-error-close {
            font-size: 24px;
            cursor: pointer;
          }
          .auth-error-body {
            padding: 20px 0;
          }
          .auth-error-footer {
            text-align: center;
          }
          #auth-retry-button {
            background-color: #3498db;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
          }
          #auth-retry-button:hover {
            background-color: #2980b9;
          }
        `;

        document.head.appendChild(style);
        document.body.appendChild(modal);

        // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π
        document.querySelector('.auth-error-close').addEventListener('click', function() {
          modal.style.display = 'none';
        });

        document.getElementById('auth-retry-button').addEventListener('click', function() {
          modal.style.display = 'none';
          window.location.reload();
        });
      }

      // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —ñ –ø–æ–∫–∞–∑—É—î–º–æ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
      document.getElementById('auth-error-message').textContent = message ||
        '–í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∞–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó. –°–ø—Ä–æ–±—É–π—Ç–µ –æ–Ω–æ–≤–∏—Ç–∏ —Å—Ç–æ—Ä—ñ–Ω–∫—É –∞–±–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–∏ –¥–æ–¥–∞—Ç–æ–∫.';

      modal.style.display = 'flex';
    } catch (error) {
      console.error('‚ùå AUTH-FIX: –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø–æ–∫–∞–∑—ñ –≤—ñ–∫–Ω–∞ –ø–æ–º–∏–ª–∫–∏:', error);
      // –ó–∞–ø–∞—Å–Ω–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç - —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏–π alert
      alert(message || '–ü–æ–º–∏–ª–∫–∞ –∞–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó. –°–ø—Ä–æ–±—É–π—Ç–µ –æ–Ω–æ–≤–∏—Ç–∏ —Å—Ç–æ—Ä—ñ–Ω–∫—É.');
    }
  }

  // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –≤–∏–ø—Ä–∞–≤–ª–µ–Ω—å
  function init() {
    try {
      // 1. –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ Telegram WebApp —è–∫—â–æ –≤—ñ–Ω –¥–æ—Å—Ç—É–ø–Ω–∏–π
      initializeTelegramWebApp();

      // 2. –ü–∞—Ç—á–∏–º–æ —Ñ—É–Ω–∫—Ü—ñ—é getUserId
      patchGetUserIdFunction();

      // 3. –ü–∞—Ç—á–∏–º–æ —Ñ—É–Ω–∫—Ü—ñ—ó —Ä–æ–±–æ—Ç–∏ –∑ —Ç–æ–∫–µ–Ω–∞–º–∏
      patchAuthTokenFunctions();

      // 4. –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –ø–æ–º–∏–ª–æ–∫ –∞–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó
      document.addEventListener('auth-error', function(event) {
        console.error('‚ùå AUTH-FIX: –û—Ç—Ä–∏–º–∞–Ω–æ –ø–æ–¥—ñ—é –ø–æ–º–∏–ª–∫–∏ –∞–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó', event.detail);

        // –ü–æ–∫–∞–∑—É—î–º–æ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ –∑ –ø–æ–º–∏–ª–∫–æ—é, —è–∫—â–æ —Ü–µ —Å–µ—Ä–π–æ–∑–Ω–∞ –ø–æ–º–∏–ª–∫–∞
        if (event.detail && event.detail.error &&
            (event.detail.error.message &&
             (event.detail.error.message.includes('–∞–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó') ||
              event.detail.error.message.includes('–∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó') ||
              event.detail.error.message.includes('—Ç–æ–∫–µ–Ω')))) {

          showAuthErrorModal(event.detail.error.message);
        }
      });

      // 5. –û—Ç—Ä–∏–º—É—î–º–æ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏
      const userId = getUserIdFromAllSources();

      // 6. –û–Ω–æ–≤–ª—é—î–º–æ –µ–ª–µ–º–µ–Ω—Ç –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ, —è–∫—â–æ –≤—ñ–Ω —î
      if (userId) {
        const userIdElement = document.getElementById('user-id');
        if (userIdElement) {
          userIdElement.textContent = userId;
        } else {
          // –Ø–∫—â–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –Ω–µ–º–∞—î, —Å—Ç–≤–æ—Ä—é—î–º–æ –ø—Ä–∏—Ö–æ–≤–∞–Ω–∏–π –µ–ª–µ–º–µ–Ω—Ç
          const hiddenElement = document.createElement('div');
          hiddenElement.id = 'user-id';
          hiddenElement.style.display = 'none';
          hiddenElement.textContent = userId;
          document.body.appendChild(hiddenElement);
        }
      }

      console.log('‚úÖ AUTH-FIX: –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—é –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ!');

      // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
      return {
        userId,
        telegramAvailable: !!(window.Telegram && window.Telegram.WebApp),
        isDevelopment,
        functions: {
          getUserId: window.getUserId,
          getAuthToken: window.getAuthToken,
          refreshToken: window.refreshToken
        }
      };
    } catch (error) {
      console.error('‚ùå AUTH-FIX: –ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó:', error);
      return { error };
    }
  }

  // –ó–∞–ø—É—Å–∫–∞—î–º–æ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è
  window.AUTH_FIX = init();

  // –Ø–∫—â–æ –¥–æ–∫—É–º–µ–Ω—Ç –≤–∂–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ, –≤–∏–∫–ª–∏–∫–∞—î–º–æ –ø–æ–≤—Ç–æ—Ä–Ω—É —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—é
  if (document.readyState === 'complete' || document.readyState === 'interactive') {
    console.log('üîÑ AUTH-FIX: –î–æ–∫—É–º–µ–Ω—Ç —É–∂–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ, –æ–Ω–æ–≤–ª—é—î–º–æ –µ–ª–µ–º–µ–Ω—Ç–∏ DOM');

    // –û–Ω–æ–≤–ª—é—î–º–æ –µ–ª–µ–º–µ–Ω—Ç ID –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ
    const userId = getUserIdFromAllSources();
    const userIdElement = document.getElementById('user-id');
    if (userIdElement && userId) {
      userIdElement.textContent = userId;
    }
  }

  // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è DOM
  document.addEventListener('DOMContentLoaded', function() {
    console.log('üîÑ AUTH-FIX: –ü–æ–¥—ñ—é DOMContentLoaded –æ—Ç—Ä–∏–º–∞–Ω–æ');

    // –û–Ω–æ–≤–ª—é—î–º–æ –µ–ª–µ–º–µ–Ω—Ç ID –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ
    const userId = getUserIdFromAllSources();
    const userIdElement = document.getElementById('user-id');
    if (userIdElement && userId) {
      userIdElement.textContent = userId;
    }

    // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–¥—ñ—é –ø—Ä–æ –≥–æ—Ç–æ–≤–Ω—ñ—Å—Ç—å —Å–∏—Å—Ç–µ–º–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó
    document.dispatchEvent(
      new CustomEvent('auth-system-ready', {
        detail: {
          timestamp: Date.now(),
          userId
        }
      })
    );
  });
})();