  /**
 * emergency-id-fix.js
 *
 * –ê–≤–∞—Ä—ñ–π–Ω–µ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –ø—Ä–æ–±–ª–µ–º –∑ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –º–∏—Ç—Ç—î–≤–æ–≥–æ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –ø—Ä–æ–±–ª–µ–º –∑ ID –ø—Ä–∏ –≤–∏–Ω–∏–∫–Ω–µ–Ω–Ω—ñ –ø–æ–º–∏–ª–æ–∫
 */

(function() {
    console.log("üö® –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å–∏—Å—Ç–µ–º–∏ –∞–≤–∞—Ä—ñ–π–Ω–æ–≥–æ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è ID...");

    // –ì–ª–æ–±–∞–ª—å–Ω–∏–π –æ–±—Ä–æ–±–Ω–∏–∫ –ø–æ–º–∏–ª–æ–∫ API
    const originalFetch = window.fetch;
    window.fetch = function(resource, options) {
        // –ü–µ—Ä–µ–¥ –∑–∞–ø–∏—Ç–æ–º –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        checkAndFixUserId();

        // –í–∏–∫–æ–Ω—É—î–º–æ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–∏–π –∑–∞–ø–∏—Ç
        return originalFetch(resource, options).catch(error => {
            // –ü—Ä–∏ –ø–æ–º–∏–ª—Ü—ñ –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —Ü–µ –Ω–µ –ø—Ä–æ–±–ª–µ–º–∞ –∑ ID
            if (error.message && (
                error.message.includes('user not found') ||
                error.message.includes('unauthorized') ||
                error.message.includes('403') ||
                error.message.includes('401')
            )) {
                console.warn("üîÑ –ú–æ–∂–ª–∏–≤–∞ –ø—Ä–æ–±–ª–µ–º–∞ –∑ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞, —Å–ø—Ä–æ–±–∞ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è...");
                const fixed = checkAndFixUserId(true);

                if (fixed) {
                    // –Ø–∫—â–æ ID –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–æ, –ø–æ–≤—Ç–æ—Ä—é—î–º–æ –∑–∞–ø–∏—Ç
                    console.log("üîÑ –ü–æ–≤—Ç–æ—Ä–Ω–∏–π –∑–∞–ø–∏—Ç –ø—ñ—Å–ª—è –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è ID...");
                    return originalFetch(resource, options);
                }
            }

            throw error;
        });
    };

    /**
     * –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —ñ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
     * @param {boolean} forceFix - –ü—Ä–∏–º—É—Å–æ–≤–µ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è
     * @returns {boolean} –†–µ–∑—É–ª—å—Ç–∞—Ç –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è
     */
    function checkAndFixUserId(forceFix = false) {
        try {
            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –º–æ–¥—É–ª—è —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è ID
            if (!window.UserIdManager) {
                console.error("‚ùå –ú–æ–¥—É–ª—å UserIdManager –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!");
                return tryLegacyIdFix();
            }

            // –û—Ç—Ä–∏–º—É—î–º–æ –ø–æ—Ç–æ—á–Ω–∏–π ID
            const currentId = window.UserIdManager.getUserId();

            if (!currentId || forceFix) {
                console.warn("üö® ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤—ñ–¥—Å—É—Ç–Ω—ñ–π –∞–±–æ –ø–æ—Ç—Ä–µ–±—É—î –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è");

                // –°–ø—Ä–æ–±–∞ –æ—Ç—Ä–∏–º–∞—Ç–∏ ID –∑ —É—Å—ñ—Ö –º–æ–∂–ª–∏–≤–∏—Ö –¥–∂–µ—Ä–µ–ª
                let newId = null;

                // 1. –°–ø—Ä–æ–±–∞ –∑ localStorage (–≤—Å—ñ –º–æ–∂–ª–∏–≤—ñ –∫–ª—é—á—ñ)
                const storageKeys = [
                    'telegram_user_id', 'userId', 'user_id',
                    'telegramUserId', 'winix_user_id', 'session_user_id'
                ];

                for (const key of storageKeys) {
                    const storedId = localStorage.getItem(key);
                    if (storedId && storedId !== 'undefined' && storedId !== 'null') {
                        newId = storedId;
                        console.log(`üîÑ –ó–Ω–∞–π–¥–µ–Ω–æ ID –≤ localStorage (${key}): ${newId}`);
                        break;
                    }
                }

                // 2. –°–ø—Ä–æ–±–∞ –∑ URL –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤
                if (!newId) {
                    const urlParams = new URLSearchParams(window.location.search);
                    const urlId = urlParams.get('id') || urlParams.get('user_id') || urlParams.get('telegram_id');
                    if (urlId && urlId !== 'undefined' && urlId !== 'null') {
                        newId = urlId;
                        console.log(`üîÑ –ó–Ω–∞–π–¥–µ–Ω–æ ID –≤ URL: ${newId}`);
                    }
                }

                // 3. –°–ø—Ä–æ–±–∞ –∑ DOM
                if (!newId) {
                    const idElements = document.querySelectorAll('#user-id, .user-id-value, [data-user-id]');
                    for (const element of idElements) {
                        if (element && element.textContent &&
                            element.textContent.trim() !== '' &&
                            element.textContent !== 'undefined' &&
                            element.textContent !== 'null') {
                            newId = element.textContent.trim();
                            console.log(`üîÑ –ó–Ω–∞–π–¥–µ–Ω–æ ID –≤ DOM: ${newId}`);
                            break;
                        }
                    }
                }

                // –Ø–∫—â–æ –∑–Ω–∞–π–¥–µ–Ω–æ –Ω–æ–≤–∏–π ID, –∑–±–µ—Ä—ñ–≥–∞—î–º–æ –π–æ–≥–æ
                if (newId) {
                    window.UserIdManager.setUserId(newId);

                    // –û–Ω–æ–≤–ª—é—î–º–æ DOM –µ–ª–µ–º–µ–Ω—Ç–∏
                    window.UserIdManager.updateDomElements(newId);

                    console.log("‚úÖ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —É—Å–ø—ñ—à–Ω–æ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–æ:", newId);
                    return true;
                } else {
                    console.error("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–Ω–∞–π—Ç–∏ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤ –∂–æ–¥–Ω–æ–º—É –¥–∂–µ—Ä–µ–ª—ñ");
                    return false;
                }
            } else {
                // ID –≤–∂–µ —ñ—Å–Ω—É—î, –ø—Ä–æ—Å—Ç–æ –æ–Ω–æ–≤–ª—é—î–º–æ –π–æ–≥–æ —É –≤—Å—ñ—Ö –º—ñ—Å—Ü—è—Ö
                window.UserIdManager.updateDomElements(currentId);
                return true;
            }
        } catch (error) {
            console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—ñ ID:", error);
            return tryLegacyIdFix();
        }
    }

    /**
     * –†–µ–∑–µ—Ä–≤–Ω–µ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è ID —Å—Ç–∞—Ä–∏–º —Å–ø–æ—Å–æ–±–æ–º, —è–∫—â–æ –º–æ–¥—É–ª—å —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è ID –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π
     * @returns {boolean} –†–µ–∑—É–ª—å—Ç–∞—Ç –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è
     */
    function tryLegacyIdFix() {
        try {
            console.log("üîÑ –ó–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è ID...");

            // –°–ø—Ä–æ–±–∞ –æ—Ç—Ä–∏–º–∞—Ç–∏ ID
            let userId = localStorage.getItem('telegram_user_id');

            if (!userId || userId === 'undefined' || userId === 'null') {
                userId = localStorage.getItem('userId');
            }

            if (!userId || userId === 'undefined' || userId === 'null') {
                const urlParams = new URLSearchParams(window.location.search);
                userId = urlParams.get('id') || urlParams.get('user_id');
            }

            if (!userId || userId === 'undefined' || userId === 'null') {
                const userIdElement = document.getElementById('user-id');
                if (userIdElement && userIdElement.textContent) {
                    userId = userIdElement.textContent.trim();
                }
            }

            if (userId && userId !== 'undefined' && userId !== 'null') {
                // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –≤ —É—Å—ñ –º–æ–∂–ª–∏–≤—ñ —Å—Ö–æ–≤–∏—â–∞
                localStorage.setItem('telegram_user_id', userId);
                localStorage.setItem('userId', userId);
                sessionStorage.setItem('user_id', userId);

                // –û–Ω–æ–≤–ª—é—î–º–æ –µ–ª–µ–º–µ–Ω—Ç–∏ DOM
                const userIdElement = document.getElementById('user-id');
                if (userIdElement) {
                    userIdElement.textContent = userId;
                }

                console.log("‚úÖ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —É—Å–ø—ñ—à–Ω–æ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–æ (—Ä–µ–∑–µ—Ä–≤–Ω–∏–π —Å–ø–æ—Å—ñ–±):", userId);
                return true;
            }

            console.error("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–Ω–∞–π—Ç–∏ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ (—Ä–µ–∑–µ—Ä–≤–Ω–∏–π —Å–ø–æ—Å—ñ–±)");
            return false;
        } catch (error) {
            console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Ä–µ–∑–µ—Ä–≤–Ω–æ–º—É –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—ñ ID:", error);
            return false;
        }
    }

    // –î–æ–¥–∞—î–º–æ –∫–Ω–æ–ø–∫—É –∞–≤–∞—Ä—ñ–π–Ω–æ–≥–æ –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è ID
    function addEmergencyButton() {
        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –∫–Ω–æ–ø–∫–∞ –≤–∂–µ —ñ—Å–Ω—É—î
        if (document.getElementById('emergency-id-fix-button')) {
            return;
        }

        const button = document.createElement('button');
        button.id = 'emergency-id-fix-button';
        button.textContent = 'üîÑ –í—ñ–¥–Ω–æ–≤–∏—Ç–∏ ID';
        button.style.cssText = `
            position: fixed;
            bottom: 120px;
            right: 20px;
            background: linear-gradient(90deg, #FF5722, #E91E63);
            color: white;
            padding: 10px 15px;
            border-radius: 20px;
            border: none;
            font-weight: bold;
            z-index: 9999;
            box-shadow: 0 4px 8px rgba(0,0,0,0.3);
            cursor: pointer;
            display: none;
        `;

        button.addEventListener('click', function() {
            const fixed = checkAndFixUserId(true);

            if (fixed) {
                alert('ID —É—Å–ø—ñ—à–Ω–æ –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–æ. –°—Ç–æ—Ä—ñ–Ω–∫–∞ –±—É–¥–µ –ø–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∞.');
                window.location.reload();
            } else {
                alert('–ù–µ –≤–¥–∞–ª–æ—Å—è –≤—ñ–¥–Ω–æ–≤–∏—Ç–∏ ID. –°–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –Ω–∞ –≥–æ–ª–æ–≤–Ω—É —Å—Ç–æ—Ä—ñ–Ω–∫—É.');
            }
        });

        document.body.appendChild(button);

        // –ü–æ–∫–∞–∑—É—î–º–æ –∫–Ω–æ–ø–∫—É –ø—Ä–∏ –≤–∏–Ω–∏–∫–Ω–µ–Ω–Ω—ñ –ø–æ–º–∏–ª–æ–∫
        window.addEventListener('error', function(event) {
            if (event.error && (
                event.error.toString().includes('user not found') ||
                event.error.toString().includes('ID') ||
                event.error.toString().includes('unauthorized') ||
                event.error.toString().includes('403') ||
                event.error.toString().includes('401')
            )) {
                button.style.display = 'block';
            }
        });

        // –ê–±–æ –ø—Ä–∏ –ø–æ–º–∏–ª–∫–∞—Ö Fetch API
        window.addEventListener('unhandledrejection', function(event) {
            if (event.reason && (
                event.reason.toString().includes('user not found') ||
                event.reason.toString().includes('ID') ||
                event.reason.toString().includes('unauthorized') ||
                event.reason.toString().includes('403') ||
                event.reason.toString().includes('401')
            )) {
                button.style.display = 'block';
            }
        });
    }

    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –∞–≤–∞—Ä—ñ–π–Ω–æ–≥–æ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è
    function init() {
        // –ó–∞–ø—É—Å–∫–∞—î–º–æ –ø–æ—á–∞—Ç–∫–æ–≤—É –ø–µ—Ä–µ–≤—ñ—Ä–∫—É ID
        setTimeout(function() {
            checkAndFixUserId();
        }, 500);

        // –î–æ–¥–∞—î–º–æ –∞–≤–∞—Ä—ñ–π–Ω—É –∫–Ω–æ–ø–∫—É
        if (document.readyState === 'loading') {
            document.addEventListener('DOMContentLoaded', addEmergencyButton);
        } else {
            addEmergencyButton();
        }

        console.log("‚úÖ –°–∏—Å—Ç–µ–º–∞ –∞–≤–∞—Ä—ñ–π–Ω–æ–≥–æ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è ID —É—Å–ø—ñ—à–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∞");
    }

    // –ó–∞–ø—É—Å–∫–∞—î–º–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—é
    init();
})();