/**
 * raffles.js - –û—Å–Ω–æ–≤–Ω–∏–π –º–æ–¥—É–ª—å –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ —Ä–æ–∑—ñ–≥—Ä–∞—à–∞–º–∏ WINIX
 */

(function() {
    'use strict';

    console.log("üéÆ Raffles: –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –º–æ–¥—É–ª—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤");

    // ======== –ü–†–ò–í–ê–¢–ù–Ü –ó–ú–Ü–ù–ù–Ü ========

    // –î–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è —Å—Ç–∞—Ç—É—Å—É –æ–ø–µ—Ä–∞—Ü—ñ–π
    let _isParticipating = false;
    let _isLoadingRaffles = false;

    // –ß–∞—Å –æ—Å—Ç–∞–Ω–Ω—ñ—Ö –∑–∞–ø–∏—Ç—ñ–≤
    let _lastRafflesUpdateTime = 0;
    const RAFFLES_CACHE_TTL = 60000; // 1 —Ö–≤–∏–ª–∏–Ω–∞

    // –ö–µ—à–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
    let _activeRaffles = null;
    let _userRaffles = null;
    let _rafflesHistory = null;

    // –î–û–î–ê–ù–û: –ö–µ—à –¥–µ—Ç–∞–ª–µ–π —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
    let _raffleDetailsCache = {};

    // –§–æ—Ä–º–∞—Ç–∏ –¥–∞—Ç–∏
    const dateTimeFormat = new Intl.DateTimeFormat('uk-UA', {
        day: '2-digit',
        month: '2-digit',
        year: 'numeric',
        hour: '2-digit',
        minute: '2-digit'
    });

    // –î–û–î–ê–ù–û: –¢–∞–π–º–∞—É—Ç–∏ –¥–ª—è –æ—á–∏—â–µ–Ω–Ω—è —Å—Ç–∞–Ω—ñ–≤
    let _participationTimeoutId = null;
    let _loadingTimeoutId = null;

    // ======== –§–£–ù–ö–¶–Ü–á –î–õ–Ø –†–û–ë–û–¢–ò –ó API ========

    /**
     * –û—Ç—Ä–∏–º–∞–Ω–Ω—è –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
     */
    async function getActiveRaffles(forceRefresh = false) {
        try {
            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∫–µ—à
            const now = Date.now();
            if (!forceRefresh && _activeRaffles && (now - _lastRafflesUpdateTime < RAFFLES_CACHE_TTL)) {
                console.log("üìã Raffles: –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –∫–µ—à–æ–≤–∞–Ω–∏—Ö –¥–∞–Ω–∏—Ö –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤");
                return _activeRaffles;
            }

            // –î–û–î–ê–ù–û: –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ —Å–∫–∏–¥–∞–Ω–Ω—è –∑–∞–≤–∏—Å–∞—é—á–∏—Ö –∑–∞–ø–∏—Ç—ñ–≤
            if (_isLoadingRaffles && (now - _lastRafflesUpdateTime > 30000)) {
                console.warn("‚ö†Ô∏è Raffles: –í–∏—è–≤–ª–µ–Ω–æ –∑–∞–≤–∏—Å–∞—é—á–∏–π –∑–∞–ø–∏—Ç —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤, —Å–∫–∏–¥–∞—î–º–æ —Å—Ç–∞–Ω");
                _isLoadingRaffles = false;
                if (_loadingTimeoutId) {
                    clearTimeout(_loadingTimeoutId);
                    _loadingTimeoutId = null;
                }
            }

            if (_isLoadingRaffles) {
                console.log("‚è≥ Raffles: –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ –≤–∂–µ –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è");
                return _activeRaffles || [];
            }

            _isLoadingRaffles = true;
            _lastRafflesUpdateTime = now;

            // –î–û–î–ê–ù–û: –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Ç–∞–π–º–∞—É—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ–≥–æ —Å–∫–∏–¥–∞–Ω–Ω—è
            if (_loadingTimeoutId) {
                clearTimeout(_loadingTimeoutId);
            }
            _loadingTimeoutId = setTimeout(() => {
                if (_isLoadingRaffles) {
                    console.warn("‚ö†Ô∏è Raffles: –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ —Ç—Ä–∏–≤–∞—î –∑–∞–Ω–∞–¥—Ç–æ –¥–æ–≤–≥–æ, —Å–∫–∏–¥–∞—î–º–æ —Å—Ç–∞–Ω");
                    _isLoadingRaffles = false;
                }
            }, 30000); // 30 —Å–µ–∫—É–Ω–¥

            showLoading('–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤...');

            // –ó–ú–Ü–ù–ï–ù–û: –î–æ–¥–∞—î–º–æ –∫—Ä–∞—â—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ –¥–ª—è API –∑–∞–ø–∏—Ç—É
            const response = await window.WinixAPI.apiRequest('/api/raffles', 'GET', null, {
                timeout: 15000,
                suppressErrors: true,
                forceCleanup: forceRefresh
            });

            // –ó–ê–í–ñ–î–ò –ø—Ä–∏—Ö–æ–≤—É—î–º–æ –ª–æ–∞–¥–µ—Ä —ñ —Å–∫–∏–¥–∞—î–º–æ –ø—Ä–∞–ø–æ—Ä–µ—Ü—å
            hideLoading();
            _isLoadingRaffles = false;

            // –û—á–∏—â–∞—î–º–æ —Ç–∞–π–º–∞—É—Ç
            if (_loadingTimeoutId) {
                clearTimeout(_loadingTimeoutId);
                _loadingTimeoutId = null;
            }

            if (response && response.status === 'success') {
                _activeRaffles = response.data || [];
                _lastRafflesUpdateTime = now;

                console.log(`‚úÖ Raffles: –û—Ç—Ä–∏–º–∞–Ω–æ ${_activeRaffles.length} –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤`);

                // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
                updateStatistics();

                return _activeRaffles;
            } else {
                // –î–û–î–ê–ù–û: –ö—Ä–∞—â–∞ –æ–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–æ–∫
                console.error("‚ùå Raffles: –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤:", response?.message || "–ù–µ–≤—ñ–¥–æ–º–∞ –ø–æ–º–∏–ª–∫–∞");

                // –Ø–∫—â–æ —î –∫–µ—à–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —ó—Ö
                if (_activeRaffles) {
                    console.warn("üìã Raffles: –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –∫–µ—à–æ–≤–∞–Ω–∏—Ö –¥–∞–Ω–∏—Ö –ø—ñ—Å–ª—è –ø–æ–º–∏–ª–∫–∏");
                    return _activeRaffles;
                }

                throw new Error((response && response.message) || '–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤');
            }
        } catch (error) {
            console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤:', error);

            // –ó–ê–í–ñ–î–ò —Å–∫–∏–¥–∞—î–º–æ –ø—Ä–∞–ø–æ—Ä—Ü—ñ
            hideLoading();
            _isLoadingRaffles = false;

            if (_loadingTimeoutId) {
                clearTimeout(_loadingTimeoutId);
                _loadingTimeoutId = null;
            }

            // –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É
            showToast('–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.');

            // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –∫–µ—à–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ —É –≤–∏–ø–∞–¥–∫—É –ø–æ–º–∏–ª–∫–∏
            return _activeRaffles || [];
        }
    }

    /**
     * –û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–µ—Ç–∞–ª—å–Ω–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ —Ä–æ–∑—ñ–≥—Ä–∞—à
     */
    async function getRaffleDetails(raffleId) {
        try {
            if (!raffleId) {
                throw new Error('ID —Ä–æ–∑—ñ–≥—Ä–∞—à—É –Ω–µ –≤–∫–∞–∑–∞–Ω–æ');
            }

            // –î–û–î–ê–ù–û: –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∫–µ—à
            if (_raffleDetailsCache[raffleId]) {
                console.log(`üìã Raffles: –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –∫–µ—à–æ–≤–∞–Ω–∏—Ö –¥–∞–Ω–∏—Ö –¥–ª—è —Ä–æ–∑—ñ–≥—Ä–∞—à—É ${raffleId}`);
                return _raffleDetailsCache[raffleId];
            }

            showLoading('–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–µ—Ç–∞–ª–µ–π —Ä–æ–∑—ñ–≥—Ä–∞—à—É...');

            // –ó–ú–Ü–ù–ï–ù–û: –ü–æ–∫—Ä–∞—â–µ–Ω—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ –∑–∞–ø–∏—Ç—É
            const response = await window.WinixAPI.apiRequest(`/api/raffles/${raffleId}`, 'GET', null, {
                timeout: 10000,
                suppressErrors: true,
                forceCleanup: true
            });

            hideLoading();

            if (response && response.status === 'success') {
                // –î–û–î–ê–ù–û: –ö–µ—à—É—î–º–æ –æ—Ç—Ä–∏–º–∞–Ω—ñ –¥–∞–Ω—ñ
                if (response.data) {
                    _raffleDetailsCache[raffleId] = response.data;
                }
                return response.data;
            } else {
                throw new Error((response && response.message) || '–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–µ—Ç–∞–ª–µ–π —Ä–æ–∑—ñ–≥—Ä–∞—à—É');
            }
        } catch (error) {
            console.error(`‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–µ—Ç–∞–ª–µ–π —Ä–æ–∑—ñ–≥—Ä–∞—à—É ${raffleId}:`, error);
            hideLoading();
            showToast('–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –¥–µ—Ç–∞–ª—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—É. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.');
            return null;
        }
    }

    /**
     * –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤, —É —è–∫–∏—Ö –±–µ—Ä–µ —É—á–∞—Å—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á
     */
    async function getUserRaffles() {
        try {
            const userId = window.WinixAPI.getUserId();
            if (!userId) {
                throw new Error('ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
            }

            showLoading('–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –≤–∞—à–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤...');

            // –ó–ú–Ü–ù–ï–ù–û: –î–æ–¥–∞–Ω–æ –∫—Ä–∞—â—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ –∑–∞–ø–∏—Ç—É
            const response = await window.WinixAPI.apiRequest(`/api/user/${userId}/raffles`, 'GET', null, {
                timeout: 10000,
                suppressErrors: true
            });

            hideLoading();

            if (response && response.status === 'success') {
                _userRaffles = response.data || [];

                // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —É—á–∞—Å—Ç—ñ
                updateParticipationStats();

                return _userRaffles;
            } else {
                throw new Error((response && response.message) || '–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞');
            }
        } catch (error) {
            console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:', error);
            hideLoading();

            // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –∫–µ—à–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ —É –≤–∏–ø–∞–¥–∫—É –ø–æ–º–∏–ª–∫–∏
            if (_userRaffles) {
                return _userRaffles;
            }

            return [];
        }
    }

    /**
     * –û—Ç—Ä–∏–º–∞–Ω–Ω—è —ñ—Å—Ç–æ—Ä—ñ—ó —É—á–∞—Å—Ç—ñ –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à–∞—Ö
     */
    async function getRafflesHistory() {
        try {
            const userId = window.WinixAPI.getUserId();
            if (!userId) {
                throw new Error('ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
            }

            showLoading('–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —ñ—Å—Ç–æ—Ä—ñ—ó —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤...');

            // –ó–ú–Ü–ù–ï–ù–û: –í–∏–ø—Ä–∞–≤–ª–µ–Ω–∏–π –∑–∞–ø–∏—Ç –∑ –∫—Ä–∞—â–∏–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
            const response = await window.WinixAPI.apiRequest(`/api/user/${userId}/raffles-history`, 'GET', null, {
                timeout: 15000,
                suppressErrors: true,
                forceCleanup: true
            });

            hideLoading();

            if (response && response.status === 'success') {
                // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —â–æ response.data - —Ü–µ –º–∞—Å–∏–≤
                if (!Array.isArray(response.data)) {
                    console.warn("–û—Ç—Ä–∏–º–∞–Ω–æ –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω—ñ –¥–∞–Ω—ñ —ñ—Å—Ç–æ—Ä—ñ—ó:", response.data);
                    _rafflesHistory = [];
                    return [];
                }

                _rafflesHistory = response.data;

                // –û–Ω–æ–≤–ª—é—î–º–æ –∑–∞–≥–∞–ª—å–Ω—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –Ω–∞ –æ—Å–Ω–æ–≤—ñ —ñ—Å—Ç–æ—Ä—ñ—ó
                updateHistoryStats();

                return _rafflesHistory;
            } else {
                // –î–û–î–ê–ù–û: –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —Ü–µ —Ñ–æ–ª–±–µ–∫
                if (response && response.source && response.source.includes('fallback')) {
                    console.warn(`Raffles: –û—Ç—Ä–∏–º–∞–Ω–æ —Ñ–æ–ª–±–µ–∫ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –¥–ª—è —ñ—Å—Ç–æ—Ä—ñ—ó: ${response.source}`);

                    // –Ø–∫—â–æ —î –¥–∞–Ω—ñ, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —ó—Ö
                    if (Array.isArray(response.data)) {
                        _rafflesHistory = response.data;
                        return _rafflesHistory;
                    }
                }

                throw new Error((response && response.message) || '–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —ñ—Å—Ç–æ—Ä—ñ—ó —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤');
            }
        } catch (error) {
            console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —ñ—Å—Ç–æ—Ä—ñ—ó —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤:', error);
            hideLoading();
            showToast('–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —ñ—Å—Ç–æ—Ä—ñ—é —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.');

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∫–µ—à–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ
            if (_rafflesHistory && Array.isArray(_rafflesHistory)) {
                return _rafflesHistory;
            }

            // –ó–∞–≤–∂–¥–∏ –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ –º–∞—Å–∏–≤ –ø—Ä–∏ –ø–æ–º–∏–ª—Ü—ñ
            _rafflesHistory = [];
            return [];
        }
    }

    /**
     * –£—á–∞—Å—Ç—å —É —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ
     */
    async function participateInRaffle(raffleId, entryCount = 1) {
        try {
            // –î–û–î–ê–ù–û: –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ —Å–∫–∏–¥–∞–Ω–Ω—è –∑–∞–≤–∏—Å–∞—é—á–∏—Ö –∑–∞–ø–∏—Ç—ñ–≤
            const now = Date.now();
            if (_isParticipating && !_participationTimeoutId) {
                console.warn("‚ö†Ô∏è Raffles: –í–∏—è–≤–ª–µ–Ω–æ –ø–æ—Ç–µ–Ω—Ü—ñ–π–Ω–æ –∑–∞–≤–∏—Å–∞—é—á–∏–π –∑–∞–ø–∏—Ç —É—á–∞—Å—Ç—ñ, —Å–∫–∏–¥–∞—î–º–æ");
                _isParticipating = false;
            }

            if (_isParticipating) {
                console.log("‚è≥ Raffles: –£—á–∞—Å—Ç—å —É —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ –≤–∂–µ –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è");
                return { status: 'error', message: '–£—á–∞—Å—Ç—å —É —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ –≤–∂–µ –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è' };
            }

            _isParticipating = true;

            // –î–û–î–ê–ù–û: –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Ç–∞–π–º–∞—É—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ–≥–æ —Å–∫–∏–¥–∞–Ω–Ω—è
            if (_participationTimeoutId) {
                clearTimeout(_participationTimeoutId);
            }
            _participationTimeoutId = setTimeout(() => {
                if (_isParticipating) {
                    console.warn("‚ö†Ô∏è Raffles: –£—á–∞—Å—Ç—å —É —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ —Ç—Ä–∏–≤–∞—î –∑–∞–Ω–∞–¥—Ç–æ –¥–æ–≤–≥–æ, —Å–∫–∏–¥–∞—î–º–æ —Å—Ç–∞–Ω");
                    _isParticipating = false;
                }
            }, 30000); // 30 —Å–µ–∫—É–Ω–¥

            showLoading('–ë–µ—Ä–µ–º–æ —É—á–∞—Å—Ç—å —É —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ...');

            const userId = window.WinixAPI.getUserId();
            if (!userId) {
                throw new Error('ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
            }

            // –ó–ú–Ü–ù–ï–ù–û: –ü–æ–∫—Ä–∞—â–µ–Ω—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ –∑–∞–ø–∏—Ç—É
            const response = await window.WinixAPI.apiRequest(`/api/user/${userId}/participate-raffle`, 'POST', {
                raffle_id: raffleId,
                entry_count: entryCount
            }, {
                timeout: 15000,
                suppressErrors: true,
                forceCleanup: true
            });

            // –ó–ê–í–ñ–î–ò –ø—Ä–∏—Ö–æ–≤—É—î–º–æ –ª–æ–∞–¥–µ—Ä —ñ —Å–∫–∏–¥–∞—î–º–æ –ø—Ä–∞–ø–æ—Ä—Ü—ñ
            hideLoading();
            _isParticipating = false;

            // –û—á–∏—â–∞—î–º–æ —Ç–∞–π–º–∞—É—Ç
            if (_participationTimeoutId) {
                clearTimeout(_participationTimeoutId);
                _participationTimeoutId = null;
            }

            if (response && response.status === 'success') {
                // –û–Ω–æ–≤–ª—é—î–º–æ –∫–µ—à –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
                await getActiveRaffles(true);

                // –û–Ω–æ–≤–ª—é—î–º–æ –∫–µ—à —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
                await getUserRaffles();

                // –û–Ω–æ–≤–ª—é—î–º–æ –±–∞–ª–∞–Ω—Å –º–æ–Ω–µ—Ç —É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
                await updateUserBalance();

                // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
                updateStatistics();

                return {
                    status: 'success',
                    message: response.data?.message || '–í–∏ —É—Å–ø—ñ—à–Ω–æ –≤–∑—è–ª–∏ —É—á–∞—Å—Ç—å —É —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ',
                    data: response.data
                };
            } else {
                throw new Error((response && response.message) || '–ü–æ–º–∏–ª–∫–∞ —É—á–∞—Å—Ç—ñ –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ');
            }
        } catch (error) {
            console.error(`‚ùå –ü–æ–º–∏–ª–∫–∞ —É—á–∞—Å—Ç—ñ –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ ${raffleId}:`, error);

            // –ó–ê–í–ñ–î–ò —Å–∫–∏–¥–∞—î–º–æ –ø—Ä–∞–ø–æ—Ä—Ü—ñ —Ç–∞ –ø—Ä–∏—Ö–æ–≤—É—î–º–æ –ª–æ–∞–¥–µ—Ä
            hideLoading();
            _isParticipating = false;

            if (_participationTimeoutId) {
                clearTimeout(_participationTimeoutId);
                _participationTimeoutId = null;
            }

            return { status: 'error', message: error.message || '–ü–æ–º–∏–ª–∫–∞ —É—á–∞—Å—Ç—ñ –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ' };
        }
    }

    /**
     * –û—Ç—Ä–∏–º–∞–Ω–Ω—è –±–æ–Ω—É—Å—É –Ω–æ–≤–∞—á–∫–∞
     */
    async function claimNewbieBonus() {
        try {
            showLoading('–û—Ç—Ä–∏–º—É—î–º–æ –±–æ–Ω—É—Å –Ω–æ–≤–∞—á–∫–∞...');

            const userId = window.WinixAPI.getUserId();
            if (!userId) {
                throw new Error('ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
            }

            // –ó–ú–Ü–ù–ï–ù–û: –ü–æ–∫—Ä–∞—â–µ–Ω—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ –∑–∞–ø–∏—Ç—É
            const response = await window.WinixAPI.apiRequest(`/api/user/${userId}/claim-newbie-bonus`, 'POST', null, {
                timeout: 10000,
                suppressErrors: true
            });

            hideLoading();

            if (response && (response.status === 'success' || response.status === 'already_claimed')) {
                // –û–Ω–æ–≤–ª—é—î–º–æ –±–∞–ª–∞–Ω—Å WINIX —É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
                await updateUserBalance();

                return {
                    status: response.status,
                    message: response.message || '–ë–æ–Ω—É—Å –Ω–æ–≤–∞—á–∫–∞ —É—Å–ø—ñ—à–Ω–æ –æ—Ç—Ä–∏–º–∞–Ω–æ',
                    data: response.data
                };
            } else {
                throw new Error((response && response.message) || '–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –±–æ–Ω—É—Å—É –Ω–æ–≤–∞—á–∫–∞');
            }
        } catch (error) {
            console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –±–æ–Ω—É—Å—É –Ω–æ–≤–∞—á–∫–∞:', error);
            hideLoading();
            return { status: 'error', message: error.message || '–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –±–æ–Ω—É—Å—É –Ω–æ–≤–∞—á–∫–∞' };
        }
    }

    // ======== –§–£–ù–ö–¶–Ü–á –î–õ–Ø –†–û–ë–û–¢–ò –ó UI ========

    /**
     * –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ
     */
    async function displayActiveRaffles() {
        console.log("üéÆ Raffles: –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤");

        // –û—Ç—Ä–∏–º—É—î–º–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏ –¥–ª—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
        const mainRaffleContainer = document.querySelector('.main-raffle');
        const miniRafflesContainer = document.querySelector('.mini-raffles-container');

        if (!mainRaffleContainer && !miniRafflesContainer) {
            console.error("‚ùå Raffles: –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏ –¥–ª—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤");
            return;
        }

        // –ü–æ–∫–∞–∑—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
        showLoading('–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤...');

        try {
            // –û—Ç—Ä–∏–º—É—î–º–æ –∞–∫—Ç–∏–≤–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ
            const raffles = await getActiveRaffles(true);

            // –ü—Ä–∏—Ö–æ–≤—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
            hideLoading();

            if (!raffles || raffles.length === 0) {
                console.log("‚ÑπÔ∏è Raffles: –ê–∫—Ç–∏–≤–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ");

                // –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –≤—ñ–¥—Å—É—Ç–Ω—ñ—Å—Ç—å —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
                if (mainRaffleContainer) {
                    mainRaffleContainer.innerHTML = `
                        <div class="empty-raffles">
                            <div class="empty-raffles-icon">üéÆ</div>
                            <h3>–ù–µ–º–∞—î –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤</h3>
                            <p>–ù–∞ –¥–∞–Ω–∏–π –º–æ–º–µ–Ω—Ç –Ω–µ–º–∞—î –¥–æ—Å—Ç—É–ø–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ!</p>
                        </div>
                    `;
                }

                return;
            }

            // –°—Ç–≤–æ—Ä—é—î–º–æ —Å–ø–∏—Å–æ–∫ –æ—Å–Ω–æ–≤–Ω–∏—Ö —ñ –º—ñ–Ω—ñ-—Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
            const mainRaffles = raffles.filter(raffle => !raffle.is_daily);
            const miniRaffles = raffles.filter(raffle => raffle.is_daily);

            // –í—ñ–¥–æ–±—Ä–∞–∂–∞—î–º–æ –æ—Å–Ω–æ–≤–Ω–∏–π —Ä–æ–∑—ñ–≥—Ä–∞—à
            if (mainRaffleContainer && mainRaffles.length > 0) {
                displayMainRaffle(mainRaffleContainer, mainRaffles[0]);
            } else if (mainRaffleContainer) {
                // –Ø–∫—â–æ –Ω–µ–º–∞—î –æ—Å–Ω–æ–≤–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤, –ø–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
                mainRaffleContainer.innerHTML = `
                    <div class="empty-main-raffle">
                        <div class="empty-raffles-icon">üéÆ</div>
                        <h3>–ù–µ–º–∞—î –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤</h3>
                        <p>–°–∫–æ—Ä–æ –±—É–¥—É—Ç—å –Ω–æ–≤—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ. –°–ª—ñ–¥–∫—É–π—Ç–µ –∑–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è–º–∏!</p>
                    </div>
                `;
            }

            // –í—ñ–¥–æ–±—Ä–∞–∂–∞—î–º–æ –º—ñ–Ω—ñ-—Ä–æ–∑—ñ–≥—Ä–∞—à—ñ
            if (miniRafflesContainer) {
                // –û—á–∏—â–∞—î–º–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
                miniRafflesContainer.innerHTML = '';

                if (miniRaffles.length > 0) {
                    // –î–æ–¥–∞—î–º–æ –∫–æ–∂–µ–Ω –º—ñ–Ω—ñ-—Ä–æ–∑—ñ–≥—Ä–∞—à
                    miniRaffles.forEach(raffle => {
                        const miniRaffleElement = createMiniRaffleElement(raffle);
                        miniRafflesContainer.appendChild(miniRaffleElement);
                    });
                } else {
                    // –î–æ–¥–∞—î–º–æ –µ–ª–µ–º–µ–Ω—Ç –¥–ª—è –±–æ–Ω—É—Å—É –Ω–æ–≤–∞—á–∫–∞, —è–∫—â–æ –º—ñ–Ω—ñ-—Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ –Ω–µ–º–∞—î
                    addNewbieBonusElement(miniRafflesContainer);
                }
            }

            // –ê–∫—Ç–∏–≤—É—î–º–æ —Ç–∞–π–º–µ—Ä–∏
            startRaffleTimers();

            // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            updateStatistics();
        } catch (error) {
            console.error("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤:", error);
            hideLoading();

            // –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É
            showToast('–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.');

            if (mainRaffleContainer) {
                mainRaffleContainer.innerHTML = `
                    <div class="empty-raffles">
                        <div class="empty-raffles-icon">‚ùå</div>
                        <h3>–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è</h3>
                        <p>–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Å–ø—Ä–æ–±—ñ –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ. –°–ø—Ä–æ–±—É–π—Ç–µ –æ–Ω–æ–≤–∏—Ç–∏ —Å—Ç–æ—Ä—ñ–Ω–∫—É.</p>
                        <button class="join-raffle-btn" onclick="location.reload()">–û–Ω–æ–≤–∏—Ç–∏ —Å—Ç–æ—Ä—ñ–Ω–∫—É</button>
                    </div>
                `;
            }
        }
    }

    /**
     * –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
     */
    function displayMainRaffle(container, raffle) {
        if (!container || !raffle) return;

        // –°—Ç–≤–æ—Ä—é—î–º–æ HTML –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
        container.innerHTML = `
            <img class="main-raffle-image" src="${raffle.image_url || '/assets/prize-poster.gif'}" alt="${raffle.title}">
            <div class="main-raffle-content">
                <div class="main-raffle-header">
                    <h3 class="main-raffle-title">${raffle.title}</h3>
                    <div class="main-raffle-cost">
                        <img class="token-icon" src="/assets/token-icon.png" alt="–ñ–µ—Ç–æ–Ω">
                        <span>${raffle.entry_fee} –∂–µ—Ç–æ–Ω${raffle.entry_fee !== 1 ? '–∏' : ''}</span>
                    </div>
                </div>

                <span class="main-raffle-prize">${raffle.prize_amount} ${raffle.prize_currency}</span>

                <div class="timer-container">
                    <div class="timer-block">
                        <span class="timer-value" id="days">00</span>
                        <span class="timer-label">–¥–Ω—ñ–≤</span>
                    </div>
                    <div class="timer-block">
                        <span class="timer-value" id="hours">00</span>
                        <span class="timer-label">–≥–æ–¥</span>
                    </div>
                    <div class="timer-block">
                        <span class="timer-value" id="minutes">00</span>
                        <span class="timer-label">—Ö–≤</span>
                    </div>
                </div>

                <div class="prize-distribution">
                    <div class="prize-distribution-title">–†–æ–∑–ø–æ–¥—ñ–ª –ø—Ä–∏–∑—ñ–≤ (${raffle.winners_count} –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤):</div>
                    <div class="prize-list">
                        ${generatePrizeDistributionHTML(raffle.prize_distribution)}
                    </div>
                </div>

                <div class="main-raffle-participants">
                    <div class="participants-info">–£—á–∞—Å–Ω–∏–∫—ñ–≤: <span class="participants-count">${raffle.participants_count || 0}</span></div>
                    <div class="share-container">
                        <button class="share-button" id="share-raffle-btn" data-raffle-id="${raffle.id}">–ü–æ–¥—ñ–ª–∏—Ç–∏—Å—è</button>
                    </div>
                </div>

                <div class="progress-bar">
                    <div class="progress" style="width: ${calculateProgressWidth(raffle)}%"></div>
                </div>

                <button class="join-button" data-raffle-id="${raffle.id}" data-raffle-type="main">–í–∑—è—Ç–∏ —É—á–∞—Å—Ç—å</button>
            </div>
        `;

        // –û–Ω–æ–≤–ª—é—î–º–æ —Ç–∞–π–º–µ—Ä
        updateMainRaffleTimer(raffle);

        // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π
        const joinButton = container.querySelector('.join-button');
        if (joinButton) {
            joinButton.addEventListener('click', function() {
                const raffleId = this.getAttribute('data-raffle-id');
                const raffleType = this.getAttribute('data-raffle-type');
                openRaffleDetails(raffleId, raffleType);
            });
        }

        // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ü–æ–¥—ñ–ª–∏—Ç–∏—Å—è"
        const shareButton = container.querySelector('#share-raffle-btn');
        if (shareButton) {
            shareButton.addEventListener('click', function() {
                const raffleId = this.getAttribute('data-raffle-id');
                shareRaffle(raffleId);
            });
        }
    }

    /**
     * –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è HTML –¥–ª—è —Ä–æ–∑–ø–æ–¥—ñ–ª—É –ø—Ä–∏–∑—ñ–≤
     */
    function generatePrizeDistributionHTML(prizeDistribution) {
        if (!prizeDistribution || typeof prizeDistribution !== 'object' || Object.keys(prizeDistribution).length === 0) {
            return '<div class="prize-item"><span class="prize-place">–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –≤—ñ–¥—Å—É—Ç–Ω—è</span></div>';
        }

        let html = '';
        const places = Object.keys(prizeDistribution).sort((a, b) => parseInt(a) - parseInt(b));

        // –ì—Ä—É–ø—É—î–º–æ –º—ñ—Å—Ü—è –∑ –æ–¥–Ω–∞–∫–æ–≤–∏–º–∏ –ø—Ä–∏–∑–∞–º–∏
        const groupedPrizes = {};

        places.forEach(place => {
            const prize = prizeDistribution[place];
            if (!prize) return;

            const key = `${prize.amount}-${prize.currency}`;

            if (!groupedPrizes[key]) {
                groupedPrizes[key] = {
                    amount: prize.amount,
                    currency: prize.currency,
                    places: []
                };
            }

            groupedPrizes[key].places.push(parseInt(place));
        });

        // –°—Ç–≤–æ—Ä—é—î–º–æ HTML –¥–ª—è –∫–æ–∂–Ω–æ—ó –≥—Ä—É–ø–∏ –ø—Ä–∏–∑—ñ–≤
        for (const key in groupedPrizes) {
            const group = groupedPrizes[key];
            const placesText = formatPlaces(group.places);

            html += `
                <div class="prize-item">
                    <span class="prize-place">${placesText}:</span>
                    <span class="prize-value">${group.amount} ${group.currency}</span>
                </div>
            `;
        }

        return html;
    }

    /**
     * –§–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è —Å–ø–∏—Å–∫—É –º—ñ—Å—Ü—å
     */
    function formatPlaces(places) {
        if (!places || !Array.isArray(places) || places.length === 0) {
            return "–ù–µ–≤—ñ–¥–æ–º–æ";
        }

        if (places.length === 1) {
            return `${places[0]} –º—ñ—Å—Ü–µ`;
        }

        // –®—É–∫–∞—î–º–æ –ø–æ—Å–ª—ñ–¥–æ–≤–Ω—ñ –º—ñ—Å—Ü—è
        places.sort((a, b) => a - b);

        const ranges = [];
        let start = places[0];
        let end = places[0];

        for (let i = 1; i < places.length; i++) {
            if (places[i] === end + 1) {
                end = places[i];
            } else {
                if (start === end) {
                    ranges.push(`${start}`);
                } else {
                    ranges.push(`${start}-${end}`);
                }
                start = end = places[i];
            }
        }

        if (start === end) {
            ranges.push(`${start}`);
        } else {
            ranges.push(`${start}-${end}`);
        }

        return ranges.join(', ') + ' –º—ñ—Å—Ü—è';
    }

    /**
     * –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ —à–∏—Ä–∏–Ω–∏ –ø—Ä–æ–≥—Ä–µ—Å-–±–∞—Ä—É
     */
    function calculateProgressWidth(raffle) {
        if (!raffle || !raffle.start_time || !raffle.end_time) {
            return 0;
        }

        try {
            const now = Date.now();
            const startTime = new Date(raffle.start_time).getTime();
            const endTime = new Date(raffle.end_time).getTime();

            if (isNaN(startTime) || isNaN(endTime)) {
                return 0;
            }

            const totalDuration = endTime - startTime;
            if (totalDuration <= 0) {
                return 0;
            }

            const elapsed = now - startTime;
            return Math.min(100, Math.max(0, (elapsed / totalDuration) * 100));
        } catch (error) {
            console.error("–ü–æ–º–∏–ª–∫–∞ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É –ø—Ä–æ–≥—Ä–µ—Å—É:", error);
            return 0;
        }
    }

    /**
     * –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–∞–π–º–µ—Ä–∞ –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
     */
    function updateMainRaffleTimer(raffle) {
        const daysElement = document.querySelector('#days');
        const hoursElement = document.querySelector('#hours');
        const minutesElement = document.querySelector('#minutes');

        if (!daysElement || !hoursElement || !minutesElement || !raffle || !raffle.end_time) return;

        const updateTimer = () => {
            try {
                const now = new Date();
                const endTime = new Date(raffle.end_time);
                const timeLeft = endTime - now;

                if (timeLeft > 0) {
                    const days = Math.floor(timeLeft / (1000 * 60 * 60 * 24));
                    const hours = Math.floor((timeLeft % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
                    const minutes = Math.floor((timeLeft % (1000 * 60 * 60)) / (1000 * 60));

                    daysElement.textContent = padZero(days);
                    hoursElement.textContent = padZero(hours);
                    minutesElement.textContent = padZero(minutes);
                } else {
                    daysElement.textContent = '00';
                    hoursElement.textContent = '00';
                    minutesElement.textContent = '00';

                    // –†–æ–∑—ñ–≥—Ä–∞—à –∑–∞–≤–µ—Ä—à–µ–Ω–æ, –æ–Ω–æ–≤–ª—é—î–º–æ –¥–∞–Ω—ñ
                    clearInterval(timerInterval);
                    setTimeout(() => {
                        getActiveRaffles(true).then(() => {
                            displayActiveRaffles();
                        }).catch(err => {
                            console.error("–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –ø—ñ—Å–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è —Ç–∞–π–º–µ—Ä–∞:", err);
                        });
                    }, 5000);
                }
            } catch (error) {
                console.error("–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–∞–π–º–µ—Ä–∞:", error);
            }
        };

        // –í—ñ–¥—Ä–∞–∑—É –æ–Ω–æ–≤–ª—é—î–º–æ —Ç–∞–π–º–µ—Ä
        updateTimer();

        // –û–Ω–æ–≤–ª—é—î–º–æ —Ç–∞–π–º–µ—Ä –∫–æ–∂–Ω—É —Ö–≤–∏–ª–∏–Ω—É
        const timerInterval = setInterval(updateTimer, 60000);

        // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —ñ–Ω—Ç–µ—Ä–≤–∞–ª –¥–ª—è –º–æ–∂–ª–∏–≤–æ–≥–æ –æ—á–∏—â–µ–Ω–Ω—è
        window._raffleTimerIntervals = window._raffleTimerIntervals || [];
        window._raffleTimerIntervals.push(timerInterval);
    }

    /**
     * –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç—É –º—ñ–Ω—ñ-—Ä–æ–∑—ñ–≥—Ä–∞—à—É
     */
    function createMiniRaffleElement(raffle) {
        if (!raffle) return null;

        // –°—Ç–≤–æ—Ä—é—î–º–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        const miniRaffle = document.createElement('div');
        miniRaffle.className = 'mini-raffle';
        miniRaffle.setAttribute('data-raffle-id', raffle.id);

        // –†–æ–∑—Ä–∞—Ö–æ–≤—É—î–º–æ —á–∞—Å, —â–æ –∑–∞–ª–∏—à–∏–≤—Å—è
        let timeLeftText = '';
        try {
            const now = new Date();
            const endTime = new Date(raffle.end_time);
            const timeLeft = endTime - now;

            if (timeLeft > 0) {
                const hours = Math.floor((timeLeft % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
                const minutes = Math.floor((timeLeft % (1000 * 60 * 60)) / (1000 * 60));
                timeLeftText = `–ó–∞–ª–∏—à–∏–ª–æ—Å—å: ${hours} –≥–æ–¥ ${minutes} —Ö–≤`;
            } else {
                timeLeftText = '–ó–∞–≤–µ—Ä—à—É—î—Ç—å—Å—è';
            }
        } catch (error) {
            console.error("–ü–æ–º–∏–ª–∫–∞ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É —á–∞—Å—É –º—ñ–Ω—ñ-—Ä–æ–∑—ñ–≥—Ä–∞—à—É:", error);
            timeLeftText = '–ß–∞—Å –Ω–µ –≤–∏–∑–Ω–∞—á–µ–Ω–æ';
        }

        // –§–æ—Ä–º–∞—Ç—É—î–º–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤
        const winnersCount = raffle.winners_count || 1;
        const winnersText = `${raffle.prize_amount} ${raffle.prize_currency} (${winnersCount} –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤)`;

        // –§–æ—Ä–º—É—î–º–æ HTML
        miniRaffle.innerHTML = `
            <div class="mini-raffle-info">
                <div class="mini-raffle-title">${raffle.title}</div>
                <div class="mini-raffle-cost">
                    <img class="token-icon" src="/assets/token-icon.png" alt="–ñ–µ—Ç–æ–Ω">
                    <span>${raffle.entry_fee} –∂–µ—Ç–æ–Ω${raffle.entry_fee !== 1 ? '–∏' : ''}</span>
                </div>
                <div class="mini-raffle-prize">${winnersText}</div>
                <div class="mini-raffle-time">${timeLeftText}</div>
            </div>
            <button class="mini-raffle-button" data-raffle-id="${raffle.id}" data-raffle-type="daily">–£—á–∞—Å—Ç—å</button>
        `;

        // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è
        const button = miniRaffle.querySelector('.mini-raffle-button');
        if (button) {
            button.addEventListener('click', function(event) {
                event.preventDefault();
                event.stopPropagation();

                const raffleId = this.getAttribute('data-raffle-id');
                const raffleType = this.getAttribute('data-raffle-type');
                openRaffleDetails(raffleId, raffleType);
            });
        }

        return miniRaffle;
    }

    /**
     * –î–æ–¥–∞–≤–∞–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç—É –±–æ–Ω—É—Å—É –Ω–æ–≤–∞—á–∫–∞
     */
    function addNewbieBonusElement(container) {
        if (!container) return;

        const newbieBonus = document.createElement('div');
        newbieBonus.className = 'mini-raffle';
        newbieBonus.setAttribute('data-raffle-id', 'newbie');

        newbieBonus.innerHTML = `
            <div class="mini-raffle-info">
                <div class="mini-raffle-title">–ë–æ–Ω—É—Å –Ω–æ–≤–∞—á–∫–∞</div>
                <div class="mini-raffle-cost">
                    <img class="token-icon" src="/assets/token-icon.png" alt="–ñ–µ—Ç–æ–Ω">
                    <span>0 –∂–µ—Ç–æ–Ω—ñ–≤</span>
                </div>
                <div class="mini-raffle-prize">500 WINIX + 1 –∂–µ—Ç–æ–Ω</div>
                <div class="mini-raffle-time">–î–æ—Å—Ç—É–ø–Ω–æ —Ç—ñ–ª—å–∫–∏ –Ω–æ–≤–∏–º –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞–º</div>
            </div>
            <button class="mini-raffle-button" data-raffle-id="newbie">–û—Ç—Ä–∏–º–∞—Ç–∏</button>
        `;

        const button = newbieBonus.querySelector('.mini-raffle-button');
        if (button) {
            button.addEventListener('click', async function(event) {
                event.preventDefault();
                event.stopPropagation();

                const result = await claimNewbieBonus();

                if (result.status === 'success') {
                    showToast(`–í–∏ –æ—Ç—Ä–∏–º–∞–ª–∏ ${result.data.amount} WINIX —è–∫ –±–æ–Ω—É—Å –Ω–æ–≤–∞—á–∫–∞!`);

                    // –î–µ–∞–∫—Ç–∏–≤—É—î–º–æ –∫–Ω–æ–ø–∫—É
                    this.textContent = '–û—Ç—Ä–∏–º–∞–Ω–æ';
                    this.disabled = true;
                    this.style.opacity = '0.6';
                    this.style.cursor = 'default';

                    // –î–æ–¥–∞—î–º–æ –≤–æ–¥—è–Ω–∏–π –∑–Ω–∞–∫
                    markNewbieBonus(newbieBonus);

                    // –û–Ω–æ–≤–ª—é—î–º–æ –±–∞–ª–∞–Ω—Å
                    updateUserBalance();
                } else if (result.status === 'already_claimed') {
                    showToast('–í–∏ –≤–∂–µ –æ—Ç—Ä–∏–º–∞–ª–∏ –±–æ–Ω—É—Å –Ω–æ–≤–∞—á–∫–∞');

                    // –î–µ–∞–∫—Ç–∏–≤—É—î–º–æ –∫–Ω–æ–ø–∫—É
                    this.textContent = '–û—Ç—Ä–∏–º–∞–Ω–æ';
                    this.disabled = true;
                    this.style.opacity = '0.6';
                    this.style.cursor = 'default';

                    // –î–æ–¥–∞—î–º–æ –≤–æ–¥—è–Ω–∏–π –∑–Ω–∞–∫
                    markNewbieBonus(newbieBonus);
                } else {
                    showToast(result.message || '–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –±–æ–Ω—É—Å—É');
                }
            });
        }

        container.appendChild(newbieBonus);

        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –≤–∂–µ –æ—Ç—Ä–∏–º–∞–Ω–æ –±–æ–Ω—É—Å
        if (window.WinixAPI && typeof window.WinixAPI.getUserData === 'function') {
            window.WinixAPI.getUserData().then(userData => {
                if (userData && userData.data && userData.data.newbie_bonus_claimed) {
                    // –î–µ–∞–∫—Ç–∏–≤—É—î–º–æ –∫–Ω–æ–ø–∫—É
                    if (button) {
                        button.textContent = '–û—Ç—Ä–∏–º–∞–Ω–æ';
                        button.disabled = true;
                        button.style.opacity = '0.6';
                        button.style.cursor = 'default';
                    }

                    // –î–æ–¥–∞—î–º–æ –≤–æ–¥—è–Ω–∏–π –∑–Ω–∞–∫
                    markNewbieBonus(newbieBonus);
                }
            }).catch(err => {
                console.error("–ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å—É –±–æ–Ω—É—Å—É:", err);
            });
        }
    }

    /**
     * –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —ñ—Å—Ç–æ—Ä—ñ—ó —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
     */
    async function displayRafflesHistory() {
        console.log("üéÆ Raffles: –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —ñ—Å—Ç–æ—Ä—ñ—ó —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤");

        // –Ø–∫—â–æ –¥–æ—Å—Ç—É–ø–Ω–∏–π –º–æ–¥—É–ª—å —ñ—Å—Ç–æ—Ä—ñ—ó, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –π–æ–≥–æ
        if (window.RaffleHistory && typeof window.RaffleHistory.displayHistory === 'function') {
            window.RaffleHistory.displayHistory('history-container');
            return;
        }

        // –û—Ç—Ä–∏–º—É—î–º–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —ñ—Å—Ç–æ—Ä—ñ—ó
        const historyContainer = document.getElementById('history-container');
        if (!historyContainer) {
            console.error("‚ùå Raffles: –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —ñ—Å—Ç–æ—Ä—ñ—ó —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤");
            return;
        }

        // –ü–æ–∫–∞–∑—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
        showLoading('–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —ñ—Å—Ç–æ—Ä—ñ—ó —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤...');

        try {
            // –û—Ç—Ä–∏–º—É—î–º–æ —ñ—Å—Ç–æ—Ä—ñ—é —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
            const history = await getRafflesHistory();

            // –ü—Ä–∏—Ö–æ–≤—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
            hideLoading();

            // –û—á–∏—â–∞—î–º–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
            historyContainer.innerHTML = '';

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –¥–∞–Ω–∏—Ö
            if (!history || !Array.isArray(history) || history.length === 0) {
                historyContainer.innerHTML = `
                    <div class="empty-history">
                        <div class="empty-history-icon">üéÆ</div>
                        <h3>–Ü—Å—Ç–æ—Ä—ñ—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ –ø–æ—Ä–æ–∂–Ω—è</h3>
                        <p>–í–∏ —â–µ –Ω–µ –±—Ä–∞–ª–∏ —É—á–∞—Å—Ç—ñ –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à–∞—Ö WINIX. –°–ø—Ä–æ–±—É–π—Ç–µ —Å–≤–æ—é —É–¥–∞—á—É –≤–∂–µ —Å—å–æ–≥–æ–¥–Ω—ñ!</p>
                        <button class="join-raffle-btn" onclick="window.switchRaffleTab('active')">–ü–µ—Ä–µ–π—Ç–∏ –¥–æ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤</button>
                    </div>
                `;
                return;
            }

            // –†–æ–∑–¥—ñ–ª—è—î–º–æ —ñ—Å—Ç–æ—Ä—ñ—é –Ω–∞ –≤–∏–≥—Ä–∞—à–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ —Ç–∞ –∑–≤–∏—á–∞–π–Ω—ñ —É—á–∞—Å—Ç—ñ
            // –í–ê–ñ–õ–ò–í–û: –î–æ–¥–∞—î–º–æ –¥–æ–¥–∞—Ç–∫–æ–≤—É –ø–µ—Ä–µ–≤—ñ—Ä–∫—É –ø–µ—Ä–µ–¥ —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—î—é
            let wonRaffles = [];
            let participatedRaffles = [];

            try {
                wonRaffles = history.filter(item => item && item.status === 'won');
                participatedRaffles = history.filter(item => item && item.status !== 'won');
            } catch (error) {
                console.error("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—ó –¥–∞–Ω–∏—Ö —ñ—Å—Ç–æ—Ä—ñ—ó:", error);
                // –£ –≤–∏–ø–∞–¥–∫—É –ø–æ–º–∏–ª–∫–∏ –ø–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
                historyContainer.innerHTML = `
                    <div class="empty-history">
                        <div class="empty-history-icon">‚ùå</div>
                        <h3>–ü–æ–º–∏–ª–∫–∞ –æ–±—Ä–æ–±–∫–∏ –¥–∞–Ω–∏—Ö</h3>
                        <p>–í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–±—Ä–æ–±—Ü—ñ –¥–∞–Ω–∏—Ö —ñ—Å—Ç–æ—Ä—ñ—ó. –°–ø—Ä–æ–±—É–π—Ç–µ –æ–Ω–æ–≤–∏—Ç–∏ —Å—Ç–æ—Ä—ñ–Ω–∫—É.</p>
                        <button class="join-raffle-btn" onclick="location.reload()">–û–Ω–æ–≤–∏—Ç–∏ —Å—Ç–æ—Ä—ñ–Ω–∫—É</button>
                    </div>
                `;
                return;
            }

            // –î–æ–¥–∞—î–º–æ –ø–µ—Ä–µ–º–æ–∂–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ, —è–∫—â–æ —î
            if (wonRaffles.length > 0) {
                historyContainer.innerHTML += `
                    <div class="history-section">
                        <h3 class="section-title">–ú–æ—ó –ø–µ—Ä–µ–º–æ–≥–∏</h3>
                        <div class="history-cards-wrapper">
                            ${wonRaffles.map(createHistoryCardHTML).join('')}
                        </div>
                    </div>
                `;
            }

            // –î–æ–¥–∞—î–º–æ –∑–≤–∏—á–∞–π–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ
            historyContainer.innerHTML += `
                <div class="history-section">
                    <h3 class="section-title">–£—á–∞—Å—Ç—å —É —Ä–æ–∑—ñ–≥—Ä–∞—à–∞—Ö</h3>
                    <div class="history-cards-wrapper">
                        ${participatedRaffles.length > 0 
                          ? participatedRaffles.map(createHistoryCardHTML).join('')
                          : '<div class="empty-history-section">–£ –≤–∞—Å –ø–æ–∫–∏ –Ω–µ–º–∞—î –∑–≤–∏—á–∞–π–Ω–æ—ó —É—á–∞—Å—Ç—ñ –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à–∞—Ö</div>'}
                    </div>
                </div>
            `;

            // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π
            document.querySelectorAll('.history-card').forEach(card => {
                card.addEventListener('click', function() {
                    const raffleId = this.getAttribute('data-raffle-id');

                    // –ó–ú–Ü–ù–ï–ù–û: –°–ø–æ—á–∞—Ç–∫—É —à—É–∫–∞—î–º–æ –≤ –º–∞—Å–∏–≤—ñ —ñ—Å—Ç–æ—Ä—ñ—ó
                    const historyItem = history.find(item => item && item.raffle_id === raffleId);

                    if (historyItem) {
                        // –î–û–î–ê–ù–û: –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –º–æ–¥—É–ª—å —ñ—Å—Ç–æ—Ä—ñ—ó, —è–∫—â–æ –¥–æ—Å—Ç—É–ø–Ω–∏–π
                        if (window.RaffleHistory && typeof window.RaffleHistory.showRaffleHistoryDetails === 'function') {
                            window.RaffleHistory.showRaffleHistoryDetails(historyItem);
                        } else {
                            showRaffleHistoryDetails(historyItem);
                        }
                    } else {
                        // –Ø–∫—â–æ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ –º–∞—Å–∏–≤—ñ, –æ—Ç—Ä–∏–º—É—î–º–æ –¥–µ—Ç–∞–ª—ñ –∑ API
                        // –ó–ú–Ü–ù–ï–ù–û: –ü—Ä–∞–≤–∏–ª—å–Ω–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è API –¥–ª—è –¥–µ—Ç–∞–ª–µ–π —ñ—Å—Ç–æ—Ä—ñ—ó
                        const userId = window.WinixAPI.getUserId();

                        if (userId) {
                            showLoading('–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–µ—Ç–∞–ª–µ–π —Ä–æ–∑—ñ–≥—Ä–∞—à—É...');

                            window.WinixAPI.apiRequest(
                                `/api/user/${userId}/raffles-history/${raffleId}`,
                                'GET',
                                null,
                                { timeout: 8000, suppressErrors: true }
                            ).then(response => {
                                hideLoading();

                                if (response && response.status === 'success' && response.data) {
                                    if (window.RaffleHistory && typeof window.RaffleHistory.showRaffleHistoryDetails === 'function') {
                                        window.RaffleHistory.showRaffleHistoryDetails(response.data);
                                    } else {
                                        showRaffleHistoryDetails(response.data);
                                    }
                                } else {
                                    showToast('–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–µ—Ç–∞–ª—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—É');
                                }
                            }).catch(error => {
                                hideLoading();
                                console.error('–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–µ—Ç–∞–ª–µ–π —Ä–æ–∑—ñ–≥—Ä–∞—à—É:', error);
                                showToast('–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–µ—Ç–∞–ª—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—É');
                            });
                        } else {
                            showToast('–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞');
                        }
                    }
                });
            });

            // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –Ω–∞ –æ—Å–Ω–æ–≤—ñ —ñ—Å—Ç–æ—Ä—ñ—ó
            updateHistoryStats();
        } catch (error) {
            console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—ñ —ñ—Å—Ç–æ—Ä—ñ—ó —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤:', error);
            hideLoading();

            // –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É
            historyContainer.innerHTML = `
                <div class="empty-history">
                    <div class="empty-history-icon">‚ùå</div>
                    <h3>–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —ñ—Å—Ç–æ—Ä—ñ—ó</h3>
                    <p>–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —ñ—Å—Ç–æ—Ä—ñ—é —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.</p>
                    <button class="join-raffle-btn" onclick="window.location.reload()">–û–Ω–æ–≤–∏—Ç–∏ —Å—Ç–æ—Ä—ñ–Ω–∫—É</button>
                </div>
            `;
        }
    }

    /**
     * –°—Ç–≤–æ—Ä–µ–Ω–Ω—è HTML –¥–ª—è –∫–∞—Ä—Ç–∫–∏ —ñ—Å—Ç–æ—Ä—ñ—ó
     */
    function createHistoryCardHTML(item) {
        if (!item) return '';

        const statusClass = item.status === 'won' ? 'won' : 'participated';
        const statusText = item.status === 'won' ? '–í–∏–≥—Ä–∞–Ω–æ' : '–£—á–∞—Å—Ç—å';

        return `
            <div class="history-card" data-raffle-id="${item.raffle_id}">
                <div class="history-date">${item.date || '–î–∞—Ç–∞ –Ω–µ –≤–∫–∞–∑–∞–Ω–∞'}</div>
                <div class="history-title">${item.title || '–†–æ–∑—ñ–≥—Ä–∞—à'}</div>
                <div class="history-prize">${item.prize || '0 WINIX'}</div>
                <div class="history-details">
                    <div class="history-entry">–í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–æ –∂–µ—Ç–æ–Ω—ñ–≤: ${item.entry_count || 0}</div>
                    <div class="history-status ${statusClass}">${statusText}</div>
                </div>
                <div class="history-result">${item.result || '–†–µ–∑—É–ª—å—Ç–∞—Ç –Ω–µ–≤—ñ–¥–æ–º–∏–π'}</div>
                <div class="view-details-hint">–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –¥–ª—è –¥–µ—Ç–∞–ª–µ–π</div>
            </div>
        `;
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç–∏ –¥–µ—Ç–∞–ª—ñ —ñ—Å—Ç–æ—Ä—ñ—ó —Ä–æ–∑—ñ–≥—Ä–∞—à—É
     */
    function showRaffleHistoryDetails(raffleData) {
        // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ RaffleHistory –º–æ–¥—É–ª—å, —è–∫—â–æ –≤—ñ–Ω –¥–æ—Å—Ç—É–ø–Ω–∏–π
        if (window.RaffleHistory && typeof window.RaffleHistory.showRaffleHistoryDetails === 'function') {
            window.RaffleHistory.showRaffleHistoryDetails(raffleData);
            return;
        }

        if (!raffleData) {
            showToast('–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–∞–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—É');
            return;
        }

        // –í–∏–¥–∞–ª—è—î–º–æ —ñ—Å–Ω—É—é—á–µ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ, —è–∫—â–æ –≤–æ–Ω–æ —î
        const existingModal = document.getElementById('raffle-history-modal');
        if (existingModal) {
            existingModal.remove();
        }

        // –°—Ç–≤–æ—Ä—é—î–º–æ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
        const modal = document.createElement('div');
        modal.id = 'raffle-history-modal';
        modal.className = 'raffle-modal';

        // –ì–µ–Ω–µ—Ä—É—î–º–æ —Å–ø–∏—Å–æ–∫ –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤, —è–∫—â–æ –≤–æ–Ω–∏ —î
        let winnersHTML = '';
        if (raffleData.winners && Array.isArray(raffleData.winners) && raffleData.winners.length > 0) {
            winnersHTML = generateWinnersListHTML(raffleData.winners);
        } else {
            winnersHTML = '<div class="no-winners">–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤ –≤—ñ–¥—Å—É—Ç–Ω—è</div>';
        }

        // –§–æ—Ä–º—É—î–º–æ HTML –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞
        modal.innerHTML = `
            <div class="modal-content">
                <div class="modal-header">
                    <h2 class="modal-title">${raffleData.title || '–î–µ—Ç–∞–ª—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—É'}</h2>
                    <span class="modal-close">√ó</span>
                </div>
                
                <div class="prize-details">
                    <div class="detail-item">
                        <div class="detail-label">–î–∞—Ç–∞:</div>
                        <div class="detail-value">${raffleData.date || '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'}</div>
                    </div>
                    <div class="detail-item">
                        <div class="detail-label">–ü—Ä–∏–∑:</div>
                        <div class="detail-value prize-value">${raffleData.prize || '0 WINIX'}</div>
                    </div>
                    <div class="detail-item">
                        <div class="detail-label">–í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–æ –∂–µ—Ç–æ–Ω—ñ–≤:</div>
                        <div class="detail-value">${raffleData.entry_count || 0}</div>
                    </div>
                    <div class="detail-item">
                        <div class="detail-label">–†–µ–∑—É–ª—å—Ç–∞—Ç:</div>
                        <div class="detail-value ${raffleData.status === 'won' ? 'win-status' : 'participated-status'}">
                            ${raffleData.result || '–†–µ–∑—É–ª—å—Ç–∞—Ç –Ω–µ–≤—ñ–¥–æ–º–∏–π'}
                        </div>
                    </div>
                </div>
                
                <div class="winners-container">
                    <h3>–ü–µ—Ä–µ–º–æ–∂—Ü—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—É</h3>
                    <div class="winners-list">
                        ${winnersHTML}
                    </div>
                </div>
                
                <button class="join-button" id="close-history-btn">–ó–ê–ö–†–ò–¢–ò</button>
            </div>
        `;

        // –î–æ–¥–∞—î–º–æ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É
        document.body.appendChild(modal);

        // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π
        const closeButton = modal.querySelector('.modal-close');
        if (closeButton) {
            closeButton.addEventListener('click', function() {
                modal.classList.remove('open');
                setTimeout(() => modal.remove(), 300);
            });
        }

        const closeActionButton = modal.querySelector('#close-history-btn');
        if (closeActionButton) {
            closeActionButton.addEventListener('click', function() {
                modal.classList.remove('open');
                setTimeout(() => modal.remove(), 300);
            });
        }

        // –ü–æ–∫–∞–∑—É—î–º–æ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
        requestAnimationFrame(() => {
            modal.classList.add('open');
        });
    }

    /**
     * –ì–µ–Ω–µ—Ä—É–≤–∞–Ω–Ω—è HTML –¥–ª—è —Å–ø–∏—Å–∫—É –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤
     */
    function generateWinnersListHTML(winners) {
        if (!winners || !Array.isArray(winners) || winners.length === 0) {
            return '<div class="no-winners">–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤ –≤—ñ–¥—Å—É—Ç–Ω—è</div>';
        }

        return winners.map(winner => {
            if (!winner) return '';

            // –í–∏–∑–Ω–∞—á–∞—î–º–æ –∫–ª–∞—Å –¥–ª—è –º—ñ—Å—Ü—è (top-1, top-2, top-3)
            const placeClass = winner.place <= 3 ? `place-${winner.place}` : 'default-place';

            // –í–∏–∑–Ω–∞—á–∞—î–º–æ, —á–∏ —Ü–µ –ø–æ—Ç–æ—á–Ω–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á
            const currentUserClass = winner.isCurrentUser ? 'current-user' : '';

            // –§–æ—Ä–º—É—î–º–æ HTML –¥–ª—è –æ–¥–Ω–æ–≥–æ –ø–µ—Ä–µ–º–æ–∂—Ü—è
            return `
                <div class="winner-item ${currentUserClass}" ${winner.isCurrentUser ? 'title="–¶–µ –≤–∏!"' : ''}>
                    <div class="winner-place ${placeClass}">
                        <span>${winner.place}</span>
                    </div>
                    <div class="winner-info">
                        <div class="winner-name">${winner.username || '–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á'}</div>
                        <div class="winner-id">ID: ${winner.userId || '–Ω–µ–≤—ñ–¥–æ–º–æ'}</div>
                    </div>
                    <div class="winner-prize">${winner.prize || '0 WINIX'}</div>
                </div>
            `;
        }).join('');
    }

    /**
     * –ó–∞–ø—É—Å–∫ —Ç–∞–π–º–µ—Ä—ñ–≤ –¥–ª—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
     */
    function startRaffleTimers() {
        // –û—á–∏—â–∞—î–º–æ —ñ—Å–Ω—É—é—á—ñ —Ç–∞–π–º–µ—Ä–∏
        if (window._raffleTimerIntervals) {
            window._raffleTimerIntervals.forEach(interval => clearInterval(interval));
            window._raffleTimerIntervals = [];
        }

        // –ó–∞–ø—É—Å–∫–∞—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–∞–π–º–µ—Ä—ñ–≤ –∫–æ–∂–Ω—É —Ö–≤–∏–ª–∏–Ω—É
        const interval = setInterval(updateRaffleTimers, 60000);
        window._raffleTimerIntervals = [interval];

        // –í—ñ–¥—Ä–∞–∑—É –∑–∞–ø—É—Å–∫–∞—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
        updateRaffleTimers();
    }

    /**
     * –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–∞–π–º–µ—Ä—ñ–≤ –¥–ª—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
     */
    function updateRaffleTimers() {
        try {
            // –û–Ω–æ–≤–ª—é—î–º–æ —Ç–∞–π–º–µ—Ä –≥–æ–ª–æ–≤–Ω–æ–≥–æ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
            const daysElement = document.querySelector('#days');
            const hoursElement = document.querySelector('#hours');
            const minutesElement = document.querySelector('#minutes');

            if (daysElement && hoursElement && minutesElement && _activeRaffles && Array.isArray(_activeRaffles) && _activeRaffles.length > 0) {
                // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –æ—Å–Ω–æ–≤–Ω–∏–π —Ä–æ–∑—ñ–≥—Ä–∞—à
                const mainRaffle = _activeRaffles.find(raffle => !raffle.is_daily);

                if (mainRaffle && mainRaffle.end_time) {
                    const now = new Date();
                    const endTime = new Date(mainRaffle.end_time);
                    const timeLeft = endTime - now;

                    if (timeLeft > 0) {
                        const days = Math.floor(timeLeft / (1000 * 60 * 60 * 24));
                        const hours = Math.floor((timeLeft % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
                        const minutes = Math.floor((timeLeft % (1000 * 60 * 60)) / (1000 * 60));

                        daysElement.textContent = padZero(days);
                        hoursElement.textContent = padZero(hours);
                        minutesElement.textContent = padZero(minutes);
                    } else {
                        daysElement.textContent = '00';
                        hoursElement.textContent = '00';
                        minutesElement.textContent = '00';

                        // –†–æ–∑—ñ–≥—Ä–∞—à –∑–∞–≤–µ—Ä—à–µ–Ω–æ, –æ–Ω–æ–≤–ª—é—î–º–æ –¥–∞–Ω—ñ
                        getActiveRaffles(true).then(() => {
                            displayActiveRaffles();
                        }).catch(err => {
                            console.error("–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –ø—ñ—Å–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è —Ç–∞–π–º–µ—Ä–∞:", err);
                        });
                    }
                }
            }

            // –û–Ω–æ–≤–ª—é—î–º–æ —Ç–∞–π–º–µ—Ä–∏ –º—ñ–Ω—ñ-—Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
            const miniRaffleTimeElements = document.querySelectorAll('.mini-raffle-time');

            if (miniRaffleTimeElements.length > 0 && _activeRaffles && Array.isArray(_activeRaffles) && _activeRaffles.length > 0) {
                // –ó–Ω–∞—Ö–æ–¥–∏–º–æ —â–æ–¥–µ–Ω–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ
                const dailyRaffles = _activeRaffles.filter(raffle => raffle && raffle.is_daily);

                if (dailyRaffles.length > 0) {
                    const miniRaffles = document.querySelectorAll('.mini-raffle');

                    miniRaffles.forEach(raffleElement => {
                        const raffleId = raffleElement.getAttribute('data-raffle-id');
                        const timeElement = raffleElement.querySelector('.mini-raffle-time');

                        if (!timeElement || raffleId === 'newbie') return;

                        const raffle = dailyRaffles.find(r => r.id === raffleId);
                        if (!raffle || !raffle.end_time) return;

                        const now = new Date();
                        const endTime = new Date(raffle.end_time);
                        const timeLeft = endTime - now;

                        if (timeLeft > 0) {
                            const hours = Math.floor((timeLeft % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
                            const minutes = Math.floor((timeLeft % (1000 * 60 * 60)) / (1000 * 60));
                            timeElement.textContent = `–ó–∞–ª–∏—à–∏–ª–æ—Å—å: ${hours} –≥–æ–¥ ${minutes} —Ö–≤`;
                        } else {
                            timeElement.textContent = '–ó–∞–≤–µ—Ä—à—É—î—Ç—å—Å—è';

                            // –†–æ–∑—ñ–≥—Ä–∞—à –∑–∞–≤–µ—Ä—à–µ–Ω–æ, –æ–Ω–æ–≤–ª—é—î–º–æ –¥–∞–Ω—ñ
                            getActiveRaffles(true).then(() => {
                                displayActiveRaffles();
                            }).catch(err => {
                                console.error("–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –ø—ñ—Å–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è —Ç–∞–π–º–µ—Ä–∞ –º—ñ–Ω—ñ-—Ä–æ–∑—ñ–≥—Ä–∞—à—É:", err);
                            });
                        }
                    });
                }
            }
        } catch (error) {
            console.error("–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–∞–π–º–µ—Ä—ñ–≤:", error);
        }
    }

    /**
     * –í—ñ–¥–∫—Ä–∏—Ç—Ç—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞ –∑ –¥–µ—Ç–∞–ª—è–º–∏ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
     */
    function openRaffleDetails(raffleId, raffleType) {
        if (!raffleId) {
            showToast('ID —Ä–æ–∑—ñ–≥—Ä–∞—à—É –Ω–µ –≤–∫–∞–∑–∞–Ω–æ');
            return;
        }

        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –∂–µ—Ç–æ–Ω—ñ–≤
        if (window.WinixAPI && typeof window.WinixAPI.getUserData === 'function') {
            window.WinixAPI.getUserData().then(userData => {
                const coinsBalance = userData.data?.coins || 0;

                if (coinsBalance < 1) {
                    showToast('–î–ª—è —É—á–∞—Å—Ç—ñ –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ –ø–æ—Ç—Ä—ñ–±–µ–Ω —â–æ–Ω–∞–π–º–µ–Ω—à–µ 1 –∂–µ—Ç–æ–Ω');
                    return;
                }

                // –ó–ú–Ü–ù–ï–ù–û: –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∫–µ—à
                if (_raffleDetailsCache[raffleId]) {
                    console.log(`üìã Raffles: –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –∫–µ—à–æ–≤–∞–Ω–∏—Ö –¥–∞–Ω–∏—Ö –¥–ª—è —Ä–æ–∑—ñ–≥—Ä–∞—à—É ${raffleId}`);
                    processRaffleDetails(_raffleDetailsCache[raffleId], raffleType);
                    return;
                }

                // –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
                getRaffleDetails(raffleId).then(raffleData => {
                    if (!raffleData) {
                        showToast('–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—É');
                        return;
                    }

                    // –û–±—Ä–æ–±–ª—è—î–º–æ –¥–µ—Ç–∞–ª—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
                    processRaffleDetails(raffleData, raffleType);
                }).catch(error => {
                    console.error('–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–µ—Ç–∞–ª–µ–π —Ä–æ–∑—ñ–≥—Ä–∞—à—É:', error);
                    showToast('–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –¥–µ—Ç–∞–ª—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—É. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.');
                });
            }).catch(error => {
                console.error('–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:', error);
                showToast('–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.');
            });
        } else {
            showToast('API –Ω–µ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ –∫–æ—Ä–µ–∫—Ç–Ω–æ. –û–Ω–æ–≤—ñ—Ç—å —Å—Ç–æ—Ä—ñ–Ω–∫—É.');
        }
    }

    /**
     * –û–±—Ä–æ–±–∫–∞ –¥–µ—Ç–∞–ª–µ–π —Ä–æ–∑—ñ–≥—Ä–∞—à—É
     */
    function processRaffleDetails(raffleData, raffleType) {
        if (!raffleData) {
            showToast('–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—É');
            return;
        }

        // –í—ñ–¥–∫—Ä–∏–≤–∞—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–µ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
        const modalId = raffleType === 'daily' ? 'daily-raffle-modal' : 'main-raffle-modal';
        const modal = document.getElementById(modalId);

        if (!modal) {
            console.error(`–ú–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ –∑ id ${modalId} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ`);
            showToast('–ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –¥–µ—Ç–∞–ª–µ–π —Ä–æ–∑—ñ–≥—Ä–∞—à—É');
            return;
        }

        // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –∑–Ω–∞—á–µ–Ω–Ω—è –ø–æ–ª—ñ–≤ —É –º–æ–¥–∞–ª—å–Ω–æ–º—É –≤—ñ–∫–Ω—ñ
        const inputId = raffleType === 'daily' ? 'daily-token-amount' : 'main-token-amount';
        const input = document.getElementById(inputId);
        if (input) {
            input.value = '1';

            // –û—Ç—Ä–∏–º—É—î–º–æ –±–∞–ª–∞–Ω—Å –∂–µ—Ç–æ–Ω—ñ–≤
            const userData = window.WinixAPI.getUserData().then(userData => {
                const coinsBalance = userData.data?.coins || 0;

                // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è —Ä—ñ–≤–Ω–µ –±–∞–ª–∞–Ω—Å—É –∂–µ—Ç–æ–Ω—ñ–≤
                const tokenCost = raffleType === 'daily' ? 1 : 3;
                const maxTickets = Math.floor(coinsBalance / tokenCost);
                input.max = maxTickets;

                // –ü–æ–∫–∞–∑—É—î–º–æ –∫–Ω–æ–ø–∫—É "–í–°–Ü", —è–∫—â–æ –±–∞–ª–∞–Ω—Å –±—ñ–ª—å—à–µ 1
                const allButtonId = raffleType === 'daily' ? 'daily-all-tokens-btn' : 'main-all-tokens-btn';
                const allButton = document.getElementById(allButtonId);

                if (allButton) {
                    if (coinsBalance > tokenCost) {
                        allButton.style.display = 'block';

                        // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–í–°–Ü"
                        allButton.onclick = function() {
                            input.value = maxTickets;
                        };
                    } else {
                        allButton.style.display = 'none';
                    }
                }
            }).catch(error => {
                console.error("–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É:", error);
                // –ó–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º, –≤—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –º–∞–∫—Å–∏–º—É–º 10
                input.max = 10;
            });
        }

        const btnId = raffleType === 'daily' ? 'daily-join-btn' : 'main-join-btn';
        const joinBtn = document.getElementById(btnId);

        if (joinBtn) {
            joinBtn.setAttribute('data-raffle-id', raffleData.id);
            joinBtn.setAttribute('data-raffle-type', raffleType);

            // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è
            joinBtn.onclick = function() {
                const raffleId = this.getAttribute('data-raffle-id');
                const raffleType = this.getAttribute('data-raffle-type');
                const inputId = raffleType === 'daily' ? 'daily-token-amount' : 'main-token-amount';

                participateInRaffleUI(raffleId, raffleType, inputId);
            };
        }

        // –û–Ω–æ–≤–ª—é—î–º–æ –¥–∞–Ω—ñ –≤ –º–æ–¥–∞–ª—å–Ω–æ–º—É –≤—ñ–∫–Ω—ñ
        if (raffleType === 'daily') {
            const titleElement = document.getElementById('daily-modal-title');
            if (titleElement) titleElement.textContent = raffleData.title || '–©–æ–¥–µ–Ω–Ω–∏–π —Ä–æ–∑—ñ–≥—Ä–∞—à';

            const prizeElement = document.getElementById('daily-prize-value');
            if (prizeElement) prizeElement.textContent = `${raffleData.prize_amount} ${raffleData.prize_currency} (${raffleData.winners_count} –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤)`;

            const participantsElement = document.getElementById('daily-participants');
            if (participantsElement) participantsElement.textContent = raffleData.participants_count || '0';

            const endDateElement = document.getElementById('daily-end-time');
            if (endDateElement) endDateElement.textContent = formatDate(raffleData.end_time);

            const descriptionElement = document.getElementById('daily-description');
            if (descriptionElement) descriptionElement.textContent = raffleData.description || '–©–æ–¥–µ–Ω–Ω–∏–π —Ä–æ–∑—ñ–≥—Ä–∞—à –∑ –ø—Ä–∏–∑–∞–º–∏ –¥–ª—è –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤! –í–∏–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ –∂–µ—Ç–æ–Ω–∏ –¥–ª—è —É—á–∞—Å—Ç—ñ.';

            // –û–Ω–æ–≤–ª—é—î–º–æ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è, —è–∫—â–æ –≤–æ–Ω–æ —î
            const imageElement = document.getElementById('daily-prize-image');
            if (imageElement && raffleData.image_url) {
                imageElement.src = raffleData.image_url;
            }
        } else {
            const titleElement = document.getElementById('main-modal-title');
            if (titleElement) titleElement.textContent = raffleData.title || '–ì—Ä–∞–Ω–¥ –†–æ–∑—ñ–≥—Ä–∞—à';

            const prizeElement = document.getElementById('main-prize-value');
            if (prizeElement) prizeElement.textContent = `${raffleData.prize_amount} ${raffleData.prize_currency} (${raffleData.winners_count} –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤)`;

            const participantsElement = document.getElementById('main-participants');
            if (participantsElement) participantsElement.textContent = raffleData.participants_count || '0';

            const endDateElement = document.getElementById('main-end-time');
            if (endDateElement) endDateElement.textContent = formatDate(raffleData.end_time);

            const descriptionElement = document.getElementById('main-description');
            if (descriptionElement) descriptionElement.textContent = raffleData.description || '–ì—Ä–∞–Ω–¥—ñ–æ–∑–Ω–∏–π —Ä–æ–∑—ñ–≥—Ä–∞—à –∑ —á—É–¥–æ–≤–∏–º–∏ –ø—Ä–∏–∑–∞–º–∏! –í–∏–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ –∂–µ—Ç–æ–Ω–∏ –¥–ª—è —É—á–∞—Å—Ç—ñ —Ç–∞ –∑–±—ñ–ª—å—à—ñ—Ç—å —Å–≤–æ—ó —à–∞–Ω—Å–∏ –Ω–∞ –ø–µ—Ä–µ–º–æ–≥—É.';

            // –û–Ω–æ–≤–ª—é—î–º–æ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è, —è–∫—â–æ –≤–æ–Ω–æ —î
            const imageElement = document.getElementById('main-prize-image');
            if (imageElement && raffleData.image_url) {
                imageElement.src = raffleData.image_url;
            }
        }

        // –í—ñ–¥–∫—Ä–∏–≤–∞—î–º–æ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
        modal.classList.add('open');

        // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –∑–∞–∫—Ä–∏—Ç—Ç—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞
        const closeButtons = modal.querySelectorAll('.modal-close, .cancel-btn');
        closeButtons.forEach(btn => {
            btn.addEventListener('click', function() {
                modal.classList.remove('open');
            });
        });
    }

    /**
     * –§—É–Ω–∫—Ü—ñ—è –æ–±—Ä–æ–±–∫–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –Ω–∞ –∫–Ω–æ–ø–∫—É —É—á–∞—Å—Ç—ñ –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ
     */
    async function participateInRaffleUI(raffleId, raffleType, inputId) {
        if (!raffleId) {
            showToast('ID —Ä–æ–∑—ñ–≥—Ä–∞—à—É –Ω–µ –≤–∫–∞–∑–∞–Ω–æ');
            return;
        }

        // –û—Ç—Ä–∏–º—É—î–º–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∂–µ—Ç–æ–Ω—ñ–≤
        const input = document.getElementById(inputId);
        const entryCount = parseInt(input?.value || '1') || 1;

        // –û—Ç—Ä–∏–º—É—î–º–æ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
        const modalId = raffleType === 'daily' ? 'daily-raffle-modal' : 'main-raffle-modal';
        const modal = document.getElementById(modalId);

        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∫–æ—Ä–µ–∫—Ç–Ω—ñ—Å—Ç—å –≤–≤–µ–¥–µ–Ω–Ω—è
        if (entryCount <= 0) {
            showToast('–ö—ñ–ª—å–∫—ñ—Å—Ç—å –∂–µ—Ç–æ–Ω—ñ–≤ –º–∞—î –±—É—Ç–∏ –±—ñ–ª—å—à–µ –Ω—É–ª—è');
            return;
        }

        try {
            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –¥–æ—Å—Ç–∞—Ç–Ω—å–æ –∂–µ—Ç–æ–Ω—ñ–≤
            const userData = await window.WinixAPI.getUserData();
            const coinsBalance = userData.data?.coins || 0;
            const tokenCost = raffleType === 'daily' ? 1 : 3;
            const totalCost = entryCount * tokenCost;

            if (coinsBalance < totalCost) {
                showToast(`–ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –∂–µ—Ç–æ–Ω—ñ–≤. –ü–æ—Ç—Ä—ñ–±–Ω–æ ${totalCost}, —É –≤–∞—Å ${coinsBalance}`);
                return;
            }

            // –ë–µ—Ä–µ–º–æ —É—á–∞—Å—Ç—å —É —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ
            const result = await participateInRaffle(raffleId, entryCount);

            if (result.status === 'success') {
                // –ó–∞–∫—Ä–∏–≤–∞—î–º–æ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
                if (modal) modal.classList.remove('open');

                // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
                await displayActiveRaffles();

                // –û–Ω–æ–≤–ª—é—î–º–æ –±–∞–ª–∞–Ω—Å
                await updateUserBalance();

                // –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ —É—Å–ø—ñ—Ö
                showToast(result.message);

                // –Ø–∫—â–æ —î –±–æ–Ω—É—Å, –ø–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –Ω—å–æ–≥–æ
                if (result.data && result.data.bonus_amount) {
                    setTimeout(() => {
                        showToast(`–í—ñ—Ç–∞—î–º–æ! –í–∏ –æ—Ç—Ä–∏–º–∞–ª–∏ ${result.data.bonus_amount} WINIX —è–∫ –±–æ–Ω—É—Å!`);
                    }, 3000);
                }
            } else {
                // –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É
                showToast(result.message);
            }
        } catch (error) {
            console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —É—á–∞—Å—Ç—ñ –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ:', error);
            showToast('–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —É—á–∞—Å—Ç—ñ –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.');
        }
    }

    /**
     * –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
     */
    function updateStatistics() {
        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        const statsGrid = document.querySelector('.stats-grid');
        if (!statsGrid) return;

        // –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        if (window.WinixAPI && typeof window.WinixAPI.getUserData === 'function') {
            window.WinixAPI.getUserData().then(userData => {
                if (!userData || !userData.data) return;

                // –û–Ω–æ–≤–ª—é—î–º–æ –∑–∞–≥–∞–ª—å–Ω—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —É—á–∞—Å—Ç—ñ
                const userStats = userData.data;

                // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –µ–ª–µ–º–µ–Ω—Ç–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
                const participationsElement = document.getElementById('total-participated');
                const winsElement = document.getElementById('total-wins');
                const winixWonElement = document.getElementById('total-winix-won');
                const tokensSpentElement = document.getElementById('total-tokens-spent');

                if (participationsElement) {
                    participationsElement.textContent = userStats.participations_count || 0;
                }

                if (winsElement) {
                    winsElement.textContent = userStats.wins_count || 0;
                }

                if (winixWonElement) {
                    // –¢—É—Ç –ø–æ—Ç—Ä—ñ–±–Ω–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–∞–Ω—ñ –ø—Ä–æ –≤–∏–≥—Ä–∞–Ω—ñ WINIX –∑ —ñ—Å—Ç–æ—Ä—ñ—ó
                    getRafflesHistory().then(history => {
                        // –†–∞—Ö—É—î–º–æ —Å—É–º—É –≤—Å—ñ—Ö –≤–∏–≥—Ä–∞—à—ñ–≤
                        let totalWinix = 0;

                        if (history && Array.isArray(history) && history.length > 0) {
                            const wonRaffles = history.filter(item => item && item.status === 'won');

                            wonRaffles.forEach(raffle => {
                                if (!raffle || !raffle.prize) return;

                                // –í–∏—Ç—è–≥—É—î–º–æ —á–∏—Å–ª–æ–≤—É —Å—É–º—É –∑ —Ä—è–¥–∫–∞ –ø—Ä–∏–∑—É
                                const match = raffle.prize.match(/\d+(\.\d+)?/);
                                if (match) {
                                    totalWinix += parseFloat(match[0]);
                                }
                            });
                        }

                        winixWonElement.textContent = totalWinix.toLocaleString('uk-UA');
                    }).catch(error => {
                        console.error('–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —ñ—Å—Ç–æ—Ä—ñ—ó –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error);
                    });
                }

                if (tokensSpentElement) {
                    tokensSpentElement.textContent = userStats.tokens_spent || 0;
                }
            }).catch(error => {
                console.error('–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error);
            });
        }
    }

    /**
     * –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —É—á–∞—Å—Ç—ñ
     */
    function updateParticipationStats() {
        // –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ –ø—Ä–æ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        getUserRaffles().then(userRaffles => {
            if (!userRaffles || !Array.isArray(userRaffles) || userRaffles.length === 0) return;

            // –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            if (window.WinixAPI && typeof window.WinixAPI.getUserData === 'function') {
                window.WinixAPI.getUserData().then(userData => {
                    if (!userData || !userData.data) return;

                    // –û–Ω–æ–≤–ª—é—î–º–æ –ª—ñ—á–∏–ª—å–Ω–∏–∫ —É—á–∞—Å—Ç—ñ
                    const participations = userRaffles.length;
                    const userStats = userData.data;

                    // –Ø–∫—â–æ –≤–æ–Ω–∏ –≤—ñ–¥—Ä—ñ–∑–Ω—è—é—Ç—å—Å—è, –æ–Ω–æ–≤–ª—é—î–º–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ
                    if (participations !== userStats.participations_count) {
                        try {
                            window.WinixAPI.apiRequest(`/api/user/${userData.data.telegram_id}/statistics`, 'POST', {
                                participations_count: participations
                            }, {
                                suppressErrors: true
                            });
                        } catch (error) {
                            console.error('–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —É—á–∞—Å—Ç—ñ:', error);
                        }
                    }

                    // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è
                    updateStatistics();
                }).catch(error => {
                    console.error('–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —É—á–∞—Å—Ç—ñ:', error);
                });
            }
        }).catch(error => {
            console.error('–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error);
        });
    }

    /**
     * –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –Ω–∞ –æ—Å–Ω–æ–≤—ñ —ñ—Å—Ç–æ—Ä—ñ—ó
     */
    function updateHistoryStats() {
        // –û—Ç—Ä–∏–º—É—î–º–æ —ñ—Å—Ç–æ—Ä—ñ—é —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
        getRafflesHistory().then(history => {
            if (!history || !Array.isArray(history) || history.length === 0) return;

            // –ü—ñ–¥—Ä–∞—Ö–æ–≤—É—î–º–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–µ—Ä–µ–º–æ–≥
            const wins = history.filter(item => item && item.status === 'won').length;

            // –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            if (window.WinixAPI && typeof window.WinixAPI.getUserData === 'function') {
                window.WinixAPI.getUserData().then(userData => {
                    if (!userData || !userData.data) return;

                    const userStats = userData.data;

                    // –Ø–∫—â–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–µ—Ä–µ–º–æ–≥ –≤—ñ–¥—Ä—ñ–∑–Ω—è—î—Ç—å—Å—è, –æ–Ω–æ–≤–ª—é—î–º–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ
                    if (wins !== userStats.wins_count) {
                        try {
                            window.WinixAPI.apiRequest(`/api/user/${userData.data.telegram_id}/statistics`, 'POST', {
                                wins_count: wins
                            }, {
                                suppressErrors: true
                            });
                        } catch (error) {
                            console.error('–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–µ—Ä–µ–º–æ–≥:', error);
                        }
                    }

                    // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è
                    updateStatistics();
                }).catch(error => {
                    console.error('–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —ñ—Å—Ç–æ—Ä—ñ—ó:', error);
                });
            }
        }).catch(error => {
            console.error('–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —ñ—Å—Ç–æ—Ä—ñ—ó –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–µ—Ä–µ–º–æ–≥:', error);
        });
    }

    /**
     * –û–Ω–æ–≤–ª–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
     */
    async function updateUserBalance() {
        try {
            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –≥–ª–æ–±–∞–ª—å–Ω–æ—ó —Ñ—É–Ω–∫—Ü—ñ—ó
            if (window.WinixAPI && window.WinixAPI.getBalance) {
                await window.WinixAPI.getBalance();
            } else {
                // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∏–π –º–µ—Ç–æ–¥ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
                await window.WinixAPI.getUserData(true);

                // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É
                const userData = await window.WinixAPI.getUserData();

                if (userData && userData.data) {
                    // –û–Ω–æ–≤–ª—é—î–º–æ –µ–ª–µ–º–µ–Ω—Ç–∏ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É
                    const coinsElement = document.getElementById('user-coins');
                    const tokensElement = document.getElementById('user-tokens');

                    if (coinsElement) {
                        coinsElement.textContent = userData.data.coins || 0;
                    }

                    if (tokensElement) {
                        tokensElement.textContent = userData.data.balance || 0;
                    }
                }
            }

            // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            updateStatistics();

            return true;
        } catch (error) {
            console.error('–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É:', error);
            return false;
        }
    }

    /**
     * –ü–æ–¥—ñ–ª–∏—Ç–∏—Å—è —Ä–æ–∑—ñ–≥—Ä–∞—à–µ–º
     */
    function shareRaffle(raffleId) {
        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å Telegram WebApp
        if (window.Telegram && window.Telegram.WebApp) {
            // –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
            getRaffleDetails(raffleId).then(raffleData => {
                if (!raffleData) {
                    showToast('–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–∞–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—É');
                    return;
                }

                // –§–æ—Ä–º—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–ª—è –ø–æ—à–∏—Ä–µ–Ω–Ω—è
                const shareText = `üéÆ –†–æ–∑—ñ–≥—Ä–∞—à WINIX: ${raffleData.title}\n\n` +
                                 `üí∞ –ü—Ä–∏–∑–æ–≤–∏–π —Ñ–æ–Ω–¥: ${raffleData.prize_amount} ${raffleData.prize_currency}\n` +
                                 `üèÜ –ö—ñ–ª—å–∫—ñ—Å—Ç—å –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤: ${raffleData.winners_count}\n\n` +
                                 `–ë–µ—Ä–∏ —É—á–∞—Å—Ç—å —ñ –≤–∏–≥—Ä–∞–≤–∞–π –ø—Ä–∏–∑–∏! üöÄ`;

                // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –º–µ—Ç–æ–¥ Telegram –¥–ª—è –ø–æ—à–∏—Ä–µ–Ω–Ω—è
                if (window.Telegram.WebApp.switchInlineQuery) {
                    window.Telegram.WebApp.switchInlineQuery(shareText, ['users', 'groups']);
                    return;
                }

                if (navigator.share) {
                    navigator.share({
                        title: `–†–æ–∑—ñ–≥—Ä–∞—à WINIX: ${raffleData.title}`,
                        text: shareText
                    })
                    .then(() => {
                        showToast('–†–æ–∑—ñ–≥—Ä–∞—à —É—Å–ø—ñ—à–Ω–æ –ø–æ—à–∏—Ä–µ–Ω–æ');
                    })
                    .catch(error => {
                        console.error('–ü–æ–º–∏–ª–∫–∞ –ø–æ—à–∏—Ä–µ–Ω–Ω—è:', error);
                        showToast('–ù–µ –≤–¥–∞–ª–æ—Å—è –ø–æ—à–∏—Ä–∏—Ç–∏ —Ä–æ–∑—ñ–≥—Ä–∞—à');
                    });
                } else {
                    // –ö–æ–ø—ñ—é—î–º–æ –≤ –±—É—Ñ–µ—Ä –æ–±–º—ñ–Ω—É
                    navigator.clipboard.writeText(shareText)
                        .then(() => {
                            showToast('–¢–µ–∫—Å—Ç —Ä–æ–∑—ñ–≥—Ä–∞—à—É —Å–∫–æ–ø—ñ–π–æ–≤–∞–Ω–æ –≤ –±—É—Ñ–µ—Ä –æ–±–º—ñ–Ω—É');
                        })
                        .catch(error => {
                            console.error('–ü–æ–º–∏–ª–∫–∞ –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è:', error);
                            showToast('–ù–µ –≤–¥–∞–ª–æ—Å—è —Å–∫–æ–ø—ñ—é–≤–∞—Ç–∏ —Ç–µ–∫—Å—Ç —Ä–æ–∑—ñ–≥—Ä–∞—à—É');
                        });
                }
            }).catch(error => {
                console.error('–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—É –¥–ª—è –ø–æ—à–∏—Ä–µ–Ω–Ω—è:', error);
                showToast('–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–∞–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—É –¥–ª—è –ø–æ—à–∏—Ä–µ–Ω–Ω—è');
            });
        } else {
            showToast('–¶—è —Ñ—É–Ω–∫—Ü—ñ—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç—ñ–ª—å–∫–∏ –≤ Telegram');
        }
    }

    // ======== –î–û–ü–û–ú–Ü–ñ–ù–Ü –§–£–ù–ö–¶–Ü–á ========

    /**
     * –§–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è –¥–∞—Ç–∏
     */
    function formatDate(timestamp) {
        if (!timestamp) return '';

        try {
            const date = new Date(timestamp);
            if (isNaN(date.getTime())) {
                return '';
            }
            return dateTimeFormat.format(date);
        } catch (error) {
            console.error('–ü–æ–º–∏–ª–∫–∞ —Ñ–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è –¥–∞—Ç–∏:', error);
            return '';
        }
    }

    /**
     * –î–æ–¥–∞–≤–∞–Ω–Ω—è –≤–µ–¥—É—á–æ–≥–æ –Ω—É–ª—è –¥–æ —á–∏—Å–ª–∞
     */
    function padZero(num) {
        return num.toString().padStart(2, '0');
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç–∏ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
     */
    function showLoading(message = '–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...') {
        // –°–ø–æ—á–∞—Ç–∫—É –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —î –≥–ª–æ–±–∞–ª—å–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è
        if (window.showLoading && typeof window.showLoading === 'function') {
            try {
                return window.showLoading(message);
            } catch (e) {
                console.warn("–ü–æ–º–∏–ª–∫–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ showLoading:", e);
            }
        }

        // –ó–∞–ø–∞—Å–Ω–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç, —è–∫—â–æ –≥–ª–æ–±–∞–ª—å–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –Ω–µ –ø—Ä–∞—Ü—é—î
        const spinner = document.getElementById('loading-spinner');
        if (spinner) spinner.classList.add('show');
    }

    /**
     * –ü—Ä–∏—Ö–æ–≤–∞—Ç–∏ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
     */
    function hideLoading() {
        // –°–ø–æ—á–∞—Ç–∫—É –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —î –≥–ª–æ–±–∞–ª—å–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è
        if (window.hideLoading && typeof window.hideLoading === 'function') {
            try {
                return window.hideLoading();
            } catch (e) {
                console.warn("–ü–æ–º–∏–ª–∫–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ hideLoading:", e);
            }
        }

        // –ó–∞–ø–∞—Å–Ω–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç, —è–∫—â–æ –≥–ª–æ–±–∞–ª—å–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –Ω–µ –ø—Ä–∞—Ü—é—î
        const spinner = document.getElementById('loading-spinner');
        if (spinner) spinner.classList.remove('show');
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è toast
     */
    function showToast(message, duration = 3000) {
        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –≥–ª–æ–±–∞–ª—å–Ω–æ—ó —Ñ—É–Ω–∫—Ü—ñ—ó
        if (window.showToast && typeof window.showToast === 'function') {
            try {
                return window.showToast(message, duration);
            } catch (e) {
                console.warn("–ü–æ–º–∏–ª–∫–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ showToast:", e);
            }
        }

        // –ó–∞–ø–∞—Å–Ω–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç, —è–∫—â–æ –≥–ª–æ–±–∞–ª—å–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –≤—ñ–¥—Å—É—Ç–Ω—è
        const toast = document.getElementById('toast-message');
        if (!toast) {
            // –°—Ç–≤–æ—Ä—é—î–º–æ –µ–ª–µ–º–µ–Ω—Ç toast
            const newToast = document.createElement('div');
            newToast.id = 'toast-message';
            newToast.className = 'toast-message';
            document.body.appendChild(newToast);

            // –î–æ–¥–∞—î–º–æ —Å—Ç–∏–ª—ñ, —è–∫—â–æ —ó—Ö –Ω–µ–º–∞—î
            if (!document.getElementById('toast-styles')) {
                const style = document.createElement('style');
                style.id = 'toast-styles';
                style.textContent = `
                    .toast-message {
                        position: fixed;
                        bottom: 20px;
                        left: 50%;
                        transform: translateX(-50%) translateY(100px);
                        background: rgba(0, 0, 0, 0.7);
                        color: white;
                        padding: 12px 24px;
                        border-radius: 8px;
                        z-index: 10000;
                        opacity: 0;
                        transition: transform 0.3s, opacity 0.3s;
                        font-size: 16px;
                        max-width: 90%;
                        text-align: center;
                    }
                    .toast-message.show {
                        opacity: 1;
                        transform: translateX(-50%) translateY(0);
                    }
                `;
                document.head.appendChild(style);
            }

            setTimeout(() => showToast(message, duration), 100);
            return;
        }

        toast.textContent = message;
        toast.classList.add('show');

        setTimeout(() => {
            toast.classList.remove('show');
        }, duration);
    }

    /**
     * –î–æ–¥–∞–≤–∞–Ω–Ω—è –≤–æ–¥—è–Ω–æ–≥–æ –∑–Ω–∞–∫—É –¥–æ –±–ª–æ–∫—É –∑ –±–æ–Ω—É—Å–æ–º –Ω–æ–≤–∞—á–∫–∞
     */
    function markNewbieBonus(container) {
        if (!container) return;

        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –≤–∂–µ —î –≤–æ–¥—è–Ω–∏–π –∑–Ω–∞–∫
        if (container.querySelector('.watermark')) {
            return;
        }

        // –°—Ç–≤–æ—Ä—é—î–º–æ –≤–æ–¥—è–Ω–∏–π –∑–Ω–∞–∫
        const watermark = document.createElement('div');
        watermark.className = 'watermark';
        watermark.style.position = 'absolute';
        watermark.style.top = '0';
        watermark.style.left = '0';
        watermark.style.width = '100%';
        watermark.style.height = '100%';
        watermark.style.display = 'flex';
        watermark.style.justifyContent = 'center';
        watermark.style.alignItems = 'center';
        watermark.style.pointerEvents = 'none';

        // –°—Ç–≤–æ—Ä—é—î–º–æ –∑–∞—Ç–µ–º–Ω–µ–Ω–Ω—è
        const overlay = document.createElement('div');
        overlay.style.position = 'absolute';
        overlay.style.top = '0';
        overlay.style.left = '0';
        overlay.style.width = '100%';
        overlay.style.height = '100%';
        overlay.style.backgroundColor = 'rgba(0, 0, 0, 0.3)';

        // –°—Ç–≤–æ—Ä—é—î–º–æ —Ç–µ–∫—Å—Ç
        const text = document.createElement('div');
        text.textContent = '–û–¢–†–ò–ú–ê–ù–û';
        text.style.position = 'absolute';
        text.style.transform = 'rotate(-30deg)';
        text.style.fontSize = '24px';
        text.style.fontWeight = 'bold';
        text.style.color = 'white';
        text.style.textShadow = '0 0 5px rgba(0, 0, 0, 0.7)';

        // –î–æ–¥–∞—î–º–æ –µ–ª–µ–º–µ–Ω—Ç–∏
        watermark.appendChild(overlay);
        watermark.appendChild(text);

        // –Ø–∫—â–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –º–∞—î position: relative, –¥–æ–¥–∞—î–º–æ –π–æ–≥–æ
        if (getComputedStyle(container).position === 'static') {
            container.style.position = 'relative';
        }

        container.appendChild(watermark);
    }

    /**
     * –§—É–Ω–∫—Ü—ñ—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–Ω—è –≤–∫–ª–∞–¥–æ–∫
     */
    function switchTab(tabName) {
        console.log(`üéÆ Raffles: –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–Ω—è –Ω–∞ –≤–∫–ª–∞–¥–∫—É ${tabName}`);

        // –û–Ω–æ–≤–ª—é—î–º–æ –∞–∫—Ç–∏–≤–Ω—É –≤–∫–ª–∞–¥–∫—É
        const tabButtons = document.querySelectorAll('.tab-button');
        const tabSections = document.querySelectorAll('.tab-content');

        // –ó–Ω—ñ–º–∞—î–º–æ –∞–∫—Ç–∏–≤–Ω–∏–π —Å—Ç–∞–Ω –∑ —É—Å—ñ—Ö –≤–∫–ª–∞–¥–æ–∫ —ñ —Å–µ–∫—Ü—ñ–π
        tabButtons.forEach(btn => btn.classList.remove('active'));
        tabSections.forEach(section => section.classList.remove('active'));

        // –î–æ–¥–∞—î–º–æ –∞–∫—Ç–∏–≤–Ω–∏–π —Å—Ç–∞–Ω –¥–æ –≤–∏–±—Ä–∞–Ω–æ—ó –≤–∫–ª–∞–¥–∫–∏ —ñ —Å–µ–∫—Ü—ñ—ó
        const activeTabButton = document.querySelector(`.tab-button[data-tab="${tabName}"]`);
        const activeTabSection = document.getElementById(`${tabName}-raffles`);

        if (activeTabButton) activeTabButton.classList.add('active');
        if (activeTabSection) activeTabSection.classList.add('active');

        // –Ø–∫—â–æ —Ü–µ –≤–∫–ª–∞–¥–∫–∞ –∑ —ñ—Å—Ç–æ—Ä—ñ—î—é, –æ–Ω–æ–≤–ª—é—î–º–æ —ó—ó
        if (tabName === 'past' || tabName === 'history') {
            if (window.RaffleHistory && typeof window.RaffleHistory.displayHistory === 'function') {
                window.RaffleHistory.displayHistory('history-container');
            } else {
                displayRafflesHistory();
            }
        } else if (tabName === 'active') {
            // –û–Ω–æ–≤–ª—é—î–º–æ –∞–∫—Ç–∏–≤–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ
            displayActiveRaffles();
        }
    }

    /**
     * –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∫–Ω–æ–ø–æ–∫ —É—á–∞—Å—Ç—ñ —É —Ä–æ–∑—ñ–≥—Ä–∞—à–∞—Ö
     */
    function setupRaffleButtons() {
        // –ù–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ –∫–Ω–æ–ø–∫–∏ —É—á–∞—Å—Ç—ñ –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
        const mainJoinBtn = document.getElementById('main-join-btn');
        if (mainJoinBtn) {
            mainJoinBtn.addEventListener('click', function() {
                const raffleId = this.getAttribute('data-raffle-id');
                const raffleType = this.getAttribute('data-raffle-type');
                const inputId = 'main-token-amount';

                participateInRaffleUI(raffleId, raffleType, inputId);
            });
        }

        // –ù–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ –∫–Ω–æ–ø–∫–∏ —É—á–∞—Å—Ç—ñ –¥–ª—è —â–æ–¥–µ–Ω–Ω–æ–≥–æ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
        const dailyJoinBtn = document.getElementById('daily-join-btn');
        if (dailyJoinBtn) {
            dailyJoinBtn.addEventListener('click', function() {
                const raffleId = this.getAttribute('data-raffle-id');
                const raffleType = this.getAttribute('data-raffle-type');
                const inputId = 'daily-token-amount';

                participateInRaffleUI(raffleId, raffleType, inputId);
            });
        }

        // –ù–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ –∫–Ω–æ–ø–∫–∏ "–í—Å—ñ" –¥–ª—è –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ—ó –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –∂–µ—Ç–æ–Ω—ñ–≤
        const mainAllBtn = document.getElementById('main-all-tokens-btn');
        if (mainAllBtn) {
            mainAllBtn.addEventListener('click', function() {
                const input = document.getElementById('main-token-amount');
                if (input) {
                    input.value = input.max || 1;
                }
            });
        }

        const dailyAllBtn = document.getElementById('daily-all-tokens-btn');
        if (dailyAllBtn) {
            dailyAllBtn.addEventListener('click', function() {
                const input = document.getElementById('daily-token-amount');
                if (input) {
                    input.value = input.max || 1;
                }
            });
        }
    }

    /**
     * –û—á–∏—â–µ–Ω–Ω—è –≤—Å—ñ—Ö —Å—Ç–∞–Ω—ñ–≤ –º–æ–¥—É–ª—è
     */
    function resetAllStates() {
        // –°–∫–∏–¥–∞—î–º–æ –≤—Å—ñ –ø—Ä–∞–ø–æ—Ä—Ü—ñ
        _isParticipating = false;
        _isLoadingRaffles = false;

        // –û—á–∏—â–∞—î–º–æ —Ç–∞–π–º–∞—É—Ç–∏
        if (_participationTimeoutId) {
            clearTimeout(_participationTimeoutId);
            _participationTimeoutId = null;
        }

        if (_loadingTimeoutId) {
            clearTimeout(_loadingTimeoutId);
            _loadingTimeoutId = null;
        }

        // –û—á–∏—â–∞—î–º–æ –∫–µ—à—ñ
        _raffleDetailsCache = {};

        // –ü—Ä–∏—Ö–æ–≤—É—î–º–æ –ª–æ–∞–¥–µ—Ä–∏
        hideLoading();

        // –û—á–∏—â–∞—î–º–æ –∞–∫—Ç–∏–≤–Ω—ñ –∑–∞–ø–∏—Ç–∏ —á–µ—Ä–µ–∑ API
        if (window.WinixAPI && typeof window.WinixAPI.forceCleanupRequests === 'function') {
            window.WinixAPI.forceCleanupRequests();
        }

        // –°–∫–∏–¥–∞—î–º–æ —Å—Ç–∞–Ω –º–æ–¥—É–ª—è —ñ—Å—Ç–æ—Ä—ñ—ó, —è–∫—â–æ –≤—ñ–Ω –¥–æ—Å—Ç—É–ø–Ω–∏–π
        if (window.RaffleHistory && typeof window.RaffleHistory.resetRequestState === 'function') {
            window.RaffleHistory.resetRequestState();
        }

        console.log("üîÑ Raffles: –ü—Ä–∏–º—É—Å–æ–≤–µ —Å–∫–∏–¥–∞–Ω–Ω—è –≤—Å—ñ—Ö —Å—Ç–∞–Ω—ñ–≤");
        return true;
    }

    // ======== –Ü–ù–Ü–¶–Ü–ê–õ–Ü–ó–ê–¶–Ü–Ø ========

    /**
     * –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –º–æ–¥—É–ª—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
     */
    function init() {
        console.log("üéÆ Raffles: –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è...");

        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –≥–æ—Ç–æ–≤–Ω—ñ—Å—Ç—å DOM
        if (document.readyState !== 'complete' && document.readyState !== 'interactive') {
            console.log("DOM —â–µ –Ω–µ –≥–æ—Ç–æ–≤–∏–π, –≤—ñ–¥–∫–ª–∞–¥–∞—î–º–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—é");
            document.addEventListener('DOMContentLoaded', init);
            return;
        }

        try {
            // –í–ê–ñ–õ–ò–í–û: –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –Ω–µ–æ–±—Ö—ñ–¥–Ω–∏—Ö —Ñ—É–Ω–∫—Ü—ñ–π API
            if (!window.WinixAPI || typeof window.WinixAPI.apiRequest !== 'function') {
                console.error("API –º–æ–¥—É–ª—å –Ω–µ –≥–æ—Ç–æ–≤–∏–π, —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—é –≤—ñ–¥–∫–ª–∞–¥–µ–Ω–æ");
                setTimeout(init, 500); // –°–ø—Ä–æ–±—É—î–º–æ –ø—ñ–∑–Ω—ñ—à–µ
                return;
            }

            // –û–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π –¥–ª—è –ø–µ—Ä–µ–º–∏–∫–∞–Ω–Ω—è –≤–∫–ª–∞–¥–æ–∫
            const tabButtons = document.querySelectorAll('.tab-button');
            if (tabButtons.length > 0) {
                console.log(`–ó–Ω–∞–π–¥–µ–Ω–æ ${tabButtons.length} –∫–Ω–æ–ø–æ–∫ –≤–∫–ª–∞–¥–æ–∫`);
                tabButtons.forEach(button => {
                    button.addEventListener('click', function() {
                        const tabName = this.getAttribute('data-tab');
                        switchTab(tabName);
                    });
                });
            } else {
                console.warn("‚ö†Ô∏è –ö–Ω–æ–ø–∫–∏ –≤–∫–ª–∞–¥–æ–∫ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ");
            }

            // –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
            getActiveRaffles().then(() => {
                // –í—ñ–¥–æ–±—Ä–∞–∂–∞—î–º–æ –∞–∫—Ç–∏–≤–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ
                displayActiveRaffles();
            }).catch(error => {
                console.error("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤:", error);

                // –î–û–î–ê–ù–û: –°–ø—Ä–æ–±–∞ –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –ø—ñ—Å–ª—è –ø–æ–º–∏–ª–∫–∏
                resetAllStates();

                // –í—ñ–¥–æ–±—Ä–∞–∂–∞—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É
                const mainRaffleContainer = document.querySelector('.main-raffle');
                if (mainRaffleContainer) {
                    mainRaffleContainer.innerHTML = `
                        <div class="empty-raffles">
                            <div class="empty-raffles-icon">‚ùå</div>
                            <h3>–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è</h3>
                            <p>–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Å–ø—Ä–æ–±—ñ –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ. –°–ø—Ä–æ–±—É–π—Ç–µ –æ–Ω–æ–≤–∏—Ç–∏ —Å—Ç–æ—Ä—ñ–Ω–∫—É.</p>
                            <button class="join-raffle-btn" onclick="location.reload()">–û–Ω–æ–≤–∏—Ç–∏ —Å—Ç–æ—Ä—ñ–Ω–∫—É</button>
                        </div>
                    `;
                }
            });

            // –ù–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ –∫–Ω–æ–ø–∫–∏ –∑–∞–∫—Ä–∏—Ç—Ç—è –¥–ª—è –º–æ–¥–∞–ª—å–Ω–∏—Ö –≤—ñ–∫–æ–Ω
            document.querySelectorAll('.modal-close, .cancel-btn').forEach(button => {
                button.addEventListener('click', function() {
                    const modal = this.closest('.raffle-modal');
                    if (modal) modal.classList.remove('open');
                });
            });

            // –ù–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ –∫–Ω–æ–ø–∫–∏ —É—á–∞—Å—Ç—ñ —É —Ä–æ–∑—ñ–≥—Ä–∞—à–∞—Ö
            setupRaffleButtons();

            console.log("‚úÖ Raffles: –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—é –∑–∞–≤–µ—Ä—à–µ–Ω–æ");
        } catch (error) {
            console.error("–ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó –º–æ–¥—É–ª—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤:", error);

            // –°–∫–∏–¥–∞—î–º–æ –≤—Å—ñ —Å—Ç–∞–Ω–∏ —É –≤–∏–ø–∞–¥–∫—É –ø–æ–º–∏–ª–∫–∏
            resetAllStates();
        }
    }

    // –ï–∫—Å–ø–æ—Ä—Ç—É—î–º–æ –ø—É–±–ª—ñ—á–Ω–∏–π API
    window.RafflesModule = {
        init,
        getActiveRaffles,
        getRaffleDetails,
        getUserRaffles,
        getRafflesHistory,
        participateInRaffle,
        displayActiveRaffles,
        displayRafflesHistory,
        openRaffleDetails,
        switchTab,
        claimNewbieBonus,
        updateUserBalance,
        updateStatistics,
        shareRaffle,
        resetAllStates
    };

    // –ì–ª–æ–±–∞–ª—å–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è —Ä–æ–∑—ñ–≥—Ä–∞—à—É
    window.openRaffleDetails = openRaffleDetails;

    // –§—É–Ω–∫—Ü—ñ—è –ø–µ—Ä–µ–º–∏–∫–∞–Ω–Ω—è –≤–∫–ª–∞–¥–æ–∫
    window.switchRaffleTab = switchTab;

    // –î–æ–¥–∞—î–º–æ init –≤ –≥–ª–æ–±–∞–ª—å–Ω–∏–π –æ–±'—î–∫—Ç
    window.rafflesFunctions = {
        switchTab,
        loadRaffleHistory: displayRafflesHistory,
        resetAllStates
    };

    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ –º–æ–¥—É–ª—å –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ –¥–æ–∫—É–º–µ–Ω—Ç–∞
    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', init);
    } else {
        // –£ –≤–∏–ø–∞–¥–∫—É, —è–∫—â–æ DOM –≤–∂–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ
        setTimeout(init, 100);
    }
})();