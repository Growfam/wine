/**
 * –í–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è ES –º–æ–¥—É–ª—ñ–≤ —Ç–∞ –≤–∏—Ä—ñ—à–µ–Ω–Ω—è –ø—Ä–æ–±–ª–µ–º –∑ —Ü–∏–∫–ª—ñ—á–Ω–∏–º–∏ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—è–º–∏
 * –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –ø–µ—Ä–µ—Ç–≤–æ—Ä—é—î ES6 –º–æ–¥—É–ª—ñ –Ω–∞ —Ñ–æ—Ä–º–∞—Ç, —Å—É–º—ñ—Å–Ω–∏–π –∑ –±—Ä–∞—É–∑–µ—Ä–æ–º
 */
(function() {
  'use strict';

  console.log('üõ†Ô∏è –ó–∞–ø—É—Å–∫ –ø–æ–∫—Ä–∞—â–µ–Ω–æ—ó —Å–∏—Å—Ç–µ–º–∏ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –º–æ–¥—É–ª—ñ–≤ v2.0');

  // –°—Ç–≤–æ—Ä—é—î–º–æ –≥–ª–æ–±–∞–ª—å–Ω–∏–π —Ä–µ—î—Å—Ç—Ä –º–æ–¥—É–ª—ñ–≤
  window.WinixModules = window.WinixModules || {
    modules: {},
    definitions: {},
    loading: {},
    registry: {},

    // –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –º–æ–¥—É–ª—è –≤—Ä—É—á–Ω—É
    register: function(name, moduleExports) {
      this.registry[name] = moduleExports;
      console.log(`‚úÖ –ó–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–æ –º–æ–¥—É–ª—å –≤—Ä—É—á–Ω—É: ${name}`);
      return moduleExports;
    },

    // –û—Ç—Ä–∏–º–∞–Ω–Ω—è –º–æ–¥—É–ª—è –∑ —Ä–µ—î—Å—Ç—Ä—É
    get: function(name) {
      return this.registry[name] || null;
    },

    // –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è –º–æ–¥—É–ª—è
    define: function(name, dependencies, factory) {
      this.definitions[name] = {
        deps: dependencies,
        factory: factory,
        exports: null // –ï–∫—Å–ø–æ—Ä—Ç–∏ –±—É–¥—É—Ç—å —Ç—É—Ç –ø—ñ—Å–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
      };

      // –°–ø—Ä–æ–±—É—î–º–æ –æ–¥—Ä–∞–∑—É –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –º–æ–¥—É–ª—å, —è–∫—â–æ –≤—Å—ñ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –¥–æ—Å—Ç—É–ø–Ω—ñ
      this.tryLoadModule(name);

      return this.definitions[name];
    },

    // –°–ø—Ä–æ–±–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –º–æ–¥—É–ª—å
    tryLoadModule: function(name) {
      // –Ø–∫—â–æ –º–æ–¥—É–ª—å –≤–∂–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ –∞–±–æ –≤ –ø—Ä–æ—Ü–µ—Å—ñ, –ø—Ä–æ–ø—É—Å–∫–∞—î–º–æ
      if (this.modules[name] || this.loading[name]) {
        return this.modules[name] || null;
      }

      const def = this.definitions[name];
      if (!def) {
        console.warn(`‚ö†Ô∏è –°–ø—Ä–æ–±–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –Ω–µ–≤–∏–∑–Ω–∞—á–µ–Ω–∏–π –º–æ–¥—É–ª—å: ${name}`);
        return null;
      }

      // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –≤—Å—ñ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –¥–æ—Å—Ç—É–ø–Ω—ñ
      const depsAvailable = def.deps.every(dep => this.modules[dep]);

      if (!depsAvailable) {
        // –ó–∞–ø–∏—Å—É—î–º–æ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ, —è–∫—ñ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω—ñ –¥–ª—è –≤—ñ–¥–ª–∞–¥–∫–∏
        const missingDeps = def.deps.filter(dep => !this.modules[dep]);
        console.debug(`üîÑ –ú–æ–¥—É–ª—å ${name} –æ—á—ñ–∫—É—î –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ: ${missingDeps.join(', ')}`);
        return null;
      }

      // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –º–æ–¥—É–ª—å
      this.loading[name] = true;

      try {
        // –°—Ç–≤–æ—Ä—é—î–º–æ –º–∞—Å–∏–≤ –∑ –µ–∫—Å–ø–æ—Ä—Ç–∞–º–∏ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π
        const depExports = def.deps.map(dep => this.modules[dep]);

        // –í–∏–∫–ª–∏–∫–∞—î–º–æ —Ñ–∞–±—Ä–∏–∫—É –∑ –µ–∫—Å–ø–æ—Ä—Ç–∞–º–∏ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π
        const moduleExports = def.factory.apply(null, depExports);

        // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        this.modules[name] = moduleExports;

        // –†–µ—î—Å—Ç—Ä—É—î–º–æ —Ç–∞–∫–æ–∂ –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–º—É —Ä–µ—î—Å—Ç—Ä—ñ
        this.registry[name] = moduleExports;

        // –£—Å—É–≤–∞—î–º–æ —Å—Ç–∞—Ç—É—Å –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
        delete this.loading[name];

        console.log(`‚úÖ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ –º–æ–¥—É–ª—å: ${name}`);

        // –°–ø–æ–≤—ñ—â–∞—î–º–æ –ø—Ä–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –º–æ–¥—É–ª—è
        document.dispatchEvent(new CustomEvent('module-loaded', {
          detail: { module: name, exports: moduleExports }
        }));

        // –ó–∞–ø—É—Å–∫–∞—î–º–æ —Å–ø—Ä–æ–±—É –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–∞–ª–µ–∂–Ω–∏—Ö –º–æ–¥—É–ª—ñ–≤
        this.tryLoadDependentModules(name);

        return moduleExports;
      } catch (error) {
        console.error(`‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –º–æ–¥—É–ª—è ${name}:`, error);
        delete this.loading[name];
        return null;
      }
    },

    // –°–ø—Ä–æ–±–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –º–æ–¥—É–ª—ñ–≤, —è–∫—ñ –∑–∞–ª–µ–∂–∞—Ç—å –≤—ñ–¥ —â–æ–π–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ–≥–æ
    tryLoadDependentModules: function(loadedModule) {
      // –®—É–∫–∞—î–º–æ –≤—Å—ñ –º–æ–¥—É–ª—ñ, —è–∫—ñ –º–∞—é—Ç—å –∑–∞–ª–µ–∂–Ω—ñ—Å—Ç—å –≤—ñ–¥ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ–≥–æ
      for (const name in this.definitions) {
        if (this.definitions[name].deps.includes(loadedModule)) {
          this.tryLoadModule(name);
        }
      }
    },

    // –û—Ç—Ä–∏–º–∞–Ω–Ω—è –º–æ–¥—É–ª—è (—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ, —è–∫—â–æ –≤—ñ–Ω –¥–æ—Å—Ç—É–ø–Ω–∏–π, –∞–±–æ –∑–∞–ø—É—Å–∫ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è)
    require: function(name) {
      // –Ø–∫—â–æ –º–æ–¥—É–ª—å –≤–∂–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ, –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ –π–æ–≥–æ –µ–∫—Å–ø–æ—Ä—Ç–∏
      if (this.modules[name]) {
        return this.modules[name];
      }

      // –Ø–∫—â–æ —î –≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è, —Å–ø—Ä–æ–±—É—î–º–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏
      if (this.definitions[name]) {
        return this.tryLoadModule(name);
      }

      // –Ø–∫—â–æ –º–æ–¥—É–ª—å –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–∏–π –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–º—É —Ä–µ—î—Å—Ç—Ä—ñ, –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ –π–æ–≥–æ
      if (this.registry[name]) {
        return this.registry[name];
      }

      console.warn(`‚ö†Ô∏è –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ –º–æ–¥—É–ª—å: ${name}`);
      return null;
    }
  };

  // –ú–∞—Å–∏–≤ –∫—Ä–∏—Ç–∏—á–Ω–∏—Ö —à–ª—è—Ö—ñ–≤, —è–∫—ñ –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —Ç–∞ –≤–∏–ø—Ä–∞–≤–∏—Ç–∏
  const criticalPaths = [
    '/js/tasks/config/index.js',
    '/js/tasks/utils/index.js',
    '/js/tasks/api/index.js',
    '/js/tasks/api/models/daily-bonus.js',
    '/js/tasks/models/types/daily-bonus-model.js',
    '/js/tasks/api/core/cache.js',
    '/js/tasks/api/core/request.js',
    '/js/tasks/api/core/config.js'
  ];

  // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å —Ñ–∞–π–ª—ñ–≤
  function checkPathsExistence() {
    const promises = criticalPaths.map(path =>
      fetch(path, { method: 'HEAD' })
        .then(response => ({ path, exists: response.ok, status: response.status }))
        .catch(() => ({ path, exists: false, status: 0 }))
    );

    return Promise.all(promises);
  }

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü—ñ—ó ES6 —ñ–º–ø–æ—Ä—Ç—ñ–≤/–µ–∫—Å–ø–æ—Ä—Ç—ñ–≤ —É —Å—É–º—ñ—Å–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç
  function transformESModuleCode(code, path) {
    // –°—Ç–≤–æ—Ä—é—î–º–æ —ñ–º'—è –º–æ–¥—É–ª—è –∑ —à–ª—è—Ö—É
    const moduleName = path.replace(/^\/js\//, '').replace(/\.js$/, '').replace(/\//g, '.');

    try {
      // –ó–∞–º—ñ–Ω—é—î–º–æ import ... from '...'; –Ω–∞ –∑–º—ñ–Ω–Ω—ñ
      code = code.replace(/import\s+([\w\s{},*]+)\s+from\s+['"]([^'"]+)['"]/g, function(match, importPart, modulePath) {
        // –Ø–∫—â–æ —ñ–º–ø–æ—Ä—Ç—É—î–º–æ –≤—Å–µ
        if (importPart.trim() === '*') {
          return `const * = window.WinixModules.require("${modulePath}")`;
        }

        // –Ø–∫—â–æ –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑—É—î–º–æ
        if (importPart.includes('{')) {
          // –†–æ–∑–±–∏—Ä–∞—î–º–æ –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü—ñ—é
          const destructured = importPart.match(/{\s*([\w\s,]+)\s*}/)[1].split(',').map(s => s.trim());

          // –°—Ç–≤–æ—Ä—é—î–º–æ –æ–∫—Ä–µ–º—ñ –∫–æ–Ω—Å—Ç–∞–Ω—Ç–∏
          const consts = destructured.map(name => {
            return `const ${name} = window.WinixModules.require("${modulePath}")["${name}"]`;
          }).join(';\n');

          return consts;
        }

        // –ü—Ä–æ—Å—Ç–∏–π —ñ–º–ø–æ—Ä—Ç
        return `const ${importPart.trim()} = window.WinixModules.require("${modulePath}")`;
      });

      // –ó–∞–º—ñ–Ω—é—î–º–æ export default ... –Ω–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—é
      code = code.replace(/export\s+default\s+([^;]+);?/g, function(match, exportPart) {
        return `window.WinixModules.register("${moduleName}", ${exportPart})`;
      });

      // –ó–∞–º—ñ–Ω—é—î–º–æ named exports
      code = code.replace(/export\s+const\s+(\w+)\s*=\s*([^;]+);?/g, function(match, name, value) {
        return `const ${name} = ${value};\nif(!window.${moduleName}) window.${moduleName} = {};\nwindow.${moduleName}.${name} = ${name}`;
      });

      // –ó–∞–º—ñ–Ω—é—î–º–æ export class ... –Ω–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—é –∫–ª–∞—Å—É
      code = code.replace(/export\s+class\s+(\w+)/g, function(match, name) {
        return `class ${name}`;
      });

      // –î–æ–¥–∞—î–º–æ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—é –≤ –∫—ñ–Ω—Ü—ñ —Ñ–∞–π–ª—É
      code += `\n// –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –º–æ–¥—É–ª—è\nif (typeof window !== "undefined" && !window.WinixModules.get("${moduleName}")) {\n  window.WinixModules.register("${moduleName}", {});\n}`;

      return code;
    } catch (error) {
      console.error(`–ü–æ–º–∏–ª–∫–∞ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü—ñ—ó ES –º–æ–¥—É–ª—è ${path}:`, error);
      // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –≤–∏—Ö—ñ–¥–Ω–∏–π –∫–æ–¥ —É —Ä–∞–∑—ñ –ø–æ–º–∏–ª–∫–∏
      return code;
    }
  }

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç–∞ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –º–æ–¥—É–ª—è
  async function loadAndFixModule(path) {
    try {
      // –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ñ–∞–π–ª—É
      const response = await fetch(path);
      if (!response.ok) {
        throw new Error(`–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –º–æ–¥—É–ª—è: ${path}, —Å—Ç–∞—Ç—É—Å: ${response.status}`);
      }

      // –û—Ç—Ä–∏–º–∞–Ω–Ω—è –≤–º—ñ—Å—Ç—É
      let code = await response.text();

      // –¢—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü—ñ—è ES6 –º–æ–¥—É–ª—è
      code = transformESModuleCode(code, path);

      // –î–æ–¥–∞—î–º–æ –∫–æ–º–µ–Ω—Ç–∞—Ä –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è
      code = `// –ú–æ–¥—É–ª—å –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–∏—Å—Ç–µ–º–æ—é fix-module-loader.js: ${new Date().toISOString()}\n${code}`;

      // –°—Ç–≤–æ—Ä—é—î–º–æ Blob –∑ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–∏–º –∫–æ–¥–æ–º
      const blob = new Blob([code], { type: 'application/javascript' });
      const blobUrl = URL.createObjectURL(blob);

      // –°—Ç–≤–æ—Ä—é—î–º–æ script –µ–ª–µ–º–µ–Ω—Ç —ñ –¥–æ–¥–∞—î–º–æ –π–æ–≥–æ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É
      const scriptElement = document.createElement('script');
      scriptElement.src = blobUrl;
      scriptElement.async = false;
      scriptElement.dataset.originalPath = path;
      scriptElement.dataset.fixed = 'true';

      // –í—ñ–¥—Å—Ç–µ–∂—É—î–º–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∞–±–æ –ø–æ–º–∏–ª–∫—É
      return new Promise((resolve, reject) => {
        scriptElement.onload = () => {
          resolve({ path, success: true });
        };

        scriptElement.onerror = (error) => {
          console.error(`–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–æ–≥–æ –º–æ–¥—É–ª—è ${path}:`, error);
          reject(error);
        };

        // –î–æ–¥–∞—î–º–æ –µ–ª–µ–º–µ–Ω—Ç –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É
        document.head.appendChild(scriptElement);
      });
    } catch (error) {
      console.error(`–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —ñ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –º–æ–¥—É–ª—è ${path}:`, error);
      throw error;
    }
  }

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Ñ—ñ–∫—Å–∞—Ü—ñ—ó –≤—Å—ñ—Ö –∫—Ä–∏—Ç–∏—á–Ω–∏—Ö –º–æ–¥—É–ª—ñ–≤
  async function fixCriticalModules() {
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å —Ñ–∞–π–ª—ñ–≤
    const checkResults = await checkPathsExistence();
    console.log('üìã –†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Ñ–∞–π–ª—ñ–≤:', checkResults);

    // –§—ñ–ª—å—Ç—Ä—É—î–º–æ —ñ –∑–∞–ª–∏—à–∞—î–º–æ —Ç—ñ–ª—å–∫–∏ –¥–æ—Å—Ç—É–ø–Ω—ñ —Ñ–∞–π–ª–∏
    const availableModules = checkResults.filter(result => result.exists);

    // –Ø–∫—â–æ –Ω–µ–º–∞—î –¥–æ—Å—Ç—É–ø–Ω–∏—Ö —Ñ–∞–π–ª—ñ–≤, –≤–∏—Ö–æ–¥–∏–º–æ
    if (availableModules.length === 0) {
      console.warn('‚ö†Ô∏è –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∂–æ–¥–Ω–æ–≥–æ –∫—Ä–∏—Ç–∏—á–Ω–æ–≥–æ –º–æ–¥—É–ª—è –¥–ª—è –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è');
      return;
    }

    // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —ñ –≤–∏–ø—Ä–∞–≤–ª—è—î–º–æ –∫–æ–∂–Ω–∏–π –º–æ–¥—É–ª—å –ø–æ —á–µ—Ä–∑—ñ
    for (const module of availableModules) {
      try {
        const result = await loadAndFixModule(module.path);
        console.log(`‚úÖ –ú–æ–¥—É–ª—å ${module.path} —É—Å–ø—ñ—à–Ω–æ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–∏–π —ñ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∏–π`);
      } catch (error) {
        console.error(`‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–ø—Ä–∞–≤–∏—Ç–∏ –º–æ–¥—É–ª—å ${module.path}:`, error);
      }
    }

    // –°–ø–æ–≤—ñ—â–∞—î–º–æ –ø—Ä–æ –≥–æ—Ç–æ–≤–Ω—ñ—Å—Ç—å –º–æ–¥—É–ª—å–Ω–æ—ó —Å–∏—Å—Ç–µ–º–∏
    document.dispatchEvent(new CustomEvent('module-system-ready', {
      detail: { modules: availableModules.map(m => m.path) }
    }));
  }

  // –§—É–Ω–∫—Ü—ñ—è –±–µ–∑–ø–µ—á–Ω–æ–≥–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å–∫—Ä–∏–ø—Ç–∞
  function loadScriptSafely(url) {
    return new Promise((resolve, reject) => {
      const script = document.createElement('script');
      script.src = url;
      script.async = false;

      script.onload = () => {
        console.log(`‚úÖ –°–∫—Ä–∏–ø—Ç –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ: ${url}`);
        resolve();
      };

      script.onerror = (error) => {
        console.error(`‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å–∫—Ä–∏–ø—Ç—É: ${url}`, error);
        reject(error);
      };

      document.head.appendChild(script);
    });
  }

  // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –Ω–∞ —Å–µ—Ä–≤–µ—Ä –ø—Ä–æ –ø–æ–º–∏–ª–∫–∏
  window.reportModuleError = function(modulePath, errorDetails) {
    console.error(`‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –º–æ–¥—É–ª—è: ${modulePath}`, errorDetails);

    // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä –¥–ª—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
    fetch('/api/log/error', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        type: 'module_error',
        module: modulePath,
        error: typeof errorDetails === 'object' ?
          (errorDetails.message || JSON.stringify(errorDetails)) :
          String(errorDetails),
        timestamp: new Date().toISOString(),
        browser: navigator.userAgent,
        page: window.location.pathname
      })
    }).catch(err => console.error('–ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –∑–≤—ñ—Ç—É:', err));
  };

  // –°—Ç–≤–æ—Ä—é—î–º–æ –ø—Ä–æ–∫—Å—ñ –¥–ª—è –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è –¥–æ window.fetch, —â–æ–± –¥–æ–∑–≤–æ–ª–∏—Ç–∏ —Ä–æ–±–æ—Ç—É –∑ ES –º–æ–¥—É–ª—è–º–∏
  function setupModuleFetch() {
    // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω—É —Ñ—É–Ω–∫—Ü—ñ—é fetch –¥–ª—è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –≤ XMLHttpRequests
    window._originalFetch = window.fetch;

    // –ü–µ—Ä–µ–≤–∏–∑–Ω–∞—á–∞—î–º–æ fetch –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è ES –º–æ–¥—É–ª—ñ–≤
    window.fetch = function(url, options) {
      // –Ø–∫—â–æ URL —î —à–ª—è—Ö–æ–º –¥–æ JS –º–æ–¥—É–ª—è —ñ —Ü–µ GET-–∑–∞–ø–∏—Ç
      if (typeof url === 'string' && url.endsWith('.js') &&
          (!options || options.method === undefined || options.method === 'GET')) {
        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –º–æ–¥—É–ª—å —É–∂–µ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–∏–π —ñ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∏–π
        const moduleKey = url.replace(/^\/js\//, '').replace(/\.js$/, '').replace(/\//g, '.');
        if (window.WinixModules.get(moduleKey)) {
          // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ —Å–∏–Ω—Ç–µ—Ç–∏—á–Ω—É –≤—ñ–¥–ø–æ–≤—ñ–¥—å –¥–ª—è –≤–∂–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ–≥–æ –º–æ–¥—É–ª—è
          console.log(`üîÑ –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –∫–µ—à–æ–≤–∞–Ω–∏–π –º–æ–¥—É–ª—å –¥–ª—è ${url}`);
          return Promise.resolve({
            ok: true,
            status: 200,
            text: () => Promise.resolve(`// –ú–æ–¥—É–ª—å –≤–∂–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∏–π: ${moduleKey}`)
          });
        }

        // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —ñ –≤–∏–ø—Ä–∞–≤–ª—è—î–º–æ –º–æ–¥—É–ª—å
        return window._originalFetch(url, options)
          .then(response => {
            if (!response.ok) {
              return response;
            }

            // –ö–ª–æ–Ω—É—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å, –±–æ response.text() –º–æ–∂–µ –±—É—Ç–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–∏–π —Ç—ñ–ª—å–∫–∏ –æ–¥–∏–Ω —Ä–∞–∑
            const clonedResponse = response.clone();

            // –û—Ç—Ä–∏–º—É—î–º–æ —Ç–µ–∫—Å—Ç –¥–ª—è –∞–Ω–∞–ª—ñ–∑—É –º–æ–¥—É–ª—è
            return clonedResponse.text().then(code => {
              // –¢—Ä–∞–Ω—Å—Ñ–æ—Ä–º—É—î–º–æ ES –º–æ–¥—É–ª—å –≤ —Å—É–º—ñ—Å–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç
              const transformedCode = transformESModuleCode(code, url);

              // –°—Ç–≤–æ—Ä—é—î–º–æ —Å–∏–Ω—Ç–µ—Ç–∏—á–Ω—É –≤—ñ–¥–ø–æ–≤—ñ–¥—å –∑ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–∏–º –∫–æ–¥–æ–º
              return {
                ok: true,
                status: 200,
                headers: new Headers(response.headers),
                text: () => Promise.resolve(transformedCode),
                json: () => Promise.reject(new Error('Not a JSON response')),
                // –î–æ–¥–∞—î–º–æ —ñ–Ω—à—ñ –º–µ—Ç–æ–¥–∏, —è–∫—ñ –º–æ–∂—É—Ç—å –±—É—Ç–∏ –ø–æ—Ç—Ä—ñ–±–Ω—ñ
                clone: () => ({ ...this, text: () => Promise.resolve(transformedCode) })
              };
            });
          });
      }

      // –î–ª—è –≤—Å—ñ—Ö —ñ–Ω—à–∏—Ö –∑–∞–ø–∏—Ç—ñ–≤ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–∏–π fetch
      return window._originalFetch(url, options);
    };
  }

  // –§—É–Ω–∫—Ü—ñ—è –≤–∏—Ç—è–≥—É–≤–∞–Ω–Ω—è —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ —Ä—ñ–∑–Ω–∏—Ö –¥–∂–µ—Ä–µ–ª
  function extractUserId() {
    // –ü–æ—Ä—è–¥–æ–∫ –ø—Ä—ñ–æ—Ä–∏—Ç–µ—Ç—É: query –ø–∞—Ä–∞–º–µ—Ç—Ä, localStorage, cookie
    const urlParams = new URLSearchParams(window.location.search);
    const idFromUrl = urlParams.get('id') || urlParams.get('user_id') || urlParams.get('telegram_id');

    if (idFromUrl) {
      // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ ID –≤ localStorage –¥–ª—è –º–∞–π–±—É—Ç–Ω—å–æ–≥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è
      try {
        localStorage.setItem('telegram_user_id', idFromUrl);
      } catch (e) {
        console.warn('–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–±–µ—Ä–µ–≥—Ç–∏ ID –≤ localStorage:', e);
      }
      return idFromUrl;
    }

    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ localStorage
    try {
      const idFromStorage = localStorage.getItem('telegram_user_id');
      if (idFromStorage) {
        return idFromStorage;
      }
    } catch (e) {
      console.warn('–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ ID –∑ localStorage:', e);
    }

    // –Ø–∫—â–æ –Ω–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ ID, –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ null
    return null;
  }

  // –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –≥–ª–æ–±–∞–ª—å–Ω–æ—ó —Ñ—É–Ω–∫—Ü—ñ—ó –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
  window.getUserId = extractUserId;

  // –§—É–Ω–∫—Ü—ñ—è —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
  async function initialize() {
    // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ fetch –¥–ª—è –º–æ–¥—É–ª—ñ–≤
    setupModuleFetch();

    // –§—ñ–∫—Å—É—î–º–æ –≤—Å—ñ –∫—Ä–∏—Ç–∏—á–Ω—ñ –º–æ–¥—É–ª—ñ
    await fixCriticalModules();

    // –°–ø–æ–≤—ñ—â–∞—î–º–æ –ø—Ä–æ –≥–æ—Ç–æ–≤–Ω—ñ—Å—Ç—å —Å–∏—Å—Ç–µ–º–∏
    console.log('‚úÖ –°–∏—Å—Ç–µ–º–∞ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –º–æ–¥—É–ª—ñ–≤ –≥–æ—Ç–æ–≤–∞');
    document.dispatchEvent(new CustomEvent('module-loader-ready'));
  }

  // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –≥–æ—Ç–æ–≤–Ω—ñ—Å—Ç—å DOM —ñ –∑–∞–ø—É—Å–∫–∞—î–º–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—é
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initialize);
  } else {
    // DOM –≤–∂–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∏–π, –∑–∞–ø—É—Å–∫–∞—î–º–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—é –≤—ñ–¥—Ä–∞–∑—É
    initialize();
  }
})();