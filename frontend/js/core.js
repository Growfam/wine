/**
 * WINIX - –°–∏—Å—Ç–µ–º–∞ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ (core.js)
 * –û–ø—Ç–∏–º—ñ–∑–æ–≤–∞–Ω–∞ –≤–µ—Ä—Å—ñ—è –∑ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–∏–º–∏ –ø—Ä–æ–±–ª–µ–º–∞–º–∏ –ø–∞–º'—è—Ç—ñ —ñ —Ä–µ–∫—É—Ä—Å—ñ—ó
 * @version 2.0.0
 */

(function() {
    'use strict';

    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ –Ω–µ–æ–±—Ö—ñ–¥–Ω–∏—Ö –º–æ–¥—É–ª—ñ–≤
    if (typeof window.WinixRaffles === 'undefined') {
        console.error('‚ùå WinixRaffles –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ! –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—è, —â–æ init.js –ø—ñ–¥–∫–ª—é—á–µ–Ω–æ –ø–µ—Ä–µ–¥ core.js');
        return;
    }

    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –∫–æ–Ω—Ç—Ä–æ–ª–µ—Ä–∞ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó
    if (!window.__winixSyncControl) {
        window.__winixSyncControl = {
            // –û—Å—Ç–∞–Ω–Ω—ñ–π –≤—ñ–¥–æ–º–∏–π –±–∞–ª–∞–Ω—Å –≤—ñ–¥ —Å–µ—Ä–≤–µ—Ä–∞
            lastValidBalance: null,

            // –ß–∞—Å –æ—Å—Ç–∞–Ω–Ω—å–æ—ó —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó
            lastSyncTime: 0,

            // –ë–ª–æ–∫—É–≤–∞–Ω–Ω—è –∑–∞–ø–∏—Ç—ñ–≤ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
            locks: {},

            // –ß–∏ –æ—á—ñ–∫—É—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∑ —Å–µ—Ä–≤–µ—Ä–∞
            expectServerUpdate: false,

            /**
             * –ë–ª–æ–∫—É–≤–∞–Ω–Ω—è –æ–Ω–æ–≤–ª–µ–Ω—å –±–∞–ª–∞–Ω—Å—É
             * @param {number} duration - –¢—Ä–∏–≤–∞–ª—ñ—Å—Ç—å –±–ª–æ–∫—É–≤–∞–Ω–Ω—è –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
             * @param {Object} options - –û–ø—Ü—ñ—ó –±–ª–æ–∫—É–≤–∞–Ω–Ω—è
             * @returns {boolean} –†–µ–∑—É–ª—å—Ç–∞—Ç –±–ª–æ–∫—É–≤–∞–Ω–Ω—è
             */
            block: function(duration, options = {}) {
                const type = options.type || 'general';
                const now = Date.now();

                this.locks[type] = {
                    until: now + (duration * 1000),
                    reason: options.reason || 'manual',
                    source: options.source || 'api'
                };

                console.log(`üîí –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ç–æ—Ä: –ë–ª–æ–∫—É–≤–∞–Ω–Ω—è ${type} –Ω–∞ ${duration}—Å. –ü—Ä–∏—á–∏–Ω–∞: ${this.locks[type].reason}`);

                // –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –∑–Ω—è—Ç—Ç—è –±–ª–æ–∫—É–≤–∞–Ω–Ω—è
                setTimeout(() => {
                    if (this.locks[type]) {
                        console.log(`üîì –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ç–æ—Ä: –†–æ–∑–±–ª–æ–∫—É–≤–∞–Ω–Ω—è ${type}`);
                        delete this.locks[type];
                    }
                }, duration * 1000);

                return true;
            },

            /**
             * –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–∏–π —Ç–∏–ø –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
             * @param {string} type - –¢–∏–ø –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
             * @returns {boolean} –°—Ç–∞–Ω –±–ª–æ–∫—É–≤–∞–Ω–Ω—è
             */
            isBlocked: function(type) {
                const now = Date.now();

                // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –±–ª–æ–∫—É–≤–∞–Ω–Ω—è
                if (this.locks['general'] && this.locks['general'].until > now) {
                    return true;
                }

                // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ç–∏–ø—É
                if (this.locks[type] && this.locks[type].until > now) {
                    return true;
                }

                return false;
            },

            /**
             * –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è —Å–µ—Ä–≤–µ—Ä–Ω–æ–≥–æ –±–∞–ª–∞–Ω—Å—É
             * @param {number} balance - –ù–æ–≤–∏–π –±–∞–ª–∞–Ω—Å
             * @param {string} source - –î–∂–µ—Ä–µ–ª–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
             * @returns {boolean} –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
             */
            setServerBalance: function(balance, source = 'api') {
                if (typeof balance !== 'number' || isNaN(balance) || balance < 0) {
                    return false;
                }

                this.lastValidBalance = balance;
                this.lastSyncTime = Date.now();
                this.expectServerUpdate = false;

                // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –≤ localStorage –¥–ª—è —ñ–Ω—à–∏—Ö –º–æ–¥—É–ª—ñ–≤
                localStorage.setItem('winix_server_balance', balance.toString());
                localStorage.setItem('winix_server_balance_ts', this.lastSyncTime.toString());

                console.log(`üí∞ –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ç–æ—Ä: –û–Ω–æ–≤–ª–µ–Ω–æ —Å–µ—Ä–≤–µ—Ä–Ω–∏–π –±–∞–ª–∞–Ω—Å ${balance} (–¥–∂–µ—Ä–µ–ª–æ: ${source})`);
                return true;
            }
        };

        console.log("‚úÖ Core: –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ –∫–æ–Ω—Ç—Ä–æ–ª–µ—Ä —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó –±–∞–ª–∞–Ω—Å—É");
    }

    // –ü—ñ–¥–º–æ–¥—É–ª—å –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –ø–æ–º–∏–ª–æ–∫
    const errorHandler = {
        // –õ—ñ—á–∏–ª—å–Ω–∏–∫ –ø–æ–º–∏–ª–æ–∫
        errorCount: 0,

        // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ–º–∏–ª–æ–∫ –¥–æ —Å–∫–∏–¥–∞–Ω–Ω—è
        maxErrorsBeforeReset: 5,

        // –ß–∞—Å –æ—Å—Ç–∞–Ω–Ω—å–æ—ó –ø–æ–º–∏–ª–∫–∏
        lastErrorTime: 0,

        // –û–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–∫–∏
        handleError: function(error, source) {
            this.errorCount++;
            this.lastErrorTime = Date.now();

            console.error(`‚ùå –ü–æ–º–∏–ª–∫–∞ –≤ ${source || 'raffles/core.js'}:`, error);

            // –Ø–∫—â–æ –¥–æ—Å—è–≥–Ω—É—Ç–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ—ó –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –ø–æ–º–∏–ª–æ–∫, —Å–∫–∏–¥–∞—î–º–æ —Å—Ç–∞–Ω
            if (this.errorCount >= this.maxErrorsBeforeReset) {
                this.errorCount = 0;
                console.warn(`‚ö†Ô∏è –î–æ—Å—è–≥–Ω—É—Ç–æ –∫—Ä–∏—Ç–∏—á–Ω–æ—ó –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –ø–æ–º–∏–ª–æ–∫ (${this.maxErrorsBeforeReset}), —Å–∫–∏–¥–∞–Ω–Ω—è —Å—Ç–∞–Ω—É...`);

                if (typeof window.resetAndReloadApplication === 'function') {
                    window.resetAndReloadApplication();
                } else if (typeof window.WinixRaffles.resetState === 'function') {
                    window.WinixRaffles.resetState();
                }
            }
        },

        // –°–∫–∏–¥–∞–Ω–Ω—è –ª—ñ—á–∏–ª—å–Ω–∏–∫–∞ –ø–æ–º–∏–ª–æ–∫
        resetErrorCount: function() {
            this.errorCount = 0;
        }
    };

    // –°—Ç–∞–Ω –º–æ–¥—É–ª—è
    const state = {
        // –ú–Ω–æ–∂–∏–Ω–∞ ID –Ω–µ–≤–∞–ª—ñ–¥–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
        invalidRaffleIds: new Set(),

        // –ß–∞—Å –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
        lastLoadTime: 0,

        // –í–∏–∫–æ–Ω—É—î—Ç—å—Å—è –∑–∞–ø–∏—Ç
        isLoading: false,

        // –í–∏–∫–æ–Ω—É—î—Ç—å—Å—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–∞–π–º–µ—Ä—ñ–≤
        updatingTimers: false,

        // –†–æ–∑—ñ–≥—Ä–∞—à—ñ –æ–±—Ä–æ–±–ª—è—é—Ç—å—Å—è
        rafflesProcessed: false,

        // –¢–∞–π–º–µ—Ä–∏ –∑–≤–æ—Ä–æ—Ç–Ω–æ–≥–æ –≤—ñ–¥–ª—ñ–∫—É
        countdownTimers: {},

        // –ß–∞—Å –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É
        lastBalanceUpdate: 0
    };

    // –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è
    const config = {
        // –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–π —ñ–Ω—Ç–µ—Ä–≤–∞–ª –º—ñ–∂ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è–º–∏ (–º—Å)
        minLoadInterval: 5000,

        // –Ü–Ω—Ç–µ—Ä–≤–∞–ª –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–∞–π–º–µ—Ä—ñ–≤ (–º—Å)
        timerUpdateInterval: 1000,

        // –¢–∞–π–º–∞—É—Ç –∑–∞–ø–∏—Ç—ñ–≤ (–º—Å)
        requestTimeout: 15000
    };

    /**
     * –°–∫–∏–¥–∞–Ω–Ω—è —Å—Ç–∞–Ω—É –º–æ–¥—É–ª—è
     */
    window.WinixRaffles.resetState = function() {
        console.log('üîÑ –°–∫–∏–¥–∞–Ω–Ω—è —Å—Ç–∞–Ω—É –º–æ–¥—É–ª—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤...');

        // –°–∫–∏–¥–∞—î–º–æ —Å—Ç–∞–Ω
        state.isLoading = false;
        state.updatingTimers = false;

        // –û—á–∏—â—É—î–º–æ —Ç–∞–π–º–µ—Ä–∏
        for (const timerId in state.countdownTimers) {
            if (state.countdownTimers.hasOwnProperty(timerId)) {
                clearInterval(state.countdownTimers[timerId]);
            }
        }
        state.countdownTimers = {};

        // –°–∫–∏–¥–∞—î–º–æ –≥–ª–æ–±–∞–ª—å–Ω—ñ —Ç–∞–π–º–µ—Ä–∏
        if (window.WinixRaffles._globalRefreshInterval) {
            clearInterval(window.WinixRaffles._globalRefreshInterval);
            window.WinixRaffles._globalRefreshInterval = null;
        }

        if (window.WinixRaffles._globalCountdownTimer) {
            clearInterval(window.WinixRaffles._globalCountdownTimer);
            window.WinixRaffles._globalCountdownTimer = null;
        }

        // –ü—Ä–∏—Ö–æ–≤—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
        if (typeof window.hideLoading === 'function') {
            window.hideLoading();
        }

        // –°–∫–∏–¥–∞—î–º–æ —Å—Ç–∞–Ω participation —Ç–∞ ticketManager, —è–∫—â–æ –≤–æ–Ω–∏ —ñ—Å–Ω—É—é—Ç—å
        if (window.WinixRaffles.participation && typeof window.WinixRaffles.participation.resetState === 'function') {
            window.WinixRaffles.participation.resetState();
        }

        if (window.WinixRaffles.ticketManager && typeof window.WinixRaffles.ticketManager.reset === 'function') {
            window.WinixRaffles.ticketManager.reset();
        }

        console.log('‚úÖ –°—Ç–∞–Ω –º–æ–¥—É–ª—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ —Å–∫–∏–Ω—É—Ç–æ');
    };

    /**
     * –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
     * @param {boolean} forceRefresh - –ü—Ä–∏–º—É—Å–æ–≤–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
     * @param {number} limit - –õ—ñ–º—ñ—Ç –∫—ñ–ª—å–∫–æ—Å—Ç—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
     * @param {number} offset - –ó–º—ñ—â–µ–Ω–Ω—è –¥–ª—è –ø–∞–≥—ñ–Ω–∞—Ü—ñ—ó
     * @returns {Promise<Object>} –†–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
     */
    window.WinixRaffles.loadActiveRaffles = async function(forceRefresh = false, limit = 50, offset = 0) {
        // –ó–∞–ø–æ–±—ñ–≥–∞—î–º–æ –ø–∞—Ä–∞–ª–µ–ª—å–Ω–∏–º –∑–∞–ø–∏—Ç–∞–º
        if (state.isLoading && !forceRefresh) {
            console.log("‚è≥ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ –≤–∂–µ –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è");

            // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –∫–µ—à –ø—Ä–∏ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ –¥–∞–Ω–∏—Ö
            if (this.state.activeRaffles.length > 0) {
                return {
                    success: true,
                    source: 'cache',
                    data: this.state.activeRaffles,
                    message: "–í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–æ –∫–µ—à–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ (–∑–∞–ø–∏—Ç –≤–∂–µ –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è)"
                };
            }

            return { success: false, message: "–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –≤–∂–µ –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è" };
        }

        // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —ñ–Ω—Ç–µ—Ä–≤–∞–ª—É –º—ñ–∂ –∑–∞–ø–∏—Ç–∞–º–∏
        const now = Date.now();
        if (!forceRefresh && (now - state.lastLoadTime < config.minLoadInterval) && this.state.activeRaffles.length > 0) {
            console.log("‚è≥ –ó–∞–Ω–∞–¥—Ç–æ —á–∞—Å—Ç–∏–π –∑–∞–ø–∏—Ç, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∫–µ—à");
            return {
                success: true,
                source: 'cache',
                data: this.state.activeRaffles,
                message: "–í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–æ –∫–µ—à–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ (–æ–±–º–µ–∂–µ–Ω–Ω—è —á–∞—Å—Ç–æ—Ç–∏)"
            };
        }

        // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
        state.isLoading = true;

        // –ü–æ–∫–∞–∑—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è, —è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ
        if (!this.skipLoader && (this.state.activeRaffles.length === 0 || forceRefresh)) {
            try {
                if (typeof window.showLoading === 'function') {
                    window.showLoading();
                }
            } catch (e) {
                console.warn("‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –ø–æ–∫–∞–∑—É —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è:", e);
            }
        }

        try {
            console.log("üîÑ –†–æ–∑–ø–æ—á–∞—Ç–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤");

            // –§–æ—Ä–º—É—î–º–æ URL –∑–∞–ø–∏—Ç—É
            const apiEndpoint = `${this.config.activeRafflesEndpoint}?limit=${limit}&offset=${offset}&t=${now}`;

            // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –∑–∞–ø–∏—Ç
            let response;
            if (typeof window.WinixAPI !== 'undefined' && typeof window.WinixAPI.apiRequest === 'function') {
                response = await window.WinixAPI.apiRequest(apiEndpoint, 'GET', null, {
                    timeout: config.requestTimeout,
                    suppressErrors: true,
                    retries: 2,
                    bypassThrottle: forceRefresh
                });
            } else {
                const fetchResponse = await fetch(apiEndpoint);
                response = await fetchResponse.json();
            }

            // –û–±—Ä–æ–±–∫–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ
            if (response && response.status === 'success' && Array.isArray(response.data)) {
                // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –¥–∞–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
                this.state.activeRaffles = response.data;

                // –û–Ω–æ–≤–ª—é—î–º–æ —á–∞—Å –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
                state.lastLoadTime = now;

                // –û–±—Ä–æ–±–ª—è—î–º–æ –¥–∞–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
                this._processRafflesData();

                // –í—ñ–¥–∫–ª–∞–¥–µ–Ω–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ —É—á–∞—Å—Ç—ñ
                this._scheduleParticipationCheck();

                // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è
                this.renderActiveRaffles();

                // –°–∫–∏–¥–∞—î–º–æ –ª—ñ—á–∏–ª—å–Ω–∏–∫ –ø–æ–º–∏–ª–æ–∫
                errorHandler.resetErrorCount();

                console.log(`‚úÖ –£—Å–ø—ñ—à–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ ${this.state.activeRaffles.length} –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤`);

                // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–¥—ñ—é
                document.dispatchEvent(new CustomEvent('raffles-loaded', {
                    detail: { count: this.state.activeRaffles.length }
                }));

                return {
                    success: true,
                    data: this.state.activeRaffles,
                    message: `–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ ${this.state.activeRaffles.length} —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤`
                };
            } else {
                throw new Error(response?.message || '–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∞–∫—Ç–∏–≤–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ');
            }
        } catch (error) {
            // –û–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–∫–∏
            errorHandler.handleError(error, 'loadActiveRaffles');

            // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –∫–µ—à –ø—Ä–∏ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ –¥–∞–Ω–∏—Ö
            if (this.state.activeRaffles.length > 0) {
                console.log("‚ö†Ô∏è –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∫–µ—à–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ —á–µ—Ä–µ–∑ –ø–æ–º–∏–ª–∫—É");
                return {
                    success: true,
                    source: 'cache_error',
                    data: this.state.activeRaffles,
                    message: "–í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–æ –∫–µ—à–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ (—Å—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞)"
                };
            }

            // –í—ñ–¥–æ–±—Ä–∞–∂–∞—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É
            this.renderError('–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ', '–°–ø—Ä–æ–±—É–π—Ç–µ –æ–Ω–æ–≤–∏—Ç–∏ —Å—Ç–æ—Ä—ñ–Ω–∫—É');

            return {
                success: false,
                message: error.message || '–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤'
            };
        } finally {
            // –ó–∞–≤–µ—Ä—à—É—î–º–æ –ø—Ä–æ—Ü–µ—Å –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
            state.isLoading = false;

            // –ü—Ä–∏—Ö–æ–≤—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
            try {
                if (!this.skipLoader && typeof window.hideLoading === 'function') {
                    window.hideLoading();
                }
            } catch (e) {
                console.warn("‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏—Ö–æ–≤—É–≤–∞–Ω–Ω—è —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è:", e);
            }

            // –°–∫–∏–¥–∞—î–º–æ —Ñ–ª–∞–≥ –ø—Ä–æ–ø—É—Å–∫—É —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞
            this.skipLoader = false;
        }
    };

    /**
     * –û–±—Ä–æ–±–∫–∞ –¥–∞–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
     * @private
     */
    window.WinixRaffles._processRafflesData = function() {
        try {
            // –ü—Ä–æ–ø—É—Å–∫–∞—î–º–æ, —è–∫—â–æ –æ–±—Ä–æ–±–∫–∞ –≤–∂–µ –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è
            if (state.rafflesProcessed) {
                return;
            }

            const now = Date.now();

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ –Ω–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è
            this.state.activeRaffles.forEach(raffle => {
                const endTime = new Date(raffle.end_time).getTime();

                // –Ø–∫—â–æ —Ä–æ–∑—ñ–≥—Ä–∞—à –∑–∞–≤–µ—Ä—à–∏–≤—Å—è, –¥–æ–¥–∞—î–º–æ –≤ –Ω–µ–≤–∞–ª—ñ–¥–Ω—ñ
                if (endTime <= now) {
                    state.invalidRaffleIds.add(raffle.id);

                    if (this.participation && this.participation.invalidRaffleIds) {
                        this.participation.invalidRaffleIds.add(raffle.id);
                    }
                }
            });

            state.rafflesProcessed = true;
        } catch (e) {
            console.warn("‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –æ–±—Ä–æ–±–∫–∏ –¥–∞–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤:", e);
        }
    };

    /**
     * –ü–ª–∞–Ω—É–≤–∞–Ω–Ω—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —É—á–∞—Å—Ç—ñ
     * @private
     */
    window.WinixRaffles._scheduleParticipationCheck = function() {
        // –í—ñ–¥–∫–ª–∞–¥–µ–Ω–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ —É—á–∞—Å—Ç—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        setTimeout(() => {
            this.loadUserParticipation().catch(err => {
                console.warn("‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –¥–∞–Ω—ñ —É—á–∞—Å—Ç—ñ:", err);
            });
        }, 1000);
    };

    /**
     * –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –ø—Ä–æ —É—á–∞—Å—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
     * @returns {Promise<Object>} –†–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
     */
    window.WinixRaffles.loadUserParticipation = async function() {
        try {
            // –û—Ç—Ä–∏–º–∞–Ω–Ω—è ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            if (!this.state.telegramId) {
                this.state.telegramId = this._getUserId();

                if (!this.state.telegramId) {
                    console.warn("‚ö†Ô∏è ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤—ñ–¥—Å—É—Ç–Ω—ñ–π, –Ω–µ –º–æ–∂–µ–º–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —É—á–∞—Å—Ç—å");
                    return { success: false, message: "ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤—ñ–¥—Å—É—Ç–Ω—ñ–π" };
                }
            }

            console.log("üîÑ –†–æ–∑–ø–æ—á–∞—Ç–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —É—á–∞—Å—Ç—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞");

            // –§–æ—Ä–º—É—î–º–æ URL –∑–∞–ø–∏—Ç—É
            const apiEndpoint = this.config.userRafflesEndpoint.replace('{userId}', this.state.telegramId);

            // –î–æ–¥–∞—î–º–æ –ø–∞—Ä–∞–º–µ—Ç—Ä –∑–∞–ø–æ–±—ñ–≥–∞–Ω–Ω—è –∫–µ—à—É–≤–∞–Ω–Ω—è
            const nocache = Date.now();
            const url = `${apiEndpoint}?nocache=${nocache}`;

            // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –∑–∞–ø–∏—Ç
            let response;
            if (typeof window.WinixAPI !== 'undefined' && typeof window.WinixAPI.apiRequest === 'function') {
                response = await window.WinixAPI.apiRequest(url, 'GET', null, {
                    timeout: 10000,
                    suppressErrors: true,
                    bypassThrottle: true,
                    hideLoader: true,
                    allowParallel: true
                });
            } else {
                const fetchResponse = await fetch(url);
                response = await fetchResponse.json();
            }

            // –û–±—Ä–æ–±–∫–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ
            if (response && response.status === 'success' && Array.isArray(response.data)) {
                // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –º–æ–¥—É–ª—è —É—á–∞—Å—Ç—ñ, —è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ
                this._initParticipationModule();

                // –û—á–∏—â–∞—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ –¥–∞–Ω—ñ —É—á–∞—Å—Ç—ñ
                this.participation.participatingRaffles.clear();
                this.participation.userRaffleTickets = {};

                // –ó–∞–ø–æ–≤–Ω—é—î–º–æ –¥–∞–Ω—ñ —É—á–∞—Å—Ç—ñ
                response.data.forEach(raffle => {
                    const raffleId = raffle.raffle_id || raffle.id;

                    if (raffleId && typeof raffleId === 'string' && raffleId.length > 10) {
                        this.participation.participatingRaffles.add(raffleId);
                        this.participation.userRaffleTickets[raffleId] = raffle.entry_count || 1;
                    }
                });

                console.log(`‚úÖ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ —É—á–∞—Å—Ç—å —É ${response.data.length} —Ä–æ–∑—ñ–≥—Ä–∞—à–∞—Ö`);

                // –û–Ω–æ–≤–ª—é—î–º–æ –∫–Ω–æ–ø–∫–∏ —É—á–∞—Å—Ç—ñ
                this.updateParticipationButtons();

                return {
                    success: true,
                    data: response.data
                };
            } else {
                console.warn("‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –¥–∞–Ω—ñ —É—á–∞—Å—Ç—ñ:", response?.message);
                return {
                    success: false,
                    message: response?.message || "–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö —É—á–∞—Å—Ç—ñ"
                };
            }
        } catch (error) {
            console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —É—á–∞—Å—Ç—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:', error);
            return {
                success: false,
                message: error.message || '–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —É—á–∞—Å—Ç—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞'
            };
        }
    };

    /**
     * –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –º–æ–¥—É–ª—è —É—á–∞—Å—Ç—ñ
     * @private
     */
    window.WinixRaffles._initParticipationModule = function() {
        if (!this.participation) {
            this.participation = {
                participatingRaffles: new Set(),
                userRaffleTickets: {},
                invalidRaffleIds: new Set(),
                lastParticipationTime: 0,
                requestInProgress: false
            };
        } else if (!this.participation.participatingRaffles) {
            this.participation.participatingRaffles = new Set();
            this.participation.userRaffleTickets = {};
            this.participation.lastParticipationTime = 0;
            this.participation.requestInProgress = false;
        }
    };

    /**
     * –û—Ç—Ä–∏–º–∞–Ω–Ω—è ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
     * @returns {string|null} ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
     * @private
     */
    window.WinixRaffles._getUserId = function() {
        // –ó WinixCore
        if (window.WinixCore && typeof window.WinixCore.getUserId === 'function') {
            const coreId = window.WinixCore.getUserId();
            if (coreId) return coreId;
        }

        // –ó WinixAPI
        if (window.WinixAPI && typeof window.WinixAPI.getUserId === 'function') {
            const apiId = window.WinixAPI.getUserId();
            if (apiId) return apiId;
        }

        // –ó localStorage
        const storedId = localStorage.getItem('telegram_user_id');
        if (storedId && storedId !== 'undefined' && storedId !== 'null') {
            return storedId;
        }

        // –ó DOM
        const userIdElement = document.getElementById('user-id');
        if (userIdElement && userIdElement.textContent) {
            const id = userIdElement.textContent.trim();
            if (id && id !== 'undefined' && id !== 'null') {
                return id;
            }
        }

        return null;
    };

    /**
     * –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞—Ç—É—Å—É –∫–Ω–æ–ø–æ–∫ —É—á–∞—Å—Ç—ñ
     */
    window.WinixRaffles.updateParticipationButtons = function() {
        // –î–µ–ª–µ–≥—É—î–º–æ –º–æ–¥—É–ª—é participation, —è–∫—â–æ –≤—ñ–Ω –¥–æ—Å—Ç—É–ø–Ω–∏–π
        if (this.participation && typeof this.participation.updateParticipationButtons === 'function') {
            this.participation.updateParticipationButtons();
            return;
        }

        try {
            // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –º–æ–¥—É–ª—è —É—á–∞—Å—Ç—ñ, —è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ
            this._initParticipationModule();

            // –û—Ç—Ä–∏–º—É—î–º–æ –≤—Å—ñ –∫–Ω–æ–ø–∫–∏ —É—á–∞—Å—Ç—ñ
            const buttons = document.querySelectorAll('.join-button, .mini-raffle-button');
            if (!buttons.length) return;

            // –°—Ç–≤–æ—Ä—é—î–º–æ –∫–µ—à –¥–ª—è –æ–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—ó
            const participatingCache = {};
            const invalidCache = {};

            // –ó–∞–ø–æ–≤–Ω—é—î–º–æ –∫–µ—à
            this.participation.participatingRaffles.forEach(id => {
                participatingCache[id] = true;
            });

            state.invalidRaffleIds.forEach(id => {
                invalidCache[id] = true;
            });

            if (this.participation.invalidRaffleIds) {
                this.participation.invalidRaffleIds.forEach(id => {
                    invalidCache[id] = true;
                });
            }

            // –û–Ω–æ–≤–ª—é—î–º–æ –∫–Ω–æ–ø–∫–∏
            buttons.forEach(button => {
                const raffleId = button.getAttribute('data-raffle-id');
                if (!raffleId) return;

                // –î–ª—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤, —É —è–∫–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –±–µ—Ä–µ —É—á–∞—Å—Ç—å
                if (participatingCache[raffleId]) {
                    const ticketCount = this.participation.userRaffleTickets[raffleId] || 1;

                    // –û–Ω–æ–≤–ª—é—î–º–æ —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏
                    if (!button.classList.contains('participating')) {
                        const isMini = button.classList.contains('mini-raffle-button');
                        button.textContent = isMini ?
                            `–î–æ–¥–∞—Ç–∏ —â–µ –±—ñ–ª–µ—Ç (${ticketCount})` :
                            `–î–æ–¥–∞—Ç–∏ —â–µ –±—ñ–ª–µ—Ç (—É –≤–∞—Å: ${ticketCount})`;

                        button.classList.add('participating');
                        button.disabled = false;

                        // –í–∏–¥–∞–ª—è—î–º–æ —Å—Ç–∞—Ç—É—Å –æ–±—Ä–æ–±–∫–∏
                        button.removeAttribute('data-processing');
                        button.classList.remove('processing');
                    }
                }

                // –î–ª—è –Ω–µ–≤–∞–ª—ñ–¥–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
                if (invalidCache[raffleId] && !button.classList.contains('disabled')) {
                    button.textContent = '–†–æ–∑—ñ–≥—Ä–∞—à –∑–∞–≤–µ—Ä—à–µ–Ω–æ';
                    button.classList.add('disabled');
                    button.disabled = true;
                }
            });
        } catch (error) {
            console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—ñ –∫–Ω–æ–ø–æ–∫ —É—á–∞—Å—Ç—ñ:", error);
        }
    };

    /**
     * –í—ñ–¥–º–∞–ª—é–≤–∞–Ω–Ω—è –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
     */
    window.WinixRaffles.renderActiveRaffles = function() {
        try {
            // –û—Ç—Ä–∏–º—É—î–º–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
            const container = document.getElementById('active-raffles');
            if (!container) {
                console.warn("‚ö†Ô∏è –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ");
                return false;
            }

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –¥–∞–Ω–∏—Ö
            if (!this.state.activeRaffles || this.state.activeRaffles.length === 0) {
                container.innerHTML = `
                    <div class="no-raffles">
                        <p>–ù–∞ –¥–∞–Ω–∏–π –º–æ–º–µ–Ω—Ç –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ –Ω–µ–º–∞—î.</p>
                        <p>–°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ –∞–±–æ –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ –≤–∫–ª–∞–¥–∫—É "–Ü—Å—Ç–æ—Ä—ñ—è".</p>
                    </div>
                `;
                return false;
            }

            // –°—Ç—Ä—É–∫—Ç—É—Ä—É—î–º–æ –¥–∞–Ω—ñ –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è
            let mainRaffle = null;
            const dailyRaffles = [];

            // –†–æ–∑–¥—ñ–ª—è—î–º–æ –Ω–∞ –æ—Å–Ω–æ–≤–Ω–∏–π —Ç–∞ —â–æ–¥–µ–Ω–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ
            this.state.activeRaffles.forEach(raffle => {
                if (raffle.is_daily) {
                    dailyRaffles.push(raffle);
                } else if (!mainRaffle) {
                    mainRaffle = raffle;
                }
            });

            // –§–æ—Ä–º—É—î–º–æ HTML –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
            let mainRaffleHtml = '';
            if (mainRaffle) {
                mainRaffleHtml = this._renderMainRaffle(mainRaffle);
            }

            // –§–æ—Ä–º—É—î–º–æ HTML –¥–ª—è —â–æ–¥–µ–Ω–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
            let dailyRafflesHtml = '';
            if (dailyRaffles.length > 0) {
                dailyRafflesHtml = this._renderDailyRaffles(dailyRaffles);
            }

            // –û–Ω–æ–≤–ª—é—î–º–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
            container.innerHTML = `
                <div class="main-raffle-container">
                    ${mainRaffleHtml}
                </div>
                
                <h2 class="mini-raffles-title">–©–æ–¥–µ–Ω–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ</h2>
                
                <div class="mini-raffles-container">
                    ${dailyRafflesHtml}
                </div>
            `;

            // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ —Ç–∞–π–º–µ—Ä–∏
            this.initializeCountdownTimers();

            // –û–Ω–æ–≤–ª—é—î–º–æ –∫–Ω–æ–ø–∫–∏ —É—á–∞—Å—Ç—ñ
            setTimeout(() => {
                this.updateParticipationButtons();
            }, 100);

            return true;
        } catch (error) {
            console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–º–∞–ª—é–≤–∞–Ω–Ω—è –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤:", error);

            // –í–∏–≤–æ–¥–∏–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É
            this.renderError('–ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤', '–ë—É–¥—å –ª–∞—Å–∫–∞, –æ–Ω–æ–≤—ñ—Ç—å —Å—Ç–æ—Ä—ñ–Ω–∫—É');

            return false;
        }
    };

    /**
     * –í—ñ–¥–º–∞–ª—é–≤–∞–Ω–Ω—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
     * @param {Object} raffle - –î–∞–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
     * @returns {string} HTML-–∫–æ–¥
     * @private
     */
    window.WinixRaffles._renderMainRaffle = function(raffle) {
        if (!raffle) return '';

        // –§–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è –¥–∞—Ç–∏ —ñ —á–∞—Å—É
        const endTime = new Date(raffle.end_time);
        const dateFormatted = endTime.toLocaleDateString('uk-UA', {
            day: '2-digit',
            month: '2-digit',
            year: 'numeric'
        });

        // –§–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è –Ω–∞–∑–≤–∏ —Ç–∞ –æ–ø–∏—Å—É
        const title = raffle.title || '–†–æ–∑—ñ–≥—Ä–∞—à';
        const description = raffle.description || '–û–ø–∏—Å –≤—ñ–¥—Å—É—Ç–Ω—ñ–π';

        // –í–∞—Ä—Ç—ñ—Å—Ç—å —É—á–∞—Å—Ç—ñ —Ç–∞ –ø—Ä–∏–∑–∏
        const entryFee = raffle.entry_fee || 1;
        const prizeAmount = raffle.prize_amount || 0;
        const prizeCurrency = raffle.prize_currency || 'WINIX';
        const winnersCount = raffle.winners_count || 1;

        // –§–æ—Ä–º—É–≤–∞–Ω–Ω—è –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –ø—Ä–∏–∑—É
        const imageUrl = raffle.image_url || 'assets/prize-default.png';

        // –§–æ—Ä–º—É–≤–∞–Ω–Ω—è ID –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ —Ç–∞–π–º–µ—Ä–∞
        const timerPrefix = raffle.id;

        return `
        <div class="main-raffle" data-raffle-id="${raffle.id}" data-is-daily="false">
            <div class="raffle-header">
                <h3 class="raffle-title">${title}</h3>
                <div class="raffle-badge main">–ì–æ–ª–æ–≤–Ω–∏–π</div>
            </div>
            
            <div class="raffle-content">
                <div class="raffle-info">
                    <div class="raffle-description">${description}</div>
                    
                    <div class="raffle-details">
                        <div class="raffle-prize">
                            <span class="label">–ü—Ä–∏–∑:</span>
                            <span class="value">${prizeAmount} ${prizeCurrency}</span>
                        </div>
                        <div class="raffle-winners">
                            <span class="label">–ü–µ—Ä–µ–º–æ–∂—Ü—ñ–≤:</span>
                            <span class="value">${winnersCount}</span>
                        </div>
                        <div class="raffle-entry-fee">
                            <span class="label">–í–∞—Ä—Ç—ñ—Å—Ç—å —É—á–∞—Å—Ç—ñ:</span>
                            <span class="value">${entryFee} –∂–µ—Ç–æ–Ω${entryFee > 1 ? '–∏' : ''}</span>
                        </div>
                    </div>
                    
                    <div class="raffle-countdown">
                        <div class="countdown-label">–î–æ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è:</div>
                        <div class="countdown-timer">
                            <div class="countdown-block">
                                <div class="countdown-value" id="days-${timerPrefix}">00</div>
                                <div class="countdown-label">–î–Ω—ñ</div>
                            </div>
                            <div class="countdown-block">
                                <div class="countdown-value" id="hours-${timerPrefix}">00</div>
                                <div class="countdown-label">–ì–æ–¥</div>
                            </div>
                            <div class="countdown-block">
                                <div class="countdown-value" id="minutes-${timerPrefix}">00</div>
                                <div class="countdown-label">–•–≤</div>
                            </div>
                            <div class="countdown-block">
                                <div class="countdown-value" id="seconds-${timerPrefix}">00</div>
                                <div class="countdown-label">–°–µ–∫</div>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="raffle-image">
                    <img src="${imageUrl}" alt="${title}" onerror="this.src='assets/prize-default.png'">
                </div>
            </div>
            
            <div class="raffle-footer">
                <button class="join-button" data-raffle-id="${raffle.id}" data-entry-fee="${entryFee}">
                    –í–∑—è—Ç–∏ —É—á–∞—Å—Ç—å –∑–∞ ${entryFee} –∂–µ—Ç–æ–Ω${entryFee > 1 ? '–∏' : ''}
                </button>
                <div class="participants-count">
                    <span class="icon">üë•</span>
                    <span class="count">${raffle.participants_count || 0}</span>
                </div>
            </div>
        </div>`;
    };

    /**
     * –í—ñ–¥–º–∞–ª—é–≤–∞–Ω–Ω—è —â–æ–¥–µ–Ω–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
     * @param {Array} raffles - –î–∞–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
     * @returns {string} HTML-–∫–æ–¥
     * @private
     */
    window.WinixRaffles._renderDailyRaffles = function(raffles) {
        if (!raffles || raffles.length === 0) {
            return `<div class="no-mini-raffles">–ù–∞—Ä–∞–∑—ñ –Ω–µ–º–∞—î —â–æ–¥–µ–Ω–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤</div>`;
        }

        let html = '';

        // –§–æ—Ä–º—É—î–º–æ HTML –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
        raffles.forEach(raffle => {
            const title = raffle.title || '–©–æ–¥–µ–Ω–Ω–∏–π —Ä–æ–∑—ñ–≥—Ä–∞—à';
            const prizeAmount = raffle.prize_amount || 0;
            const prizeCurrency = raffle.prize_currency || 'WINIX';
            const entryFee = raffle.entry_fee || 1;
            const timerPrefix = raffle.id;

            html += `
            <div class="mini-raffle" data-raffle-id="${raffle.id}">
                <div class="mini-raffle-header">
                    <h3 class="mini-raffle-title">${title}</h3>
                    <div class="mini-raffle-badge">–©–æ–¥–µ–Ω–Ω–∏–π</div>
                </div>
                
                <div class="mini-raffle-content">
                    <div class="mini-raffle-prize">${prizeAmount} ${prizeCurrency}</div>
                    
                    <div class="mini-raffle-countdown">
                        <div class="mini-countdown-timer">
                            <div class="mini-countdown-block">
                                <div class="mini-countdown-value" id="hours-${timerPrefix}">00</div>
                                <div class="mini-countdown-label">–≥–æ–¥</div>
                            </div>
                            <div class="mini-countdown-block">
                                <div class="mini-countdown-value" id="minutes-${timerPrefix}">00</div>
                                <div class="mini-countdown-label">—Ö–≤</div>
                            </div>
                            <div class="mini-countdown-block">
                                <div class="mini-countdown-value" id="seconds-${timerPrefix}">00</div>
                                <div class="mini-countdown-label">—Å–µ–∫</div>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="mini-raffle-footer">
                    <button class="mini-raffle-button" data-raffle-id="${raffle.id}" data-entry-fee="${entryFee}">
                        –í–∑—è—Ç–∏ —É—á–∞—Å—Ç—å
                    </button>
                    <div class="mini-participants-count">
                        <span class="mini-icon">üë•</span>
                        <span class="mini-count">${raffle.participants_count || 0}</span>
                    </div>
                </div>
            </div>`;
        });

        return html;
    };

    /**
     * –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Ç–∞–π–º–µ—Ä—ñ–≤ –∑–≤–æ—Ä–æ—Ç–Ω–æ–≥–æ –≤—ñ–¥–ª—ñ–∫—É
     */
    window.WinixRaffles.initializeCountdownTimers = function() {
        try {
            // –ó–∞–ø–æ–±—ñ–≥–∞—î–º–æ –æ–¥–Ω–æ—á–∞—Å–Ω–æ–º—É –æ–Ω–æ–≤–ª–µ–Ω–Ω—é —Ç–∞–π–º–µ—Ä—ñ–≤
            if (state.updatingTimers) {
                return;
            }

            state.updatingTimers = true;

            // –ó—É–ø–∏–Ω—è—î–º–æ —ñ—Å–Ω—É—é—á—ñ —Ç–∞–π–º–µ—Ä–∏
            this._clearCountdownTimers();

            // –û–±—Ä–æ–±–ª—è—î–º–æ –∫–æ–∂–µ–Ω —Ä–æ–∑—ñ–≥—Ä–∞—à
            this.state.activeRaffles.forEach(raffle => {
                if (!raffle.end_time) return;

                const raffleId = raffle.id;
                const endTime = new Date(raffle.end_time).getTime();

                // –ü–æ—á–∞—Ç–∫–æ–≤–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–Ω–∞—á–µ–Ω—å
                this._updateCountdownValues(raffleId, endTime);

                // –°—Ç–≤–æ—Ä—é—î–º–æ —Ç–∞–π–º–µ—Ä –¥–ª—è —Ä–æ–∑—ñ–≥—Ä–∞—à—É
                state.countdownTimers[raffleId] = setInterval(() => {
                    this._updateCountdownValues(raffleId, endTime);
                }, config.timerUpdateInterval);
            });

            state.updatingTimers = false;
        } catch (error) {
            console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó —Ç–∞–π–º–µ—Ä—ñ–≤:", error);
            state.updatingTimers = false;
        }
    };

    /**
     * –û—á–∏—â–µ–Ω–Ω—è —Ç–∞–π–º–µ—Ä—ñ–≤ –∑–≤–æ—Ä–æ—Ç–Ω–æ–≥–æ –≤—ñ–¥–ª—ñ–∫—É
     * @private
     */
    window.WinixRaffles._clearCountdownTimers = function() {
        for (const timerId in state.countdownTimers) {
            if (state.countdownTimers.hasOwnProperty(timerId)) {
                clearInterval(state.countdownTimers[timerId]);
            }
        }
        state.countdownTimers = {};
    };

    /**
     * –û–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–Ω–∞—á–µ–Ω—å —Ç–∞–π–º–µ—Ä–∞
     * @param {string} raffleId - ID —Ä–æ–∑—ñ–≥—Ä–∞—à—É
     * @param {number} endTime - –ß–∞—Å –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –≤ –º—ñ–ª—ñ—Å–µ–∫—É–Ω–¥–∞—Ö
     * @private
     */
    window.WinixRaffles._updateCountdownValues = function(raffleId, endTime) {
        const now = Date.now();
        const timeLeft = endTime - now;

        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —Ä–æ–∑—ñ–≥—Ä–∞—à –∑–∞–∫—ñ–Ω—á–∏–≤—Å—è
        if (timeLeft <= 0) {
            // –ó—É–ø–∏–Ω—è—î–º–æ —Ç–∞–π–º–µ—Ä
            if (state.countdownTimers[raffleId]) {
                clearInterval(state.countdownTimers[raffleId]);
                delete state.countdownTimers[raffleId];
            }

            // –î–æ–¥–∞—î–º–æ –¥–æ –Ω–µ–≤–∞–ª—ñ–¥–Ω–∏—Ö
            state.invalidRaffleIds.add(raffleId);

            if (this.participation && this.participation.invalidRaffleIds) {
                this.participation.invalidRaffleIds.add(raffleId);
            }

            // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –Ω—É–ª—ñ
            this._safeUpdateCountdownElement(`days-${raffleId}`, '00');
            this._safeUpdateCountdownElement(`hours-${raffleId}`, '00');
            this._safeUpdateCountdownElement(`minutes-${raffleId}`, '00');
            this._safeUpdateCountdownElement(`seconds-${raffleId}`, '00');

            // –û–Ω–æ–≤–ª—é—î–º–æ –∫–Ω–æ–ø–∫–∏ —É—á–∞—Å—Ç—ñ
            this.updateParticipationButtons();
            return;
        }

        // –û–±—á–∏—Å–ª—é—î–º–æ –∑–Ω–∞—á–µ–Ω–Ω—è
        const days = Math.floor(timeLeft / (1000 * 60 * 60 * 24));
        const hours = Math.floor((timeLeft % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
        const minutes = Math.floor((timeLeft % (1000 * 60 * 60)) / (1000 * 60));
        const seconds = Math.floor((timeLeft % (1000 * 60)) / 1000);

        // –û–Ω–æ–≤–ª—é—î–º–æ –µ–ª–µ–º–µ–Ω—Ç–∏
        this._safeUpdateCountdownElement(`days-${raffleId}`, days.toString().padStart(2, '0'));
        this._safeUpdateCountdownElement(`hours-${raffleId}`, hours.toString().padStart(2, '0'));
        this._safeUpdateCountdownElement(`minutes-${raffleId}`, minutes.toString().padStart(2, '0'));
        this._safeUpdateCountdownElement(`seconds-${raffleId}`, seconds.toString().padStart(2, '0'));
    };

    /**
     * –ë–µ–∑–ø–µ—á–Ω–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç—É —Ç–∞–π–º–µ—Ä–∞
     * @param {string} elementId - ID –µ–ª–µ–º–µ–Ω—Ç–∞
     * @param {string} value - –ù–æ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è
     * @private
     */
    window.WinixRaffles._safeUpdateCountdownElement = function(elementId, value) {
        try {
            const element = document.getElementById(elementId);
            if (element && element.textContent !== value) {
                element.textContent = value;
            }
        } catch (e) {
            // –Ü–≥–Ω–æ—Ä—É—î–º–æ –ø–æ–º–∏–ª–∫–∏ –¥–ª—è —Å—Ç–∞–±—ñ–ª—å–Ω–æ—Å—Ç—ñ
        }
    };

    /**
     * –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É
     * @param {string} title - –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø–æ–º–∏–ª–∫–∏
     * @param {string} message - –¢–µ–∫—Å—Ç –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
     */
    window.WinixRaffles.renderError = function(title, message) {
        try {
            // –û—Ç—Ä–∏–º—É—î–º–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
            const container = document.getElementById('active-raffles');
            if (!container) return;

            // –î–æ–¥–∞—î–º–æ HTML –¥–ª—è –ø–æ–º–∏–ª–∫–∏
            container.innerHTML = `
                <div class="error-container">
                    <div class="error-icon">‚ùå</div>
                    <h3 class="error-title">${title}</h3>
                    <p class="error-message">${message}</p>
                    <button class="retry-button" onclick="WinixRaffles.loadActiveRaffles(true)">
                        –°–ø—Ä–æ–±—É–≤–∞—Ç–∏ –∑–Ω–æ–≤—É
                    </button>
                </div>
            `;
        } catch (error) {
            console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É:", error);
        }
    };

    /**
     * –û–Ω–æ–≤–ª–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
     * @param {boolean} forceRefresh - –ü—Ä–∏–º—É—Å–æ–≤–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
     * @returns {Promise<Object>} –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
     */
    window.WinixRaffles.refreshUserBalance = async function(forceRefresh = false) {
        // –°—Ç–≤–æ—Ä—é—î–º–æ —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó
        const transactionId = 'balance_' + Date.now();

        try {
            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∫–æ–Ω—Ç—Ä–æ–ª–µ—Ä —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó
            if (window.__winixSyncControl &&
                window.__winixSyncControl.isBlocked &&
                window.__winixSyncControl.isBlocked('raffles_balance') &&
                !forceRefresh) {

                console.log("üîí –û–Ω–æ–≤–ª–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–æ –∫–æ–Ω—Ç—Ä–æ–ª–µ—Ä–æ–º —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó");

                if (window.__winixSyncControl.lastValidBalance !== null) {
                    return {
                        success: true,
                        blocked: true,
                        source: 'sync_control',
                        data: {
                            coins: window.__winixSyncControl.lastValidBalance
                        }
                    };
                }
            }

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∞—Å—Ç–æ—Ç—É –∑–∞–ø–∏—Ç—ñ–≤
            const now = Date.now();
            if (!forceRefresh && (now - state.lastBalanceUpdate < 5000)) {
                console.log("‚è≥ –ó–∞–Ω–∞–¥—Ç–æ —á–∞—Å—Ç–∏–π –∑–∞–ø–∏—Ç –±–∞–ª–∞–Ω—Å—É");
                return {
                    success: true,
                    throttled: true,
                    message: "–ó–∞–Ω–∞–¥—Ç–æ —á–∞—Å—Ç–∏–π –∑–∞–ø–∏—Ç –±–∞–ª–∞–Ω—Å—É"
                };
            }

            // –û–Ω–æ–≤–ª—é—î–º–æ —á–∞—Å –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ –∑–∞–ø–∏—Ç—É
            state.lastBalanceUpdate = now;

            // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ WinixCore –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É
            if (window.WinixCore && typeof window.WinixCore.refreshBalance === 'function') {
                console.log('üîÑ –î–µ–ª–µ–≥—É—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É –¥–æ WinixCore');
                return await window.WinixCore.refreshBalance(forceRefresh);
            }

            // –ó–∞–ø–∞—Å–Ω–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç —á–µ—Ä–µ–∑ API
            if (window.WinixAPI && typeof window.WinixAPI.getBalance === 'function') {
                console.log('üîÑ –ó–∞–ø–∏—Ç –±–∞–ª–∞–Ω—Å—É —á–µ—Ä–µ–∑ WinixAPI');

                // –û—Ç—Ä–∏–º—É—î–º–æ –ø–æ—Ç–æ—á–Ω–∏–π –±–∞–ª–∞–Ω—Å –¥–ª—è –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è
                const oldBalance = this._getCurrentCoins();

                // –ó–∞–ø–∏—Ç —á–µ—Ä–µ–∑ API
                const response = await window.WinixAPI.getBalance();

                if (response && response.status === 'success' && response.data) {
                    const newBalance = response.data.coins;

                    if (window.__winixSyncControl) {
                        window.__winixSyncControl.setServerBalance(newBalance, 'core_refresh');
                    }

                    // –û–Ω–æ–≤–ª—é—î–º–æ DOM
                    this._updateBalanceDisplay(newBalance, oldBalance);

                    // –û–Ω–æ–≤–ª—é—î–º–æ –ª–æ–∫–∞–ª—å–Ω–µ —Å—Ö–æ–≤–∏—â–µ
                    localStorage.setItem('userCoins', newBalance.toString());
                    localStorage.setItem('winix_coins', newBalance.toString());
                    localStorage.setItem('winix_balance_update_time', now.toString());

                    // –ì–µ–Ω–µ—Ä—É—î–º–æ –ø–æ–¥—ñ—é
                    document.dispatchEvent(new CustomEvent('balance-updated', {
                        detail: {
                            oldBalance: oldBalance,
                            newBalance: newBalance,
                            source: 'raffles.core',
                            transactionId: transactionId
                        }
                    }));

                    return {
                        success: true,
                        data: {
                            coins: newBalance
                        }
                    };
                } else {
                    throw new Error(response?.message || '–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –±–∞–ª–∞–Ω—Å');
                }
            }

            // –Ø–∫—â–æ –∂–æ–¥–µ–Ω –º–µ—Ç–æ–¥ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∏–π
            return {
                success: false,
                message: 'API –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–µ'
            };
        } catch (error) {
            console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É:', error);

            return {
                success: false,
                message: error.message || '–ù–µ –≤–¥–∞–ª–æ—Å—è –æ–Ω–æ–≤–∏—Ç–∏ –±–∞–ª–∞–Ω—Å'
            };
        }
    };

    /**
     * –û—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–æ—Ç–æ—á–Ω–æ–≥–æ –±–∞–ª–∞–Ω—Å—É
     * @returns {number} –ü–æ—Ç–æ—á–Ω–∏–π –±–∞–ª–∞–Ω—Å
     * @private
     */
    window.WinixRaffles._getCurrentCoins = function() {
        // –ó DOM
        const userCoinsElement = document.getElementById('user-coins');
        if (userCoinsElement) {
            return parseInt(userCoinsElement.textContent) || 0;
        }

        // –ó localStorage
        return parseInt(localStorage.getItem('userCoins') || localStorage.getItem('winix_coins')) || 0;
    };

    /**
     * –û–Ω–æ–≤–ª–µ–Ω–Ω—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É
     * @param {number} newBalance - –ù–æ–≤–∏–π –±–∞–ª–∞–Ω—Å
     * @param {number} oldBalance - –°—Ç–∞—Ä–∏–π –±–∞–ª–∞–Ω—Å
     * @private
     */
    window.WinixRaffles._updateBalanceDisplay = function(newBalance, oldBalance) {
        const userCoinsElement = document.getElementById('user-coins');
        if (!userCoinsElement) return;

        // –î–æ–¥–∞—î–º–æ –∞–Ω—ñ–º–∞—Ü—ñ—é
        userCoinsElement.classList.remove('decreasing', 'increasing');

        if (newBalance < oldBalance) {
            userCoinsElement.classList.add('decreasing');
        } else if (newBalance > oldBalance) {
            userCoinsElement.classList.add('increasing');
        }

        // –û–Ω–æ–≤–ª—é—î–º–æ –∑–Ω–∞—á–µ–Ω–Ω—è
        userCoinsElement.textContent = newBalance;

        // –í–∏–¥–∞–ª—è—î–º–æ –∫–ª–∞—Å–∏ –∞–Ω—ñ–º–∞—Ü—ñ—ó —á–µ—Ä–µ–∑ 1 —Å–µ–∫—É–Ω–¥—É
        setTimeout(() => {
            userCoinsElement.classList.remove('decreasing', 'increasing');
        }, 1000);
    };

    // –î–æ–¥–∞–≤–∞–Ω–Ω—è –º–µ—Ç–æ–¥—É getUserBalanceSource –¥–ª—è –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
    window.WinixRaffles.getUserBalanceSource = function() {
        // –°—Ç–≤–æ—Ä—é—î–º–æ –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏—á–Ω–∏–π –æ–±'—î–∫—Ç
        const diagnostic = {
            domValue: null,
            localStorage: null,
            serverStored: null,
            serverTimestamp: null,
            syncControl: null,
            winixCore: null,
            participation: null,
            participationTime: null,
            conflicts: [],
            selectedSource: 'unknown',
            selectedValue: 0
        };

        try {
            // 1. –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ –∑ DOM
            const userCoinsElement = document.getElementById('user-coins');
            if (userCoinsElement) {
                diagnostic.domValue = parseInt(userCoinsElement.textContent) || 0;
            }

            // 2. –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ –∑ localStorage
            diagnostic.localStorage = parseInt(localStorage.getItem('userCoins') || localStorage.getItem('winix_coins') || '0');

            // 3. –û—Ç—Ä–∏–º—É—î–º–æ —Å–µ—Ä–≤–µ—Ä–Ω—ñ –¥–∞–Ω—ñ
            diagnostic.serverStored = parseInt(localStorage.getItem('winix_server_balance') || '0');
            diagnostic.serverTimestamp = parseInt(localStorage.getItem('winix_server_balance_ts') || '0');

            // 4. –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ –∑ –∫–æ–Ω—Ç—Ä–æ–ª–µ—Ä–∞ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó
            if (window.__winixSyncControl && window.__winixSyncControl.lastValidBalance !== null) {
                diagnostic.syncControl = window.__winixSyncControl.lastValidBalance;
            }

            // 5. –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ –∑ WinixCore
            if (window.WinixCore && typeof window.WinixCore.getCoins === 'function') {
                diagnostic.winixCore = window.WinixCore.getCoins();
            }

            // 6. –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ –∑ participation
            if (window.WinixRaffles && window.WinixRaffles.participation) {
                diagnostic.participation = window.WinixRaffles.participation.lastKnownBalance;
                diagnostic.participationTime = window.WinixRaffles.participation.lastBalanceUpdateTime;
            }

            // –í–∏—è–≤–ª–µ–Ω–Ω—è –∫–æ–Ω—Ñ–ª—ñ–∫—Ç—ñ–≤
            const values = [
                diagnostic.domValue,
                diagnostic.localStorage,
                diagnostic.serverStored,
                diagnostic.syncControl,
                diagnostic.winixCore,
                diagnostic.participation
            ].filter(val => val !== null && val !== undefined);

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å —Ä—ñ–∑–Ω–∏—Ö –∑–Ω–∞—á–µ–Ω—å
            const uniqueValues = [...new Set(values)];
            if (uniqueValues.length > 1) {
                diagnostic.conflicts = uniqueValues;
            }

            // –í–∏–∑–Ω–∞—á–∞—î–º–æ –≤–∏–±—Ä–∞–Ω–µ –¥–∂–µ—Ä–µ–ª–æ
            // –ü—Ä—ñ–æ—Ä–∏—Ç–µ—Ç: serverStored (—Å–≤—ñ–∂–∏–π) -> syncControl -> winixCore -> localStorage
            const now = Date.now();

            if (diagnostic.serverStored && diagnostic.serverTimestamp &&
                now - diagnostic.serverTimestamp < 120000) {
                diagnostic.selectedSource = 'server';
                diagnostic.selectedValue = diagnostic.serverStored;
            } else if (diagnostic.syncControl !== null) {
                diagnostic.selectedSource = 'syncControl';
                diagnostic.selectedValue = diagnostic.syncControl;
            } else if (diagnostic.winixCore !== null) {
                diagnostic.selectedSource = 'winixCore';
                diagnostic.selectedValue = diagnostic.winixCore;
            } else if (diagnostic.localStorage !== null) {
                diagnostic.selectedSource = 'localStorage';
                diagnostic.selectedValue = diagnostic.localStorage;
            } else if (diagnostic.domValue !== null) {
                diagnostic.selectedSource = 'dom';
                diagnostic.selectedValue = diagnostic.domValue;
            }

            return diagnostic;
        } catch (e) {
            console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –¥–∂–µ—Ä–µ–ª –±–∞–ª–∞–Ω—Å—É:', e);
            return {
                error: e.message,
                domValue: document.getElementById('user-coins')?.textContent || 'N/A'
            };
        }
    };

    // –î–æ–¥–∞—î–º–æ –≥–ª–æ–±–∞–ª—å–Ω—ñ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π
    window.addEventListener('error', function(event) {
        console.error('–ì–ª–æ–±–∞–ª—å–Ω–∞ –ø–æ–º–∏–ª–∫–∞ JavaScript:', event.error);

        // –°–∫–∏–¥–∞—î–º–æ —Å—Ç–∞–Ω –ø—Ä–∏ –ø–æ–º–∏–ª—Ü—ñ
        if (window.WinixRaffles) {
            if (window.WinixRaffles.state && window.WinixRaffles.state.isLoading) {
                window.WinixRaffles.state.isLoading = false;
                state.isLoading = false;
            }

            // –°–∫–∏–¥–∞—î–º–æ —Å—Ç–∞–Ω participation
            if (window.WinixRaffles.participation) {
                window.WinixRaffles.participation.requestInProgress = false;
            }

            // –ü—Ä–∏—Ö–æ–≤—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
            if (typeof window.hideLoading === 'function') {
                window.hideLoading();
            }
        }
    });

    // –û–±—Ä–æ–±–Ω–∏–∫ –Ω–µ–æ–±—Ä–æ–±–ª–µ–Ω–∏—Ö Promise –ø–æ–º–∏–ª–æ–∫
    window.addEventListener('unhandledrejection', function(event) {
        console.error('–ù–µ–æ–±—Ä–æ–±–ª–µ–Ω–∞ Promise –ø–æ–º–∏–ª–∫–∞:', event.reason);

        // –°–∫–∏–¥–∞—î–º–æ —Å—Ç–∞–Ω —Å–ø—ñ–Ω–µ—Ä–∞
        if (typeof window.resetLoadingState === 'function') {
            window.resetLoadingState();
        }

        // –°–∫–∏–¥–∞—î–º–æ —Å—Ç–∞–Ω participation
        if (window.WinixRaffles && window.WinixRaffles.participation) {
            window.WinixRaffles.participation.requestInProgress = false;
        }

        // –°–∫–∏–¥–∞—î–º–æ —Å—Ç–∞–Ω –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–∞–π–º–µ—Ä—ñ–≤
        state.updatingTimers = false;
    });

    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ —Å–∏—Å—Ç–µ–º—É –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
    document.addEventListener('DOMContentLoaded', function() {
        console.log('‚úÖ –ú–æ–¥—É–ª—å raffles/core.js —É—Å–ø—ñ—à–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ, –≤–µ—Ä—Å—ñ—è 2.0.0');
    });
})();