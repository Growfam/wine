/**
 * core.js - –ë–∞–∑–æ–≤–∞ —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω—ñ—Å—Ç—å WINIX
 * –û–ø—Ç–∏–º—ñ–∑–æ–≤–∞–Ω–∞ –≤–µ—Ä—Å—ñ—è –∑ –ø–æ–∫—Ä–∞—â–µ–Ω–æ—é —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—î—é –∑ API —Ç–∞ Auth –º–æ–¥—É–ª—è–º–∏
 * @version 1.3.0
 */

(function() {
    'use strict';

    console.log("üîÑ Core: –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —è–¥—Ä–∞ WINIX");

    // ======== –ü–†–ò–í–ê–¢–ù–Ü –ó–ú–Ü–ù–ù–Ü ========

    // –î–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    let _userData = null;

    // –Ü–Ω—Ç–µ—Ä–≤–∞–ª –∞–≤—Ç–æ–æ–Ω–æ–≤–ª–µ–Ω–Ω—è
    let _refreshInterval = null;

    // –ü—Ä–∞–ø–æ—Ä–µ—Ü—å –¥–ª—è —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
    let _loaderVisible = false;

    // –õ—ñ—á–∏–ª—å–Ω–∏–∫ –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ –∑–∞–ø–∏—Ç—É
    let _lastRequestTime = 0;

    // –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–π —ñ–Ω—Ç–µ—Ä–≤–∞–ª –º—ñ–∂ –∑–∞–ø–∏—Ç–∞–º–∏ (–∑–±—ñ–ª—å—à–µ–Ω–æ –∑ 5 –¥–æ 15 —Å–µ–∫—É–Ω–¥)
    const MIN_REQUEST_INTERVAL = 15000;

    // –ß–∞—Å –∂–∏—Ç—Ç—è –∫–µ—à—É –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    const USER_CACHE_TTL = 300000; // 5 —Ö–≤–∏–ª–∏–Ω

    // –ü—Ä–∞–ø–æ—Ä–µ—Ü—å, —â–æ –≤–∫–∞–∑—É—î, —á–∏ –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è –∑–∞–ø–∏—Ç –¥–æ API
    let _requestInProgress = false;

    // –õ—ñ—á–∏–ª—å–Ω–∏–∫ –ø–æ–º–∏–ª–æ–∫ - –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –∫—Ä–∏—Ç–∏—á–Ω–∏—Ö –ø—Ä–æ–±–ª–µ–º
    let _errorCounter = 0;
    const MAX_ERRORS_BEFORE_RESET = 5;
    let _lastErrorTime = 0;

    // –ü—Ä–∞–ø–æ—Ä–µ—Ü—å —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó —è–¥—Ä–∞
    let _coreInitialized = false;

    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—ñ –º–æ–¥—É–ª—ñ–≤ –∑ –ø–æ–≤–Ω–æ—é –ø–µ—Ä–µ–≤—ñ—Ä–∫–æ—é
    const hasApiModule = () => {
        try {
            return window.WinixAPI &&
                   typeof window.WinixAPI.apiRequest === 'function' &&
                   typeof window.WinixAPI.getUserId === 'function';
        } catch (e) {
            console.error("üîÑ Core: –ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ API –º–æ–¥—É–ª—è:", e);
            return false;
        }
    };

    const hasAuthModule = () => {
        try {
            return window.WinixAuth &&
                   typeof window.WinixAuth.getUserData === 'function' &&
                   typeof window.WinixAuth.getUserIdFromAllSources === 'function';
        } catch (e) {
            console.error("üîÑ Core: –ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ Auth –º–æ–¥—É–ª—è:", e);
            return false;
        }
    };

    // ======== –£–¢–ò–õ–Ü–¢–ò ========

    /**
     * –û—Ç—Ä–∏–º–∞–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç–∞ DOM
     * @param {string} selector - –°–µ–ª–µ–∫—Ç–æ—Ä –µ–ª–µ–º–µ–Ω—Ç–∞
     * @param {boolean} multiple - –û—Ç—Ä–∏–º–∞—Ç–∏ –≤—Å—ñ –µ–ª–µ–º–µ–Ω—Ç–∏
     */
    function getElement(selector, multiple = false) {
        try {
            if (multiple) {
                return document.querySelectorAll(selector);
            }
            if (selector.startsWith('#')) {
                return document.getElementById(selector.substring(1));
            }
            return document.querySelector(selector);
        } catch (e) {
            console.error('–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç–∞ DOM:', e);
            return null;
        }
    }

    /**
     * –ó–±–µ—Ä—ñ–≥–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –≤ localStorage
     * @param {string} key - –ö–ª—é—á
     * @param {any} value - –ó–Ω–∞—á–µ–Ω–Ω—è
     */
    function saveToStorage(key, value) {
        try {
            if (typeof value === 'object') {
                localStorage.setItem(key, JSON.stringify(value));
            } else {
                localStorage.setItem(key, value);
            }
            return true;
        } catch (e) {
            console.error(`–ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –≤ localStorage: ${key}`, e);
            return false;
        }
    }

    /**
     * –û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –∑ localStorage
     * @param {string} key - –ö–ª—é—á
     * @param {any} defaultValue - –ó–Ω–∞—á–µ–Ω–Ω—è –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
     * @param {boolean} isObject - –ß–∏ –ø–∞—Ä—Å–∏—Ç–∏ —è–∫ –æ–±'—î–∫—Ç
     */
    function getFromStorage(key, defaultValue = null, isObject = false) {
        try {
            const value = localStorage.getItem(key);
            if (value === null) return defaultValue;

            if (isObject) {
                try {
                    return JSON.parse(value);
                } catch (e) {
                    return defaultValue;
                }
            }

            return value;
        } catch (e) {
            return defaultValue;
        }
    }

    /**
     * –§–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è —á–∏—Å–ª–∞ —è–∫ –≤–∞–ª—é—Ç–∏
     * @param {number} amount - –°—É–º–∞
     * @param {number} decimals - –ö—ñ–ª—å–∫—ñ—Å—Ç—å –∑–Ω–∞–∫—ñ–≤ –ø—ñ—Å–ª—è –∫–æ–º–∏
     */
    function formatCurrency(amount, decimals = 2) {
        try {
            const numberFormat = new Intl.NumberFormat('uk-UA', {
                maximumFractionDigits: decimals,
                minimumFractionDigits: decimals
            });
            return numberFormat.format(parseFloat(amount) || 0);
        } catch (e) {
            return (parseFloat(amount) || 0).toFixed(decimals);
        }
    }

    /**
     * –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ –ø—Ä–∏—Å—Ç—Ä—ñ–π –æ–Ω–ª–∞–π–Ω
     * @returns {boolean} –°—Ç–∞–Ω –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è
     */
    function isOnline() {
        return typeof navigator.onLine === 'undefined' || navigator.onLine;
    }

    /**
     * –§—É–Ω–∫—Ü—ñ—è –±–µ–∑–ø–µ—á–Ω–æ–≥–æ –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è API —Ç–∞ Auth –º–æ–¥—É–ª—ñ–≤
     * @param {number} maxWaitTime - –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∏–π —á–∞—Å –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è –≤ –º—Å
     * @returns {Promise<boolean>} –†–µ–∑—É–ª—å—Ç–∞—Ç –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è
     */
    async function waitForModules(maxWaitTime = 5000) {
        const startTime = Date.now();
        const checkInterval = 200; // 200 –º—Å –º—ñ–∂ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞–º–∏

        // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—ñ –æ–±–æ—Ö –º–æ–¥—É–ª—ñ–≤
        const checkModules = () => hasApiModule() && hasAuthModule();

        // –Ø–∫—â–æ –º–æ–¥—É–ª—ñ –≤–∂–µ –¥–æ—Å—Ç—É–ø–Ω—ñ, –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ true
        if (checkModules()) {
            console.log("üîÑ Core: API —Ç–∞ Auth –º–æ–¥—É–ª—ñ –≤–∂–µ –¥–æ—Å—Ç—É–ø–Ω—ñ");
            return true;
        }

        // –û—á—ñ–∫—É—î–º–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –º–æ–¥—É–ª—ñ–≤
        return new Promise(resolve => {
            const intervalId = setInterval(() => {
                // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –¥–æ—Å—Ç—É–ø–Ω—ñ—Å—Ç—å –º–æ–¥—É–ª—ñ–≤
                if (checkModules()) {
                    clearInterval(intervalId);
                    console.log("üîÑ Core: API —Ç–∞ Auth –º–æ–¥—É–ª—ñ —É—Å–ø—ñ—à–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω—ñ");
                    resolve(true);
                    return;
                }

                // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ç–∞–π–º–∞—É—Ç
                if (Date.now() - startTime > maxWaitTime) {
                    clearInterval(intervalId);
                    console.warn("‚ö†Ô∏è Core: –ß–∞—Å –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –º–æ–¥—É–ª—ñ–≤ –≤–∏—á–µ—Ä–ø–∞–Ω–æ");
                    resolve(false);
                }
            }, checkInterval);
        });
    }

    /**
     * –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Å–∫–∏–¥–∞–Ω–Ω—è —Å—Ç–∞–Ω—É —Ç–∞ –ø–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø—ñ—Å–ª—è –∫—Ä–∏—Ç–∏—á–Ω–∏—Ö –ø–æ–º–∏–ª–æ–∫
     */
    function resetAndReloadApplication() {
        console.log("üîÑ Core: –°–∫–∏–¥–∞–Ω–Ω—è —Å—Ç–∞–Ω—É –¥–æ–¥–∞—Ç–∫—É —á–µ—Ä–µ–∑ –∫—Ä–∏—Ç–∏—á–Ω—ñ –ø–æ–º–∏–ª–∫–∏...");

        try {
            // –û—á–∏—â–∞—î–º–æ –∫–µ—à API
            if (hasApiModule() && typeof window.WinixAPI.clearCache === 'function') {
                window.WinixAPI.clearCache();
            }

            // –û—á–∏—â–∞—î–º–æ –ª–æ–∫–∞–ª—å–Ω–µ —Å—Ö–æ–≤–∏—â–µ
            try {
                // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ª–∏—à–µ –∫—Ä–∏—Ç–∏—á–Ω—ñ –¥–∞–Ω—ñ –¥–ª—è –∞–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó
                const userId = getFromStorage('telegram_user_id');
                const authToken = getFromStorage('auth_token');

                // –û—á–∏—â–∞—î–º–æ –∫–µ—à
                localStorage.clear();

                // –í—ñ–¥–Ω–æ–≤–ª—é—î–º–æ –∫—Ä–∏—Ç–∏—á–Ω—ñ –¥–∞–Ω—ñ
                if (userId) saveToStorage('telegram_user_id', userId);
                if (authToken) saveToStorage('auth_token', authToken);
            } catch (e) {
                console.warn("‚ö†Ô∏è Core: –ü–æ–º–∏–ª–∫–∞ –æ—á–∏—â–µ–Ω–Ω—è localStorage:", e);
            }

            // –û—á–∏—â–∞—î–º–æ –∫–µ—à —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
            if (window.WinixRaffles && window.WinixRaffles.state) {
                window.WinixRaffles.state.activeRaffles = [];
                window.WinixRaffles.state.pastRaffles = [];
                window.WinixRaffles.state.isLoading = false;
            }

            // –ü–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —Å—Ç–æ—Ä—ñ–Ω–∫—É —á–µ—Ä–µ–∑ 1 —Å–µ–∫—É–Ω–¥—É
            setTimeout(function() {
                window.location.reload();
            }, 1000);
        } catch (e) {
            console.error("‚ùå Core: –ü–æ–º–∏–ª–∫–∞ —Å–∫–∏–¥–∞–Ω–Ω—è —Å—Ç–∞–Ω—É:", e);
            // –£ –≤–∏–ø–∞–¥–∫—É –∫—Ä–∏—Ç–∏—á–Ω–æ—ó –ø–æ–º–∏–ª–∫–∏ –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ
            setTimeout(function() {
                window.location.reload();
            }, 500);
        }
    }

    // ======== –§–£–ù–ö–¶–Ü–á –ö–û–†–ò–°–¢–£–í–ê–ß–ê ========

    /**
     * –û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
     * @param {boolean} forceRefresh - –ü—Ä–∏–º—É—Å–æ–≤–æ –æ–Ω–æ–≤–∏—Ç–∏
     */
    async function getUserData(forceRefresh = false) {
        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –ø—Ä–∏—Å—Ç—Ä—ñ–π –æ–Ω–ª–∞–π–Ω
        if (!isOnline() && !forceRefresh) {
            console.warn("üîÑ Core: –ü—Ä–∏—Å—Ç—Ä—ñ–π –æ—Ñ–ª–∞–π–Ω, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∫–µ—à–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ");

            // –Ø–∫—â–æ —î –∑–±–µ—Ä–µ–∂–µ–Ω—ñ –¥–∞–Ω—ñ, –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ —ó—Ö
            if (_userData) {
                return _userData;
            }

            // –°—Ç–≤–æ—Ä—é—î–º–æ –±–∞–∑–æ–≤—ñ –¥–∞–Ω—ñ –∑ localStorage
            const storedData = getFromStorage('userData', null, true);
            if (storedData) {
                _userData = storedData;
                return _userData;
            }

            // –°—Ç–≤–æ—Ä—é—î–º–æ –º—ñ–Ω—ñ–º–∞–ª—å–Ω—ñ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ localStorage
            const userId = getUserId();
            _userData = {
                telegram_id: userId || 'unknown',
                balance: parseFloat(getFromStorage('userTokens', '0')),
                coins: parseInt(getFromStorage('userCoins', '0')),
                source: 'localStorage_offline'
            };

            return _userData;
        }

        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∞—Å—Ç–æ—Ç—É –∑–∞–ø–∏—Ç—ñ–≤
        const now = Date.now();
        if (!forceRefresh && (now - _lastRequestTime < MIN_REQUEST_INTERVAL)) {
            console.log("üîÑ Core: –ó–∞–Ω–∞–¥—Ç–æ —á–∞—Å—Ç–∏–π –∑–∞–ø–∏—Ç –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∫–µ—à");
            // –Ø–∫—â–æ —É –Ω–∞—Å –≤–∂–µ —î –¥–∞–Ω—ñ —ñ –Ω–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ –æ–Ω–æ–≤–ª—é–≤–∞—Ç–∏
            if (_userData) {
                return _userData;
            }
        }

        // –ó–∞–ø–æ–±—ñ–≥–∞—î–º–æ –ø–∞—Ä–∞–ª–µ–ª—å–Ω–∏–º –∑–∞–ø–∏—Ç–∞–º
        if (_requestInProgress && !forceRefresh) {
            console.log("üîÑ Core: –ó–∞–ø–∏—Ç –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤–∂–µ –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è");

            // –Ø–∫—â–æ —É –Ω–∞—Å –≤–∂–µ —î –¥–∞–Ω—ñ, –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ —ó—Ö
            if (_userData) {
                return _userData;
            }

            // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –∑ localStorage
            const storedData = getFromStorage('userData', null, true);
            if (storedData) {
                _userData = storedData;
                return _userData;
            }
        }

        _lastRequestTime = now;
        _requestInProgress = true;

        try {
            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –º–æ–¥—É–ª—ñ–≤
            if (hasAuthModule()) {
                // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ WinixAuth, —è–∫—â–æ –¥–æ—Å—Ç—É–ø–Ω–∏–π
                const userData = await window.WinixAuth.getUserData(forceRefresh);

                _requestInProgress = false;

                if (userData) {
                    _userData = userData;

                    // –û–Ω–æ–≤–ª—é—î–º–æ –¥–∞–Ω—ñ –≤ localStorage
                    saveToStorage('userData', _userData);

                    // –ì–µ–Ω–µ—Ä—É—î–º–æ –ø–æ–¥—ñ—é –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
                    document.dispatchEvent(new CustomEvent('user-data-updated', {
                        detail: { userData: _userData },
                        source: 'core.js'
                    }));

                    return _userData;
                }
            } else if (hasApiModule()) {
                // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ WinixAPI, —è–∫—â–æ –¥–æ—Å—Ç—É–ø–Ω–∏–π
                const response = await window.WinixAPI.getUserData(forceRefresh);

                _requestInProgress = false;

                if (response && response.status === 'success' && response.data) {
                    _userData = response.data;

                    // –û–Ω–æ–≤–ª—é—î–º–æ –¥–∞–Ω—ñ –≤ localStorage
                    saveToStorage('userData', _userData);

                    // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —Ç–∞–∫–æ–∂ –æ–∫—Ä–µ–º—ñ –ø–æ–ª—è –¥–ª—è —Å—É–º—ñ—Å–Ω–æ—Å—Ç—ñ
                    if (_userData.balance !== undefined) {
                        saveToStorage('userTokens', _userData.balance.toString());
                        saveToStorage('winix_balance', _userData.balance.toString());
                    }

                    if (_userData.coins !== undefined) {
                        saveToStorage('userCoins', _userData.coins.toString());
                        saveToStorage('winix_coins', _userData.coins.toString());
                    }

                    // –ì–µ–Ω–µ—Ä—É—î–º–æ –ø–æ–¥—ñ—é –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
                    document.dispatchEvent(new CustomEvent('user-data-updated', {
                        detail: { userData: _userData },
                        source: 'core.js'
                    }));

                    // –°–∫–∏–¥–∞—î–º–æ –ª—ñ—á–∏–ª—å–Ω–∏–∫ –ø–æ–º–∏–ª–æ–∫ –ø—Ä–∏ —É—Å–ø—ñ—à–Ω–æ–º—É –∑–∞–ø–∏—Ç—ñ
                    _errorCounter = 0;

                    return _userData;
                }
            } else {
                _requestInProgress = false;

                // –Ø–∫—â–æ –Ω–µ–º–∞—î –º–æ–¥—É–ª—ñ–≤ - –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –¥–∞–Ω—ñ –∑ localStorage
                const storedUserData = getFromStorage('userData', null, true);
                if (storedUserData) {
                    _userData = storedUserData;
                    return _userData;
                }

                console.warn('üîÑ Core: API —Ç–∞ Auth –º–æ–¥—É–ª—ñ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ñ');

                // –°—Ç–≤–æ—Ä—é—î–º–æ –º—ñ–Ω—ñ–º–∞–ª—å–Ω—ñ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
                const userId = getUserId();
                _userData = {
                    telegram_id: userId || 'unknown',
                    balance: parseFloat(getFromStorage('userTokens', '0')),
                    coins: parseInt(getFromStorage('userCoins', '0')),
                    source: 'localStorage_no_modules'
                };

                return _userData;
            }
        } catch (error) {
            console.error('–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:', error);
            _requestInProgress = false;

            // –ó–±—ñ–ª—å—à—É—î–º–æ –ª—ñ—á–∏–ª—å–Ω–∏–∫ –ø–æ–º–∏–ª–æ–∫
            _errorCounter++;
            _lastErrorTime = Date.now();

            // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –∫—Ä–∏—Ç–∏—á–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ–º–∏–ª–æ–∫
            if (_errorCounter >= MAX_ERRORS_BEFORE_RESET) {
                console.warn(`‚ö†Ô∏è Core: –î–æ—Å—è–≥–Ω—É—Ç–æ –∫—Ä–∏—Ç–∏—á–Ω–æ—ó –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –ø–æ–º–∏–ª–æ–∫ (${_errorCounter}), —Å–∫–∏–¥–∞–Ω–Ω—è —Å—Ç–∞–Ω—É...`);

                if (typeof window.showToast === 'function') {
                    window.showToast('–í–∏–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º–∏ –∑`—î–¥–Ω–∞–Ω–Ω—è. –°–ø—Ä–æ–±–∞ –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è...', 'warning');
                }

                // –°–∫–∏–¥–∞—î–º–æ –ª—ñ—á–∏–ª—å–Ω–∏–∫ –ø–æ–º–∏–ª–æ–∫
                _errorCounter = 0;

                // –ó–∞–ø—É—Å–∫–∞—î–º–æ —Å–∫–∏–¥–∞–Ω–Ω—è —Å—Ç–∞–Ω—É —á–µ—Ä–µ–∑ 1 —Å–µ–∫—É–Ω–¥—É
                setTimeout(resetAndReloadApplication, 1000);
            }

            // –£ –≤–∏–ø–∞–¥–∫—É –ø–æ–º–∏–ª–∫–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –¥–∞–Ω—ñ –∑ localStorage
            const storedUserData = getFromStorage('userData', null, true);
            if (storedUserData) {
                _userData = storedUserData;
                return _userData;
            }

            // –°—Ç–≤–æ—Ä—é—î–º–æ –º—ñ–Ω—ñ–º–∞–ª—å–Ω—ñ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            const userId = getUserId();
            _userData = {
                telegram_id: userId || 'unknown',
                balance: parseFloat(getFromStorage('userTokens', '0')),
                coins: parseInt(getFromStorage('userCoins', '0')),
                source: 'localStorage_after_error'
            };

            return _userData;
        }
    }

    /**
     * –û—Ç—Ä–∏–º–∞–Ω–Ω—è ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
     * @returns {string|null} ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∞–±–æ null
     */
    function getUserId() {
        // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ API –∞–±–æ Auth –º–æ–¥—É–ª—å, —è–∫—â–æ –¥–æ—Å—Ç—É–ø–Ω—ñ
        if (hasApiModule()) {
            try {
                return window.WinixAPI.getUserId();
            } catch (e) {
                console.warn("üîÑ Core: –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è ID —á–µ—Ä–µ–∑ API:", e);
            }
        } else if (hasAuthModule() && typeof window.WinixAuth.getUserIdFromAllSources === 'function') {
            try {
                return window.WinixAuth.getUserIdFromAllSources();
            } catch (e) {
                console.warn("üîÑ Core: –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è ID —á–µ—Ä–µ–∑ Auth:", e);
            }
        }

        // –†–µ–∑–µ—Ä–≤–Ω–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç - –∑—ñ —Å—Ö–æ–≤–∏—â–∞
        try {
            const storedId = getFromStorage('telegram_user_id');
            if (storedId && storedId !== 'undefined' && storedId !== 'null') {
                return storedId;
            }
        } catch (e) {
            console.warn("üîÑ Core: –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è ID –∑—ñ —Å—Ö–æ–≤–∏—â–∞:", e);
        }

        // –ó DOM
        try {
            const userIdElement = getElement('#header-user-id');
            if (userIdElement && userIdElement.textContent) {
                const id = userIdElement.textContent.trim();
                if (id && id !== 'undefined' && id !== 'null') {
                    saveToStorage('telegram_user_id', id);
                    return id;
                }
            }
        } catch (e) {
            console.warn("üîÑ Core: –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è ID –∑ DOM:", e);
        }

        // –ó URL
        try {
            const urlParams = new URLSearchParams(window.location.search);
            const urlId = urlParams.get('id') || urlParams.get('user_id') || urlParams.get('telegram_id');
            if (urlId) {
                saveToStorage('telegram_user_id', urlId);
                return urlId;
            }
        } catch (e) {
            console.warn("üîÑ Core: –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è ID –∑ URL:", e);
        }

        return null;
    }

    /**
     * –û–Ω–æ–≤–ª–µ–Ω–Ω—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
     */
    function updateUserDisplay() {
        try {
            // –û—Ç—Ä–∏–º—É—î–º–æ –∞–∫—Ç—É–∞–ª—å–Ω—ñ –¥–∞–Ω—ñ
            const userData = _userData || {};
            const userId = userData.telegram_id || getUserId() || getFromStorage('telegram_user_id', 'Unknown ID');
            const username = userData.username || getFromStorage('username', 'User');

            // –û–Ω–æ–≤–ª—é—î–º–æ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            const userIdElement = getElement('#header-user-id');
            if (userIdElement) {
                userIdElement.textContent = userId;
            }

            // –û–Ω–æ–≤–ª—é—î–º–æ —ñ–º'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            const usernameElement = getElement('#username');
            if (usernameElement) {
                usernameElement.textContent = username;
            }

            // –û–Ω–æ–≤–ª—é—î–º–æ –∞–≤–∞—Ç–∞—Ä
            updateUserAvatar(username);
        } catch (e) {
            console.error('–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:', e);
        }
    }

    /**
     * –û–Ω–æ–≤–ª–µ–Ω–Ω—è –∞–≤–∞—Ç–∞—Ä–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
     * @param {string} username - –Ü–º'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
     */
    function updateUserAvatar(username) {
        try {
            const avatarElement = getElement('#profile-avatar');
            if (!avatarElement) return;

            // –û—á–∏—â–∞—î–º–æ –≤–º—ñ—Å—Ç –∞–≤–∞—Ç–∞—Ä–∞
            avatarElement.innerHTML = '';

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∞–≤–∞—Ç–∞—Ä–∞
            username = username || _userData?.username || getFromStorage('username', 'User');
            const avatarSrc = getFromStorage('userAvatarSrc') || getFromStorage('avatarSrc');

            if (avatarSrc) {
                // –°—Ç–≤–æ—Ä—é—î–º–æ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
                const img = document.createElement('img');
                img.src = avatarSrc;
                img.alt = username;
                img.onerror = () => {
                    // –Ø–∫—â–æ –Ω–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏, –ø–æ–∫–∞–∑—É—î–º–æ –ø–µ—Ä—à—É –ª—ñ—Ç–µ—Ä—É —ñ–º–µ–Ω—ñ
                    avatarElement.textContent = username[0].toUpperCase();
                };
                avatarElement.appendChild(img);
            } else {
                // –ü–æ–∫–∞–∑—É—î–º–æ –ø–µ—Ä—à—É –ª—ñ—Ç–µ—Ä—É —ñ–º–µ–Ω—ñ
                avatarElement.textContent = username[0].toUpperCase();
            }
        } catch (e) {
            console.error('–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∞–≤–∞—Ç–∞—Ä–∞:', e);
        }
    }

    /**
     * –û—Ç—Ä–∏–º–∞–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
     */
    function getBalance() {
        try {
            return _userData?.balance ||
                  parseFloat(getFromStorage('userTokens', '0')) ||
                  parseFloat(getFromStorage('winix_balance', '0')) || 0;
        } catch (e) {
            return 0;
        }
    }

    /**
     * –û—Ç—Ä–∏–º–∞–Ω–Ω—è –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –∂–µ—Ç–æ–Ω—ñ–≤
     */
    function getCoins() {
        try {
            return _userData?.coins ||
                  parseInt(getFromStorage('userCoins', '0')) ||
                  parseInt(getFromStorage('winix_coins', '0')) || 0;
        } catch (e) {
            return 0;
        }
    }

    /**
     * –û–Ω–æ–≤–ª–µ–Ω–Ω—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É
     */
    function updateBalanceDisplay() {
        try {
            // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω—ñ–≤
            const tokensElement = getElement('#user-tokens');
            if (tokensElement) {
                const balance = getBalance();
                tokensElement.textContent = formatCurrency(balance);
            }

            // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∂–µ—Ç–æ–Ω—ñ–≤
            const coinsElement = getElement('#user-coins');
            if (coinsElement) {
                const coins = getCoins();
                coinsElement.textContent = coins;
            }
        } catch (e) {
            console.error('–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É:', e);
        }
    }

    /**
 * –û–Ω–æ–≤–ª–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É –∑ —Å–µ—Ä–≤–µ—Ä–∞
 */
async function refreshBalance() {
    try {
        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –ø—Ä–∏—Å—Ç—Ä—ñ–π –æ–Ω–ª–∞–π–Ω
        if (!isOnline()) {
            console.warn("üîÑ Core: –ü—Ä–∏—Å—Ç—Ä—ñ–π –æ—Ñ–ª–∞–π–Ω, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –ª–æ–∫–∞–ª—å–Ω—ñ –¥–∞–Ω—ñ –±–∞–ª–∞–Ω—Å—É");

            // –û—Ç—Ä–∏–º—É—î–º–æ –æ—Å—Ç–∞–Ω–Ω—ñ –≤—ñ–¥–æ–º—ñ –¥–∞–Ω—ñ –±–∞–ª–∞–Ω—Å—É
            const lastKnownBalance = getBalance();
            const lastKnownCoins = getCoins();
            const lastUpdateTime = parseInt(localStorage.getItem('winix_balance_update_time') || '0');
            const now = Date.now();

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∞–∫—Ç—É–∞–ª—å–Ω—ñ—Å—Ç—å –¥–∞–Ω–∏—Ö
            const dataAge = now - lastUpdateTime;
            let dataStatus = 'fresh'; // 'fresh', 'stale', 'unknown'

            if (lastUpdateTime === 0) {
                dataStatus = 'unknown';
            } else if (dataAge > 30 * 60 * 1000) { // —Å—Ç–∞—Ä—à–µ 30 —Ö–≤–∏–ª–∏–Ω
                dataStatus = 'stale';
            }

            // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∑ –ª–æ–∫–∞–ª—å–Ω–∏—Ö –¥–∞–Ω–∏—Ö
            updateBalanceDisplay();

            return {
                success: true,
                offline: true,
                dataStatus: dataStatus,
                dataAge: dataAge,
                data: {
                    balance: lastKnownBalance,
                    coins: lastKnownCoins,
                    lastUpdate: lastUpdateTime
                }
            };
        }

        let balanceData;

        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å API –º–æ–¥—É–ª—è
        if (hasApiModule()) {
            // –ó–∞–ø–∞–º'—è—Ç–æ–≤—É—î–º–æ —Å—Ç–∞—Ä—ñ –∑–Ω–∞—á–µ–Ω–Ω—è –ø–µ—Ä–µ–¥ –∑–∞–ø–∏—Ç–æ–º
            const oldBalance = parseInt(localStorage.getItem('userCoins') || '0');
            const oldTokens = parseFloat(localStorage.getItem('userTokens') || '0');
            const oldLastUpdate = parseInt(localStorage.getItem('winix_balance_update_time') || '0');

            // –û—Ç—Ä–∏–º—É—î–º–æ –±–∞–ª–∞–Ω—Å –∑ API
            const response = await window.WinixAPI.getBalance();

            if (response && response.status === 'success' && response.data) {
                balanceData = response.data;
            } else {
                // –£ –≤–∏–ø–∞–¥–∫—É –ø–æ–º–∏–ª–∫–∏ API, –∞–ª–µ –Ω–µ –º–µ—Ä–µ–∂—ñ
                // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ —Å—Ç–∞—Ä—ñ –¥–∞–Ω—ñ –∞–ª–µ –∑—ñ —Å—Ç–∞—Ç—É—Å–æ–º –ø–æ–º–∏–ª–∫–∏
                console.warn('‚ö†Ô∏è API –ø–æ–≤–µ—Ä–Ω—É–ª–æ –ø–æ–º–∏–ª–∫—É:', response?.message);
                return {
                    success: false,
                    message: response?.message || '–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –±–∞–ª–∞–Ω—Å',
                    data: {
                        balance: oldTokens,
                        coins: oldBalance,
                        lastUpdate: oldLastUpdate
                    }
                };
            }
        } else {
            // –Ø–∫—â–æ API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π, –æ—Ç—Ä–∏–º—É—î–º–æ –ø–æ–≤–Ω—ñ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            const userData = await getUserData(true);
            balanceData = {
                balance: userData.balance || 0,
                coins: userData.coins || 0
            };
        }

            // –û–Ω–æ–≤–ª—é—î–º–æ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            if (!_userData) _userData = {};

            _userData.balance = balanceData.balance !== undefined ? balanceData.balance : _userData.balance || 0;
            _userData.coins = balanceData.coins !== undefined ? balanceData.coins : _userData.coins || 0;

            // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –≤ localStorage
            saveToStorage('userTokens', _userData.balance);
            saveToStorage('winix_balance', _userData.balance);
            saveToStorage('userCoins', _userData.coins);
            saveToStorage('winix_coins', _userData.coins);

            // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è
            updateBalanceDisplay();

            // –ì–µ–Ω–µ—Ä—É—î–º–æ –ø–æ–¥—ñ—é –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É
            document.dispatchEvent(new CustomEvent('balance-updated', {
                detail: {
                    balance: _userData.balance,
                    coins: _userData.coins
                },
                source: 'core.js'
            }));

            // –°–∫–∏–¥–∞—î–º–æ –ª—ñ—á–∏–ª—å–Ω–∏–∫ –ø–æ–º–∏–ª–æ–∫ –ø—Ä–∏ —É—Å–ø—ñ—à–Ω–æ–º—É –∑–∞–ø–∏—Ç—ñ
            _errorCounter = 0;

            return {
                success: true,
                data: {
                    balance: _userData.balance,
                    coins: _userData.coins
                }
            };
        } catch (error) {
    console.error('–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É:', error);

    // –ó–±—ñ–ª—å—à—É—î–º–æ –ª—ñ—á–∏–ª—å–Ω–∏–∫ –ø–æ–º–∏–ª–æ–∫
    _errorCounter++;
    _lastErrorTime = Date.now();

    // –ë–µ—Ä–µ–º–æ –∫–µ—à–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ –∑ –ø–æ–∑–Ω–∞—á–µ–Ω–Ω—è–º —á–∞—Å—É –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
    const cachedBalance = getBalance();
    const cachedCoins = getCoins();
    const lastUpdate = parseInt(localStorage.getItem('winix_balance_update_time') || '0');

    // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∑ –∫–µ—à–æ–≤–∞–Ω–∏—Ö –¥–∞–Ω–∏—Ö
    updateBalanceDisplay();

    return {
        success: false,
        offline: !window.navigator.onLine,
        message: error.message || '–ù–µ –≤–¥–∞–ª–æ—Å—è –æ–Ω–æ–≤–∏—Ç–∏ –±–∞–ª–∞–Ω—Å',
        data: {
            balance: cachedBalance,
            coins: cachedCoins,
            lastUpdate: lastUpdate
        }
    };
}
    }

    // ======== –ù–ê–í–Ü–ì–ê–¶–Ü–Ø ========

    /**
     * –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –Ω–∞–≤—ñ–≥–∞—Ü—ñ–π–Ω–∏—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤
     */
    function initNavigation() {
        try {
            const navItems = getElement('.nav-item', true);
            if (!navItems || navItems.length === 0) return;

            // –û—Ç—Ä–∏–º—É—î–º–æ –ø–æ—Ç–æ—á–Ω–∏–π —à–ª—è—Ö
            const currentPath = window.location.pathname;
            const currentPage = currentPath.split('/').pop().split('.')[0];

            navItems.forEach(item => {
                // –û—Ç—Ä–∏–º—É—î–º–æ —Å–µ–∫—Ü—ñ—é –∑ –∞—Ç—Ä–∏–±—É—Ç—É
                const section = item.getAttribute('data-section');

                // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –ø–æ—Ç–æ—á–Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î —Å–µ–∫—Ü—ñ—ó
                if ((currentPage === section) ||
                    (currentPage === '' && section === 'home') ||
                    (currentPage === 'index' && section === 'home')) {
                    item.classList.add('active');
                } else {
                    item.classList.remove('active');
                }

                // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –∫–ª—ñ–∫—É
                item.addEventListener('click', () => {
                    // –í–∏–∑–Ω–∞—á–∞—î–º–æ URL –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥—É
                    let url;
                    if (section === 'home') {
                        url = 'index.html';
                    } else {
                        url = `${section}.html`;
                    }

                    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º–æ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É
                    window.location.href = url;
                });
            });
        } catch (e) {
            console.error('–ü–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó:', e);
        }
    }

    // ======== –°–ò–ù–•–†–û–ù–Ü–ó–ê–¶–Ü–Ø –î–ê–ù–ò–• ========

    /**
     * –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ —Å–µ—Ä–≤–µ—Ä–æ–º
     */
    async function syncUserData() {
        try {
            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –ø—Ä–∏—Å—Ç—Ä—ñ–π –æ–Ω–ª–∞–π–Ω
if (!isOnline()) {
    console.warn("üîÑ Core: –ü—Ä–∏—Å—Ç—Ä—ñ–π –æ—Ñ–ª–∞–π–Ω, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –ª–æ–∫–∞–ª—å–Ω—ñ –¥–∞–Ω—ñ –±–∞–ª–∞–Ω—Å—É");

    // –û—Ç—Ä–∏–º—É—î–º–æ –æ—Å—Ç–∞–Ω–Ω—ñ –≤—ñ–¥–æ–º—ñ –¥–∞–Ω—ñ –±–∞–ª–∞–Ω—Å—É
    const lastKnownBalance = getBalance();
    const lastKnownCoins = getCoins();
    const lastUpdateTime = parseInt(localStorage.getItem('winix_balance_update_time') || '0');
    const now = Date.now();

    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∞–∫—Ç—É–∞–ª—å–Ω—ñ—Å—Ç—å –¥–∞–Ω–∏—Ö
    const dataAge = now - lastUpdateTime;
    let dataStatus = 'fresh'; // 'fresh', 'stale', 'unknown'

    if (lastUpdateTime === 0) {
        dataStatus = 'unknown';
    } else if (dataAge > 30 * 60 * 1000) { // —Å—Ç–∞—Ä—à–µ 30 —Ö–≤–∏–ª–∏–Ω
        dataStatus = 'stale';
    }

    // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∑ –ª–æ–∫–∞–ª—å–Ω–∏—Ö –¥–∞–Ω–∏—Ö
    updateBalanceDisplay();

    // –ü–æ–∫–∞–∑—É—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É —Å—Ç–∞—Ç—É—Å, —è–∫—â–æ –¥–∞–Ω—ñ –∑–∞—Å—Ç–∞—Ä—ñ–ª—ñ
    if (dataStatus === 'stale' && typeof window.showToast === 'function') {
        window.showToast('–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—Ç—å—Å—è –ª–æ–∫–∞–ª—å–Ω–æ –∑–±–µ—Ä–µ–∂–µ–Ω—ñ –¥–∞–Ω—ñ. –û–Ω–æ–≤—ñ—Ç—å –±–∞–ª–∞–Ω—Å –ø—Ä–∏ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—ñ.', 'info');
    }

    return {
        success: true,
        offline: true,
        dataStatus: dataStatus,
        dataAge: dataAge,
        data: {
            balance: lastKnownBalance,
            coins: lastKnownCoins,
            lastUpdate: lastUpdateTime
        }
    };
}

            // –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            const userData = await getUserData(true);

            // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è
            updateUserDisplay();
            updateBalanceDisplay();

            // –ì–µ–Ω–µ—Ä—É—î–º–æ –ø–æ–¥—ñ—é –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            document.dispatchEvent(new CustomEvent('user-data-updated', {
                detail: { userData },
                source: 'core.js'
            }));

            return {
                success: true,
                data: userData
            };
        } catch (error) {
            console.error('–ü–æ–º–∏–ª–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:', error);

            // –ó–±—ñ–ª—å—à—É—î–º–æ –ª—ñ—á–∏–ª—å–Ω–∏–∫ –ø–æ–º–∏–ª–æ–∫
            _errorCounter++;
            _lastErrorTime = Date.now();

            // –£ –≤–∏–ø–∞–¥–∫—É –ø–æ–º–∏–ª–∫–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∫–µ—à–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ
            updateUserDisplay();
            updateBalanceDisplay();

            return {
                success: false,
                message: error.message || '–ù–µ –≤–¥–∞–ª–æ—Å—è —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑—É–≤–∞—Ç–∏ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞',
                data: _userData
            };
        }
    }

    /**
     * –ó–∞–ø—É—Å–∫ –ø–µ—Ä—ñ–æ–¥–∏—á–Ω–æ—ó —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó –¥–∞–Ω–∏—Ö
     * @param {number} interval - –Ü–Ω—Ç–µ—Ä–≤–∞–ª —É –º—ñ–ª—ñ—Å–µ–∫—É–Ω–¥–∞—Ö
     */
    function startAutoSync(interval = 300000) { // 5 —Ö–≤–∏–ª–∏–Ω
        // –ó—É–ø–∏–Ω—è—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ–π —ñ–Ω—Ç–µ—Ä–≤–∞–ª
        if (_refreshInterval) {
            clearInterval(_refreshInterval);
            _refreshInterval = null;
        }

        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –≤–∂–µ –∑–∞–ø—É—â–µ–Ω–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –≤ —ñ–Ω—à–∏—Ö –º–æ–¥—É–ª—è—Ö
        if (hasAuthModule() && window.WinixAuth._periodicUpdateInterval) {
            console.log("üîÑ Core: –ü–µ—Ä—ñ–æ–¥–∏—á–Ω–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –≤–∂–µ –∑–∞–ø—É—â–µ–Ω–æ –≤ Auth –º–æ–¥—É–ª—ñ");
            return;
        }

        // –ó–∞–ø—É—Å–∫–∞—î–º–æ –ø–µ—Ä—ñ–æ–¥–∏—á–Ω—É —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—é
        _refreshInterval = setInterval(async () => {
            try {
                // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –ø—Ä–∏—Å—Ç—Ä—ñ–π –æ–Ω–ª–∞–π–Ω
                if (!isOnline()) {
                    console.warn("üîÑ Core: –ü—Ä–∏—Å—Ç—Ä—ñ–π –æ—Ñ–ª–∞–π–Ω, –ø—Ä–æ–ø—É—Å–∫–∞—î–º–æ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—é");
                    return;
                }

                // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –º—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–π —ñ–Ω—Ç–µ—Ä–≤–∞–ª
                if (Date.now() - _lastRequestTime >= MIN_REQUEST_INTERVAL && !_requestInProgress) {
                    await syncUserData();
                }
            } catch (e) {
                console.warn('–ü–æ–º–∏–ª–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ—ó —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó:', e);
            }
        }, interval);

        console.log(`üîÑ Core: –ü–µ—Ä—ñ–æ–¥–∏—á–Ω–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ø—É—â–µ–Ω–æ (—ñ–Ω—Ç–µ—Ä–≤–∞–ª: ${interval}ms)`);
    }

    /**
     * –ó—É–ø–∏–Ω–∫–∞ –ø–µ—Ä—ñ–æ–¥–∏—á–Ω–æ—ó —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó
     */
    function stopAutoSync() {
        if (_refreshInterval) {
            clearInterval(_refreshInterval);
            _refreshInterval = null;
            console.log("‚èπÔ∏è Core: –ü–µ—Ä—ñ–æ–¥–∏—á–Ω–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∑—É–ø–∏–Ω–µ–Ω–æ");
        }
    }

    // ======== –Ü–ù–Ü–¶–Ü–ê–õ–Ü–ó–ê–¶–Ü–Ø ========

    /**
     * –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —è–¥—Ä–∞ WINIX
     */
    async function init() {
        try {
            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –≤–∂–µ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ —è–¥—Ä–æ
            if (_coreInitialized) {
                console.log("‚úÖ Core: –Ø–¥—Ä–æ WINIX –≤–∂–µ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–µ");
                return true;
            }

            // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ Telegram WebApp, —è–∫—â–æ –≤—ñ–Ω –¥–æ—Å—Ç—É–ø–Ω–∏–π
            if (window.Telegram && window.Telegram.WebApp) {
                try {
                    window.Telegram.WebApp.ready();
                    window.Telegram.WebApp.expand();
                } catch (e) {
                    console.warn("–ü–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó Telegram WebApp:", e);
                }
            }

            // –û—á—ñ–∫—É—î–º–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è API —Ç–∞ Auth –º–æ–¥—É–ª—ñ–≤
            await waitForModules();

            // –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            await getUserData();

            // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è
            updateUserDisplay();
            updateBalanceDisplay();

            // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—é
            initNavigation();

            // –ó–∞–ø—É—Å–∫–∞—î–º–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω—É —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—é, —è–∫—â–æ –Ω–µ –∑–∞–ø—É—â–µ–Ω–∞ –≤ Auth
            if (!hasAuthModule() || !window.WinixAuth._periodicUpdateInterval) {
                startAutoSync();
            }

            // –ü–æ–∑–Ω–∞—á–∞—î–º–æ, —â–æ —è–¥—Ä–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ
            _coreInitialized = true;

            console.log("‚úÖ Core: –Ø–¥—Ä–æ WINIX —É—Å–ø—ñ—à–Ω–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ");

            // –í–∏–∫–ª–∏–∫–∞—î–º–æ –ø–æ–¥—ñ—é —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
            document.dispatchEvent(new CustomEvent('winix-initialized'));

            return true;
        } catch (error) {
            console.error('–ü–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó —è–¥—Ä–∞ WINIX:', error);

            // –£ –≤–∏–ø–∞–¥–∫—É –ø–æ–º–∏–ª–∫–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∫–µ—à–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ
            updateUserDisplay();
            updateBalanceDisplay();

            document.dispatchEvent(new CustomEvent('winix-initialization-error', { detail: error }));

            return false;
        }
    }

    /**
     * –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—ñ —è–¥—Ä–∞
     * @returns {boolean} –°—Ç–∞–Ω —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
     */
    function isInitialized() {
        return _coreInitialized;
    }

    // ======== –û–ë–†–û–ë–ù–ò–ö–ò –ü–û–î–Ü–ô ========

    // –û–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ—ó –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    document.addEventListener('user-data-updated', function(event) {
        if (event.detail && event.detail.userData && event.source !== 'core.js') {
            console.log("üîÑ Core: –û—Ç—Ä–∏–º–∞–Ω–æ –ø–æ–¥—ñ—é –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞");
            _userData = event.detail.userData;
            updateUserDisplay();
            updateBalanceDisplay();
        }
    });

    // –û–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ—ó –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É
    document.addEventListener('balance-updated', function(event) {
        if (event.detail && event.source !== 'core.js') {
            console.log("üîÑ Core: –û—Ç—Ä–∏–º–∞–Ω–æ –ø–æ–¥—ñ—é –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É");
            if (!_userData) _userData = {};

            if (event.detail.balance !== undefined) {
                _userData.balance = event.detail.balance;
            }

            if (event.detail.coins !== undefined) {
                _userData.coins = event.detail.coins;
            }

            updateBalanceDisplay();
        }
    });

    // –û–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ—ó –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –º–µ—Ä–µ–∂—ñ
    window.addEventListener('online', function() {
        console.log("üîÑ Core: –ó'—î–¥–Ω–∞–Ω–Ω—è –∑ –º–µ—Ä–µ–∂–µ—é –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–æ");

        // –û–Ω–æ–≤–ª—é—î–º–æ –¥–∞–Ω—ñ –ø—ñ—Å–ª—è –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –∑'—î–¥–Ω–∞–Ω–Ω—è
        setTimeout(() => {
            syncUserData().then(() => {
                console.log("üîÑ Core: –î–∞–Ω—ñ —É—Å–ø—ñ—à–Ω–æ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–æ–≤–∞–Ω–æ –ø—ñ—Å–ª—è –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –∑'—î–¥–Ω–∞–Ω–Ω—è");
            }).catch(error => {
                console.warn("‚ö†Ô∏è Core: –ü–æ–º–∏–ª–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó –ø—ñ—Å–ª—è –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –∑'—î–¥–Ω–∞–Ω–Ω—è:", error);
            });
        }, 1000);
    });

    // –û–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ—ó –≤—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –≤—ñ–¥ –º–µ—Ä–µ–∂—ñ
    window.addEventListener('offline', function() {
        console.warn("‚ö†Ô∏è Core: –í—Ç—Ä–∞—á–µ–Ω–æ –∑'—î–¥–Ω–∞–Ω–Ω—è –∑ –º–µ—Ä–µ–∂–µ—é");
    });

    // –ì–ª–æ–±–∞–ª—å–Ω–∞ –æ–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–æ–∫ –¥–ª—è –≤–∏—è–≤–ª–µ–Ω–Ω—è –ø—Ä–æ–±–ª–µ–º
    window.addEventListener('error', function(event) {
        console.error('–ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞ JavaScript:', event.error);

        // –ó–±—ñ–ª—å—à—É—î–º–æ –ª—ñ—á–∏–ª—å–Ω–∏–∫ –ø–æ–º–∏–ª–æ–∫
        _errorCounter++;
        _lastErrorTime = Date.now();

        // –ü—Ä–∏ –∫—Ä–∏—Ç–∏—á–Ω–æ–º—É –Ω–∞–∫–æ–ø–∏—á–µ–Ω–Ω—ñ –ø–æ–º–∏–ª–æ–∫ —Å–∫–∏–¥–∞—î–º–æ —Å—Ç–∞–Ω
        if (_errorCounter >= MAX_ERRORS_BEFORE_RESET) {
            console.warn(`‚ö†Ô∏è Core: –î–æ—Å—è–≥–Ω—É—Ç–æ –∫—Ä–∏—Ç–∏—á–Ω–æ—ó –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –ø–æ–º–∏–ª–æ–∫ (${_errorCounter}), —Å–∫–∏–¥–∞–Ω–Ω—è —Å—Ç–∞–Ω—É...`);

            // –°–∫–∏–¥–∞—î–º–æ –ª—ñ—á–∏–ª—å–Ω–∏–∫
            _errorCounter = 0;

            // –í–∏–≤–æ–¥–∏–º–æ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É
            if (typeof window.showToast === 'function') {
                window.showToast('–í–∏–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º–∏ –∑ –¥–æ–¥–∞—Ç–∫–æ–º. –°—Ç–æ—Ä—ñ–Ω–∫–∞ –±—É–¥–µ –ø–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∞.', 'error');
            }

            // –í—ñ–¥–∫–ª–∞–¥–µ–Ω–µ —Å–∫–∏–¥–∞–Ω–Ω—è —Å—Ç–∞–Ω—É –¥–ª—è —É–Ω–∏–∫–Ω–µ–Ω–Ω—è —Ü–∏–∫–ª—ñ—á–Ω–∏—Ö –ø–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω—å
            setTimeout(resetAndReloadApplication, 2000);
        }
    });

    // ======== –ü–£–ë–õ–Ü–ß–ù–ò–ô API ========

    // –ï–∫—Å–ø–æ—Ä—Ç—É—î–º–æ –ø—É–±–ª—ñ—á–Ω–∏–π API
    window.WinixCore = {
        // –ú–µ—Ç–∞–¥–∞–Ω—ñ
        version: '1.3.0',
        isInitialized: isInitialized,

        // –£—Ç–∏–ª—ñ—Ç–∏
        getElement,
        saveToStorage,
        getFromStorage,
        formatCurrency,
        isOnline,
        waitForModules,
        resetAndReloadApplication,

        // –§—É–Ω–∫—Ü—ñ—ó –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        getUserData,
        getUserId,
        updateUserDisplay,
        getBalance,
        getCoins,
        updateBalanceDisplay,
        refreshBalance,

        // –§—É–Ω–∫—Ü—ñ—ó –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó –¥–∞–Ω–∏—Ö
        syncUserData,
        startAutoSync,
        stopAutoSync,

        // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è
        init
    };

    // –î–æ–¥–∞—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é resetAndReloadApplication –≤ –≥–ª–æ–±–∞–ª—å–Ω–∏–π –ø—Ä–æ—Å—Ç—ñ—Ä —ñ–º–µ–Ω
    window.resetAndReloadApplication = resetAndReloadApplication;

    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ —è–¥—Ä–æ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', init);
    } else {
        // –î–æ–¥–∞—î–º–æ –Ω–µ–≤–µ–ª–∏–∫—É –∑–∞—Ç—Ä–∏–º–∫—É –¥–ª—è –¥–æ–∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —ñ–Ω—à–∏—Ö –º–æ–¥—É–ª—ñ–≤
        setTimeout(() => {
            init().catch(e => {
                console.error("–ü–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó —è–¥—Ä–∞:", e);
            });
        }, 100);
    }
})();