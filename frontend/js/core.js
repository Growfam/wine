/**
 * core.js - –ë–∞–∑–æ–≤–∞ —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω—ñ—Å—Ç—å WINIX
 * –û–ø—Ç–∏–º—ñ–∑–æ–≤–∞–Ω–∞ –≤–µ—Ä—Å—ñ—è –∑ –ø–æ–∫—Ä–∞—â–µ–Ω–æ—é –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—ñ—Å—Ç—é —Ç–∞ —Å—Ç–∞–±—ñ–ª—å–Ω—ñ—Å—Ç—é
 * @version 2.0.0
 */

(function() {
    'use strict';

    console.log("üîÑ Core: –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —è–¥—Ä–∞ WINIX");

    // ======== –ü–†–ò–í–ê–¢–ù–Ü –ó–ú–Ü–ù–ù–Ü ========

    // –î–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    let _userData = null;

    // –°—Ç–∞–Ω –º–æ–¥—É–ª—è
    const _state = {
        // –ü—Ä–∞–ø–æ—Ä–µ—Ü—å —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó —è–¥—Ä–∞
        initialized: false,

        // –Ü–Ω—Ç–µ—Ä–≤–∞–ª –∞–≤—Ç–æ–æ–Ω–æ–≤–ª–µ–Ω–Ω—è
        refreshInterval: null,

        // –ë–ª–æ–∫—É–≤–∞–Ω–Ω—è –∑–∞–ø–∏—Ç—ñ–≤
        requestInProgress: false,

        // –ß–∞—Å –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ –∑–∞–ø–∏—Ç—É
        lastRequestTime: 0,

        // –õ—ñ—á–∏–ª—å–Ω–∏–∫ –ø–æ–º–∏–ª–æ–∫
        errorCounter: 0,

        // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ–º–∏–ª–æ–∫ –ø–µ—Ä–µ–¥ —Å–∫–∏–¥–∞–Ω–Ω—è–º —Å—Ç–∞–Ω—É
        maxErrorsBeforeReset: 5,

        // –ß–∞—Å –æ—Å—Ç–∞–Ω–Ω—å–æ—ó –ø–æ–º–∏–ª–∫–∏
        lastErrorTime: 0,

        // –ö–µ—à –∑–∞–ø–∏—Ç—ñ–≤
        requestCache: {}
    };

    // –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è
    const _config = {
        // –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–π —ñ–Ω—Ç–µ—Ä–≤–∞–ª –º—ñ–∂ –∑–∞–ø–∏—Ç–∞–º–∏ (–º—Å)
        minRequestInterval: 5000,

        // –ß–∞—Å –∂–∏—Ç—Ç—è –∫–µ—à—É –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ (–º—Å)
        userCacheTtl: 300000, // 5 —Ö–≤–∏–ª–∏–Ω

        // –Ü–Ω—Ç–µ—Ä–≤–∞–ª –∞–≤—Ç–æ–æ–Ω–æ–≤–ª–µ–Ω–Ω—è (–º—Å)
        autoRefreshInterval: 300000 // 5 —Ö–≤–∏–ª–∏–Ω
    };

    // ======== –£–¢–ò–õ–Ü–¢–ò ========

    /**
     * –û—Ç—Ä–∏–º–∞–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç–∞ DOM
     * @param {string} selector - –°–µ–ª–µ–∫—Ç–æ—Ä –µ–ª–µ–º–µ–Ω—Ç–∞
     * @param {boolean} multiple - –û—Ç—Ä–∏–º–∞—Ç–∏ –≤—Å—ñ –µ–ª–µ–º–µ–Ω—Ç–∏
     * @returns {Element|NodeList|null} –ï–ª–µ–º–µ–Ω—Ç DOM
     */
    function getElement(selector, multiple = false) {
        try {
            if (multiple) {
                return document.querySelectorAll(selector);
            }
            if (selector.startsWith('#')) {
                return document.getElementById(selector.substring(1));
            }
            return document.querySelector(selector);
        } catch (e) {
            console.warn('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç–∞ DOM:', e);
            return null;
        }
    }

    /**
     * –ó–±–µ—Ä—ñ–≥–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –≤ localStorage
     * @param {string} key - –ö–ª—é—á
     * @param {any} value - –ó–Ω–∞—á–µ–Ω–Ω—è
     * @returns {boolean} –†–µ–∑—É–ª—å—Ç–∞—Ç –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è
     */
    function saveToStorage(key, value) {
        try {
            if (typeof value === 'object') {
                localStorage.setItem(key, JSON.stringify(value));
            } else {
                localStorage.setItem(key, value);
            }
            return true;
        } catch (e) {
            console.warn(`‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –≤ localStorage: ${key}`, e);
            return false;
        }
    }

    /**
     * –û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –∑ localStorage
     * @param {string} key - –ö–ª—é—á
     * @param {any} defaultValue - –ó–Ω–∞—á–µ–Ω–Ω—è –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
     * @param {boolean} isObject - –ß–∏ –ø–∞—Ä—Å–∏—Ç–∏ —è–∫ –æ–±'—î–∫—Ç
     * @returns {any} –ó–Ω–∞—á–µ–Ω–Ω—è –∑ localStorage
     */
    function getFromStorage(key, defaultValue = null, isObject = false) {
        try {
            const value = localStorage.getItem(key);
            if (value === null) return defaultValue;

            if (isObject) {
                try {
                    return JSON.parse(value);
                } catch (e) {
                    return defaultValue;
                }
            }

            return value;
        } catch (e) {
            return defaultValue;
        }
    }

    /**
     * –§–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è —á–∏—Å–ª–∞ —è–∫ –≤–∞–ª—é—Ç–∏
     * @param {number} amount - –°—É–º–∞
     * @param {number} decimals - –ö—ñ–ª—å–∫—ñ—Å—Ç—å –∑–Ω–∞–∫—ñ–≤ –ø—ñ—Å–ª—è –∫–æ–º–∏
     * @returns {string} –§–æ—Ä–º–∞—Ç–æ–≤–∞–Ω–µ —á–∏—Å–ª–æ
     */
    function formatCurrency(amount, decimals = 2) {
        try {
            const numberFormat = new Intl.NumberFormat('uk-UA', {
                maximumFractionDigits: decimals,
                minimumFractionDigits: decimals
            });
            return numberFormat.format(parseFloat(amount) || 0);
        } catch (e) {
            return (parseFloat(amount) || 0).toFixed(decimals);
        }
    }

    /**
     * –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ –ø—Ä–∏—Å—Ç—Ä—ñ–π –æ–Ω–ª–∞–π–Ω
     * @returns {boolean} –°—Ç–∞–Ω –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è
     */
    function isOnline() {
        return typeof navigator.onLine === 'undefined' || navigator.onLine;
    }

    /**
     * –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ API –º–æ–¥—É–ª—è
     * @returns {boolean} –ß–∏ –¥–æ—Å—Ç—É–ø–Ω–∏–π API –º–æ–¥—É–ª—å
     */
    function hasApiModule() {
        try {
            return window.WinixAPI &&
                   typeof window.WinixAPI.apiRequest === 'function' &&
                   typeof window.WinixAPI.getUserId === 'function';
        } catch (e) {
            console.warn("‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ API –º–æ–¥—É–ª—è:", e);
            return false;
        }
    }

    /**
     * –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Å–∫–∏–¥–∞–Ω–Ω—è —Å—Ç–∞–Ω—É —Ç–∞ –ø–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø—ñ—Å–ª—è –∫—Ä–∏—Ç–∏—á–Ω–∏—Ö –ø–æ–º–∏–ª–æ–∫
     */
    function resetAndReloadApplication() {
        console.log("üîÑ Core: –°–∫–∏–¥–∞–Ω–Ω—è —Å—Ç–∞–Ω—É –¥–æ–¥–∞—Ç–∫—É —á–µ—Ä–µ–∑ –∫—Ä–∏—Ç–∏—á–Ω—ñ –ø–æ–º–∏–ª–∫–∏...");

        try {
            // –û—á–∏—â–∞—î–º–æ –∫–µ—à API
            if (hasApiModule() && typeof window.WinixAPI.clearCache === 'function') {
                window.WinixAPI.clearCache();
            }

            // –û—á–∏—â–∞—î–º–æ –ª–æ–∫–∞–ª—å–Ω–µ —Å—Ö–æ–≤–∏—â–µ –∑ –≤–∞–∂–ª–∏–≤–∏–º–∏ –≤–∏–∫–ª—é—á–µ–Ω–Ω—è–º–∏
            try {
                // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ª–∏—à–µ –∫—Ä–∏—Ç–∏—á–Ω—ñ –¥–∞–Ω—ñ –¥–ª—è –∞–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó
                const userId = getFromStorage('telegram_user_id');
                const authToken = getFromStorage('auth_token');

                // –ü–µ—Ä–µ–∑–∞–ø–∏—Å—É—î–º–æ –∫—Ä–∏—Ç–∏—á–Ω—ñ –¥–∞–Ω—ñ –ø—ñ—Å–ª—è –æ—á–∏—â–µ–Ω–Ω—è
                if (userId) saveToStorage('telegram_user_id', userId);
                if (authToken) saveToStorage('auth_token', authToken);
            } catch (e) {
                console.warn("‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –æ—á–∏—â–µ–Ω–Ω—è localStorage:", e);
            }

            // –°–∫–∏–¥–∞—î–º–æ —Å—Ç–∞–Ω WinixRaffles, —è–∫—â–æ –≤—ñ–Ω —ñ—Å–Ω—É—î
            if (window.WinixRaffles && typeof window.WinixRaffles.resetState === 'function') {
                window.WinixRaffles.resetState();
            }

            // –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É
            if (typeof window.showToast === 'function') {
                window.showToast('–í–∏–∫–æ–Ω—É—î—Ç—å—Å—è –ø–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–æ–¥–∞—Ç–∫—É...', 'info');
            }

            // –ü–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —Å—Ç–æ—Ä—ñ–Ω–∫—É –∑ –Ω–µ–≤–µ–ª–∏–∫–æ—é –∑–∞—Ç—Ä–∏–º–∫–æ—é
            setTimeout(function() {
                window.location.reload();
            }, 1000);
        } catch (e) {
            console.error("‚ùå Core: –ü–æ–º–∏–ª–∫–∞ —Å–∫–∏–¥–∞–Ω–Ω—è —Å—Ç–∞–Ω—É:", e);

            // –£ –≤–∏–ø–∞–¥–∫—É –∫—Ä–∏—Ç–∏—á–Ω–æ—ó –ø–æ–º–∏–ª–∫–∏ –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ
            setTimeout(function() {
                window.location.reload();
            }, 500);
        }
    }

    // ======== –§–£–ù–ö–¶–Ü–á –ö–û–†–ò–°–¢–£–í–ê–ß–ê ========

    /**
     * –û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
     * @param {boolean} forceRefresh - –ü—Ä–∏–º—É—Å–æ–≤–æ –æ–Ω–æ–≤–∏—Ç–∏
     * @returns {Promise<Object>} –î–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
     */
    async function getUserData(forceRefresh = false) {
        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –ø—Ä–∏—Å—Ç—Ä—ñ–π –æ–Ω–ª–∞–π–Ω
        if (!isOnline() && !forceRefresh) {
            console.warn("‚ö†Ô∏è Core: –ü—Ä–∏—Å—Ç—Ä—ñ–π –æ—Ñ–ª–∞–π–Ω, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∫–µ—à–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ");

            // –Ø–∫—â–æ —î –∑–±–µ—Ä–µ–∂–µ–Ω—ñ –¥–∞–Ω—ñ, –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ —ó—Ö
            if (_userData) {
                return _userData;
            }

            // –°—Ç–≤–æ—Ä—é—î–º–æ –±–∞–∑–æ–≤—ñ –¥–∞–Ω—ñ –∑ localStorage
            const storedData = getFromStorage('userData', null, true);
            if (storedData) {
                _userData = storedData;
                return _userData;
            }

            // –°—Ç–≤–æ—Ä—é—î–º–æ –º—ñ–Ω—ñ–º–∞–ª—å–Ω—ñ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ localStorage
            const userId = getUserId();
            _userData = {
                telegram_id: userId || 'unknown',
                balance: parseFloat(getFromStorage('userTokens', '0')),
                coins: parseInt(getFromStorage('userCoins', '0')),
                source: 'localStorage_offline'
            };

            return _userData;
        }

        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∞—Å—Ç–æ—Ç—É –∑–∞–ø–∏—Ç—ñ–≤ —ñ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –∫–µ—à—É
        const now = Date.now();
        if (!forceRefresh && (now - _state.lastRequestTime < _config.minRequestInterval)) {
            console.log("‚è≥ Core: –ó–∞–Ω–∞–¥—Ç–æ —á–∞—Å—Ç–∏–π –∑–∞–ø–∏—Ç –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∫–µ—à");

            // –Ø–∫—â–æ —É –Ω–∞—Å –≤–∂–µ —î –¥–∞–Ω—ñ —ñ –Ω–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ –æ–Ω–æ–≤–ª—é–≤–∞—Ç–∏
            if (_userData) {
                return _userData;
            }

            // –ù–∞–º–∞–≥–∞—î–º–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∑ localStorage
            const storedData = getFromStorage('userData', null, true);
            if (storedData) {
                _userData = storedData;
                return _userData;
            }
        }

        // –ó–∞–ø–æ–±—ñ–≥–∞—î–º–æ –ø–∞—Ä–∞–ª–µ–ª—å–Ω–∏–º –∑–∞–ø–∏—Ç–∞–º
        if (_state.requestInProgress && !forceRefresh) {
            console.log("‚è≥ Core: –ó–∞–ø–∏—Ç –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤–∂–µ –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è");

            // –Ø–∫—â–æ —É –Ω–∞—Å –≤–∂–µ —î –¥–∞–Ω—ñ, –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ —ó—Ö
            if (_userData) {
                return _userData;
            }

            // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –∑ localStorage
            const storedData = getFromStorage('userData', null, true);
            if (storedData) {
                _userData = storedData;
                return _userData;
            }
        }

        // –û–Ω–æ–≤–ª—é—î–º–æ —á–∞—Å –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ –∑–∞–ø–∏—Ç—É —ñ –≤—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –±–ª–æ–∫—É–≤–∞–Ω–Ω—è
        _state.lastRequestTime = now;
        _state.requestInProgress = true;

        try {
            // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ API –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            if (hasApiModule()) {
                // –§–æ—Ä–º—É—î–º–æ –∑–∞–ø–∏—Ç
                const userId = getUserId();
                if (!userId) {
                    throw new Error('ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
                }

                // –î–æ–¥–∞—î–º–æ –ø–∞—Ä–∞–º–µ—Ç—Ä –∑–∞–ø–æ–±—ñ–≥–∞–Ω–Ω—è –∫–µ—à—É–≤–∞–Ω–Ω—è
                const endpoint = `user/${userId}/info?t=${now}`;

                // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –∑–∞–ø–∏—Ç
                const response = await window.WinixAPI.apiRequest(endpoint, 'GET', null, {
                    suppressErrors: true,
                    timeout: 10000
                });

                _state.requestInProgress = false;

                if (response && response.status === 'success' && response.data) {
                    _userData = response.data;

                    // –û–Ω–æ–≤–ª—é—î–º–æ –¥–∞–Ω—ñ –≤ localStorage
                    saveToStorage('userData', _userData);

                    // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —Ç–∞–∫–æ–∂ –æ–∫—Ä–µ–º—ñ –ø–æ–ª—è –¥–ª—è —Å—É–º—ñ—Å–Ω–æ—Å—Ç—ñ
                    if (_userData.balance !== undefined) {
                        saveToStorage('userTokens', _userData.balance.toString());
                        saveToStorage('winix_balance', _userData.balance.toString());
                    }

                    if (_userData.coins !== undefined) {
                        saveToStorage('userCoins', _userData.coins.toString());
                        saveToStorage('winix_coins', _userData.coins.toString());
                    }

                    // –û–Ω–æ–≤–ª—é—î–º–æ —á–∞—Å –∫–µ—à—É–≤–∞–Ω–Ω—è
                    saveToStorage('userData_timestamp', now.toString());

                    // –ì–µ–Ω–µ—Ä—É—î–º–æ –ø–æ–¥—ñ—é –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
                    document.dispatchEvent(new CustomEvent('user-data-updated', {
                        detail: { userData: _userData },
                        source: 'core.js'
                    }));

                    // –°–∫–∏–¥–∞—î–º–æ –ª—ñ—á–∏–ª—å–Ω–∏–∫ –ø–æ–º–∏–ª–æ–∫ –ø—Ä–∏ —É—Å–ø—ñ—à–Ω–æ–º—É –∑–∞–ø–∏—Ç—ñ
                    _state.errorCounter = 0;

                    return _userData;
                } else {
                    throw new Error(response?.message || '–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞');
                }
            } else {
                // –Ø–∫—â–æ WinixAPI –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∑–∞–ø–∞—Å–Ω–∏–π –º–µ—Ç–æ–¥
                _state.requestInProgress = false;

                // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –¥–∞–Ω—ñ –∑ localStorage
                const storedUserData = getFromStorage('userData', null, true);
                if (storedUserData) {
                    _userData = storedUserData;
                    return _userData;
                }

                console.warn('‚ö†Ô∏è Core: API –º–æ–¥—É–ª—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π');

                // –°—Ç–≤–æ—Ä—é—î–º–æ –º—ñ–Ω—ñ–º–∞–ª—å–Ω—ñ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
                const userId = getUserId();
                _userData = {
                    telegram_id: userId || 'unknown',
                    balance: parseFloat(getFromStorage('userTokens', '0')),
                    coins: parseInt(getFromStorage('userCoins', '0')),
                    source: 'localStorage_no_modules'
                };

                return _userData;
            }
        } catch (error) {
            console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:', error);
            _state.requestInProgress = false;

            // –ó–±—ñ–ª—å—à—É—î–º–æ –ª—ñ—á–∏–ª—å–Ω–∏–∫ –ø–æ–º–∏–ª–æ–∫
            _state.errorCounter++;
            _state.lastErrorTime = now;

            // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –∫—Ä–∏—Ç–∏—á–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ–º–∏–ª–æ–∫
            if (_state.errorCounter >= _state.maxErrorsBeforeReset) {
                console.warn(`‚ö†Ô∏è Core: –î–æ—Å—è–≥–Ω—É—Ç–æ –∫—Ä–∏—Ç–∏—á–Ω–æ—ó –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –ø–æ–º–∏–ª–æ–∫ (${_state.errorCounter}), —Å–∫–∏–¥–∞–Ω–Ω—è —Å—Ç–∞–Ω—É...`);

                if (typeof window.showToast === 'function') {
                    window.showToast('–í–∏–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º–∏ –∑`—î–¥–Ω–∞–Ω–Ω—è. –°–ø—Ä–æ–±–∞ –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è...', 'warning');
                }

                // –°–∫–∏–¥–∞—î–º–æ –ª—ñ—á–∏–ª—å–Ω–∏–∫ –ø–æ–º–∏–ª–æ–∫
                _state.errorCounter = 0;

                // –ó–∞–ø—É—Å–∫–∞—î–º–æ —Å–∫–∏–¥–∞–Ω–Ω—è —Å—Ç–∞–Ω—É
                setTimeout(resetAndReloadApplication, 1000);
            }

            // –£ –≤–∏–ø–∞–¥–∫—É –ø–æ–º–∏–ª–∫–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –¥–∞–Ω—ñ –∑ localStorage
            const storedUserData = getFromStorage('userData', null, true);
            if (storedUserData) {
                _userData = storedUserData;
                return _userData;
            }

            // –°—Ç–≤–æ—Ä—é—î–º–æ –º—ñ–Ω—ñ–º–∞–ª—å–Ω—ñ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            const userId = getUserId();
            _userData = {
                telegram_id: userId || 'unknown',
                balance: parseFloat(getFromStorage('userTokens', '0')),
                coins: parseInt(getFromStorage('userCoins', '0')),
                source: 'localStorage_after_error'
            };

            return _userData;
        }
    }

    /**
     * –û—Ç—Ä–∏–º–∞–Ω–Ω—è ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
     * @returns {string|null} ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∞–±–æ null
     */
    function getUserId() {
        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ä—ñ–∑–Ω—ñ –¥–∂–µ—Ä–µ–ª–∞ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤ –ø–æ—Ä—è–¥–∫—É –ø—Ä—ñ–æ—Ä–∏—Ç–µ—Ç—É

        // 1. –ó API –º–æ–¥—É–ª—è
        if (hasApiModule()) {
            try {
                const apiId = window.WinixAPI.getUserId();
                if (apiId && apiId !== 'undefined' && apiId !== 'null') {
                    return apiId;
                }
            } catch (e) {
                console.warn("‚ö†Ô∏è Core: –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è ID —á–µ—Ä–µ–∑ API:", e);
            }
        }

        // 2. –ó localStorage
        try {
            const storedId = getFromStorage('telegram_user_id');
            if (storedId && storedId !== 'undefined' && storedId !== 'null') {
                return storedId;
            }
        } catch (e) {
            console.warn("‚ö†Ô∏è Core: –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è ID –∑—ñ —Å—Ö–æ–≤–∏—â–∞:", e);
        }

        // 3. –ó DOM
        try {
            // –°–ø–æ—á–∞—Ç–∫—É –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –µ–ª–µ–º–µ–Ω—Ç –≤ —Ö–µ–¥–µ—Ä—ñ
            const headerUserIdElement = getElement('#header-user-id');
            if (headerUserIdElement && headerUserIdElement.textContent) {
                const id = headerUserIdElement.textContent.trim();
                if (id && id !== 'undefined' && id !== 'null') {
                    saveToStorage('telegram_user_id', id);
                    return id;
                }
            }

            // –ü–æ—Ç—ñ–º –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –ø—Ä–∏—Ö–æ–≤–∞–Ω–∏–π –µ–ª–µ–º–µ–Ω—Ç
            const userIdElement = getElement('#user-id');
            if (userIdElement && userIdElement.textContent) {
                const id = userIdElement.textContent.trim();
                if (id && id !== 'undefined' && id !== 'null') {
                    saveToStorage('telegram_user_id', id);
                    return id;
                }
            }
        } catch (e) {
            console.warn("‚ö†Ô∏è Core: –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è ID –∑ DOM:", e);
        }

        // 4. –ó URL
        try {
            const urlParams = new URLSearchParams(window.location.search);
            const urlId = urlParams.get('id') || urlParams.get('user_id') || urlParams.get('telegram_id');
            if (urlId && urlId !== 'undefined' && urlId !== 'null') {
                saveToStorage('telegram_user_id', urlId);
                return urlId;
            }
        } catch (e) {
            console.warn("‚ö†Ô∏è Core: –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è ID –∑ URL:", e);
        }

        // 5. –ó Telegram WebApp
        try {
            if (window.Telegram && window.Telegram.WebApp &&
                window.Telegram.WebApp.initDataUnsafe &&
                window.Telegram.WebApp.initDataUnsafe.user &&
                window.Telegram.WebApp.initDataUnsafe.user.id) {

                const telegramId = window.Telegram.WebApp.initDataUnsafe.user.id.toString();
                if (telegramId) {
                    saveToStorage('telegram_user_id', telegramId);
                    return telegramId;
                }
            }
        } catch (e) {
            console.warn("‚ö†Ô∏è Core: –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è ID –∑ Telegram WebApp:", e);
        }

        return null;
    }

    /**
     * –û–Ω–æ–≤–ª–µ–Ω–Ω—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
     */
    function updateUserDisplay() {
        try {
            // –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            const userData = _userData || {};
            const userId = userData.telegram_id || getUserId() || getFromStorage('telegram_user_id', 'Unknown ID');
            const username = userData.username || getFromStorage('username', 'User');

            // –û–Ω–æ–≤–ª—é—î–º–æ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            const userIdElement = getElement('#header-user-id');
            if (userIdElement && userIdElement.textContent !== userId) {
                userIdElement.textContent = userId;
            }

            // –û–Ω–æ–≤–ª—é—î–º–æ —ñ–º'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            const usernameElement = getElement('#username');
            if (usernameElement && usernameElement.textContent !== username) {
                usernameElement.textContent = username;
            }

            // –û–Ω–æ–≤–ª—é—î–º–æ –∞–≤–∞—Ç–∞—Ä
            updateUserAvatar(username);
        } catch (e) {
            console.warn('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:', e);
        }
    }

    /**
     * –û–Ω–æ–≤–ª–µ–Ω–Ω—è –∞–≤–∞—Ç–∞—Ä–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
     * @param {string} username - –Ü–º'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
     */
    function updateUserAvatar(username) {
        try {
            const avatarElement = getElement('#profile-avatar');
            if (!avatarElement) return;

            // –û—á–∏—â–∞—î–º–æ –≤–º—ñ—Å—Ç –∞–≤–∞—Ç–∞—Ä–∞ —Ç—ñ–ª—å–∫–∏ —è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω—ñ –∑–º—ñ–Ω–∏
            username = username || _userData?.username || getFromStorage('username', 'User');
            const avatarSrc = getFromStorage('userAvatarSrc') || getFromStorage('avatarSrc');

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –ø–æ—Ç—Ä—ñ–±–Ω–æ –æ–Ω–æ–≤–ª—é–≤–∞—Ç–∏ –∞–≤–∞—Ç–∞—Ä
            if (avatarSrc) {
                // –Ø–∫—â–æ —î –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
                if (!avatarElement.querySelector('img')) {
                    avatarElement.innerHTML = '';
                    const img = document.createElement('img');
                    img.src = avatarSrc;
                    img.alt = username;
                    img.onerror = () => {
                        avatarElement.textContent = username[0].toUpperCase();
                    };
                    avatarElement.appendChild(img);
                }
            } else if (avatarElement.textContent !== username[0].toUpperCase()) {
                // –Ø–∫—â–æ –Ω–µ–º–∞—î –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è, –ø–æ–∫–∞–∑—É—î–º–æ –ø–µ—Ä—à—É –ª—ñ—Ç–µ—Ä—É
                avatarElement.innerHTML = '';
                avatarElement.textContent = username[0].toUpperCase();
            }
        } catch (e) {
            console.warn('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∞–≤–∞—Ç–∞—Ä–∞:', e);
        }
    }

    /**
     * –û—Ç—Ä–∏–º–∞–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
     * @returns {number} –ë–∞–ª–∞–Ω—Å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
     */
    function getBalance() {
        try {
            return _userData?.balance ||
                  parseFloat(getFromStorage('userTokens', '0')) ||
                  parseFloat(getFromStorage('winix_balance', '0')) || 0;
        } catch (e) {
            return 0;
        }
    }

    /**
     * –û—Ç—Ä–∏–º–∞–Ω–Ω—è –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –∂–µ—Ç–æ–Ω—ñ–≤
     * @returns {number} –ö—ñ–ª—å–∫—ñ—Å—Ç—å –∂–µ—Ç–æ–Ω—ñ–≤
     */
    function getCoins() {
        try {
            // 1. –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –≥–ª–æ–±–∞–ª—å–Ω–∏–π –∫–æ–Ω—Ç—Ä–æ–ª–µ—Ä —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó (–Ω–∞–π–≤–∏—â–∏–π –ø—Ä—ñ–æ—Ä–∏—Ç–µ—Ç)
            if (window.__winixSyncControl && window.__winixSyncControl.lastValidBalance !== null) {
                return window.__winixSyncControl.lastValidBalance;
            }

            // 2. –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            if (_userData?.coins !== undefined) {
                return _userData.coins;
            }

            // 3. –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –ª–æ–∫–∞–ª—å–Ω–µ —Å—Ö–æ–≤–∏—â–µ
            const storedCoins = parseInt(getFromStorage('userCoins', '0')) || parseInt(getFromStorage('winix_coins', '0'));
            if (storedCoins) {
                return storedCoins;
            }

            return 0;
        } catch (e) {
            return 0;
        }
    }

    /**
     * –û–Ω–æ–≤–ª–µ–Ω–Ω—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É
     * @param {boolean} animate - –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –∞–Ω—ñ–º–∞—Ü—ñ—é
     */
    function updateBalanceDisplay(animate = false) {
        try {
            // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω—ñ–≤
            const tokensElement = getElement('#user-tokens');
            if (tokensElement) {
                const balance = getBalance();
                const formattedBalance = formatCurrency(balance);

                // –û–Ω–æ–≤–ª—é—î–º–æ —Ç—ñ–ª—å–∫–∏ —è–∫—â–æ –∑–º—ñ–Ω–∏–ª–æ—Å—è
                if (tokensElement.textContent !== formattedBalance) {
                    tokensElement.textContent = formattedBalance;
                }
            }

            // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∂–µ—Ç–æ–Ω—ñ–≤
            const coinsElement = getElement('#user-coins');
            if (coinsElement) {
                const coins = getCoins();
                const currentCoins = parseInt(coinsElement.textContent) || 0;

                // –û–Ω–æ–≤–ª—é—î–º–æ —Ç—ñ–ª—å–∫–∏ —è–∫—â–æ –∑–º—ñ–Ω–∏–ª–æ—Å—è
                if (currentCoins !== coins) {
                    // –î–æ–¥–∞—î–º–æ –∞–Ω—ñ–º–∞—Ü—ñ—é, —è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ
                    if (animate) {
                        coinsElement.classList.remove('decreasing', 'increasing');

                        if (coins < currentCoins) {
                            coinsElement.classList.add('decreasing');
                        } else if (coins > currentCoins) {
                            coinsElement.classList.add('increasing');
                        }

                        // –í–∏–¥–∞–ª—è—î–º–æ –∫–ª–∞—Å–∏ –∞–Ω—ñ–º–∞—Ü—ñ—ó —á–µ—Ä–µ–∑ 1 —Å–µ–∫—É–Ω–¥—É
                        setTimeout(() => {
                            coinsElement.classList.remove('decreasing', 'increasing');
                        }, 1000);
                    }

                    coinsElement.textContent = coins;
                }
            }
        } catch (e) {
            console.warn('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É:', e);
        }
    }

    /**
     * –û–Ω–æ–≤–ª–µ–Ω–Ω—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –±–∞–ª–∞–Ω—Å—É –∑ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è–º–∏ –∞–Ω—ñ–º–∞—Ü—ñ—ó
     * @param {number} newBalance - –ù–æ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É
     * @param {string} source - –î–∂–µ—Ä–µ–ª–æ –∑–º—ñ–Ω–∏
     * @param {boolean} animate - –ß–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –∞–Ω—ñ–º–∞—Ü—ñ—é
     * @returns {boolean} –£—Å–ø—ñ—à–Ω—ñ—Å—Ç—å –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
     */
    function updateLocalBalance(newBalance, source = 'unknown', animate = true) {
        if (typeof newBalance !== 'number' || isNaN(newBalance) || newBalance < 0) {
            console.warn('‚ö†Ô∏è –°–ø—Ä–æ–±–∞ –≤—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–∏–π –±–∞–ª–∞–Ω—Å:', newBalance);
            return false;
        }

        try {
            // –û—Ç—Ä–∏–º—É—î–º–æ –ø–æ—Ç–æ—á–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è –¥–ª—è –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è
            const coinsElement = getElement('#user-coins');
            if (!coinsElement) return false;

            const oldBalance = parseInt(coinsElement.textContent) || 0;

            // –£–Ω–∏–∫–∞—î–º–æ –Ω–µ–ø–æ—Ç—Ä—ñ–±–Ω–∏—Ö –æ–Ω–æ–≤–ª–µ–Ω—å DOM
            if (oldBalance === newBalance) return true;

            // –í–∏–¥–∞–ª—è—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ –∫–ª–∞—Å–∏ –∞–Ω—ñ–º–∞—Ü—ñ—ó
            coinsElement.classList.remove('increasing', 'decreasing', 'updated');

            // –î–æ–¥–∞—î–º–æ –∫–ª–∞—Å –∞–Ω—ñ–º–∞—Ü—ñ—ó, —è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ
            if (animate) {
                if (newBalance > oldBalance) {
                    coinsElement.classList.add('increasing');
                } else if (newBalance < oldBalance) {
                    coinsElement.classList.add('decreasing');
                }
            }

            // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –Ω–æ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è
            coinsElement.textContent = newBalance;

            // –û–Ω–æ–≤–ª—é—î–º–æ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            if (_userData) {
                _userData.coins = newBalance;
            }

            // –û–Ω–æ–≤–ª—é—î–º–æ –ª–æ–∫–∞–ª—å–Ω–µ —Å—Ö–æ–≤–∏—â–µ
            saveToStorage('userCoins', newBalance.toString());
            saveToStorage('winix_coins', newBalance.toString());
            saveToStorage('winix_balance_update_time', Date.now().toString());

            // –ì–µ–Ω–µ—Ä—É—î–º–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É –ø–æ–¥—ñ—é –ø—Ä–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É
            document.dispatchEvent(new CustomEvent('balance-updated', {
                detail: {
                    oldBalance: oldBalance,
                    newBalance: newBalance,
                    source: source || 'core.js',
                    timestamp: Date.now()
                }
            }));

            // –í–∏–¥–∞–ª—è—î–º–æ –∫–ª–∞—Å–∏ –∞–Ω—ñ–º–∞—Ü—ñ—ó –ø—ñ—Å–ª—è 1 —Å–µ–∫—É–Ω–¥–∏
            if (animate) {
                setTimeout(() => {
                    coinsElement.classList.remove('increasing', 'decreasing', 'updated');
                }, 1000);
            }

            return true;
        } catch (e) {
            console.warn('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –±–∞–ª–∞–Ω—Å—É:', e);
            return false;
        }
    }

    /**
     * –û–Ω–æ–≤–ª–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É –∑ —Å–µ—Ä–≤–µ—Ä–∞
     * @param {boolean} forceRefresh - –ü—Ä–∏–º—É—Å–æ–≤–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
     * @returns {Promise<Object>} –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
     */
    async function refreshBalance(forceRefresh = false) {
        // –°—Ç–≤–æ—Ä—é—î–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—é –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è
        const transactionInfo = {
            id: Date.now().toString() + '_' + Math.random().toString(36).substring(2, 8),
            timestamp: Date.now(),
            source: 'core.js'
        };

        console.log(`üîÑ Core: –ó–∞–ø–∏—Ç –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É (ID: ${transactionInfo.id})`);

        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –ø—Ä–∏—Å—Ç—Ä—ñ–π –æ–Ω–ª–∞–π–Ω
        if (!isOnline() && !forceRefresh) {
            console.warn("‚ö†Ô∏è Core: –ü—Ä–∏—Å—Ç—Ä—ñ–π –æ—Ñ–ª–∞–π–Ω, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –ª–æ–∫–∞–ª—å–Ω—ñ –¥–∞–Ω—ñ –±–∞–ª–∞–Ω—Å—É");

            // –Ø–≤–Ω–æ –æ—Ç—Ä–∏–º—É—î–º–æ —Ç–∞ –æ–±—á–∏—Å–ª—é—î–º–æ –≤—Å—ñ –¥–∞–Ω—ñ –¥–ª—è –æ—Ñ–ª–∞–π–Ω-—Ä–µ–∂–∏–º—É
            const lastKnownBalance = getCoins();
            const lastUpdateTime = parseInt(getFromStorage('winix_balance_update_time') || '0');
            const now = Date.now();
            const dataAge = now - lastUpdateTime;

            // –í–∏–∑–Ω–∞—á–∞—î–º–æ —Å—Ç–∞—Ç—É—Å –¥–∞–Ω–∏—Ö –¥–ª—è —ñ–Ω—Ñ–æ—Ä–º—É–≤–∞–Ω–Ω—è
            let dataStatus = 'fresh';
            if (lastUpdateTime === 0) {
                dataStatus = 'unknown';
            } else if (dataAge > 30 * 60 * 1000) { // —Å—Ç–∞—Ä—à–µ 30 —Ö–≤–∏–ª–∏–Ω
                dataStatus = 'stale';
            }

            // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∑ –ª–æ–∫–∞–ª—å–Ω–∏—Ö –¥–∞–Ω–∏—Ö –±–µ–∑ –∞–Ω—ñ–º–∞—Ü—ñ—ó
            updateBalanceDisplay(false);

            return {
                success: true,
                offline: true,
                dataStatus: dataStatus,
                dataAge: dataAge,
                transactionId: transactionInfo.id,
                data: {
                    coins: lastKnownBalance,
                    lastUpdate: lastUpdateTime
                }
            };
        }

        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –±–ª–æ–∫—É–≤–∞–Ω–Ω—è —á–µ—Ä–µ–∑ –≥–ª–æ–±–∞–ª—å–Ω–∏–π –∫–æ–Ω—Ç—Ä–æ–ª–µ—Ä
        if (window.__winixSyncControl &&
            window.__winixSyncControl.isBlocked &&
            window.__winixSyncControl.isBlocked('core_balance') &&
            !forceRefresh) {

            console.log("üîí Core: –û–Ω–æ–≤–ª–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–æ –∫–æ–Ω—Ç—Ä–æ–ª–µ—Ä–æ–º —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó");

            // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –æ—Å—Ç–∞–Ω–Ω—ñ–π –≤–∞–ª—ñ–¥–Ω–∏–π –±–∞–ª–∞–Ω—Å –∑ –∫–æ–Ω—Ç—Ä–æ–ª–µ—Ä–∞
            if (window.__winixSyncControl.lastValidBalance !== null) {
                // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –±–µ–∑ –∞–Ω—ñ–º–∞—Ü—ñ—ó
                updateLocalBalance(window.__winixSyncControl.lastValidBalance, 'sync_control', false);

                return {
                    success: true,
                    blocked: true,
                    source: 'sync_control',
                    data: {
                        coins: window.__winixSyncControl.lastValidBalance
                    }
                };
            }
        }

        // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ —á–∞—Å—Ç–æ—Ç—É –∑–∞–ø–∏—Ç—ñ–≤
        if (!forceRefresh && (Date.now() - _state.lastRequestTime < _config.minRequestInterval)) {
            console.log("‚è≥ Core: –ó–∞–Ω–∞–¥—Ç–æ —á–∞—Å—Ç–∏–π –∑–∞–ø–∏—Ç –±–∞–ª–∞–Ω—Å—É, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∫–µ—à");
            return {
                success: true,
                cached: true,
                data: {
                    coins: getCoins(),
                    cached: true
                }
            };
        }

        // –ë–ª–æ–∫—É—î–º–æ –ø–∞—Ä–∞–ª–µ–ª—å–Ω—ñ –∑–∞–ø–∏—Ç–∏
        if (_state.requestInProgress && !forceRefresh) {
            console.log("‚è≥ Core: –ó–∞–ø–∏—Ç –±–∞–ª–∞–Ω—Å—É –≤–∂–µ –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è");
            return {
                success: true,
                inProgress: true,
                data: {
                    coins: getCoins(),
                    inProgress: true
                }
            };
        }

        // –û–Ω–æ–≤–ª—é—î–º–æ —á–∞—Å –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ –∑–∞–ø–∏—Ç—É —ñ –≤—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –±–ª–æ–∫—É–≤–∞–Ω–Ω—è
        _state.lastRequestTime = Date.now();
        _state.requestInProgress = true;

        // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ø–æ—Ç–æ—á–Ω–∏–π –±–∞–ª–∞–Ω—Å –¥–ª—è –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è
        const oldBalance = getCoins();
        transactionInfo.oldBalance = oldBalance;

        try {
            // –û—Ç—Ä–∏–º–∞–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É —á–µ—Ä–µ–∑ API
            if (hasApiModule()) {
                // –û—Ç—Ä–∏–º—É—î–º–æ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
                const userId = getUserId();
                if (!userId) {
                    throw new Error('ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
                }

                // –î–æ–¥–∞—î–º–æ –ø–∞—Ä–∞–º–µ—Ç—Ä –∑–∞–ø–æ–±—ñ–≥–∞–Ω–Ω—è –∫–µ—à—É–≤–∞–Ω–Ω—è
                const endpoint = `user/${userId}/balance?t=${Date.now()}`;

                // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –∑–∞–ø–∏—Ç
                const response = await window.WinixAPI.apiRequest(endpoint, 'GET', null, {
                    suppressErrors: true,
                    timeout: 10000
                });

                // –ó–∞–≤–µ—Ä—à—É—î–º–æ –∑–∞–ø–∏—Ç
                _state.requestInProgress = false;

                if (response && response.status === 'success' && response.data) {
                    // –û—Ç—Ä–∏–º—É—î–º–æ –Ω–æ–≤–∏–π –±–∞–ª–∞–Ω—Å –∑ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ
                    const newBalance = response.data.coins !== undefined ? response.data.coins : oldBalance;
                    transactionInfo.newBalance = newBalance;
                    transactionInfo.serverResponse = true;

                    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª–µ—Ä–∞ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó
                    if (window.__winixSyncControl) {
                        // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –æ—Å—Ç–∞–Ω–Ω—ñ–π –≤–∞–ª—ñ–¥–Ω–∏–π –±–∞–ª–∞–Ω—Å
                        window.__winixSyncControl.lastValidBalance = newBalance;
                    }

                    // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∑ –∞–Ω—ñ–º–∞—Ü—ñ—î—é
                    updateLocalBalance(newBalance, 'core.js', true);

                    // –û–Ω–æ–≤–ª—é—î–º–æ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
                    if (_userData) {
                        _userData.coins = newBalance;
                    }

                    // –û–Ω–æ–≤–ª—é—î–º–æ –∫–µ—à
                    saveToStorage('userCoins', newBalance.toString());
                    saveToStorage('winix_coins', newBalance.toString());
                    saveToStorage('winix_balance_update_time', Date.now().toString());

                    // –ó–∞–ø–∏—Å—É—î–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—é
                    saveToStorage('winix_last_balance_transaction', JSON.stringify(transactionInfo));

                    // –°–∫–∏–¥–∞—î–º–æ –ª—ñ—á–∏–ª—å–Ω–∏–∫ –ø–æ–º–∏–ª–æ–∫
                    _state.errorCounter = 0;

                    return {
                        success: true,
                        transactionId: transactionInfo.id,
                        data: {
                            coins: newBalance,
                            oldCoins: oldBalance
                        }
                    };
                } else {
                    throw new Error(response?.message || '–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –±–∞–ª–∞–Ω—Å');
                }
            } else {
                // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞ –ª–æ–≥—ñ–∫–∞, —è–∫—â–æ API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–µ
                _state.requestInProgress = false;

                // –û—Ç—Ä–∏–º—É—î–º–æ –±–∞–ª–∞–Ω—Å –∑ localStorage
                const storedCoins = getCoins();

                return {
                    success: true,
                    fallback: true,
                    transactionId: transactionInfo.id,
                    data: {
                        coins: storedCoins,
                        fallback: true
                    }
                };
            }
        } catch (error) {
            console.error('‚ùå Core: –ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É:', error);
            _state.requestInProgress = false;

            // –ó–±—ñ–ª—å—à—É—î–º–æ –ª—ñ—á–∏–ª—å–Ω–∏–∫ –ø–æ–º–∏–ª–æ–∫
            _state.errorCounter++;
            _state.lastErrorTime = Date.now();

            // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –∫—Ä–∏—Ç–∏—á–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ–º–∏–ª–æ–∫
            if (_state.errorCounter >= _state.maxErrorsBeforeReset) {
                console.warn(`‚ö†Ô∏è Core: –î–æ—Å—è–≥–Ω—É—Ç–æ –∫—Ä–∏—Ç–∏—á–Ω–æ—ó –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –ø–æ–º–∏–ª–æ–∫ (${_state.errorCounter}), —Å–∫–∏–¥–∞–Ω–Ω—è —Å—Ç–∞–Ω—É...`);

                if (typeof window.showToast === 'function') {
                    window.showToast('–í–∏–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º–∏ –∑`—î–¥–Ω–∞–Ω–Ω—è. –°–ø—Ä–æ–±–∞ –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è...', 'warning');
                }

                // –°–∫–∏–¥–∞—î–º–æ –ª—ñ—á–∏–ª—å–Ω–∏–∫ –ø–æ–º–∏–ª–æ–∫
                _state.errorCounter = 0;

                // –ó–∞–ø—É—Å–∫–∞—î–º–æ —Å–∫–∏–¥–∞–Ω–Ω—è —Å—Ç–∞–Ω—É
                setTimeout(resetAndReloadApplication, 1000);
            }

            // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –æ—Å—Ç–∞–Ω–Ω—ñ–π –≤—ñ–¥–æ–º–∏–π –±–∞–ª–∞–Ω—Å
            return {
                success: false,
                message: error.message || '–ù–µ –≤–¥–∞–ª–æ—Å—è –æ–Ω–æ–≤–∏—Ç–∏ –±–∞–ª–∞–Ω—Å',
                transactionId: transactionInfo.id,
                data: {
                    coins: oldBalance,
                    error: true
                }
            };
        }
    }

    // ======== –ù–ê–í–Ü–ì–ê–¶–Ü–Ø ========

    /**
     * –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –Ω–∞–≤—ñ–≥–∞—Ü—ñ–π–Ω–∏—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤
     */
    function initNavigation() {
        try {
            const navItems = getElement('.nav-item', true);
            if (!navItems || navItems.length === 0) return;

            // –û—Ç—Ä–∏–º—É—î–º–æ –ø–æ—Ç–æ—á–Ω–∏–π —à–ª—è—Ö
            const currentPath = window.location.pathname;
            const currentPage = currentPath.split('/').pop().split('.')[0];

            navItems.forEach(item => {
                // –û—Ç—Ä–∏–º—É—î–º–æ —Å–µ–∫—Ü—ñ—é –∑ –∞—Ç—Ä–∏–±—É—Ç—É
                const section = item.getAttribute('data-section');

                // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –ø–æ—Ç–æ—á–Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î —Å–µ–∫—Ü—ñ—ó
                if ((currentPage === section) ||
                    (currentPage === '' && section === 'home') ||
                    (currentPage === 'index' && section === 'home')) {
                    item.classList.add('active');
                } else {
                    item.classList.remove('active');
                }

                // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –∫–ª—ñ–∫—É, —è–∫—â–æ –π–æ–≥–æ —â–µ –Ω–µ–º–∞—î
                if (!item.hasAttribute('data-initialized')) {
                    item.setAttribute('data-initialized', 'true');

                    item.addEventListener('click', () => {
                        // –í–∏–∑–Ω–∞—á–∞—î–º–æ URL –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥—É
                        let url;
                        if (section === 'home') {
                            url = 'index.html';
                        } else {
                            url = `${section}.html`;
                        }

                        // –ü–µ—Ä–µ—Ö–æ–¥–∏–º–æ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É
                        window.location.href = url;
                    });
                }
            });
        } catch (e) {
            console.warn('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó:', e);
        }
    }

    // ======== –°–ò–ù–•–†–û–ù–Ü–ó–ê–¶–Ü–Ø –î–ê–ù–ò–• ========

    /**
     * –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ —Å–µ—Ä–≤–µ—Ä–æ–º
     * @param {boolean} forceRefresh - –ü—Ä–∏–º—É—Å–æ–≤–∞ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è
     * @returns {Promise<Object>} –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó
     */
    async function syncUserData(forceRefresh = false) {
        try {
            console.log('üîÑ Core: –ü–æ—á–∞—Ç–æ–∫ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞...');

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –ø—Ä–∏—Å—Ç—Ä—ñ–π –æ–Ω–ª–∞–π–Ω
            if (!isOnline() && !forceRefresh) {
                console.warn("‚ö†Ô∏è Core: –ü—Ä–∏—Å—Ç—Ä—ñ–π –æ—Ñ–ª–∞–π–Ω, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –ª–æ–∫–∞–ª—å–Ω—ñ –¥–∞–Ω—ñ");

                // –û—Ç—Ä–∏–º—É—î–º–æ –æ—Å—Ç–∞–Ω–Ω—ñ –≤—ñ–¥–æ–º—ñ –¥–∞–Ω—ñ
                const lastKnownBalance = getCoins();
                const lastUpdateTime = parseInt(getFromStorage('winix_balance_update_time') || '0');
                const now = Date.now();

                // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∞–∫—Ç—É–∞–ª—å–Ω—ñ—Å—Ç—å –¥–∞–Ω–∏—Ö
                const dataAge = now - lastUpdateTime;
                let dataStatus = 'fresh';

                if (lastUpdateTime === 0) {
                    dataStatus = 'unknown';
                } else if (dataAge > 30 * 60 * 1000) { // —Å—Ç–∞—Ä—à–µ 30 —Ö–≤–∏–ª–∏–Ω
                    dataStatus = 'stale';
                }

                // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è
                updateUserDisplay();
                updateBalanceDisplay();

                // –ü–æ–∫–∞–∑—É—î–º–æ —Å—Ç–∞—Ç—É—Å, —è–∫—â–æ –¥–∞–Ω—ñ –∑–∞—Å—Ç–∞—Ä—ñ–ª—ñ
                if (dataStatus === 'stale' && typeof window.showToast === 'function') {
                    window.showToast('–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—Ç—å—Å—è –ª–æ–∫–∞–ª—å–Ω–æ –∑–±–µ—Ä–µ–∂–µ–Ω—ñ –¥–∞–Ω—ñ. –û–Ω–æ–≤—ñ—Ç—å –±–∞–ª–∞–Ω—Å –ø—Ä–∏ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—ñ.', 'info');
                }

                return {
                    success: true,
                    offline: true,
                    dataStatus: dataStatus,
                    dataAge: dataAge,
                    data: {
                        balance: lastKnownBalance,
                        lastUpdate: lastUpdateTime
                    }
                };
            }

            // –û–Ω–æ–≤–ª—é—î–º–æ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            const userData = await getUserData(forceRefresh);

            // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è
            updateUserDisplay();
            updateBalanceDisplay();

            // –ì–µ–Ω–µ—Ä—É—î–º–æ –ø–æ–¥—ñ—é –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            document.dispatchEvent(new CustomEvent('user-data-updated', {
                detail: { userData },
                source: 'core.js'
            }));

            return {
                success: true,
                data: userData
            };
        } catch (error) {
            console.error('‚ùå Core: –ü–æ–º–∏–ª–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:', error);

            // –£ –≤–∏–ø–∞–¥–∫—É –ø–æ–º–∏–ª–∫–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∫–µ—à–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ
            updateUserDisplay();
            updateBalanceDisplay();

            return {
                success: false,
                message: error.message || '–ù–µ –≤–¥–∞–ª–æ—Å—è —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑—É–≤–∞—Ç–∏ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞',
                data: _userData
            };
        }
    }

    /**
     * –ó–∞–ø—É—Å–∫ –ø–µ—Ä—ñ–æ–¥–∏—á–Ω–æ—ó —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó –¥–∞–Ω–∏—Ö
     * @param {number} interval - –Ü–Ω—Ç–µ—Ä–≤–∞–ª —É –º—ñ–ª—ñ—Å–µ–∫—É–Ω–¥–∞—Ö
     */
    function startAutoSync(interval = 300000) { // 5 —Ö–≤–∏–ª–∏–Ω
        // –ó—É–ø–∏–Ω—è—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ–π —ñ–Ω—Ç–µ—Ä–≤–∞–ª
        if (_state.refreshInterval) {
            clearInterval(_state.refreshInterval);
            _state.refreshInterval = null;
        }

        // –ó–∞–ø—É—Å–∫–∞—î–º–æ –ø–µ—Ä—ñ–æ–¥–∏—á–Ω—É —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—é
        _state.refreshInterval = setInterval(async () => {
            try {
                // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –ø—Ä–∏—Å—Ç—Ä—ñ–π –æ–Ω–ª–∞–π–Ω
                if (!isOnline()) {
                    console.warn("‚ö†Ô∏è Core: –ü—Ä–∏—Å—Ç—Ä—ñ–π –æ—Ñ–ª–∞–π–Ω, –ø—Ä–æ–ø—É—Å–∫–∞—î–º–æ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—é");
                    return;
                }

                // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –º—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–π —ñ–Ω—Ç–µ—Ä–≤–∞–ª —ñ –∑–∞–ø–∏—Ç –≤ –ø—Ä–æ–≥—Ä–µ—Å—ñ
                if (Date.now() - _state.lastRequestTime >= _config.minRequestInterval && !_state.requestInProgress) {
                    await syncUserData();
                }
            } catch (e) {
                console.warn('‚ö†Ô∏è Core: –ü–æ–º–∏–ª–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ—ó —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó:', e);
            }
        }, interval);

        console.log(`üîÑ Core: –ü–µ—Ä—ñ–æ–¥–∏—á–Ω–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ø—É—â–µ–Ω–æ (—ñ–Ω—Ç–µ—Ä–≤–∞–ª: ${interval}ms)`);
    }

    /**
     * –ó—É–ø–∏–Ω–∫–∞ –ø–µ—Ä—ñ–æ–¥–∏—á–Ω–æ—ó —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó
     */
    function stopAutoSync() {
        if (_state.refreshInterval) {
            clearInterval(_state.refreshInterval);
            _state.refreshInterval = null;
            console.log("‚èπÔ∏è Core: –ü–µ—Ä—ñ–æ–¥–∏—á–Ω–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∑—É–ø–∏–Ω–µ–Ω–æ");
        }
    }

    // ======== –ë–õ–û–ö–£–í–ê–ù–ù–Ø –û–ù–û–í–õ–ï–ù–¨ –ë–ê–õ–ê–ù–°–£ ========

    /**
     * –ë–ª–æ–∫—É–≤–∞–Ω–Ω—è –æ–Ω–æ–≤–ª–µ–Ω—å –±–∞–ª–∞–Ω—Å—É –Ω–∞ –≤–∫–∞–∑–∞–Ω–∏–π —á–∞—Å
     * @param {number} duration - –¢—Ä–∏–≤–∞–ª—ñ—Å—Ç—å –±–ª–æ–∫—É–≤–∞–Ω–Ω—è –≤ –º—Å
     * @param {Object} options - –û–ø—Ü—ñ—ó –±–ª–æ–∫—É–≤–∞–Ω–Ω—è
     * @returns {boolean} –†–µ–∑—É–ª—å—Ç–∞—Ç –±–ª–æ–∫—É–≤–∞–Ω–Ω—è
     */
    function lockBalanceUpdates(duration, options = {}) {
        // –Ø–∫—â–æ —î –∫–æ–Ω—Ç—Ä–æ–ª–µ—Ä —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –π–æ–≥–æ
        if (window.__winixSyncControl && typeof window.__winixSyncControl.block === 'function') {
            return window.__winixSyncControl.block(duration / 1000, {
                type: options.type || 'core_balance',
                reason: options.reason || 'manual_lock',
                source: 'core.js'
            });
        }

        return false;
    }

    /**
     * –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω—ñ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É
     * @param {string} source - –î–∂–µ—Ä–µ–ª–æ –∑–∞–ø–∏—Ç—É
     * @param {string} type - –¢–∏–ø –∑–∞–ø–∏—Ç—É
     * @returns {boolean} –°—Ç–∞–Ω –±–ª–æ–∫—É–≤–∞–Ω–Ω—è
     */
    function isBalanceUpdateLocked(source, type = 'general') {
        // –Ø–∫—â–æ —î –∫–æ–Ω—Ç—Ä–æ–ª–µ—Ä —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –π–æ–≥–æ
        if (window.__winixSyncControl && typeof window.__winixSyncControl.isBlocked === 'function') {
            return window.__winixSyncControl.isBlocked(source, type);
        }

        return false;
    }

    // ======== –£–¢–ò–õ–Ü–¢–ò –î–õ–Ø –Ü–ù–®–ò–• –ú–û–î–£–õ–Ü–í ========

    /**
     * –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∞—Å—Ç–æ—Ç–∏ –∑–∞–ø–∏—Ç—ñ–≤ –¥–æ API
     * @param {string} key - –ö–ª—é—á –¥–ª—è —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó —Ç–∏–ø—É –∑–∞–ø–∏—Ç—É
     * @param {number} interval - –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–π —ñ–Ω—Ç–µ—Ä–≤–∞–ª –º—ñ–∂ –∑–∞–ø–∏—Ç–∞–º–∏ (–º—Å)
     * @returns {boolean} true, —è–∫—â–æ –∑–∞–ø–∏—Ç –º–æ–∂–Ω–∞ –≤–∏–∫–æ–Ω–∞—Ç–∏, false - —è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø–æ—á–µ–∫–∞—Ç–∏
     */
    function checkRequestThrottle(key, interval = 5000) {
        const now = Date.now();
        const lastRequest = _state.requestCache[key] || 0;

        if (now - lastRequest < interval) {
            return false;
        }

        _state.requestCache[key] = now;
        return true;
    }

    /**
     * –û—á–∏—â–µ–Ω–Ω—è –∫–µ—à—É –∑–∞–ø–∏—Ç—ñ–≤
     * @param {string} key - –ö–ª—é—á –¥–ª—è –æ—á–∏—â–µ–Ω–Ω—è (—è–∫—â–æ –Ω–µ –≤–∫–∞–∑–∞–Ω–æ, –æ—á–∏—â–∞—î—Ç—å—Å—è –≤–µ—Å—å –∫–µ—à)
     */
    function clearRequestCache(key) {
        if (key) {
            delete _state.requestCache[key];
        } else {
            _state.requestCache = {};
        }
    }

    // ======== –Ü–ù–Ü–¶–Ü–ê–õ–Ü–ó–ê–¶–Ü–Ø ========

    /**
     * –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —è–¥—Ä–∞ WINIX
     * @returns {Promise<boolean>} –†–µ–∑—É–ª—å—Ç–∞—Ç —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
     */
    async function init() {
        try {
            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –≤–∂–µ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ —è–¥—Ä–æ
            if (_state.initialized) {
                console.log("‚úÖ Core: –Ø–¥—Ä–æ WINIX –≤–∂–µ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–µ");
                return true;
            }

            console.log("üîÑ Core: –ü–æ—á–∞—Ç–æ–∫ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó —è–¥—Ä–∞ WINIX");

            // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ Telegram WebApp, —è–∫—â–æ –≤—ñ–Ω –¥–æ—Å—Ç—É–ø–Ω–∏–π
            if (window.Telegram && window.Telegram.WebApp) {
                try {
                    window.Telegram.WebApp.ready();
                    window.Telegram.WebApp.expand();
                    console.log("‚úÖ Core: Telegram WebApp —É—Å–ø—ñ—à–Ω–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ");
                } catch (e) {
                    console.warn("‚ö†Ô∏è Core: –ü–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó Telegram WebApp:", e);
                }
            }

            // –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            await getUserData();
            console.log("‚úÖ Core: –î–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –æ—Ç—Ä–∏–º–∞–Ω–æ");

            // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è
            updateUserDisplay();
            updateBalanceDisplay();

            // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—é
            initNavigation();

            // –ó–∞–ø—É—Å–∫–∞—î–º–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω—É —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—é
            startAutoSync();

            // –ü–æ–∑–Ω–∞—á–∞—î–º–æ, —â–æ —è–¥—Ä–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ
            _state.initialized = true;

            console.log("‚úÖ Core: –Ø–¥—Ä–æ WINIX —É—Å–ø—ñ—à–Ω–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ");

            // –í–∏–∫–ª–∏–∫–∞—î–º–æ –ø–æ–¥—ñ—é —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
            document.dispatchEvent(new CustomEvent('winix-initialized'));

            return true;
        } catch (error) {
            console.error('‚ùå Core: –ü–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó —è–¥—Ä–∞ WINIX:', error);

            // –£ –≤–∏–ø–∞–¥–∫—É –ø–æ–º–∏–ª–∫–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∫–µ—à–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ
            updateUserDisplay();
            updateBalanceDisplay();

            document.dispatchEvent(new CustomEvent('winix-initialization-error', { detail: error }));

            return false;
        }
    }

    /**
     * –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ —è–¥—Ä–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ
     * @returns {boolean} –°—Ç–∞–Ω —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
     */
    function isInitialized() {
        return _state.initialized;
    }

    // ======== –û–ë–†–û–ë–ù–ò–ö–ò –ü–û–î–Ü–ô ========

    // –û–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ—ó –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    document.addEventListener('user-data-updated', function(event) {
        if (event.detail && event.detail.userData && event.source !== 'core.js') {
            console.log("üîÑ Core: –û—Ç—Ä–∏–º–∞–Ω–æ –ø–æ–¥—ñ—é –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞");
            _userData = event.detail.userData;
            updateUserDisplay();
            updateBalanceDisplay();
        }
    });

    // –û–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ—ó –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É
    document.addEventListener('balance-updated', function(event) {
        if (event.detail && event.source !== 'core.js') {
            console.log("üîÑ Core: –û—Ç—Ä–∏–º–∞–Ω–æ –ø–æ–¥—ñ—é –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É");

            // –û–Ω–æ–≤–ª—é—î–º–æ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            if (!_userData) _userData = {};

            if (event.detail.newBalance !== undefined) {
                _userData.coins = event.detail.newBalance;
            }

            updateBalanceDisplay();
        }
    });

    // –û–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ—ó –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –º–µ—Ä–µ–∂—ñ
    window.addEventListener('online', function() {
        console.log("üîÑ Core: –ó'—î–¥–Ω–∞–Ω–Ω—è –∑ –º–µ—Ä–µ–∂–µ—é –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–æ");

        // –û–Ω–æ–≤–ª—é—î–º–æ –¥–∞–Ω—ñ –ø—ñ—Å–ª—è –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –∑'—î–¥–Ω–∞–Ω–Ω—è
        setTimeout(() => {
            syncUserData().then(() => {
                console.log("‚úÖ Core: –î–∞–Ω—ñ —É—Å–ø—ñ—à–Ω–æ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–æ–≤–∞–Ω–æ –ø—ñ—Å–ª—è –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –∑'—î–¥–Ω–∞–Ω–Ω—è");
            }).catch(error => {
                console.warn("‚ö†Ô∏è Core: –ü–æ–º–∏–ª–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó –ø—ñ—Å–ª—è –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –∑'—î–¥–Ω–∞–Ω–Ω—è:", error);
            });
        }, 1000);
    });

    // –û–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ—ó –≤—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –≤—ñ–¥ –º–µ—Ä–µ–∂—ñ
    window.addEventListener('offline', function() {
        console.warn("‚ö†Ô∏è Core: –í—Ç—Ä–∞—á–µ–Ω–æ –∑'—î–¥–Ω–∞–Ω–Ω—è –∑ –º–µ—Ä–µ–∂–µ—é");
    });

    // –û–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ—ó –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏
    window.addEventListener('load', function() {
        // –ó–∞–ø–æ–±—ñ–≥–∞—î–º–æ —á–∞—Å—Ç—ñ–π —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
        if (!_state.initialized) {
            init().catch(e => {
                console.error("‚ùå Core: –ü–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó:", e);
            });
        }
    });

    // –û–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ—ó DOMContentLoaded
    document.addEventListener('DOMContentLoaded', function() {
        if (!_state.initialized) {
            init().catch(e => {
                console.error("‚ùå Core: –ü–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó:", e);
            });
        }
    });

    // ======== –ü–£–ë–õ–Ü–ß–ù–ò–ô API ========

    // –ï–∫—Å–ø–æ—Ä—Ç—É—î–º–æ –ø—É–±–ª—ñ—á–Ω–∏–π API
    window.WinixCore = {
        // –ú–µ—Ç–∞–¥–∞–Ω—ñ
        version: '2.0.0',
        isInitialized: isInitialized,

        // –£—Ç–∏–ª—ñ—Ç–∏
        getElement,
        saveToStorage,
        getFromStorage,
        formatCurrency,
        isOnline,
        resetAndReloadApplication,
        checkRequestThrottle,
        clearRequestCache,

        // –§—É–Ω–∫—Ü—ñ—ó –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        getUserData,
        getUserId,
        updateUserDisplay,
        getBalance,
        getCoins,
        updateBalanceDisplay,
        updateLocalBalance,
        refreshBalance,
        lockBalanceUpdates,
        isBalanceUpdateLocked,

        // –§—É–Ω–∫—Ü—ñ—ó –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó –¥–∞–Ω–∏—Ö
        syncUserData,
        startAutoSync,
        stopAutoSync,

        // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è
        init
    };

    // –î–æ–¥–∞—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é resetAndReloadApplication –≤ –≥–ª–æ–±–∞–ª—å–Ω–∏–π –ø—Ä–æ—Å—Ç—ñ—Ä —ñ–º–µ–Ω
    window.resetAndReloadApplication = resetAndReloadApplication;

    console.log("‚úÖ Core: –ú–æ–¥—É–ª—å —É—Å–ø—ñ—à–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ");
})();