/**
 * core.js - –í–¥–æ—Å–∫–æ–Ω–∞–ª–µ–Ω–∞ –±–∞–∑–æ–≤–∞ —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω—ñ—Å—Ç—å WINIX
 * –û–ø—Ç–∏–º—ñ–∑–æ–≤–∞–Ω–∞ –≤–µ—Ä—Å—ñ—è –∑ –ø–æ–∫—Ä–∞—â–µ–Ω–æ—é –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—ñ—Å—Ç—é, —Å—Ç–∞–±—ñ–ª—å–Ω—ñ—Å—Ç—é —Ç–∞ —Ä–æ–∑—à–∏—Ä–µ–Ω–æ—é –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–æ—é
 * @version 2.1.0
 */

(function() {
    'use strict';

    console.log("üîÑ Core: –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —è–¥—Ä–∞ WINIX");

    // ======== –ü–†–ò–í–ê–¢–ù–Ü –ó–ú–Ü–ù–ù–Ü ========

    // –î–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    let _userData = null;

    // –°—Ç–∞–Ω –º–æ–¥—É–ª—è
    const _state = {
        // –ü—Ä–∞–ø–æ—Ä–µ—Ü—å —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó —è–¥—Ä–∞
        initialized: false,

        // –Ü–Ω—Ç–µ—Ä–≤–∞–ª –∞–≤—Ç–æ–æ–Ω–æ–≤–ª–µ–Ω–Ω—è
        refreshInterval: null,

        // –ë–ª–æ–∫—É–≤–∞–Ω–Ω—è –∑–∞–ø–∏—Ç—ñ–≤
        requestInProgress: false,

        // –ß–∞—Å –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ –∑–∞–ø–∏—Ç—É
        lastRequestTime: 0,

        // –õ—ñ—á–∏–ª—å–Ω–∏–∫ –ø–æ–º–∏–ª–æ–∫
        errorCounter: 0,

        // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ–º–∏–ª–æ–∫ –ø–µ—Ä–µ–¥ —Å–∫–∏–¥–∞–Ω–Ω—è–º —Å—Ç–∞–Ω—É
        maxErrorsBeforeReset: 5,

        // –ß–∞—Å –æ—Å—Ç–∞–Ω–Ω—å–æ—ó –ø–æ–º–∏–ª–∫–∏
        lastErrorTime: 0,

        // –ö–µ—à –∑–∞–ø–∏—Ç—ñ–≤
        requestCache: {},

        // –õ—ñ—á–∏–ª—å–Ω–∏–∫ —É—Å–ø—ñ—à–Ω–∏—Ö –∑–∞–ø–∏—Ç—ñ–≤
        successCounter: 0,

        // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ API-–∑–∞–ø–∏—Ç—ñ–≤
        apiStats: {
            totalRequests: 0,
            successfulRequests: 0,
            failedRequests: 0,
            timeoutRequests: 0,
            corsErrors: 0,
            networkErrors: 0,
            lastError: null,
            lastRequest: null,
            lastResponse: null
        },

        // –°—Ç–∞–Ω –º–µ—Ä–µ–∂–µ–≤–æ–≥–æ –∑'—î–¥–Ω–∞–Ω–Ω—è
        networkState: {
            online: typeof navigator.onLine !== 'undefined' ? navigator.onLine : true,
            lastOnlineTime: Date.now(),
            lastOfflineTime: 0,
            reconnectionAttempts: 0,
            pingResults: []
        }
    };

    // –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è
    const _config = {
        // –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–π —ñ–Ω—Ç–µ—Ä–≤–∞–ª –º—ñ–∂ –∑–∞–ø–∏—Ç–∞–º–∏ (–º—Å)
        minRequestInterval: 5000,

        // –ß–∞—Å –∂–∏—Ç—Ç—è –∫–µ—à—É –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ (–º—Å)
        userCacheTtl: 300000, // 5 —Ö–≤–∏–ª–∏–Ω

        // –Ü–Ω—Ç–µ—Ä–≤–∞–ª –∞–≤—Ç–æ–æ–Ω–æ–≤–ª–µ–Ω–Ω—è (–º—Å)
        autoRefreshInterval: 300000, // 5 —Ö–≤–∏–ª–∏–Ω

        // –¢–∞–π–º–∞—É—Ç –∑–∞–ø–∏—Ç—ñ–≤ (–º—Å)
        requestTimeout: 15000,

        // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Å–ø—Ä–æ–± –¥–ª—è –∑–∞–ø–∏—Ç—ñ–≤
        maxRetries: 3,

        // –Ü–Ω—Ç–µ—Ä–≤–∞–ª –º—ñ–∂ –ø–æ–≤—Ç–æ—Ä–Ω–∏–º–∏ —Å–ø—Ä–æ–±–∞–º–∏ (–º—Å)
        retryInterval: 2000,

        // –†–µ–∂–∏–º –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ª–æ–≥—É–≤–∞–Ω–Ω—è
        debug: true,

        // –ë–∞–∑–æ–≤–∏–π URL API
        apiBaseUrl: null,

        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è –ø—Ä–æ–±–ª–µ–º –∑ CORS
        detectCorsIssues: true,

        // –ê–∫—Ç–∏–≤–Ω–∞ –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑'—î–¥–Ω–∞–Ω–Ω—è
        activeConnectionDiagnostics: true,

        // –Ü–Ω—Ç–µ—Ä–≤–∞–ª –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –∑'—î–¥–Ω–∞–Ω–Ω—è (–º—Å)
        diagnosticsInterval: 60000, // 1 —Ö–≤–∏–ª–∏–Ω–∞

        // –ß–∏ –ø–æ–∫–∞–∑—É–≤–∞—Ç–∏ —Ç–µ—Ö–Ω—ñ—á–Ω—ñ –¥–µ—Ç–∞–ª—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –ø—Ä–æ –ø–æ–º–∏–ª–∫–∏
        showTechnicalErrorDetails: false
    };

    // ======== –£–¢–ò–õ–Ü–¢–ò ========

    /**
     * –û—Ç—Ä–∏–º–∞–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç–∞ DOM
     * @param {string} selector - –°–µ–ª–µ–∫—Ç–æ—Ä –µ–ª–µ–º–µ–Ω—Ç–∞
     * @param {boolean} multiple - –û—Ç—Ä–∏–º–∞—Ç–∏ –≤—Å—ñ –µ–ª–µ–º–µ–Ω—Ç–∏
     * @returns {Element|NodeList|null} –ï–ª–µ–º–µ–Ω—Ç DOM
     */
    function getElement(selector, multiple = false) {
        try {
            if (multiple) {
                return document.querySelectorAll(selector);
            }
            if (selector.startsWith('#')) {
                return document.getElementById(selector.substring(1));
            }
            return document.querySelector(selector);
        } catch (e) {
            console.warn('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç–∞ DOM:', e);
            return null;
        }
    }

    /**
     * –ó–±–µ—Ä—ñ–≥–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –≤ localStorage
     * @param {string} key - –ö–ª—é—á
     * @param {any} value - –ó–Ω–∞—á–µ–Ω–Ω—è
     * @returns {boolean} –†–µ–∑—É–ª—å—Ç–∞—Ç –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è
     */
    function saveToStorage(key, value) {
        try {
            if (typeof value === 'object') {
                localStorage.setItem(key, JSON.stringify(value));
            } else {
                localStorage.setItem(key, value);
            }
            return true;
        } catch (e) {
            console.warn(`‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –≤ localStorage: ${key}`, e);
            return false;
        }
    }

    /**
     * –û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –∑ localStorage
     * @param {string} key - –ö–ª—é—á
     * @param {any} defaultValue - –ó–Ω–∞—á–µ–Ω–Ω—è –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
     * @param {boolean} isObject - –ß–∏ –ø–∞—Ä—Å–∏—Ç–∏ —è–∫ –æ–±'—î–∫—Ç
     * @returns {any} –ó–Ω–∞—á–µ–Ω–Ω—è –∑ localStorage
     */
    function getFromStorage(key, defaultValue = null, isObject = false) {
        try {
            const value = localStorage.getItem(key);
            if (value === null) return defaultValue;

            if (isObject) {
                try {
                    return JSON.parse(value);
                } catch (e) {
                    return defaultValue;
                }
            }

            return value;
        } catch (e) {
            return defaultValue;
        }
    }

    /**
     * –§–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è —á–∏—Å–ª–∞ —è–∫ –≤–∞–ª—é—Ç–∏
     * @param {number} amount - –°—É–º–∞
     * @param {number} decimals - –ö—ñ–ª—å–∫—ñ—Å—Ç—å –∑–Ω–∞–∫—ñ–≤ –ø—ñ—Å–ª—è –∫–æ–º–∏
     * @returns {string} –§–æ—Ä–º–∞—Ç–æ–≤–∞–Ω–µ —á–∏—Å–ª–æ
     */
    function formatCurrency(amount, decimals = 2) {
        try {
            const numberFormat = new Intl.NumberFormat('uk-UA', {
                maximumFractionDigits: decimals,
                minimumFractionDigits: decimals
            });
            return numberFormat.format(parseFloat(amount) || 0);
        } catch (e) {
            return (parseFloat(amount) || 0).toFixed(decimals);
        }
    }

    /**
     * –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ –ø—Ä–∏—Å—Ç—Ä—ñ–π –æ–Ω–ª–∞–π–Ω
     * @returns {boolean} –°—Ç–∞–Ω –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è
     */
    function isOnline() {
        // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ navigator.onLine, –∞–ª–µ —Ç–∞–∫–æ–∂ –≤—Ä–∞—Ö–æ–≤—É—î–º–æ –Ω–∞—à—É –≤–ª–∞—Å–Ω—É –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫—É
        const navigatorOnline = typeof navigator.onLine === 'undefined' || navigator.onLine;

        // –Ø–∫—â–æ navigatorOnline –≥–æ–≤–æ—Ä–∏—Ç—å, —â–æ –º–∏ –æ—Ñ–ª–∞–π–Ω, —Ü–µ —Å–∫–æ—Ä—ñ—à–µ –∑–∞ –≤—Å–µ –ø—Ä–∞–≤–¥–∞
        if (!navigatorOnline) {
            _state.networkState.online = false;
            _state.networkState.lastOfflineTime = Date.now();
            return false;
        }

        // –Ø–∫—â–æ –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –≤–∏—è–≤–∏–ª–∞ –ø—Ä–æ–±–ª–µ–º–∏ –∑'—î–¥–Ω–∞–Ω–Ω—è, –º–æ–∂–ª–∏–≤–æ, –º–∏ –æ—Ñ–ª–∞–π–Ω,
        // –Ω–∞–≤—ñ—Ç—å —è–∫—â–æ navigator.onLine = true
        if (_state.networkState.reconnectionAttempts > 3 &&
            Date.now() - _state.networkState.lastOnlineTime > 30000) {
            // –ù–∞–≤—ñ—Ç—å —è–∫—â–æ navigator.onLine = true, –∞–ª–µ –æ—Å—Ç–∞–Ω–Ω—ñ —Å–ø—Ä–æ–±–∏ –∑'—î–¥–Ω–∞–Ω–Ω—è –ø—Ä–æ–≤–∞–ª–∏–ª–∏—Å—å,
            // –≤–≤–∞–∂–∞—î–º–æ —â–æ –ø—Ä–æ–±–ª–µ–º–∏ –∑—ñ –∑'—î–¥–Ω–∞–Ω–Ω—è–º
            return false;
        }

        return _state.networkState.online;
    }

    /**
     * –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ API –º–æ–¥—É–ª—è
     * @returns {boolean} –ß–∏ –¥–æ—Å—Ç—É–ø–Ω–∏–π API –º–æ–¥—É–ª—å
     */
    function hasApiModule() {
        try {
            return window.WinixAPI &&
                   typeof window.WinixAPI.apiRequest === 'function' &&
                   typeof window.WinixAPI.getUserId === 'function';
        } catch (e) {
            console.warn("‚ö†Ô∏è Core: –ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ API –º–æ–¥—É–ª—è:", e);
            return false;
        }
    }

    /**
     * –ö–ª–∞—Å–∏—Ñ—ñ–∫–∞—Ü—ñ—è –ø–æ–º–∏–ª–∫–∏ –¥–ª—è –∫—Ä–∞—â–æ—ó –æ–±—Ä–æ–±–∫–∏
     * @param {Error} error - –ü–æ–º–∏–ª–∫–∞ –¥–ª—è –∫–ª–∞—Å–∏—Ñ—ñ–∫–∞—Ü—ñ—ó
     * @returns {Object} –ö–ª–∞—Å–∏—Ñ—ñ–∫–æ–≤–∞–Ω–∞ –ø–æ–º–∏–ª–∫–∞
     */
    function classifyError(error) {
        const classified = {
            originalError: error,
            message: error?.message || '–ù–µ–≤—ñ–¥–æ–º–∞ –ø–æ–º–∏–ª–∫–∞',
            type: 'unknown',
            isNetworkError: false,
            isCorsError: false,
            isTimeout: false,
            isServerError: false,
            isAuthError: false,
            statusCode: null,
            details: {}
        };

        // –°–ø–æ—á–∞—Ç–∫—É –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —Ü–µ –ø–æ–º–∏–ª–∫–∞ CORS
        if (error && error.message && (
            error.message.includes('CORS') ||
            error.message.includes('Cross-Origin') ||
            error.message.includes('Access-Control-Allow-Origin')
        )) {
            classified.type = 'cors';
            classified.isCorsError = true;
            _state.apiStats.corsErrors++;
        }
        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —Ü–µ –ø–æ–º–∏–ª–∫–∞ –º–µ—Ä–µ–∂—ñ
        else if (error && (
            error.name === 'NetworkError' ||
            error.name === 'TypeError' ||
            (error.message && (
                error.message.includes('network') ||
                error.message.includes('Network')
            ))
        )) {
            classified.type = 'network';
            classified.isNetworkError = true;
            _state.apiStats.networkErrors++;
        }
        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —Ü–µ —Ç–∞–π–º–∞—É—Ç
        else if (error && (
            error.name === 'TimeoutError' ||
            error.name === 'AbortError' ||
            (error.message && error.message.includes('timeout'))
        )) {
            classified.type = 'timeout';
            classified.isTimeout = true;
            _state.apiStats.timeoutRequests++;
        }
        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –≤—ñ–¥ —Å–µ—Ä–≤–µ—Ä–∞, —è–∫—â–æ –≤–æ–Ω–∞ —î
        else if (error && error.response) {
            classified.statusCode = error.response.status;

            if (error.response.status >= 500) {
                classified.type = 'server';
                classified.isServerError = true;
            } else if (error.response.status === 401 || error.response.status === 403) {
                classified.type = 'auth';
                classified.isAuthError = true;
            } else if (error.response.status === 404) {
                classified.type = 'not_found';
            } else {
                classified.type = 'api';
            }

            // –î–æ–¥–∞—î–º–æ –¥–µ—Ç–∞–ª—ñ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ
            if (error.response.data) {
                classified.details.response = error.response.data;
            }
        }

        // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –æ—Å—Ç–∞–Ω–Ω—é –ø–æ–º–∏–ª–∫—É
        _state.apiStats.lastError = {
            type: classified.type,
            message: classified.message,
            time: Date.now()
        };

        return classified;
    }

    /**
     * –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑'—î–¥–Ω–∞–Ω–Ω—è –∑ —Å–µ—Ä–≤–µ—Ä–æ–º
     * @returns {Promise<boolean>} –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏
     */
    async function checkServerConnection() {
        try {
            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –ø—Ä–∏—Å—Ç—Ä—ñ–π –≤–∑–∞–≥–∞–ª—ñ –æ–Ω–ª–∞–π–Ω
            if (typeof navigator.onLine !== 'undefined' && !navigator.onLine) {
                return false;
            }

            // –í–∏–∑–Ω–∞—á–∞—î–º–æ URL –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏
            let pingUrl;

            // –°–ø–æ—á–∞—Ç–∫—É —Å–ø—Ä–æ–±—É—î–º–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ URL –∑ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó
            if (_config.apiBaseUrl) {
                pingUrl = `${_config.apiBaseUrl}/api/ping`;
            }
            // –Ø–∫—â–æ WinixAPI —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–∏–π, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –π–æ–≥–æ –±–∞–∑–æ–≤–∏–π URL
            else if (window.WinixAPI && window.WinixAPI.config && window.WinixAPI.config.baseUrl) {
                pingUrl = `${window.WinixAPI.config.baseUrl}/api/ping`;
            }
            // –Ø–∫—â–æ —ñ–Ω—à–µ –Ω–µ –≤–∏–∑–Ω–∞—á–µ–Ω–æ, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –ø–æ—Ç–æ—á–Ω–∏–π –¥–æ–º–µ–Ω
            else {
                pingUrl = `${window.location.origin}/api/ping`;
            }

            // –î–æ–¥–∞—î–º–æ –≤–∏–ø–∞–¥–∫–æ–≤–∏–π –ø–∞—Ä–∞–º–µ—Ç—Ä, —â–æ–± —É–Ω–∏–∫–Ω—É—Ç–∏ –∫–µ—à—É–≤–∞–Ω–Ω—è
            pingUrl = `${pingUrl}?t=${Date.now()}`;

            // –°—Ç–≤–æ—Ä—é—î–º–æ —Ç–∞–π–º–∞—É—Ç –¥–ª—è –∑–∞–ø–∏—Ç—É
            const controller = new AbortController();
            const timeoutId = setTimeout(() => controller.abort(), 5000); // 5 —Å–µ–∫—É–Ω–¥ –º–∞–∫—Å–∏–º—É–º

            // –í–∏–∫–æ–Ω—É—î–º–æ –∑–∞–ø–∏—Ç –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –∑'—î–¥–Ω–∞–Ω–Ω—è
            const response = await fetch(pingUrl, {
                method: 'GET',
                headers: {
                    'Accept': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                signal: controller.signal
            });

            // –û—á–∏—â–∞—î–º–æ —Ç–∞–π–º–∞—É—Ç
            clearTimeout(timeoutId);

            // –Ø–∫—â–æ —Å–µ—Ä–≤–µ—Ä –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î —É—Å–ø—ñ—à–Ω–æ –Ω–∞ ping, –æ–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω –º–µ—Ä–µ–∂—ñ
            if (response.ok) {
                _state.networkState.online = true;
                _state.networkState.lastOnlineTime = Date.now();
                _state.networkState.reconnectionAttempts = 0;

                // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—ñ–Ω–≥—É
                _state.networkState.pingResults.push({
                    time: Date.now(),
                    success: true,
                    latency: Date.now() - _state.networkState.lastOfflineTime
                });

                // –û–±–º–µ–∂—É—î–º–æ —ñ—Å—Ç–æ—Ä—ñ—é –¥–æ –æ—Å—Ç–∞–Ω–Ω—ñ—Ö 10 —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤
                if (_state.networkState.pingResults.length > 10) {
                    _state.networkState.pingResults.shift();
                }

                return true;
            }

            // –Ø–∫—â–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–µ –æ–∫, –∞–ª–µ —Å—Ç–∞—Ç—É—Å 4xx, —Å–µ—Ä–≤–µ—Ä –ø—Ä–∞—Ü—é—î
            if (response.status >= 400 && response.status < 500) {
                // –°–µ—Ä–≤–µ—Ä –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î, –∞–ª–µ –∑ –ø–æ–º–∏–ª–∫–æ—é - —Ü–µ –≤—Å–µ —â–µ –≤–≤–∞–∂–∞—î—Ç—å—Å—è "–æ–Ω–ª–∞–π–Ω"
                _state.networkState.online = true;
                _state.networkState.lastOnlineTime = Date.now();

                return true;
            }

            // –Ø–∫—â–æ –ø–æ–º–∏–ª–∫–∞ 5xx, —Å–µ—Ä–≤–µ—Ä –º–∞—î –ø—Ä–æ–±–ª–µ–º–∏
            _state.networkState.reconnectionAttempts++;

            // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—ñ–Ω–≥—É
            _state.networkState.pingResults.push({
                time: Date.now(),
                success: false,
                latency: -1,
                status: response.status
            });

            return false;
        } catch (error) {
            // –ó–±—ñ–ª—å—à—É—î–º–æ –ª—ñ—á–∏–ª—å–Ω–∏–∫ —Å–ø—Ä–æ–± —ñ –∑–∞–ø–∏—Å—É—î–º–æ —á–∞—Å –æ—Ñ–ª–∞–π–Ω
            _state.networkState.reconnectionAttempts++;
            if (_state.networkState.lastOfflineTime === 0) {
                _state.networkState.lastOfflineTime = Date.now();
            }

            // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –ø–æ–º–∏–ª–∫—É
            _state.networkState.pingResults.push({
                time: Date.now(),
                success: false,
                latency: -1,
                error: error.message
            });

            // –Ø–∫—â–æ —Ü–µ –ø–æ–º–∏–ª–∫–∞ CORS, –º–æ–∂–ª–∏–≤–æ, —Å–µ—Ä–≤–µ—Ä –ø—Ä–∞—Ü—é—î, –∞–ª–µ –∑ –ø—Ä–æ–±–ª–µ–º–∞–º–∏ CORS
            if (error.message && error.message.includes('CORS')) {
                console.warn("‚ö†Ô∏è Core: –í–∏—è–≤–ª–µ–Ω–æ –ø—Ä–æ–±–ª–µ–º—É CORS –ø—Ä–∏ –ø–µ—Ä–µ–≤—ñ—Ä—Ü—ñ –∑'—î–¥–Ω–∞–Ω–Ω—è:", error.message);

                // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Ñ–ª–∞–≥ CORS –ø—Ä–æ–±–ª–µ–º–∏
                _state.networkState.corsIssueDetected = true;

                // –ì–µ–Ω–µ—Ä—É—î–º–æ –ø–æ–¥—ñ—é –ø—Ä–æ–±–ª–µ–º–∏ CORS
                document.dispatchEvent(new CustomEvent('cors-issue-detected', {
                    detail: { url: pingUrl, error: error.message }
                }));
            }

            console.error("‚ùå Core: –ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –∑'—î–¥–Ω–∞–Ω–Ω—è:", error);
            return false;
        }
    }

    /**
     * –î–µ—Ç–µ–∫—Ç—É–≤–∞–Ω–Ω—è –ø—Ä–æ–±–ª–µ–º –∑ CORS
     * @returns {Promise<Object>} –†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –¥–µ—Ç–µ–∫—Ç—É–≤–∞–Ω–Ω—è
     */
    async function detectCorsIssues() {
        // –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏
        const result = {
            hasCorsIssues: false,
            testedUrls: [],
            failedUrls: []
        };

        // –Ø–∫—â–æ –≤–∏—è–≤–ª–µ–Ω–Ω—è CORS –≤–∏–º–∫–Ω–µ–Ω–æ, –ø—Ä–æ–ø—É—Å—Ç–∏—Ç–∏
        if (!_config.detectCorsIssues) {
            return result;
        }

        try {
            // –°–ø–∏—Å–æ–∫ URL –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è
            const urlsToTest = [];

            // –î–æ–¥–∞—î–º–æ URL –∑ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó, —è–∫—â–æ –≤—ñ–Ω —î
            if (_config.apiBaseUrl) {
                urlsToTest.push(`${_config.apiBaseUrl}/api/ping`);
            }

            // –î–æ–¥–∞—î–º–æ URL –∑ WinixAPI, —è–∫—â–æ –≤—ñ–Ω –¥–æ—Å—Ç—É–ø–Ω–∏–π
            if (window.WinixAPI && window.WinixAPI.config && window.WinixAPI.config.baseUrl) {
                urlsToTest.push(`${window.WinixAPI.config.baseUrl}/api/ping`);
            }

            // –î–æ–¥–∞—î–º–æ URL –ø–æ—Ç–æ—á–Ω–æ–≥–æ –¥–æ–º–µ–Ω—É
            urlsToTest.push(`${window.location.origin}/api/ping`);

            // –î–æ–¥–∞—î–º–æ –¥–æ–º–µ–Ω winixbot.com
            urlsToTest.push("https://winixbot.com/api/ping");

            // –¢–µ—Å—Ç—É—î–º–æ –≤—Å—ñ URL
            for (const url of urlsToTest) {
                result.testedUrls.push(url);

                try {
                    const controller = new AbortController();
                    const timeoutId = setTimeout(() => controller.abort(), 3000); // 3 —Å–µ–∫—É–Ω–¥–∏ –º–∞–∫—Å–∏–º—É–º

                    const response = await fetch(url, {
                        method: 'GET',
                        headers: {
                            'Accept': 'application/json',
                            'X-Requested-With': 'XMLHttpRequest'
                        },
                        signal: controller.signal,
                        mode: 'cors'
                    });

                    clearTimeout(timeoutId);

                    // –Ø–∫—â–æ –∑–∞–ø–∏—Ç —É—Å–ø—ñ—à–Ω–∏–π, –∑–Ω–∞—á–∏—Ç—å CORS –ø—Ä–∞—Ü—é—î –¥–ª—è —Ü—å–æ–≥–æ URL
                } catch (error) {
                    // –Ø–∫—â–æ –ø–æ–º–∏–ª–∫–∞ CORS, –¥–æ–¥–∞—î–º–æ URL –¥–æ —Å–ø–∏—Å–∫—É –ø–æ–º–∏–ª–æ–∫
                    if (error.message && error.message.includes('CORS')) {
                        result.failedUrls.push({
                            url: url,
                            error: error.message
                        });
                        result.hasCorsIssues = true;
                    }
                }
            }

            // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏
            _state.networkState.corsTestResults = result;

            return result;
        } catch (error) {
            console.error("‚ùå Core: –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –¥–µ—Ç–µ–∫—Ç—É–≤–∞–Ω–Ω—ñ –ø—Ä–æ–±–ª–µ–º CORS:", error);
            return result;
        }
    }

    /**
     * –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Å–∫–∏–¥–∞–Ω–Ω—è —Å—Ç–∞–Ω—É —Ç–∞ –ø–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø—ñ—Å–ª—è –∫—Ä–∏—Ç–∏—á–Ω–∏—Ö –ø–æ–º–∏–ª–æ–∫
     */
    function resetAndReloadApplication() {
        console.log("üîÑ Core: –°–∫–∏–¥–∞–Ω–Ω—è —Å—Ç–∞–Ω—É –¥–æ–¥–∞—Ç–∫—É —á–µ—Ä–µ–∑ –∫—Ä–∏—Ç–∏—á–Ω—ñ –ø–æ–º–∏–ª–∫–∏...");

        try {
            // –û—á–∏—â–∞—î–º–æ –∫–µ—à API
            if (hasApiModule() && typeof window.WinixAPI.clearCache === 'function') {
                window.WinixAPI.clearCache();
            }

            // –û—á–∏—â–∞—î–º–æ –ª–æ–∫–∞–ª—å–Ω–µ —Å—Ö–æ–≤–∏—â–µ –∑ –≤–∞–∂–ª–∏–≤–∏–º–∏ –≤–∏–∫–ª—é—á–µ–Ω–Ω—è–º–∏
            try {
                // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ª–∏—à–µ –∫—Ä–∏—Ç–∏—á–Ω—ñ –¥–∞–Ω—ñ –¥–ª—è –∞–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó
                const userId = getFromStorage('telegram_user_id');
                const authToken = getFromStorage('auth_token');

                // –ó–∞–ø–∞–º'—è—Ç–æ–≤—É—î–º–æ URL API, —è–∫—â–æ –≤—ñ–Ω –±—É–≤ –∑–±–µ—Ä–µ–∂–µ–Ω–∏–π
                const savedApiUrl = getFromStorage('api_base_url');

                // –ü–µ—Ä–µ–∑–∞–ø–∏—Å—É—î–º–æ –∫—Ä–∏—Ç–∏—á–Ω—ñ –¥–∞–Ω—ñ –ø—ñ—Å–ª—è –æ—á–∏—â–µ–Ω–Ω—è
                if (userId) saveToStorage('telegram_user_id', userId);
                if (authToken) saveToStorage('auth_token', authToken);
                if (savedApiUrl) saveToStorage('api_base_url', savedApiUrl);
            } catch (e) {
                console.warn("‚ö†Ô∏è Core: –ü–æ–º–∏–ª–∫–∞ –æ—á–∏—â–µ–Ω–Ω—è localStorage:", e);
            }

            // –°–∫–∏–¥–∞—î–º–æ —Å—Ç–∞–Ω WinixRaffles, —è–∫—â–æ –≤—ñ–Ω —ñ—Å–Ω—É—î
            if (window.WinixRaffles && typeof window.WinixRaffles.resetState === 'function') {
                window.WinixRaffles.resetState();
            }

            // –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É
            if (typeof window.showToast === 'function') {
                window.showToast('–í–∏–∫–æ–Ω—É—î—Ç—å—Å—è –ø–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–æ–¥–∞—Ç–∫—É...', 'info');
            }

            // –ü–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —Å—Ç–æ—Ä—ñ–Ω–∫—É –∑ –Ω–µ–≤–µ–ª–∏–∫–æ—é –∑–∞—Ç—Ä–∏–º–∫–æ—é
            setTimeout(function() {
                window.location.reload();
            }, 1000);
        } catch (e) {
            console.error("‚ùå Core: –ü–æ–º–∏–ª–∫–∞ —Å–∫–∏–¥–∞–Ω–Ω—è —Å—Ç–∞–Ω—É:", e);

            // –£ –≤–∏–ø–∞–¥–∫—É –∫—Ä–∏—Ç–∏—á–Ω–æ—ó –ø–æ–º–∏–ª–∫–∏ –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ
            setTimeout(function() {
                window.location.reload();
            }, 500);
        }
    }

    /**
     * –ì–µ–Ω–µ—Ä—É—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É
     * @param {Error|Object} error - –ü–æ–º–∏–ª–∫–∞ –∞–±–æ –∫–ª–∞—Å–∏—Ñ—ñ–∫–æ–≤–∞–Ω–∞ –ø–æ–º–∏–ª–∫–∞
     * @returns {string} –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
     */
    function generateUserFriendlyErrorMessage(error) {
        // –Ø–∫—â–æ —Ü–µ –Ω–µ –∫–ª–∞—Å–∏—Ñ—ñ–∫–æ–≤–∞–Ω–∞ –ø–æ–º–∏–ª–∫–∞, –∫–ª–∞—Å–∏—Ñ—ñ–∫—É—î–º–æ —ó—ó
        const classifiedError = error.type ? error : classifyError(error);

        // –ë–∞–∑–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ —Ç–∏–ø—É –ø–æ–º–∏–ª–∫–∏
        let message;

        switch (classifiedError.type) {
            case 'cors':
                message = '–í–∏–Ω–∏–∫–ª–∞ –ø—Ä–æ–±–ª–µ–º–∞ –∑ –¥–æ—Å—Ç—É–ø–æ–º –¥–æ —Å–µ—Ä–≤–µ—Ä–∞. –¶–µ –º–æ–∂–µ –±—É—Ç–∏ –ø–æ–≤\'—è–∑–∞–Ω–æ –∑ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è–º–∏ –±–µ–∑–ø–µ–∫–∏.';
                break;
            case 'network':
                message = '–ù–µ –≤–¥–∞–ª–æ—Å—è –ø—ñ–¥–∫–ª—é—á–∏—Ç–∏—Å—è –¥–æ —Å–µ—Ä–≤–µ—Ä–∞. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ —Å–≤–æ—î —ñ–Ω—Ç–µ—Ä–Ω–µ—Ç-–∑\'—î–¥–Ω–∞–Ω–Ω—è.';
                break;
            case 'timeout':
                message = '–°–µ—Ä–≤–µ—Ä –Ω–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î. –°–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç–∏ –∑–∞–ø–∏—Ç –ø—ñ–∑–Ω—ñ—à–µ.';
                break;
            case 'server':
                message = '–°–µ—Ä–≤–µ—Ä —Ç–∏–º—á–∞—Å–æ–≤–æ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∏–π. –ë—É–¥—å –ª–∞—Å–∫–∞, —Å–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.';
                break;
            case 'auth':
                message = '–ù–µ–æ–±—Ö—ñ–¥–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è. –°–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Å—Ç–æ—Ä—ñ–Ω–∫—É.';
                break;
            case 'not_found':
                message = '–ó–∞–ø–∏—Ç–∞–Ω–∏–π —Ä–µ—Å—É—Ä—Å –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ URL —ñ —Å–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.';
                break;
            case 'api':
                message = '–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–±—Ä–æ–±—Ü—ñ –∑–∞–ø–∏—Ç—É –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ.';
                break;
            default:
                message = '–°—Ç–∞–ª–∞—Å—è –Ω–µ–æ—á—ñ–∫—É–≤–∞–Ω–∞ –ø–æ–º–∏–ª–∫–∞. –°–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Å—Ç–æ—Ä—ñ–Ω–∫—É.';
        }

        // –Ø–∫—â–æ —É–≤—ñ–º–∫–Ω–µ–Ω–æ –ø–æ–∫–∞–∑ —Ç–µ—Ö–Ω—ñ—á–Ω–∏—Ö –¥–µ—Ç–∞–ª–µ–π, –¥–æ–¥–∞—î–º–æ —ó—Ö
        if (_config.showTechnicalErrorDetails) {
            message += ` (${classifiedError.type}: ${classifiedError.message})`;
        }

        return message;
    }

    /**
     * –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É
     * @param {string|Error} errorMessage - –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∞–±–æ –æ–±'—î–∫—Ç –ø–æ–º–∏–ª–∫–∏
     * @param {string} type - –¢–∏–ø –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è (error, warning, info)
     */
    function showErrorMessage(errorMessage, type = 'error') {
        // –Ø–∫—â–æ —Ü–µ –æ–±'—î–∫—Ç –ø–æ–º–∏–ª–∫–∏, –≥–µ–Ω–µ—Ä—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        let message = typeof errorMessage === 'string'
            ? errorMessage
            : generateUserFriendlyErrorMessage(errorMessage);

        // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –Ω–∞—è–≤–Ω—É —Ñ—É–Ω–∫—Ü—ñ—é showToast, —è–∫—â–æ –≤–æ–Ω–∞ —î
        if (typeof window.showToast === 'function') {
            window.showToast(message, type);
            return;
        }

        // –Ø–∫—â–æ —î DailyBonus.showNotification
        if (window.DailyBonus && typeof window.DailyBonus.showNotification === 'function') {
            window.DailyBonus.showNotification(message, type);
            return;
        }

        // –Ø–∫ –∑–∞–ø–∞—Å–Ω–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ alert –¥–ª—è –∫—Ä–∏—Ç–∏—á–Ω–∏—Ö –ø–æ–º–∏–ª–æ–∫
        if (type === 'error') {
            alert(message);
        } else {
            console.log(`${type.toUpperCase()}: ${message}`);
        }
    }

    // ======== API –§–£–ù–ö–¶–Ü–á ========

    /**
     * –í–∏–∫–æ–Ω–∞–Ω–Ω—è API-–∑–∞–ø–∏—Ç—É –∑ –ø–æ–≤—Ç–æ—Ä–Ω–∏–º–∏ —Å–ø—Ä–æ–±–∞–º–∏
     * @param {string} endpoint - –ï–Ω–¥–ø–æ—ñ–Ω—Ç API
     * @param {string} method - HTTP –º–µ—Ç–æ–¥
     * @param {Object} data - –î–∞–Ω—ñ –¥–ª—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏
     * @param {Object} options - –î–æ–¥–∞—Ç–∫–æ–≤—ñ –æ–ø—Ü—ñ—ó
     * @returns {Promise<Object>} –†–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–ø–∏—Ç—É
     */
    async function executeApiRequest(endpoint, method = 'GET', data = null, options = {}) {
        // –ü–æ—á–∞—Ç–æ–∫ –≤—ñ–¥–ª—ñ–∫—É —á–∞—Å—É –¥–ª—è –≤–∏–º—ñ—Ä—é–≤–∞–Ω–Ω—è —Ç—Ä–∏–≤–∞–ª–æ—Å—Ç—ñ –∑–∞–ø–∏—Ç—É
        const startTime = Date.now();

        // –ü–∞—Ä–∞–º–µ—Ç—Ä–∏ –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
        const defaultOptions = {
            timeout: _config.requestTimeout,
            retries: _config.maxRetries,
            retryInterval: _config.retryInterval,
            suppressErrors: false
        };

        // –û–±'—î–¥–Ω—É—î–º–æ –æ–ø—Ü—ñ—ó
        const requestOptions = { ...defaultOptions, ...options };

        // –ó–±—ñ–ª—å—à—É—î–º–æ –ª—ñ—á–∏–ª—å–Ω–∏–∫ –∑–∞–ø–∏—Ç—ñ–≤
        _state.apiStats.totalRequests++;

        // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –æ—Å—Ç–∞–Ω–Ω—ñ–π –∑–∞–ø–∏—Ç
        _state.apiStats.lastRequest = {
            endpoint,
            method,
            time: startTime
        };

        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –ø—Ä–∏—Å—Ç—Ä—ñ–π –æ–Ω–ª–∞–π–Ω
        if (!isOnline() && !requestOptions.ignoreOffline) {
            console.warn(`‚ö†Ô∏è Core: –ü—Ä–∏—Å—Ç—Ä—ñ–π –æ—Ñ–ª–∞–π–Ω, –∑–∞–ø–∏—Ç –¥–æ ${endpoint} –≤—ñ–¥—Ö–∏–ª–µ–Ω–æ`);

            // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –ø–æ–º–∏–ª–∫—É –æ—Ñ–ª–∞–π–Ω
            return {
                status: 'error',
                message: '–ü—Ä–∏—Å—Ç—Ä—ñ–π –æ—Ñ–ª–∞–π–Ω. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ —ñ–Ω—Ç–µ—Ä–Ω–µ—Ç—É.',
                offline: true
            };
        }

        let lastError = null;
        let attempt = 0;

        // –ü—Ä–æ–±—É—î–º–æ –≤–∏–∫–æ–Ω–∞—Ç–∏ –∑–∞–ø–∏—Ç –∑ –ø–æ–≤—Ç–æ—Ä–Ω–∏–º–∏ —Å–ø—Ä–æ–±–∞–º–∏
        while (attempt < requestOptions.retries) {
            attempt++;

            try {
                // –Ø–∫—â–æ —Ü–µ –Ω–µ –ø–µ—Ä—à–∞ —Å–ø—Ä–æ–±–∞, —á–µ–∫–∞—î–º–æ –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–Ω–∏–º –∑–∞–ø–∏—Ç–æ–º
                if (attempt > 1) {
                    // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ exponential backoff –¥–ª—è —ñ–Ω—Ç–µ—Ä–≤–∞–ª—É –º—ñ–∂ —Å–ø—Ä–æ–±–∞–º–∏
                    const delay = requestOptions.retryInterval * Math.pow(1.5, attempt - 1);
                    await new Promise(resolve => setTimeout(resolve, delay));
                }

                // –í–∏–∫–æ–Ω—É—î–º–æ –∑–∞–ø–∏—Ç
                let apiResult;

                // –Ø–∫—â–æ –¥–æ—Å—Ç—É–ø–Ω–∏–π –º–æ–¥—É–ª—å WinixAPI, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –π–æ–≥–æ
                if (hasApiModule()) {
                    apiResult = await window.WinixAPI.apiRequest(endpoint, method, data, {
                        timeout: requestOptions.timeout,
                        suppressErrors: requestOptions.suppressErrors
                    });
                }
                // –Ø–∫—â–æ –¥–æ—Å—Ç—É–ø–Ω–∏–π –∑–≤–∏—á–∞–π–Ω–∏–π API
                else if (window.API && typeof window.API.get === 'function' && typeof window.API.post === 'function') {
                    if (method.toUpperCase() === 'GET') {
                        apiResult = await window.API.get(endpoint, requestOptions);
                    } else {
                        apiResult = await window.API.post(endpoint, data, requestOptions);
                    }
                }
                // –Ø–∫—â–æ –∂–æ–¥–µ–Ω API –º–æ–¥—É–ª—å –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∏–π, –≤–∏–∫–æ–Ω—É—î–º–æ –≤–ª–∞—Å–Ω–∏–π –∑–∞–ø–∏—Ç
                else {
                    // –§–æ—Ä–º—É—î–º–æ URL –¥–ª—è –∑–∞–ø–∏—Ç—É
                    let apiUrl;

                    // –í–∏–∑–Ω–∞—á–∞—î–º–æ –±–∞–∑–æ–≤–∏–π URL
                    if (_config.apiBaseUrl) {
                        apiUrl = `${_config.apiBaseUrl}/${endpoint.startsWith('/') ? endpoint.substring(1) : endpoint}`;
                    } else if (window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1') {
                        apiUrl = `http://${window.location.hostname}:8080/api/${endpoint.startsWith('/') ? endpoint.substring(1) : endpoint}`;
                    } else {
                        apiUrl = `${window.location.origin}/api/${endpoint.startsWith('/') ? endpoint.substring(1) : endpoint}`;
                    }

                    // –í–∏–∫–æ–Ω—É—î–º–æ –∑–∞–ø–∏—Ç
                    const controller = new AbortController();
                    const timeoutId = setTimeout(() => controller.abort(), requestOptions.timeout);

                    // –ó–∞–≥–æ–ª–æ–≤–∫–∏ –∑–∞–ø–∏—Ç—É
                    const headers = {
                        'Content-Type': 'application/json',
                        'Accept': 'application/json'
                    };

                    // –î–æ–¥–∞—î–º–æ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞, —è–∫—â–æ –≤—ñ–Ω —î
                    const userId = getUserId();
                    if (userId) {
                        headers['X-Telegram-User-Id'] = userId;
                    }

                    const fetchOptions = {
                        method: method,
                        headers: headers,
                        signal: controller.signal
                    };

                    // –î–æ–¥–∞—î–º–æ —Ç—ñ–ª–æ –∑–∞–ø–∏—Ç—É –¥–ª—è –º–µ—Ç–æ–¥—ñ–≤, —â–æ –º–æ–∂—É—Ç—å –π–æ–≥–æ –º–∞—Ç–∏
                    if (data && ['POST', 'PUT', 'PATCH'].includes(method.toUpperCase())) {
                        fetchOptions.body = JSON.stringify(data);
                    }

                    const response = await fetch(apiUrl, fetchOptions);
                    clearTimeout(timeoutId);

                    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Å—Ç–∞—Ç—É—Å –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ
                    if (!response.ok) {
                        throw new Error(`HTTP –ø–æ–º–∏–ª–∫–∞: ${response.status}`);
                    }

                    // –ü–∞—Ä—Å–∏–º–æ JSON –≤—ñ–¥–ø–æ–≤—ñ–¥—å
                    apiResult = await response.json();
                }

                // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–∞ –ø–æ–º–∏–ª–∫–∏
                if (apiResult.error) {
                    throw new Error(apiResult.message || apiResult.error);
                }

                // –ó–±—ñ–ª—å—à—É—î–º–æ –ª—ñ—á–∏–ª—å–Ω–∏–∫ —É—Å–ø—ñ—à–Ω–∏—Ö –∑–∞–ø–∏—Ç—ñ–≤
                _state.apiStats.successfulRequests++;

                // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –æ—Å—Ç–∞–Ω–Ω—é –≤—ñ–¥–ø–æ–≤—ñ–¥—å
                _state.apiStats.lastResponse = {
                    endpoint,
                    status: 'success',
                    time: Date.now(),
                    duration: Date.now() - startTime
                };

                // –°–∫–∏–¥–∞—î–º–æ –ª—ñ—á–∏–ª—å–Ω–∏–∫ –ø–æ–º–∏–ª–æ–∫, —è–∫—â–æ –∑–∞–ø–∏—Ç —É—Å–ø—ñ—à–Ω–∏–π
                _state.errorCounter = 0;

                // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω –º–µ—Ä–µ–∂—ñ
                _state.networkState.online = true;
                _state.networkState.lastOnlineTime = Date.now();
                _state.networkState.reconnectionAttempts = 0;

                return apiResult;
            } catch (error) {
                lastError = error;

                // –ö–ª–∞—Å–∏—Ñ—ñ–∫—É—î–º–æ –ø–æ–º–∏–ª–∫—É
                const classifiedError = classifyError(error);

                // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –æ—Å—Ç–∞–Ω–Ω—é –≤—ñ–¥–ø–æ–≤—ñ–¥—å
                _state.apiStats.lastResponse = {
                    endpoint,
                    status: 'error',
                    type: classifiedError.type,
                    time: Date.now(),
                    duration: Date.now() - startTime,
                    error: classifiedError.message
                };

                // –ó–±—ñ–ª—å—à—É—î–º–æ –ª—ñ—á–∏–ª—å–Ω–∏–∫ –ø–æ–º–∏–ª–æ–∫
                _state.apiStats.failedRequests++;

                // –Ø–∫—â–æ —Ü–µ –ø—Ä–æ–±–ª–µ–º–∞ –∑ CORS, –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ –ø–æ–º–∏–ª–∫—É –æ–¥—Ä–∞–∑—É
                if (classifiedError.isCorsError) {
                    console.error(`‚ùå Core: CORS –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏–∫–æ–Ω–∞–Ω–Ω—ñ ${method} ${endpoint}:`, classifiedError.message);

                    // –£–≤—ñ–º–∫–Ω–µ–º–æ –∞–∫—Ç–∏–≤–Ω—É –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫—É –ø—Ä–æ–±–ª–µ–º –∑ CORS
                    if (_config.detectCorsIssues) {
                        detectCorsIssues();
                    }

                    // –ù–µ –ø–æ–≤—Ç–æ—Ä—é—î–º–æ –∑–∞–ø–∏—Ç–∏ –∑ CORS –ø–æ–º–∏–ª–∫–∞–º–∏
                    break;
                }

                // –Ø–∫—â–æ —Ü–µ –ø—Ä–æ–±–ª–µ–º–∞ –∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—î—é, –Ω–µ –ø–æ–≤—Ç–æ—Ä—é—î–º–æ –∑–∞–ø–∏—Ç
                if (classifiedError.isAuthError) {
                    console.error(`‚ùå Core: –ü–æ–º–∏–ª–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó –ø—Ä–∏ –≤–∏–∫–æ–Ω–∞–Ω–Ω—ñ ${method} ${endpoint}:`, classifiedError.message);
                    break;
                }

                // –Ø–∫—â–æ —Ü–µ –º–µ—Ä–µ–∂–µ–≤–∞ –ø–æ–º–∏–ª–∫–∞ –∞–±–æ —Ç–∞–π–º–∞—É—Ç, —Å–ø—Ä–æ–±—É—î–º–æ –∑–Ω–æ–≤—É
                if (classifiedError.isNetworkError || classifiedError.isTimeout) {
                    console.warn(`‚ö†Ô∏è Core: ${classifiedError.type} –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏–∫–æ–Ω–∞–Ω–Ω—ñ ${method} ${endpoint} (—Å–ø—Ä–æ–±–∞ ${attempt}/${requestOptions.retries}):`, classifiedError.message);

                    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∑'—î–¥–Ω–∞–Ω–Ω—è –∑ —Å–µ—Ä–≤–µ—Ä–æ–º
                    const isConnected = await checkServerConnection();

                    // –Ø–∫—â–æ –Ω–µ –≤–¥–∞–ª–æ—Å—è –ø—ñ–¥–∫–ª—é—á–∏—Ç–∏—Å—è, –æ–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω –º–µ—Ä–µ–∂—ñ
                    if (!isConnected) {
                        _state.networkState.online = false;
                        _state.networkState.lastOfflineTime = Date.now();
                    }

                    // –ü—Ä–æ–¥–æ–≤–∂—É—î–º–æ —Å–ø—Ä–æ–±–∏, —è–∫—â–æ –Ω–µ –¥–æ—Å—è–≥–ª–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ—ó –∫—ñ–ª—å–∫–æ—Å—Ç—ñ
                    continue;
                }

                // –Ø–∫—â–æ —Ü–µ –ø–æ–º–∏–ª–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞, —Å–ø—Ä–æ–±—É—î–º–æ —â–µ —Ä–∞–∑
                if (classifiedError.isServerError) {
                    console.warn(`‚ö†Ô∏è Core: –ü–æ–º–∏–ª–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ –≤–∏–∫–æ–Ω–∞–Ω–Ω—ñ ${method} ${endpoint} (—Å–ø—Ä–æ–±–∞ ${attempt}/${requestOptions.retries}):`, classifiedError.message);
                    continue;
                }

                // –î–ª—è —ñ–Ω—à–∏—Ö –ø–æ–º–∏–ª–æ–∫ –ø—Ä–∏–ø–∏–Ω—è—î–º–æ —Å–ø—Ä–æ–±–∏
                console.error(`‚ùå Core: –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏–∫–æ–Ω–∞–Ω–Ω—ñ ${method} ${endpoint}:`, classifiedError.message);
                break;
            }
        }

        // –ó–±—ñ–ª—å—à—É—î–º–æ –ª—ñ—á–∏–ª—å–Ω–∏–∫ –ø–æ–º–∏–ª–æ–∫ —è–¥—Ä–∞
        _state.errorCounter++;

        // –Ø–∫—â–æ —î –∑–∞–±–∞–≥–∞—Ç–æ –ø–æ–º–∏–ª–æ–∫, —Å–∫–∏–¥–∞—î–º–æ —Å—Ç–∞–Ω
        if (_state.errorCounter >= _state.maxErrorsBeforeReset && !options.preventReset) {
            console.warn(`‚ö†Ô∏è Core: –î–æ—Å—è–≥–Ω—É—Ç–æ –∫—Ä–∏—Ç–∏—á–Ω–æ—ó –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –ø–æ–º–∏–ª–æ–∫ (${_state.errorCounter}), —Å–∫–∏–¥–∞–Ω–Ω—è —Å—Ç–∞–Ω—É...`);

            // –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É
            showErrorMessage('–í–∏–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º–∏ –∑ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è–º. –°–ø—Ä–æ–±–∞ –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è...', 'warning');

            // –°–∫–∏–¥–∞—î–º–æ –ª—ñ—á–∏–ª—å–Ω–∏–∫ –ø–æ–º–∏–ª–æ–∫
            _state.errorCounter = 0;

            // –°–∫–∏–¥–∞—î–º–æ —Å—Ç–∞–Ω –ø—Ä–∏ –∫—Ä–∏—Ç–∏—á–Ω—ñ–π –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –ø–æ–º–∏–ª–æ–∫
            setTimeout(resetAndReloadApplication, 1000);
        }

        // –Ø–∫—â–æ –¥–æ–∑–≤–æ–ª–µ–Ω–æ –ø—Ä–∏—Ö–æ–≤—É–≤–∞—Ç–∏ –ø–æ–º–∏–ª–∫–∏, –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ –æ–±'—î–∫—Ç –ø–æ–º–∏–ª–∫–∏
        if (requestOptions.suppressErrors) {
            return {
                status: 'error',
                message: lastError?.message || '–ù–µ–≤—ñ–¥–æ–º–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏–∫–æ–Ω–∞–Ω–Ω—ñ –∑–∞–ø–∏—Ç—É',
                error: lastError,
                offline: !isOnline()
            };
        }

        // –Ø–∫—â–æ –Ω–µ –¥–æ–∑–≤–æ–ª–µ–Ω–æ –ø—Ä–∏—Ö–æ–≤—É–≤–∞—Ç–∏ –ø–æ–º–∏–ª–∫–∏, –≤–∏–∫–∏–¥–∞—î–º–æ –ø–æ–º–∏–ª–∫—É
        throw lastError;
    }

    // ======== –§–£–ù–ö–¶–Ü–á –ö–û–†–ò–°–¢–£–í–ê–ß–ê ========

    /**
     * –û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
     * @param {boolean} forceRefresh - –ü—Ä–∏–º—É—Å–æ–≤–æ –æ–Ω–æ–≤–∏—Ç–∏
     * @returns {Promise<Object>} –î–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
     */
    async function getUserData(forceRefresh = false) {
        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –ø—Ä–∏—Å—Ç—Ä—ñ–π –æ–Ω–ª–∞–π–Ω
        if (!isOnline() && !forceRefresh) {
            console.warn("‚ö†Ô∏è Core: –ü—Ä–∏—Å—Ç—Ä—ñ–π –æ—Ñ–ª–∞–π–Ω, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∫–µ—à–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ");

            // –Ø–∫—â–æ —î –∑–±–µ—Ä–µ–∂–µ–Ω—ñ –¥–∞–Ω—ñ, –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ —ó—Ö
            if (_userData) {
                return _userData;
            }

            // –°—Ç–≤–æ—Ä—é—î–º–æ –±–∞–∑–æ–≤—ñ –¥–∞–Ω—ñ –∑ localStorage
            const storedData = getFromStorage('userData', null, true);
            if (storedData) {
                _userData = storedData;
                return _userData;
            }

            // –°—Ç–≤–æ—Ä—é—î–º–æ –º—ñ–Ω—ñ–º–∞–ª—å–Ω—ñ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ localStorage
            const userId = getUserId();
            _userData = {
                telegram_id: userId || 'unknown',
                balance: parseFloat(getFromStorage('userTokens', '0')),
                coins: parseInt(getFromStorage('userCoins', '0')),
                source: 'localStorage_offline'
            };

            return _userData;
        }

        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∞—Å—Ç–æ—Ç—É –∑–∞–ø–∏—Ç—ñ–≤ —ñ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –∫–µ—à—É
        const now = Date.now();
        if (!forceRefresh && (now - _state.lastRequestTime < _config.minRequestInterval)) {
            console.log("‚è≥ Core: –ó–∞–Ω–∞–¥—Ç–æ —á–∞—Å—Ç–∏–π –∑–∞–ø–∏—Ç –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∫–µ—à");

            // –Ø–∫—â–æ —É –Ω–∞—Å –≤–∂–µ —î –¥–∞–Ω—ñ —ñ –Ω–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ –æ–Ω–æ–≤–ª—é–≤–∞—Ç–∏
            if (_userData) {
                return _userData;
            }

            // –ù–∞–º–∞–≥–∞—î–º–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∑ localStorage
            const storedData = getFromStorage('userData', null, true);
            if (storedData) {
                _userData = storedData;
                return _userData;
            }
        }

        // –ó–∞–ø–æ–±—ñ–≥–∞—î–º–æ –ø–∞—Ä–∞–ª–µ–ª—å–Ω–∏–º –∑–∞–ø–∏—Ç–∞–º
        if (_state.requestInProgress && !forceRefresh) {
            console.log("‚è≥ Core: –ó–∞–ø–∏—Ç –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤–∂–µ –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è");

            // –Ø–∫—â–æ —É –Ω–∞—Å –≤–∂–µ —î –¥–∞–Ω—ñ, –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ —ó—Ö
            if (_userData) {
                return _userData;
            }

            // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –∑ localStorage
            const storedData = getFromStorage('userData', null, true);
            if (storedData) {
                _userData = storedData;
                return _userData;
            }
        }

        // –û–Ω–æ–≤–ª—é—î–º–æ —á–∞—Å –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ –∑–∞–ø–∏—Ç—É —ñ –≤—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –±–ª–æ–∫—É–≤–∞–Ω–Ω—è
        _state.lastRequestTime = now;
        _state.requestInProgress = true;

        try {
            // –§–æ—Ä–º—É—î–º–æ –∑–∞–ø–∏—Ç
            const userId = getUserId();
            if (!userId) {
                throw new Error('ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
            }

            // –î–æ–¥–∞—î–º–æ –ø–∞—Ä–∞–º–µ—Ç—Ä –∑–∞–ø–æ–±—ñ–≥–∞–Ω–Ω—è –∫–µ—à—É–≤–∞–Ω–Ω—è
            const endpoint = `user/${userId}?t=${now}`;

            // –í–∏–∫–æ–Ω—É—î–º–æ –∑–∞–ø–∏—Ç —á–µ—Ä–µ–∑ executeApiRequest
            const response = await executeApiRequest(endpoint, 'GET', null, {
                suppressErrors: true,
                timeout: 10000
            });

            _state.requestInProgress = false;

            if (response && response.status === 'success' && response.data) {
                _userData = response.data;

                // –û–Ω–æ–≤–ª—é—î–º–æ –¥–∞–Ω—ñ –≤ localStorage
                saveToStorage('userData', _userData);

                // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —Ç–∞–∫–æ–∂ –æ–∫—Ä–µ–º—ñ –ø–æ–ª—è –¥–ª—è —Å—É–º—ñ—Å–Ω–æ—Å—Ç—ñ
                if (_userData.balance !== undefined) {
                    saveToStorage('userTokens', _userData.balance.toString());
                    saveToStorage('winix_balance', _userData.balance.toString());
                }

                if (_userData.coins !== undefined) {
                    saveToStorage('userCoins', _userData.coins.toString());
                    saveToStorage('winix_coins', _userData.coins.toString());
                }

                // –û–Ω–æ–≤–ª—é—î–º–æ —á–∞—Å –∫–µ—à—É–≤–∞–Ω–Ω—è
                saveToStorage('userData_timestamp', now.toString());

                // –ì–µ–Ω–µ—Ä—É—î–º–æ –ø–æ–¥—ñ—é –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
                document.dispatchEvent(new CustomEvent('user-data-updated', {
                    detail: { userData: _userData },
                    source: 'core.js'
                }));

                // –°–∫–∏–¥–∞—î–º–æ –ª—ñ—á–∏–ª—å–Ω–∏–∫ –ø–æ–º–∏–ª–æ–∫ –ø—Ä–∏ —É—Å–ø—ñ—à–Ω–æ–º—É –∑–∞–ø–∏—Ç—ñ
                _state.errorCounter = 0;

                return _userData;
            } else {
                throw new Error(response?.message || '–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞');
            }
        } catch (error) {
            console.error('‚ùå Core: –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:', error);
            _state.requestInProgress = false;

            // –ó–±—ñ–ª—å—à—É—î–º–æ –ª—ñ—á–∏–ª—å–Ω–∏–∫ –ø–æ–º–∏–ª–æ–∫
            _state.errorCounter++;
            _state.lastErrorTime = now;

            // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –∫—Ä–∏—Ç–∏—á–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ–º–∏–ª–æ–∫
            if (_state.errorCounter >= _state.maxErrorsBeforeReset) {
                console.warn(`‚ö†Ô∏è Core: –î–æ—Å—è–≥–Ω—É—Ç–æ –∫—Ä–∏—Ç–∏—á–Ω–æ—ó –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –ø–æ–º–∏–ª–æ–∫ (${_state.errorCounter}), —Å–∫–∏–¥–∞–Ω–Ω—è —Å—Ç–∞–Ω—É...`);

                // –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É
                showErrorMessage('–í–∏–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º–∏ –∑ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è–º. –°–ø—Ä–æ–±–∞ –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è...', 'warning');

                // –°–∫–∏–¥–∞—î–º–æ –ª—ñ—á–∏–ª—å–Ω–∏–∫ –ø–æ–º–∏–ª–æ–∫
                _state.errorCounter = 0;

                // –ó–∞–ø—É—Å–∫–∞—î–º–æ —Å–∫–∏–¥–∞–Ω–Ω—è —Å—Ç–∞–Ω—É
                setTimeout(resetAndReloadApplication, 1000);
            }

            // –£ –≤–∏–ø–∞–¥–∫—É –ø–æ–º–∏–ª–∫–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –¥–∞–Ω—ñ –∑ localStorage
            const storedUserData = getFromStorage('userData', null, true);
            if (storedUserData) {
                _userData = storedUserData;
                return _userData;
            }

            // –°—Ç–≤–æ—Ä—é—î–º–æ –º—ñ–Ω—ñ–º–∞–ª—å–Ω—ñ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            const userId = getUserId();
            _userData = {
                telegram_id: userId || 'unknown',
                balance: parseFloat(getFromStorage('userTokens', '0')),
                coins: parseInt(getFromStorage('userCoins', '0')),
                source: 'localStorage_after_error'
            };

            return _userData;
        }
    }

    /**
     * –û—Ç—Ä–∏–º–∞–Ω–Ω—è ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
     * @returns {string|null} ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∞–±–æ null
     */
    function getUserId() {
        console.log('üîç [CORE] –°–ø—Ä–æ–±–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞');
        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ä—ñ–∑–Ω—ñ –¥–∂–µ—Ä–µ–ª–∞ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤ –ø–æ—Ä—è–¥–∫—É –ø—Ä—ñ–æ—Ä–∏—Ç–µ—Ç—É

        // 1. –ó API –º–æ–¥—É–ª—è
        if (hasApiModule()) {
            try {
                const apiId = window.WinixAPI.getUserId();
                console.log('üîç [CORE] ID –∑ API –º–æ–¥—É–ª—è:', apiId);
                if (apiId && apiId !== 'undefined' && apiId !== 'null') {
                    return apiId;
                }
            } catch (e) {
                console.warn("‚ö†Ô∏è Core: –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è ID —á–µ—Ä–µ–∑ API:", e);
            }
        }

        // 2. –ó localStorage
        try {
            const storedId = getFromStorage('telegram_user_id');
            if (storedId && storedId !== 'undefined' && storedId !== 'null') {
                return storedId;
            }
        } catch (e) {
            console.warn("‚ö†Ô∏è Core: –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è ID –∑—ñ —Å—Ö–æ–≤–∏—â–∞:", e);
        }

        // 3. –ó DOM
        try {
            // –°–ø–æ—á–∞—Ç–∫—É –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –µ–ª–µ–º–µ–Ω—Ç –≤ —Ö–µ–¥–µ—Ä—ñ
            const headerUserIdElement = getElement('#header-user-id');
            if (headerUserIdElement && headerUserIdElement.textContent) {
                const id = headerUserIdElement.textContent.trim();
                if (id && id !== 'undefined' && id !== 'null') {
                    saveToStorage('telegram_user_id', id);
                    return id;
                }
            }

            // –ü–æ—Ç—ñ–º –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –ø—Ä–∏—Ö–æ–≤–∞–Ω–∏–π –µ–ª–µ–º–µ–Ω—Ç
            const userIdElement = getElement('#user-id');
            if (userIdElement && userIdElement.textContent) {
                const id = userIdElement.textContent.trim();
                if (id && id !== 'undefined' && id !== 'null') {
                    saveToStorage('telegram_user_id', id);
                    return id;
                }
            }
        } catch (e) {
            console.warn("‚ö†Ô∏è Core: –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è ID –∑ DOM:", e);
        }

        // 4. –ó URL
        try {
            const urlParams = new URLSearchParams(window.location.search);
            const urlId = urlParams.get('id') || urlParams.get('user_id') || urlParams.get('telegram_id');
            if (urlId && urlId !== 'undefined' && urlId !== 'null') {
                saveToStorage('telegram_user_id', urlId);
                return urlId;
            }
        } catch (e) {
            console.warn("‚ö†Ô∏è Core: –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è ID –∑ URL:", e);
        }

        // 5. –ó Telegram WebApp
        try {
            if (window.Telegram && window.Telegram.WebApp &&
                window.Telegram.WebApp.initDataUnsafe &&
                window.Telegram.WebApp.initDataUnsafe.user &&
                window.Telegram.WebApp.initDataUnsafe.user.id) {

                const telegramId = window.Telegram.WebApp.initDataUnsafe.user.id.toString();
                if (telegramId) {
                    saveToStorage('telegram_user_id', telegramId);
                    return telegramId;
                }
            }
        } catch (e) {
            console.warn("‚ö†Ô∏è Core: –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è ID –∑ Telegram WebApp:", e);
        }

        return null;
    }

    /**
     * –û–Ω–æ–≤–ª–µ–Ω–Ω—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
     */
    function updateUserDisplay() {
        try {
            // –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            const userData = _userData || {};
            const userId = userData.telegram_id || getUserId() || getFromStorage('telegram_user_id', 'Unknown ID');
            const username = userData.username || getFromStorage('username', 'User');

            // –û–Ω–æ–≤–ª—é—î–º–æ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            const userIdElement = getElement('#header-user-id');
            if (userIdElement && userIdElement.textContent !== userId) {
                userIdElement.textContent = userId;
            }

            // –û–Ω–æ–≤–ª—é—î–º–æ —ñ–º'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            const usernameElement = getElement('#username');
            if (usernameElement && usernameElement.textContent !== username) {
                usernameElement.textContent = username;
            }

            // –û–Ω–æ–≤–ª—é—î–º–æ –∞–≤–∞—Ç–∞—Ä
            updateUserAvatar(username);
        } catch (e) {
            console.warn('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:', e);
        }
    }

    /**
     * –û–Ω–æ–≤–ª–µ–Ω–Ω—è –∞–≤–∞—Ç–∞—Ä–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
     * @param {string} username - –Ü–º'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
     */
    function updateUserAvatar(username) {
        try {
            const avatarElement = getElement('#profile-avatar');
            if (!avatarElement) return;

            // –û—á–∏—â–∞—î–º–æ –≤–º—ñ—Å—Ç –∞–≤–∞—Ç–∞—Ä–∞ —Ç—ñ–ª—å–∫–∏ —è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω—ñ –∑–º—ñ–Ω–∏
            username = username || _userData?.username || getFromStorage('username', 'User');
            const avatarSrc = getFromStorage('userAvatarSrc') || getFromStorage('avatarSrc');

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –ø–æ—Ç—Ä—ñ–±–Ω–æ –æ–Ω–æ–≤–ª—é–≤–∞—Ç–∏ –∞–≤–∞—Ç–∞—Ä
            if (avatarSrc) {
                // –Ø–∫—â–æ —î –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
                if (!avatarElement.querySelector('img')) {
                    avatarElement.innerHTML = '';
                    const img = document.createElement('img');
                    img.src = avatarSrc;
                    img.alt = username;
                    img.onerror = () => {
                        avatarElement.textContent = username[0].toUpperCase();
                    };
                    avatarElement.appendChild(img);
                }
            } else if (avatarElement.textContent !== username[0].toUpperCase()) {
                // –Ø–∫—â–æ –Ω–µ–º–∞—î –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è, –ø–æ–∫–∞–∑—É—î–º–æ –ø–µ—Ä—à—É –ª—ñ—Ç–µ—Ä—É
                avatarElement.innerHTML = '';
                avatarElement.textContent = username[0].toUpperCase();
            }
        } catch (e) {
            console.warn('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∞–≤–∞—Ç–∞—Ä–∞:', e);
        }
    }

    /**
     * –û—Ç—Ä–∏–º–∞–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
     * @returns {number} –ë–∞–ª–∞–Ω—Å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
     */
    function getBalance() {
        try {
            return _userData?.balance ||
                  parseFloat(getFromStorage('userTokens', '0')) ||
                  parseFloat(getFromStorage('winix_balance', '0')) || 0;
        } catch (e) {
            return 0;
        }
    }

    /**
     * –û—Ç—Ä–∏–º–∞–Ω–Ω—è –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –∂–µ—Ç–æ–Ω—ñ–≤
     * @returns {number} –ö—ñ–ª—å–∫—ñ—Å—Ç—å –∂–µ—Ç–æ–Ω—ñ–≤
     */
    function getCoins() {
        try {
            // 1. –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –≥–ª–æ–±–∞–ª—å–Ω–∏–π –∫–æ–Ω—Ç—Ä–æ–ª–µ—Ä —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó (–Ω–∞–π–≤–∏—â–∏–π –ø—Ä—ñ–æ—Ä–∏—Ç–µ—Ç)
            if (window.__winixSyncControl && window.__winixSyncControl.lastValidBalance !== null) {
                return window.__winixSyncControl.lastValidBalance;
            }

            // 2. –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            if (_userData?.coins !== undefined) {
                return _userData.coins;
            }

            // 3. –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –ª–æ–∫–∞–ª—å–Ω–µ —Å—Ö–æ–≤–∏—â–µ
            const storedCoins = parseInt(getFromStorage('userCoins', '0')) || parseInt(getFromStorage('winix_coins', '0'));
            if (storedCoins) {
                return storedCoins;
            }

            return 0;
        } catch (e) {
            return 0;
        }
    }

    /**
     * –û–Ω–æ–≤–ª–µ–Ω–Ω—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É
     * @param {boolean} animate - –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –∞–Ω—ñ–º–∞—Ü—ñ—é
     */
    function updateBalanceDisplay(animate = false) {
        try {
            // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω—ñ–≤
            const tokensElement = getElement('#user-tokens');
            if (tokensElement) {
                const balance = getBalance();
                const formattedBalance = formatCurrency(balance);

                // –û–Ω–æ–≤–ª—é—î–º–æ —Ç—ñ–ª—å–∫–∏ —è–∫—â–æ –∑–º—ñ–Ω–∏–ª–æ—Å—è
                if (tokensElement.textContent !== formattedBalance) {
                    tokensElement.textContent = formattedBalance;
                }
            }

            // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∂–µ—Ç–æ–Ω—ñ–≤
            const coinsElement = getElement('#user-coins');
            if (coinsElement) {
                const coins = getCoins();
                const currentCoins = parseInt(coinsElement.textContent) || 0;

                // –û–Ω–æ–≤–ª—é—î–º–æ —Ç—ñ–ª—å–∫–∏ —è–∫—â–æ –∑–º—ñ–Ω–∏–ª–æ—Å—è
                if (currentCoins !== coins) {
                    // –î–æ–¥–∞—î–º–æ –∞–Ω—ñ–º–∞—Ü—ñ—é, —è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ
                    if (animate) {
                        coinsElement.classList.remove('decreasing', 'increasing');

                        if (coins < currentCoins) {
                            coinsElement.classList.add('decreasing');
                        } else if (coins > currentCoins) {
                            coinsElement.classList.add('increasing');
                        }

                        // –í–∏–¥–∞–ª—è—î–º–æ –∫–ª–∞—Å–∏ –∞–Ω—ñ–º–∞—Ü—ñ—ó —á–µ—Ä–µ–∑ 1 —Å–µ–∫—É–Ω–¥—É
                        setTimeout(() => {
                            coinsElement.classList.remove('decreasing', 'increasing');
                        }, 1000);
                    }

                    coinsElement.textContent = coins;
                }
            }
        } catch (e) {
            console.warn('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É:', e);
        }
    }

    /**
     * –û–Ω–æ–≤–ª–µ–Ω–Ω—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –±–∞–ª–∞–Ω—Å—É –∑ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è–º–∏ –∞–Ω—ñ–º–∞—Ü—ñ—ó
     * @param {number} newBalance - –ù–æ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É
     * @param {string} source - –î–∂–µ—Ä–µ–ª–æ –∑–º—ñ–Ω–∏
     * @param {boolean} animate - –ß–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –∞–Ω—ñ–º–∞—Ü—ñ—é
     * @returns {boolean} –£—Å–ø—ñ—à–Ω—ñ—Å—Ç—å –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
     */
    function updateLocalBalance(newBalance, source = 'unknown', animate = true) {
        if (typeof newBalance !== 'number' || isNaN(newBalance) || newBalance < 0) {
            console.warn('‚ö†Ô∏è –°–ø—Ä–æ–±–∞ –≤—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–∏–π –±–∞–ª–∞–Ω—Å:', newBalance);
            return false;
        }

        try {
            // –û—Ç—Ä–∏–º—É—î–º–æ –ø–æ—Ç–æ—á–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è –¥–ª—è –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è
            const coinsElement = getElement('#user-coins');
            if (!coinsElement) return false;

            const oldBalance = parseInt(coinsElement.textContent) || 0;

            // –£–Ω–∏–∫–∞—î–º–æ –Ω–µ–ø–æ—Ç—Ä—ñ–±–Ω–∏—Ö –æ–Ω–æ–≤–ª–µ–Ω—å DOM
            if (oldBalance === newBalance) return true;

            // –í–∏–¥–∞–ª—è—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ –∫–ª–∞—Å–∏ –∞–Ω—ñ–º–∞—Ü—ñ—ó
            coinsElement.classList.remove('increasing', 'decreasing', 'updated');

            // –î–æ–¥–∞—î–º–æ –∫–ª–∞—Å –∞–Ω—ñ–º–∞—Ü—ñ—ó, —è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ
            if (animate) {
                if (newBalance > oldBalance) {
                    coinsElement.classList.add('increasing');
                } else if (newBalance < oldBalance) {
                    coinsElement.classList.add('decreasing');
                }
            }

            // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –Ω–æ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è
            coinsElement.textContent = newBalance;

            // –û–Ω–æ–≤–ª—é—î–º–æ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            if (_userData) {
                _userData.coins = newBalance;
            }

            // –û–Ω–æ–≤–ª—é—î–º–æ –ª–æ–∫–∞–ª—å–Ω–µ —Å—Ö–æ–≤–∏—â–µ
            saveToStorage('userCoins', newBalance.toString());
            saveToStorage('winix_coins', newBalance.toString());
            saveToStorage('winix_balance_update_time', Date.now().toString());

            // –ì–µ–Ω–µ—Ä—É—î–º–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É –ø–æ–¥—ñ—é –ø—Ä–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É
            document.dispatchEvent(new CustomEvent('balance-updated', {
                detail: {
                    oldBalance: oldBalance,
                    newBalance: newBalance,
                    source: source || 'core.js',
                    timestamp: Date.now()
                }
            }));

            // –í–∏–¥–∞–ª—è—î–º–æ –∫–ª–∞—Å–∏ –∞–Ω—ñ–º–∞—Ü—ñ—ó –ø—ñ—Å–ª—è 1 —Å–µ–∫—É–Ω–¥–∏
            if (animate) {
                setTimeout(() => {
                    coinsElement.classList.remove('increasing', 'decreasing', 'updated');
                }, 1000);
            }

            return true;
        } catch (e) {
            console.warn('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –±–∞–ª–∞–Ω—Å—É:', e);
            return false;
        }
    }

    /**
     * –û–Ω–æ–≤–ª–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É –∑ —Å–µ—Ä–≤–µ—Ä–∞
     * @param {boolean} forceRefresh - –ü—Ä–∏–º—É—Å–æ–≤–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
     * @returns {Promise<Object>} –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
     */
    async function refreshBalance(forceRefresh = false) {
        // –°—Ç–≤–æ—Ä—é—î–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—é –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è
        const transactionInfo = {
            id: Date.now().toString() + '_' + Math.random().toString(36).substring(2, 8),
            timestamp: Date.now(),
            source: 'core.js'
        };

        console.log(`üîÑ Core: –ó–∞–ø–∏—Ç –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É (ID: ${transactionInfo.id})`);

        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –ø—Ä–∏—Å—Ç—Ä—ñ–π –æ–Ω–ª–∞–π–Ω
        if (!isOnline() && !forceRefresh) {
            console.warn("‚ö†Ô∏è Core: –ü—Ä–∏—Å—Ç—Ä—ñ–π –æ—Ñ–ª–∞–π–Ω, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –ª–æ–∫–∞–ª—å–Ω—ñ –¥–∞–Ω—ñ –±–∞–ª–∞–Ω—Å—É");

            // –Ø–≤–Ω–æ –æ—Ç—Ä–∏–º—É—î–º–æ —Ç–∞ –æ–±—á–∏—Å–ª—é—î–º–æ –≤—Å—ñ –¥–∞–Ω—ñ –¥–ª—è –æ—Ñ–ª–∞–π–Ω-—Ä–µ–∂–∏–º—É
            const lastKnownBalance = getCoins();
            const lastUpdateTime = parseInt(getFromStorage('winix_balance_update_time') || '0');
            const now = Date.now();
            const dataAge = now - lastUpdateTime;

            // –í–∏–∑–Ω–∞—á–∞—î–º–æ —Å—Ç–∞—Ç—É—Å –¥–∞–Ω–∏—Ö –¥–ª—è —ñ–Ω—Ñ–æ—Ä–º—É–≤–∞–Ω–Ω—è
            let dataStatus = 'fresh';
            if (lastUpdateTime === 0) {
                dataStatus = 'unknown';
            } else if (dataAge > 30 * 60 * 1000) { // —Å—Ç–∞—Ä—à–µ 30 —Ö–≤–∏–ª–∏–Ω
                dataStatus = 'stale';
            }

            // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∑ –ª–æ–∫–∞–ª—å–Ω–∏—Ö –¥–∞–Ω–∏—Ö –±–µ–∑ –∞–Ω—ñ–º–∞—Ü—ñ—ó
            updateBalanceDisplay(false);

            return {
                success: true,
                offline: true,
                dataStatus: dataStatus,
                dataAge: dataAge,
                transactionId: transactionInfo.id,
                data: {
                    coins: lastKnownBalance,
                    lastUpdate: lastUpdateTime
                }
            };
        }

        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –±–ª–æ–∫—É–≤–∞–Ω–Ω—è —á–µ—Ä–µ–∑ –≥–ª–æ–±–∞–ª—å–Ω–∏–π –∫–æ–Ω—Ç—Ä–æ–ª–µ—Ä
        if (window.__winixSyncControl &&
            window.__winixSyncControl.isBlocked &&
            window.__winixSyncControl.isBlocked('core_balance') &&
            !forceRefresh) {

            console.log("üîí Core: –û–Ω–æ–≤–ª–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–æ –∫–æ–Ω—Ç—Ä–æ–ª–µ—Ä–æ–º —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó");

            // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –æ—Å—Ç–∞–Ω–Ω—ñ–π –≤–∞–ª—ñ–¥–Ω–∏–π –±–∞–ª–∞–Ω—Å –∑ –∫–æ–Ω—Ç—Ä–æ–ª–µ—Ä–∞
            if (window.__winixSyncControl.lastValidBalance !== null) {
                // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –±–µ–∑ –∞–Ω—ñ–º–∞—Ü—ñ—ó
                updateLocalBalance(window.__winixSyncControl.lastValidBalance, 'sync_control', false);

                return {
                    success: true,
                    blocked: true,
                    source: 'sync_control',
                    data: {
                        coins: window.__winixSyncControl.lastValidBalance
                    }
                };
            }
        }

        // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ —á–∞—Å—Ç–æ—Ç—É –∑–∞–ø–∏—Ç—ñ–≤
        if (!forceRefresh && (Date.now() - _state.lastRequestTime < _config.minRequestInterval)) {
            console.log("‚è≥ Core: –ó–∞–Ω–∞–¥—Ç–æ —á–∞—Å—Ç–∏–π –∑–∞–ø–∏—Ç –±–∞–ª–∞–Ω—Å—É, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∫–µ—à");
            return {
                success: true,
                cached: true,
                data: {
                    coins: getCoins(),
                    cached: true
                }
            };
        }

        // –ë–ª–æ–∫—É—î–º–æ –ø–∞—Ä–∞–ª–µ–ª—å–Ω—ñ –∑–∞–ø–∏—Ç–∏
        if (_state.requestInProgress && !forceRefresh) {
            console.log("‚è≥ Core: –ó–∞–ø–∏—Ç –±–∞–ª–∞–Ω—Å—É –≤–∂–µ –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è");
            return {
                success: true,
                inProgress: true,
                data: {
                    coins: getCoins(),
                    inProgress: true
                }
            };
        }

        // –û–Ω–æ–≤–ª—é—î–º–æ —á–∞—Å –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ –∑–∞–ø–∏—Ç—É —ñ –≤—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –±–ª–æ–∫—É–≤–∞–Ω–Ω—è
        _state.lastRequestTime = Date.now();
        _state.requestInProgress = true;

        // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ø–æ—Ç–æ—á–Ω–∏–π –±–∞–ª–∞–Ω—Å –¥–ª—è –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è
        const oldBalance = getCoins();
        transactionInfo.oldBalance = oldBalance;

        try {
            // –û—Ç—Ä–∏–º—É—î–º–æ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            const userId = getUserId();
            if (!userId) {
                throw new Error('ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
            }

            // –î–æ–¥–∞—î–º–æ –ø–∞—Ä–∞–º–µ—Ç—Ä –∑–∞–ø–æ–±—ñ–≥–∞–Ω–Ω—è –∫–µ—à—É–≤–∞–Ω–Ω—è
            const endpoint = `user/${userId}/balance?t=${Date.now()}`;

            // –í–∏–∫–æ–Ω—É—î–º–æ –∑–∞–ø–∏—Ç —á–µ—Ä–µ–∑ executeApiRequest
            const response = await executeApiRequest(endpoint, 'GET', null, {
                suppressErrors: true,
                timeout: 10000
            });

            // –ó–∞–≤–µ—Ä—à—É—î–º–æ –∑–∞–ø–∏—Ç
            _state.requestInProgress = false;

            if (response && response.status === 'success' && response.data) {
                // –û—Ç—Ä–∏–º—É—î–º–æ –Ω–æ–≤–∏–π –±–∞–ª–∞–Ω—Å –∑ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ
                const newBalance = response.data.coins !== undefined ? response.data.coins : oldBalance;
                transactionInfo.newBalance = newBalance;
                transactionInfo.serverResponse = true;

                // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª–µ—Ä–∞ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó
                if (window.__winixSyncControl) {
                    // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –æ—Å—Ç–∞–Ω–Ω—ñ–π –≤–∞–ª—ñ–¥–Ω–∏–π –±–∞–ª–∞–Ω—Å
                    window.__winixSyncControl.lastValidBalance = newBalance;
                }

                // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∑ –∞–Ω—ñ–º–∞—Ü—ñ—î—é
                updateLocalBalance(newBalance, 'core.js', true);

                // –û–Ω–æ–≤–ª—é—î–º–æ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
                if (_userData) {
                    _userData.coins = newBalance;
                }

                // –û–Ω–æ–≤–ª—é—î–º–æ –∫–µ—à
                saveToStorage('userCoins', newBalance.toString());
                saveToStorage('winix_coins', newBalance.toString());
                saveToStorage('winix_balance_update_time', Date.now().toString());

                // –ó–∞–ø–∏—Å—É—î–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—é
                saveToStorage('winix_last_balance_transaction', JSON.stringify(transactionInfo));

                // –°–∫–∏–¥–∞—î–º–æ –ª—ñ—á–∏–ª—å–Ω–∏–∫ –ø–æ–º–∏–ª–æ–∫
                _state.errorCounter = 0;

                return {
                    success: true,
                    transactionId: transactionInfo.id,
                    data: {
                        coins: newBalance,
                        oldCoins: oldBalance
                    }
                };
            } else if (response.offline) {
                // –Ø–∫—â–æ –ø—Ä–∏—Å—Ç—Ä—ñ–π –æ—Ñ–ª–∞–π–Ω, –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ –æ—Ñ–ª–∞–π–Ω-—Å—Ç–∞—Ç—É—Å
                _state.requestInProgress = false;

                return {
                    success: true,
                    offline: true,
                    message: response.message || '–ü—Ä–∏—Å—Ç—Ä—ñ–π –æ—Ñ–ª–∞–π–Ω',
                    data: {
                        coins: oldBalance
                    }
                };
            } else {
                throw new Error(response?.message || '–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –±–∞–ª–∞–Ω—Å');
            }
        } catch (error) {
            console.error('‚ùå Core: –ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É:', error);
            _state.requestInProgress = false;

            // –ó–±—ñ–ª—å—à—É—î–º–æ –ª—ñ—á–∏–ª—å–Ω–∏–∫ –ø–æ–º–∏–ª–æ–∫
            _state.errorCounter++;
            _state.lastErrorTime = Date.now();

            // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –∫—Ä–∏—Ç–∏—á–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ–º–∏–ª–æ–∫
            if (_state.errorCounter >= _state.maxErrorsBeforeReset) {
                console.warn(`‚ö†Ô∏è Core: –î–æ—Å—è–≥–Ω—É—Ç–æ –∫—Ä–∏—Ç–∏—á–Ω–æ—ó –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –ø–æ–º–∏–ª–æ–∫ (${_state.errorCounter}), —Å–∫–∏–¥–∞–Ω–Ω—è —Å—Ç–∞–Ω—É...`);

                // –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É
                showErrorMessage('–í–∏–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º–∏ –∑ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è–º. –°–ø—Ä–æ–±–∞ –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è...', 'warning');

                // –°–∫–∏–¥–∞—î–º–æ –ª—ñ—á–∏–ª—å–Ω–∏–∫ –ø–æ–º–∏–ª–æ–∫
                _state.errorCounter = 0;

                // –ó–∞–ø—É—Å–∫–∞—î–º–æ —Å–∫–∏–¥–∞–Ω–Ω—è —Å—Ç–∞–Ω—É
                setTimeout(resetAndReloadApplication, 1000);
            }

            // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –æ—Å—Ç–∞–Ω–Ω—ñ–π –≤—ñ–¥–æ–º–∏–π –±–∞–ª–∞–Ω—Å
            return {
                success: false,
                message: error.message || '–ù–µ –≤–¥–∞–ª–æ—Å—è –æ–Ω–æ–≤–∏—Ç–∏ –±–∞–ª–∞–Ω—Å',
                transactionId: transactionInfo.id,
                data: {
                    coins: oldBalance,
                    error: true
                }
            };
        }
    }

    // ======== –ù–ê–í–Ü–ì–ê–¶–Ü–Ø ========

    /**
     * –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –Ω–∞–≤—ñ–≥–∞—Ü—ñ–π–Ω–∏—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤
     */
    function initNavigation() {
        try {
            const navItems = getElement('.nav-item', true);
            if (!navItems || navItems.length === 0) return;

            // –û—Ç—Ä–∏–º—É—î–º–æ –ø–æ—Ç–æ—á–Ω–∏–π —à–ª—è—Ö
            const currentPath = window.location.pathname;
            const currentPage = currentPath.split('/').pop().split('.')[0];

            navItems.forEach(item => {
                // –û—Ç—Ä–∏–º—É—î–º–æ —Å–µ–∫—Ü—ñ—é –∑ –∞—Ç—Ä–∏–±—É—Ç—É
                const section = item.getAttribute('data-section');

                // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –ø–æ—Ç–æ—á–Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î —Å–µ–∫—Ü—ñ—ó
                if ((currentPage === section) ||
                    (currentPage === '' && section === 'home') ||
                    (currentPage === 'index' && section === 'home')) {
                    item.classList.add('active');
                } else {
                    item.classList.remove('active');
                }

                // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –∫–ª—ñ–∫—É, —è–∫—â–æ –π–æ–≥–æ —â–µ –Ω–µ–º–∞—î
                if (!item.hasAttribute('data-initialized')) {
                    item.setAttribute('data-initialized', 'true');

                    item.addEventListener('click', () => {
                        // –í–∏–∑–Ω–∞—á–∞—î–º–æ URL –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥—É
                        let url;
                        if (section === 'home') {
                            url = 'index.html';
                        } else {
                            url = `${section}.html`;
                        }

                        // –ü–µ—Ä–µ—Ö–æ–¥–∏–º–æ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É
                        window.location.href = url;
                    });
                }
            });
        } catch (e) {
            console.warn('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó:', e);
        }
    }

    // ======== –î–Ü–ê–ì–ù–û–°–¢–ò–ß–ù–Ü –§–£–ù–ö–¶–Ü–á ========

    /**
     * –î—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –±–µ–∫–µ–Ω–¥—É
     * @returns {Promise<Object>} –†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
     */
    async function diagnoseBeckendConnection() {
        console.group('üîç Core: –î—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –±–µ–∫–µ–Ω–¥—É');

        const results = {
            online: isOnline(),
            apiAvailable: hasApiModule(),
            apiModuleState: null,
            corsIssues: null,
            apiEndpointStatus: {},
            networkState: { ..._state.networkState },
            apiStats: { ..._state.apiStats }
        };

        try {
            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Å—Ç–∞–Ω API –º–æ–¥—É–ª—è
            if (results.apiAvailable) {
                console.log('‚úÖ API –º–æ–¥—É–ª—å –¥–æ—Å—Ç—É–ø–Ω–∏–π');

                if (window.WinixAPI.config) {
                    results.apiModuleState = {
                        baseUrl: window.WinixAPI.config.baseUrl,
                        version: window.WinixAPI.config.version,
                        environment: window.WinixAPI.config.environment
                    };

                    console.log('üìã –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è API:', results.apiModuleState);
                }

                // –Ø–∫—â–æ –¥–æ—Å—Ç—É–ø–Ω–∞ –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ API
                if (window.WinixAPI.diagnostics) {
                    const apiStats = window.WinixAPI.diagnostics.getRequestStats();
                    const connectionState = window.WinixAPI.diagnostics.getConnectionState();
                    const activeEndpoints = window.WinixAPI.diagnostics.getActiveEndpoints();
                    const blockedEndpoints = window.WinixAPI.diagnostics.getBlockedEndpoints();

                    results.apiDiagnostics = {
                        requestStats: apiStats,
                        connectionState,
                        activeEndpoints,
                        blockedEndpoints
                    };

                    console.log('üìä –î—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ API:', results.apiDiagnostics);
                }
            } else {
                console.warn('‚ö†Ô∏è API –º–æ–¥—É–ª—å –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∏–π');
                results.apiModuleState = {
                    available: false,
                    reason: '–ú–æ–¥—É–ª—å –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–º—É –æ–±\'—î–∫—Ç—ñ window'
                };

                // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ —Å–∫—Ä–∏–ø—Ç API
                const apiScript = document.querySelector('script[src*="tasks-api.js"]');
                if (apiScript) {
                    results.apiModuleState.scriptLoaded = true;
                    console.log('üìú API —Å–∫—Ä–∏–ø—Ç –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ, –∞–ª–µ –º–æ–¥—É–ª—å –Ω–µ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ');
                } else {
                    results.apiModuleState.scriptLoaded = false;
                    console.warn('‚ö†Ô∏è API —Å–∫—Ä–∏–ø—Ç –Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ');
                }
            }

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –ø—Ä–æ–±–ª–µ–º–∏ –∑ CORS
            console.log('üîÑ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø—Ä–æ–±–ª–µ–º –∑ CORS...');
            results.corsIssues = await detectCorsIssues();

            if (results.corsIssues.hasCorsIssues) {
                console.warn('‚ö†Ô∏è –í–∏—è–≤–ª–µ–Ω–æ –ø—Ä–æ–±–ª–µ–º–∏ –∑ CORS:', results.corsIssues.failedUrls);
            } else {
                console.log('‚úÖ –ü—Ä–æ–±–ª–µ–º –∑ CORS –Ω–µ –≤–∏—è–≤–ª–µ–Ω–æ');
            }

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –¥–æ—Å—Ç—É–ø–Ω—ñ—Å—Ç—å –æ—Å–Ω–æ–≤–Ω–∏—Ö API –µ–Ω–¥–ø–æ—ñ–Ω—Ç—ñ–≤
            console.log('üîÑ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—ñ API –µ–Ω–¥–ø–æ—ñ–Ω—Ç—ñ–≤...');

            // –û—Ç—Ä–∏–º—É—î–º–æ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            const userId = getUserId();

            if (userId) {
                // –°–ø–∏—Å–æ–∫ –µ–Ω–¥–ø–æ—ñ–Ω—Ç—ñ–≤ –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏
                const endpointsToCheck = [
                    { name: '–î–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞', endpoint: `user/${userId}` },
                    { name: '–ë–∞–ª–∞–Ω—Å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞', endpoint: `user/${userId}/balance` },
                    { name: '–ó–∞–≤–¥–∞–Ω–Ω—è', endpoint: 'quests/tasks' }
                ];

                // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∫–æ–∂–µ–Ω –µ–Ω–¥–ø–æ—ñ–Ω—Ç
                for (const endpoint of endpointsToCheck) {
                    console.log(`üîÑ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –µ–Ω–¥–ø–æ—ñ–Ω—Ç—É: ${endpoint.name}`);

                    try {
                        const response = await executeApiRequest(endpoint.endpoint, 'GET', null, {
                            suppressErrors: true,
                            timeout: 5000,
                            retries: 1,
                            preventReset: true
                        });

                        results.apiEndpointStatus[endpoint.name] = {
                            status: response.status === 'success' ? 'success' : 'error',
                            message: response.message,
                            offline: response.offline
                        };

                        console.log(`${response.status === 'success' ? '‚úÖ' : '‚ùå'} ${endpoint.name}: ${response.status}`);
                    } catch (error) {
                        results.apiEndpointStatus[endpoint.name] = {
                            status: 'error',
                            message: error.message,
                            error: error
                        };

                        console.error(`‚ùå ${endpoint.name}: ${error.message}`);
                    }
                }
            } else {
                console.warn('‚ö†Ô∏è ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ, –ø—Ä–æ–ø—É—â–µ–Ω–æ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É –µ–Ω–¥–ø–æ—ñ–Ω—Ç—ñ–≤');
                results.apiEndpointStatus.error = 'ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ';
            }

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ —Ç–µ—Å—Ç–æ–≤–∏—Ö –¥–∞–Ω–∏—Ö
            const mockDataIndicator = document.getElementById('mock-data-indicator');
            if (mockDataIndicator) {
                results.mockDataIndicatorPresent = true;
                console.warn('‚ö†Ô∏è –í–∏—è–≤–ª–µ–Ω–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è —Ç–µ—Å—Ç–æ–≤–∏—Ö –¥–∞–Ω–∏—Ö');
            } else {
                results.mockDataIndicatorPresent = false;
            }

            // –ó–∞–∫–ª—é—á–Ω–∏–π —Å—Ç–∞—Ç—É—Å
            const isWorking = results.online &&
                            (!results.corsIssues.hasCorsIssues) &&
                            (Object.values(results.apiEndpointStatus).some(e => e.status === 'success'));

            results.overallStatus = isWorking ? 'working' : 'not_working';
            console.log(`üîÑ –ó–∞–≥–∞–ª—å–Ω–∏–π —Å—Ç–∞—Ç—É—Å –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –±–µ–∫–µ–Ω–¥—É: ${isWorking ? '‚úÖ –ü—Ä–∞—Ü—é—î' : '‚ùå –ù–µ –ø—Ä–∞—Ü—é—î'}`);

            // –î–æ–¥–∞—î–º–æ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó
            results.recommendations = [];

            if (!results.online) {
                results.recommendations.push('–ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ —ñ–Ω—Ç–µ—Ä–Ω–µ—Ç—É');
            }

            if (results.corsIssues.hasCorsIssues) {
                results.recommendations.push('–í–∏—è–≤–ª–µ–Ω–æ –ø—Ä–æ–±–ª–µ–º–∏ –∑ CORS. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏ —Ç–∞ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Å–µ—Ä–≤–µ—Ä–∞');
            }

            if (!results.apiAvailable) {
                results.recommendations.push('API –º–æ–¥—É–ª—å –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∏–π. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å–∫—Ä–∏–ø—Ç—É tasks-api.js');
            }

            if (results.mockDataIndicatorPresent) {
                results.recommendations.push('–î–æ–¥–∞—Ç–æ–∫ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î —Ç–µ—Å—Ç–æ–≤—ñ –¥–∞–Ω—ñ. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è API');
            }

            console.log('üìã –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó:', results.recommendations);
        } catch (error) {
            console.error('‚ùå Core: –ü–æ–º–∏–ª–∫–∞ –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:', error);
            results.error = error.message;
        } finally {
            console.groupEnd();
        }

        return results;
    }

    /**
     * –£—Å—É–Ω–µ–Ω–Ω—è –ø—Ä–æ–±–ª–µ–º –∑ –º–µ—Ä–µ–∂–µ–≤–∏–º –∑'—î–¥–Ω–∞–Ω–Ω—è–º
     * @returns {Promise<Object>} –†–µ–∑—É–ª—å—Ç–∞—Ç–∏ —É—Å—É–Ω–µ–Ω–Ω—è –ø—Ä–æ–±–ª–µ–º
     */
    async function troubleshootConnection() {
        console.group('üîß Core: –£—Å—É–Ω–µ–Ω–Ω—è –ø—Ä–æ–±–ª–µ–º –∑ –º–µ—Ä–µ–∂–µ–≤–∏–º –∑\'—î–¥–Ω–∞–Ω–Ω—è–º');

        const results = {
            actions: [],
            success: false,
            reconnected: false
        };

        try {
            // 1. –°–∫–∏–¥–∞—î–º–æ —Å—Ç–∞–Ω –º–µ—Ä–µ–∂—ñ
            console.log('üîÑ –°–∫–∏–¥–∞–Ω–Ω—è —Å—Ç–∞–Ω—É –º–µ—Ä–µ–∂—ñ...');
            _state.networkState.reconnectionAttempts = 0;
            results.actions.push('reset_network_state');

            // 2. –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∑'—î–¥–Ω–∞–Ω–Ω—è –∑ —Å–µ—Ä–≤–µ—Ä–æ–º
            console.log('üîÑ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑\'—î–¥–Ω–∞–Ω–Ω—è –∑ —Å–µ—Ä–≤–µ—Ä–æ–º...');
            const isConnected = await checkServerConnection();
            results.serverConnectionCheck = isConnected;

            if (isConnected) {
                console.log('‚úÖ –ó\'—î–¥–Ω–∞–Ω–Ω—è –∑ —Å–µ—Ä–≤–µ—Ä–æ–º –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
                _state.networkState.online = true;
                _state.networkState.lastOnlineTime = Date.now();
                results.actions.push('server_connection_ok');
            } else {
                console.warn('‚ö†Ô∏è –ó\'—î–¥–Ω–∞–Ω–Ω—è –∑ —Å–µ—Ä–≤–µ—Ä–æ–º –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
                results.actions.push('server_connection_failed');
            }

            // 3. –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –ø—Ä–æ–±–ª–µ–º–∏ –∑ CORS
            if (!isConnected) {
                console.log('üîÑ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø—Ä–æ–±–ª–µ–º –∑ CORS...');
                const corsIssues = await detectCorsIssues();
                results.corsIssues = corsIssues;

                if (corsIssues.hasCorsIssues) {
                    console.warn('‚ö†Ô∏è –í–∏—è–≤–ª–µ–Ω–æ –ø—Ä–æ–±–ª–µ–º–∏ –∑ CORS:', corsIssues.failedUrls);
                    results.actions.push('cors_issues_detected');

                    // –ü—Ä–æ–ø–æ–Ω—É—î–º–æ —Ä—ñ—à–µ–Ω–Ω—è –¥–ª—è CORS
                    console.log('üîß –°–ø—Ä–æ–±–∞ –≤–∏—Ä—ñ—à–µ–Ω–Ω—è –ø—Ä–æ–±–ª–µ–º –∑ CORS...');

                    // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ URL –∑ –ø—Ä–æ–±–ª–µ–º–∞–º–∏ CORS
                    saveToStorage('cors_problem_urls', JSON.stringify(corsIssues.failedUrls));

                    // –î–æ–¥–∞—î–º–æ –∑–∞–≥–æ–ª–æ–≤–æ–∫ Origin –¥–æ –≤—Å—ñ—Ö –∑–∞–ø–∏—Ç—ñ–≤
                    if (window.WinixAPI && window.WinixAPI.config) {
                        // –ó–∞–ø–∞–º'—è—Ç–æ–≤—É—î–º–æ –ø–æ—Ç–æ—á–Ω–∏–π URL
                        const currentBaseUrl = window.WinixAPI.config.baseUrl;

                        // –ü—Ä–æ–±—É—î–º–æ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ñ URL –∑ –ø—Ä–æ—Ç–æ–∫–æ–ª–æ–º https —ñ http
                        if (currentBaseUrl.startsWith('http://')) {
                            const httpsUrl = currentBaseUrl.replace('http://', 'https://');
                            console.log(`üîÑ –°–ø—Ä–æ–±–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è HTTPS URL: ${httpsUrl}`);

                            // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –Ω–æ–≤–∏–π URL
                            saveToStorage('api_base_url', httpsUrl);
                            results.actions.push('switched_to_https');
                        } else if (currentBaseUrl.startsWith('https://')) {
                            const httpUrl = currentBaseUrl.replace('https://', 'http://');
                            console.log(`üîÑ –°–ø—Ä–æ–±–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è HTTP URL: ${httpUrl}`);

                            // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –Ω–æ–≤–∏–π URL
                            saveToStorage('api_base_url', httpUrl);
                            results.actions.push('switched_to_http');
                        }
                    }
                } else {
                    console.log('‚úÖ –ü—Ä–æ–±–ª–µ–º –∑ CORS –Ω–µ –≤–∏—è–≤–ª–µ–Ω–æ');
                    results.actions.push('no_cors_issues');
                }
            }

            // 4. –û—á–∏—â–µ–Ω–Ω—è –∫–µ—à—É API –∑–∞–ø–∏—Ç—ñ–≤
            console.log('üîÑ –û—á–∏—â–µ–Ω–Ω—è –∫–µ—à—É API –∑–∞–ø–∏—Ç—ñ–≤...');
            if (window.WinixAPI && window.WinixAPI.clearCache) {
                window.WinixAPI.clearCache();
                results.actions.push('api_cache_cleared');
            }

            // 5. –û—á–∏—â–µ–Ω–Ω—è –±–ª–æ–∫–æ–≤–∞–Ω–∏—Ö –µ–Ω–¥–ø–æ—ñ–Ω—Ç—ñ–≤
            console.log('üîÑ –û—á–∏—â–µ–Ω–Ω—è –±–ª–æ–∫–æ–≤–∞–Ω–∏—Ö –µ–Ω–¥–ø–æ—ñ–Ω—Ç—ñ–≤...');
            if (window.WinixAPI && window.WinixAPI.diagnostics && window.WinixAPI.diagnostics.clearBlockedEndpoints) {
                window.WinixAPI.diagnostics.clearBlockedEndpoints();
                results.actions.push('blocked_endpoints_cleared');
            }

            // 6. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑'—î–¥–Ω–∞–Ω–Ω—è –ø—ñ—Å–ª—è –≤—Å—ñ—Ö –∑–º—ñ–Ω
            console.log('üîÑ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑\'—î–¥–Ω–∞–Ω–Ω—è –ø—ñ—Å–ª—è –∑–º—ñ–Ω...');
            const reconnected = await checkServerConnection();
            results.reconnectionCheck = reconnected;

            if (reconnected) {
                console.log('‚úÖ –ó\'—î–¥–Ω–∞–Ω–Ω—è –∑ —Å–µ—Ä–≤–µ—Ä–æ–º —É—Å–ø—ñ—à–Ω–æ –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–æ');
                _state.networkState.online = true;
                _state.networkState.lastOnlineTime = Date.now();
                results.reconnected = true;
                results.actions.push('reconnection_successful');

                // –°–∫–∏–¥–∞—î–º–æ –ª—ñ—á–∏–ª—å–Ω–∏–∫–∏ –ø–æ–º–∏–ª–æ–∫
                _state.errorCounter = 0;
                if (window.WinixAPI && window.WinixAPI.diagnostics && window.WinixAPI.diagnostics.resetState) {
                    window.WinixAPI.diagnostics.resetState();
                }

                // –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É
                showErrorMessage('–ó\'—î–¥–Ω–∞–Ω–Ω—è –∑ —Å–µ—Ä–≤–µ—Ä–æ–º –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–æ', 'success');
            } else {
                console.warn('‚ö†Ô∏è –ó\'—î–¥–Ω–∞–Ω–Ω—è –∑ —Å–µ—Ä–≤–µ—Ä–æ–º –Ω–µ –≤–¥–∞–ª–æ—Å—è –≤—ñ–¥–Ω–æ–≤–∏—Ç–∏');
                results.actions.push('reconnection_failed');

                // –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É
                showErrorMessage('–ù–µ –≤–¥–∞–ª–æ—Å—è –≤—ñ–¥–Ω–æ–≤–∏—Ç–∏ –∑\'—î–¥–Ω–∞–Ω–Ω—è –∑ —Å–µ—Ä–≤–µ—Ä–æ–º. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—Ç—å—Å—è –ª–æ–∫–∞–ª—å–Ω—ñ –¥–∞–Ω—ñ.', 'warning');
            }

            // –í–∏–∑–Ω–∞—á–∞—î–º–æ —É—Å–ø—ñ—à–Ω—ñ—Å—Ç—å –æ–ø–µ—Ä–∞—Ü—ñ—ó
            results.success = reconnected || isConnected;

            // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
            saveToStorage('connection_troubleshooting_results', JSON.stringify({
                timestamp: Date.now(),
                results
            }));

        } catch (error) {
            console.error('‚ùå Core: –ü–æ–º–∏–ª–∫–∞ —É—Å—É–Ω–µ–Ω–Ω—è –ø—Ä–æ–±–ª–µ–º –∑ –º–µ—Ä–µ–∂–µ—é:', error);
            results.error = error.message;
        } finally {
            console.groupEnd();
        }

        return results;
    }

    // ======== –°–ò–ù–•–†–û–ù–Ü–ó–ê–¶–Ü–Ø –î–ê–ù–ò–• ========

    /**
     * –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ —Å–µ—Ä–≤–µ—Ä–æ–º
     * @param {boolean} forceRefresh - –ü—Ä–∏–º—É—Å–æ–≤–∞ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è
     * @returns {Promise<Object>} –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó
     */
    async function syncUserData(forceRefresh = false) {
        try {
            console.log('üîÑ Core: –ü–æ—á–∞—Ç–æ–∫ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞...');

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –ø—Ä–∏—Å—Ç—Ä—ñ–π –æ–Ω–ª–∞–π–Ω
            if (!isOnline() && !forceRefresh) {
                console.warn("‚ö†Ô∏è Core: –ü—Ä–∏—Å—Ç—Ä—ñ–π –æ—Ñ–ª–∞–π–Ω, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –ª–æ–∫–∞–ª—å–Ω—ñ –¥–∞–Ω—ñ");

                // –û—Ç—Ä–∏–º—É—î–º–æ –æ—Å—Ç–∞–Ω–Ω—ñ –≤—ñ–¥–æ–º—ñ –¥–∞–Ω—ñ
                const lastKnownBalance = getCoins();
                const lastUpdateTime = parseInt(getFromStorage('winix_balance_update_time') || '0');
                const now = Date.now();

                // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∞–∫—Ç—É–∞–ª—å–Ω—ñ—Å—Ç—å –¥–∞–Ω–∏—Ö
                const dataAge = now - lastUpdateTime;
                let dataStatus = 'fresh';

                if (lastUpdateTime === 0) {
                    dataStatus = 'unknown';
                } else if (dataAge > 30 * 60 * 1000) { // —Å—Ç–∞—Ä—à–µ 30 —Ö–≤–∏–ª–∏–Ω
                    dataStatus = 'stale';
                }

                // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è
                updateUserDisplay();
                updateBalanceDisplay();

                // –ü–æ–∫–∞–∑—É—î–º–æ —Å—Ç–∞—Ç—É—Å, —è–∫—â–æ –¥–∞–Ω—ñ –∑–∞—Å—Ç–∞—Ä—ñ–ª—ñ
                if (dataStatus === 'stale') {
                    showErrorMessage('–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—Ç—å—Å—è –ª–æ–∫–∞–ª—å–Ω–æ –∑–±–µ—Ä–µ–∂–µ–Ω—ñ –¥–∞–Ω—ñ. –û–Ω–æ–≤—ñ—Ç—å –±–∞–ª–∞–Ω—Å –ø—Ä–∏ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—ñ.', 'info');
                }

                return {
                    success: true,
                    offline: true,
                    dataStatus: dataStatus,
                    dataAge: dataAge,
                    data: {
                        balance: lastKnownBalance,
                        lastUpdate: lastUpdateTime
                    }
                };
            }

            // –û–Ω–æ–≤–ª—é—î–º–æ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            const userData = await getUserData(forceRefresh);

            // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è
            updateUserDisplay();
            updateBalanceDisplay();

            // –ì–µ–Ω–µ—Ä—É—î–º–æ –ø–æ–¥—ñ—é –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            document.dispatchEvent(new CustomEvent('user-data-updated', {
                detail: { userData },
                source: 'core.js'
            }));

            return {
                success: true,
                data: userData
            };
        } catch (error) {
            console.error('‚ùå Core: –ü–æ–º–∏–ª–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:', error);

            // –ö–ª–∞—Å–∏—Ñ—ñ–∫—É—î–º–æ –ø–æ–º–∏–ª–∫—É
            const classifiedError = classifyError(error);

            // –£ –≤–∏–ø–∞–¥–∫—É –ø–æ–º–∏–ª–∫–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∫–µ—à–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ
            updateUserDisplay();
            updateBalanceDisplay();

            // –í—ñ–¥–æ–±—Ä–∞–∂–∞—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É –∑ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ—é —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é
            showErrorMessage(classifiedError, 'warning');

            return {
                success: false,
                message: classifiedError.message || '–ù–µ –≤–¥–∞–ª–æ—Å—è —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑—É–≤–∞—Ç–∏ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞',
                error: classifiedError,
                data: _userData
            };
        }
    }

    /**
     * –ó–∞–ø—É—Å–∫ –ø–µ—Ä—ñ–æ–¥–∏—á–Ω–æ—ó —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó –¥–∞–Ω–∏—Ö
     * @param {number} interval - –Ü–Ω—Ç–µ—Ä–≤–∞–ª —É –º—ñ–ª—ñ—Å–µ–∫—É–Ω–¥–∞—Ö
     */
    function startAutoSync(interval = 300000) { // 5 —Ö–≤–∏–ª–∏–Ω
        // –ó—É–ø–∏–Ω—è—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ–π —ñ–Ω—Ç–µ—Ä–≤–∞–ª
        if (_state.refreshInterval) {
            clearInterval(_state.refreshInterval);
            _state.refreshInterval = null;
        }

        // –ó–∞–ø—É—Å–∫–∞—î–º–æ –ø–µ—Ä—ñ–æ–¥–∏—á–Ω—É —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—é
        _state.refreshInterval = setInterval(async () => {
            try {
                // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –ø—Ä–∏—Å—Ç—Ä—ñ–π –æ–Ω–ª–∞–π–Ω
                if (!isOnline()) {
                    console.warn("‚ö†Ô∏è Core: –ü—Ä–∏—Å—Ç—Ä—ñ–π –æ—Ñ–ª–∞–π–Ω, –ø—Ä–æ–ø—É—Å–∫–∞—î–º–æ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—é");
                    return;
                }

                // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –º—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–π —ñ–Ω—Ç–µ—Ä–≤–∞–ª —ñ –∑–∞–ø–∏—Ç –≤ –ø—Ä–æ–≥—Ä–µ—Å—ñ
                if (Date.now() - _state.lastRequestTime >= _config.minRequestInterval && !_state.requestInProgress) {
                    await syncUserData();
                }
            } catch (e) {
                console.warn('‚ö†Ô∏è Core: –ü–æ–º–∏–ª–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ—ó —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó:', e);
            }
        }, interval);

        console.log(`üîÑ Core: –ü–µ—Ä—ñ–æ–¥–∏—á–Ω–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ø—É—â–µ–Ω–æ (—ñ–Ω—Ç–µ—Ä–≤–∞–ª: ${interval}ms)`);
    }

    /**
     * –ó—É–ø–∏–Ω–∫–∞ –ø–µ—Ä—ñ–æ–¥–∏—á–Ω–æ—ó —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó
     */
    function stopAutoSync() {
        if (_state.refreshInterval) {
            clearInterval(_state.refreshInterval);
            _state.refreshInterval = null;
            console.log("‚èπÔ∏è Core: –ü–µ—Ä—ñ–æ–¥–∏—á–Ω–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∑—É–ø–∏–Ω–µ–Ω–æ");
        }
    }

    // ======== –ë–õ–û–ö–£–í–ê–ù–ù–Ø –û–ù–û–í–õ–ï–ù–¨ –ë–ê–õ–ê–ù–°–£ ========

    /**
     * –ë–ª–æ–∫—É–≤–∞–Ω–Ω—è –æ–Ω–æ–≤–ª–µ–Ω—å –±–∞–ª–∞–Ω—Å—É –Ω–∞ –≤–∫–∞–∑–∞–Ω–∏–π —á–∞—Å
     * @param {number} duration - –¢—Ä–∏–≤–∞–ª—ñ—Å—Ç—å –±–ª–æ–∫—É–≤–∞–Ω–Ω—è –≤ –º—Å
     * @param {Object} options - –û–ø—Ü—ñ—ó –±–ª–æ–∫—É–≤–∞–Ω–Ω—è
     * @returns {boolean} –†–µ–∑—É–ª—å—Ç–∞—Ç –±–ª–æ–∫—É–≤–∞–Ω–Ω—è
     */
    function lockBalanceUpdates(duration, options = {}) {
        // –Ø–∫—â–æ —î –∫–æ–Ω—Ç—Ä–æ–ª–µ—Ä —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –π–æ–≥–æ
        if (window.__winixSyncControl && typeof window.__winixSyncControl.block === 'function') {
            return window.__winixSyncControl.block(duration / 1000, {
                type: options.type || 'core_balance',
                reason: options.reason || 'manual_lock',
                source: 'core.js'
            });
        }

        return false;
    }

    /**
     * –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω—ñ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É
     * @param {string} source - –î–∂–µ—Ä–µ–ª–æ –∑–∞–ø–∏—Ç—É
     * @param {string} type - –¢–∏–ø –∑–∞–ø–∏—Ç—É
     * @returns {boolean} –°—Ç–∞–Ω –±–ª–æ–∫—É–≤–∞–Ω–Ω—è
     */
    function isBalanceUpdateLocked(source, type = 'general') {
        // –Ø–∫—â–æ —î –∫–æ–Ω—Ç—Ä–æ–ª–µ—Ä —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –π–æ–≥–æ
        if (window.__winixSyncControl && typeof window.__winixSyncControl.isBlocked === 'function') {
            return window.__winixSyncControl.isBlocked(source, type);
        }

        return false;
    }

    // ======== –£–¢–ò–õ–Ü–¢–ò –î–õ–Ø –Ü–ù–®–ò–• –ú–û–î–£–õ–Ü–í ========

    /**
     * –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∞—Å—Ç–æ—Ç–∏ –∑–∞–ø–∏—Ç—ñ–≤ –¥–æ API
     * @param {string} key - –ö–ª—é—á –¥–ª—è —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó —Ç–∏–ø—É –∑–∞–ø–∏—Ç—É
     * @param {number} interval - –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–π —ñ–Ω—Ç–µ—Ä–≤–∞–ª –º—ñ–∂ –∑–∞–ø–∏—Ç–∞–º–∏ (–º—Å)
     * @returns {boolean} true, —è–∫—â–æ –∑–∞–ø–∏—Ç –º–æ–∂–Ω–∞ –≤–∏–∫–æ–Ω–∞—Ç–∏, false - —è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø–æ—á–µ–∫–∞—Ç–∏
     */
    function checkRequestThrottle(key, interval = 5000) {
        const now = Date.now();
        const lastRequest = _state.requestCache[key] || 0;

        if (now - lastRequest < interval) {
            return false;
        }

        _state.requestCache[key] = now;
        return true;
    }

    /**
     * –û—á–∏—â–µ–Ω–Ω—è –∫–µ—à—É –∑–∞–ø–∏—Ç—ñ–≤
     * @param {string} key - –ö–ª—é—á –¥–ª—è –æ—á–∏—â–µ–Ω–Ω—è (—è–∫—â–æ –Ω–µ –≤–∫–∞–∑–∞–Ω–æ, –æ—á–∏—â–∞—î—Ç—å—Å—è –≤–µ—Å—å –∫–µ—à)
     */
    function clearRequestCache(key) {
        if (key) {
            delete _state.requestCache[key];
        } else {
            _state.requestCache = {};
        }
    }

    // ======== –Ü–ù–Ü–¶–Ü–ê–õ–Ü–ó–ê–¶–Ü–Ø ========

    /**
     * –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —è–¥—Ä–∞ WINIX
     * @param {Object} options - –ü–∞—Ä–∞–º–µ—Ç—Ä–∏ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
     * @returns {Promise<boolean>} –†–µ–∑—É–ª—å—Ç–∞—Ç —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
     */
    async function init(options = {}) {
        try {
            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –≤–∂–µ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ —è–¥—Ä–æ
            if (_state.initialized) {
                console.log("‚úÖ Core: –Ø–¥—Ä–æ WINIX –≤–∂–µ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–µ");
                return true;
            }

            console.log("üîÑ Core: –ü–æ—á–∞—Ç–æ–∫ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó —è–¥—Ä–∞ WINIX");

            // –û–Ω–æ–≤–ª—é—î–º–æ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—é
            Object.assign(_config, options);

            // –ü—Ä–æ–±—É—î–º–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ –±–∞–∑–æ–≤–∏–π URL API –∑ localStorage
            const savedApiUrl = getFromStorage('api_base_url');
            if (savedApiUrl && !_config.apiBaseUrl) {
                _config.apiBaseUrl = savedApiUrl;
                console.log(`üîÑ Core: –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∑–±–µ—Ä–µ–∂–µ–Ω–∏–π API URL: ${savedApiUrl}`);
            }

            // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ Telegram WebApp, —è–∫—â–æ –≤—ñ–Ω –¥–æ—Å—Ç—É–ø–Ω–∏–π
            if (window.Telegram && window.Telegram.WebApp) {
                try {
                    window.Telegram.WebApp.ready();
                    window.Telegram.WebApp.expand();
                    console.log("‚úÖ Core: Telegram WebApp —É—Å–ø—ñ—à–Ω–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ");
                } catch (e) {
                    console.warn("‚ö†Ô∏è Core: –ü–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó Telegram WebApp:", e);
                }
            }

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∑'—î–¥–Ω–∞–Ω–Ω—è –∑ —Å–µ—Ä–≤–µ—Ä–æ–º
            const connectionStatus = await checkServerConnection();
            console.log(`üîå Core: –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑'—î–¥–Ω–∞–Ω–Ω—è –∑ —Å–µ—Ä–≤–µ—Ä–æ–º: ${connectionStatus ? '‚úÖ –£—Å–ø—ñ—à–Ω–æ' : '‚ùå –ü–æ–º–∏–ª–∫–∞'}`);

            // –Ø–∫—â–æ –∑'—î–¥–Ω–∞–Ω–Ω—è –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ, –∞–ª–µ –ø—Ä–∏—Å—Ç—Ä—ñ–π –æ–Ω–ª–∞–π–Ω, –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –ø—Ä–æ–±–ª–µ–º–∏ –∑ CORS
            if (!connectionStatus && typeof navigator.onLine !== 'undefined' && navigator.onLine) {
                if (_config.detectCorsIssues) {
                    console.log('üîÑ Core: –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø—Ä–æ–±–ª–µ–º –∑ CORS...');
                    const corsIssues = await detectCorsIssues();

                    if (corsIssues.hasCorsIssues) {
                        console.warn('‚ö†Ô∏è Core: –í–∏—è–≤–ª–µ–Ω–æ –ø—Ä–æ–±–ª–µ–º–∏ –∑ CORS:', corsIssues.failedUrls);

                        // –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø—Ä–æ–±–ª–µ–º–∏ –∑ CORS
                        showErrorMessage('–í–∏—è–≤–ª–µ–Ω–æ –ø—Ä–æ–±–ª–µ–º–∏ –∑ –¥–æ—Å—Ç—É–ø–æ–º –¥–æ —Å–µ—Ä–≤–µ—Ä–∞. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—Ç—å—Å—è –ª–æ–∫–∞–ª—å–Ω—ñ –¥–∞–Ω—ñ.', 'warning');
                    }
                }
            }

            // –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            await getUserData();
            console.log("‚úÖ Core: –î–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –æ—Ç—Ä–∏–º–∞–Ω–æ");

            // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è
            updateUserDisplay();
            updateBalanceDisplay();

            // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—é
            initNavigation();

            // –ó–∞–ø—É—Å–∫–∞—î–º–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω—É —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—é
            startAutoSync();

            // –Ø–∫—â–æ —É–≤—ñ–º–∫–Ω–µ–Ω–∞ –∞–∫—Ç–∏–≤–Ω–∞ –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∞, –∑–∞–ø—É—Å–∫–∞—î–º–æ –ø–µ—Ä—ñ–æ–¥–∏—á–Ω—É –ø–µ—Ä–µ–≤—ñ—Ä–∫—É
            if (_config.activeConnectionDiagnostics) {
                console.log(`üîÑ Core: –ó–∞–ø—É—Å–∫ –∞–∫—Ç–∏–≤–Ω–æ—ó –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –∑'—î–¥–Ω–∞–Ω–Ω—è (—ñ–Ω—Ç–µ—Ä–≤–∞–ª: ${_config.diagnosticsInterval}ms)`);

                // –ó–∞–ø—É—Å–∫–∞—î–º–æ –ø–µ—Ä—ñ–æ–¥–∏—á–Ω—É –ø–µ—Ä–µ–≤—ñ—Ä–∫—É –∑'—î–¥–Ω–∞–Ω–Ω—è
                setInterval(async () => {
                    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —î –ø—Ä–æ–±–ª–µ–º–∏ –∑—ñ –∑'—î–¥–Ω–∞–Ω–Ω—è–º
                    if (_state.errorCounter > 2 || _state.networkState.reconnectionAttempts > 2) {
                        // –í–∏–∫–æ–Ω—É—î–º–æ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É –∑'—î–¥–Ω–∞–Ω–Ω—è
                        const isConnected = await checkServerConnection();

                        if (isConnected) {
                            // –Ø–∫—â–æ –∑'—î–¥–Ω–∞–Ω–Ω—è –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–æ, —Å–∫–∏–¥–∞—î–º–æ –ª—ñ—á–∏–ª—å–Ω–∏–∫–∏
                            _state.errorCounter = 0;
                            _state.networkState.reconnectionAttempts = 0;
                            _state.networkState.online = true;
                            _state.networkState.lastOnlineTime = Date.now();

                            console.log('‚úÖ Core: –ó\'—î–¥–Ω–∞–Ω–Ω—è –∑ —Å–µ—Ä–≤–µ—Ä–æ–º –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–æ');

                            // –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É
                            showErrorMessage('–ó\'—î–¥–Ω–∞–Ω–Ω—è –∑ —Å–µ—Ä–≤–µ—Ä–æ–º –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–æ', 'success');

                            // –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑—É—î–º–æ –¥–∞–Ω—ñ
                            await syncUserData(true);
                        }
                    }
                }, _config.diagnosticsInterval);
            }

            // –ü–æ–∑–Ω–∞—á–∞—î–º–æ, —â–æ —è–¥—Ä–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ
            _state.initialized = true;

            console.log("‚úÖ Core: –Ø–¥—Ä–æ WINIX —É—Å–ø—ñ—à–Ω–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ");

            // –í–∏–∫–ª–∏–∫–∞—î–º–æ –ø–æ–¥—ñ—é —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
            document.dispatchEvent(new CustomEvent('winix-initialized'));

            return true;
        } catch (error) {
            console.error('‚ùå Core: –ü–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó —è–¥—Ä–∞ WINIX:', error);

            // –£ –≤–∏–ø–∞–¥–∫—É –ø–æ–º–∏–ª–∫–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∫–µ—à–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ
            updateUserDisplay();
            updateBalanceDisplay();

            document.dispatchEvent(new CustomEvent('winix-initialization-error', { detail: error }));

            return false;
        }
    }

    /**
     * –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ —è–¥—Ä–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ
     * @returns {boolean} –°—Ç–∞–Ω —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
     */
    function isInitialized() {
        return _state.initialized;
    }

    // ======== –û–ë–†–û–ë–ù–ò–ö–ò –ü–û–î–Ü–ô ========

    // –û–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ—ó –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    document.addEventListener('user-data-updated', function(event) {
        if (event.detail && event.detail.userData && event.source !== 'core.js') {
            console.log("üîÑ Core: –û—Ç—Ä–∏–º–∞–Ω–æ –ø–æ–¥—ñ—é –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞");
            _userData = event.detail.userData;
            updateUserDisplay();
            updateBalanceDisplay();
        }
    });

    // –û–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ—ó –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É
    document.addEventListener('balance-updated', function(event) {
        if (event.detail && event.source !== 'core.js') {
            console.log("üîÑ Core: –û—Ç—Ä–∏–º–∞–Ω–æ –ø–æ–¥—ñ—é –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É");

            // –û–Ω–æ–≤–ª—é—î–º–æ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            if (!_userData) _userData = {};

            if (event.detail.newBalance !== undefined) {
                _userData.coins = event.detail.newBalance;
            }

            updateBalanceDisplay();
        }
    });

    // –û–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ—ó –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –º–µ—Ä–µ–∂—ñ
    window.addEventListener('online', function() {
        console.log("üîÑ Core: –ó'—î–¥–Ω–∞–Ω–Ω—è –∑ –º–µ—Ä–µ–∂–µ—é –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–æ");

        // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω –º–µ—Ä–µ–∂—ñ
        _state.networkState.online = true;
        _state.networkState.lastOnlineTime = Date.now();

        // –û–Ω–æ–≤–ª—é—î–º–æ –¥–∞–Ω—ñ –ø—ñ—Å–ª—è –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –∑'—î–¥–Ω–∞–Ω–Ω—è
        setTimeout(async () => {
            // –°–ø–æ—á–∞—Ç–∫—É –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∑'—î–¥–Ω–∞–Ω–Ω—è –∑ —Å–µ—Ä–≤–µ—Ä–æ–º
            const isConnected = await checkServerConnection();

            if (isConnected) {
                syncUserData(true).then(() => {
                    console.log("‚úÖ Core: –î–∞–Ω—ñ —É—Å–ø—ñ—à–Ω–æ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–æ–≤–∞–Ω–æ –ø—ñ—Å–ª—è –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –∑'—î–¥–Ω–∞–Ω–Ω—è");

                    // –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É
                    showErrorMessage('–ó\'—î–¥–Ω–∞–Ω–Ω—è –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–æ. –î–∞–Ω—ñ —É—Å–ø—ñ—à–Ω–æ –æ–Ω–æ–≤–ª–µ–Ω–æ.', 'success');
                }).catch(error => {
                    console.warn("‚ö†Ô∏è Core: –ü–æ–º–∏–ª–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó –ø—ñ—Å–ª—è –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –∑'—î–¥–Ω–∞–Ω–Ω—è:", error);

                    // –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É
                    showErrorMessage('–ó\'—î–¥–Ω–∞–Ω–Ω—è –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–æ, –∞–ª–µ –Ω–µ –≤–¥–∞–ª–æ—Å—è –æ–Ω–æ–≤–∏—Ç–∏ –¥–∞–Ω—ñ.', 'warning');
                });
            } else {
                // –ú–æ–∂–ª–∏–≤–æ, —î –ø—Ä–æ–±–ª–µ–º–∏ –∑ CORS - –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ
                if (_config.detectCorsIssues) {
                    detectCorsIssues();
                }

                console.warn("‚ö†Ô∏è Core: –ó'—î–¥–Ω–∞–Ω–Ω—è –∑ –º–µ—Ä–µ–∂–µ—é –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–æ, –∞–ª–µ –∑'—î–¥–Ω–∞–Ω–Ω—è –∑ —Å–µ—Ä–≤–µ—Ä–æ–º –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ");
            }
        }, 1000);
    });

    // –û–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ—ó –≤—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –≤—ñ–¥ –º–µ—Ä–µ–∂—ñ
    window.addEventListener('offline', function() {
        console.warn("‚ö†Ô∏è Core: –í—Ç—Ä–∞—á–µ–Ω–æ –∑'—î–¥–Ω–∞–Ω–Ω—è –∑ –º–µ—Ä–µ–∂–µ—é");

        // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω –º–µ—Ä–µ–∂—ñ
        _state.networkState.online = false;
        _state.networkState.lastOfflineTime = Date.now();

        // –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É
        showErrorMessage('–í—Ç—Ä–∞—á–µ–Ω–æ –∑\'—î–¥–Ω–∞–Ω–Ω—è –∑ –º–µ—Ä–µ–∂–µ—é. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—Ç—å—Å—è –ª–æ–∫–∞–ª—å–Ω—ñ –¥–∞–Ω—ñ.', 'warning');
    });

    // –û–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ—ó –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏
    window.addEventListener('load', function() {
        // –ó–∞–ø–æ–±—ñ–≥–∞—î–º–æ —á–∞—Å—Ç—ñ–π —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
        if (!_state.initialized) {
            init().catch(e => {
                console.error("‚ùå Core: –ü–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó:", e);
            });
        }
    });

    // –û–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ—ó DOMContentLoaded
    document.addEventListener('DOMContentLoaded', function() {
        if (!_state.initialized) {
            init().catch(e => {
                console.error("‚ùå Core: –ü–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó:", e);
            });
        }
    });

    // ======== –ü–£–ë–õ–Ü–ß–ù–ò–ô API ========

    // –ï–∫—Å–ø–æ—Ä—Ç—É—î–º–æ –ø—É–±–ª—ñ—á–Ω–∏–π API
    window.WinixCore = {
        // –ú–µ—Ç–∞–¥–∞–Ω—ñ
        version: '2.1.0',
        isInitialized: isInitialized,

        // –£—Ç–∏–ª—ñ—Ç–∏
        getElement,
        saveToStorage,
        getFromStorage,
        formatCurrency,
        isOnline,
        resetAndReloadApplication,
        checkRequestThrottle,
        clearRequestCache,
        executeApiRequest,
        showErrorMessage,

        // –§—É–Ω–∫—Ü—ñ—ó –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        getUserData,
        getUserId,
        updateUserDisplay,
        getBalance,
        getCoins,
        updateBalanceDisplay,
        updateLocalBalance,
        refreshBalance,
        lockBalanceUpdates,
        isBalanceUpdateLocked,

        // –§—É–Ω–∫—Ü—ñ—ó –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó –¥–∞–Ω–∏—Ö
        syncUserData,
        startAutoSync,
        stopAutoSync,

        // –§—É–Ω–∫—Ü—ñ—ó –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
        checkServerConnection,
        detectCorsIssues,
        diagnoseBeckendConnection,
        troubleshootConnection,
        classifyError,

        // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è
        init,

        // –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è
        config: _config,

        // –°—Ç–∞–Ω –º–æ–¥—É–ª—è (—Ç—ñ–ª—å–∫–∏ –¥–ª—è —á–∏—Ç–∞–Ω–Ω—è)
        getState: () => ({ ..._state })
    };

    // –î–æ–¥–∞—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é resetAndReloadApplication –≤ –≥–ª–æ–±–∞–ª—å–Ω–∏–π –ø—Ä–æ—Å—Ç—ñ—Ä —ñ–º–µ–Ω
    window.resetAndReloadApplication = resetAndReloadApplication;

    // –î–æ–¥–∞—î–º–æ –¥–æ–¥–∞—Ç–∫–æ–≤—ñ —É—Ç–∏–ª—ñ—Ç–∏ –≤ –≥–ª–æ–±–∞–ª—å–Ω–∏–π –ø—Ä–æ—Å—Ç—ñ—Ä —ñ–º–µ–Ω
    window.showWinixErrorMessage = showErrorMessage;
    window.checkWinixServerConnection = checkServerConnection;
    window.diagnoseBeckendConnection = diagnoseBeckendConnection;
    window.troubleshootWinixConnection = troubleshootConnection;

    console.log("‚úÖ Core: –ú–æ–¥—É–ª—å —É—Å–ø—ñ—à–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ");
})();