/**
 * ui.js
 *
 * –Ñ–¥–∏–Ω–∏–π —Ñ–∞–π–ª –≤–∏–ø—Ä–∞–≤–ª–µ–Ω—å –¥–ª—è —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É WINIX. –í–∫–ª—é—á–∞—î –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –ø–æ–º–∏–ª–æ–∫ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è UI,
 * –ø—Ä–æ–±–ª–µ–º –∑ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—î—é —Ç–∞ —ñ–Ω—à–∏—Ö –¥—Ä—ñ–±–Ω–∏—Ö –ø—Ä–æ–±–ª–µ–º, —è–∫—ñ –º–æ–∂—É—Ç—å –≤–∏–Ω–∏–∫–Ω—É—Ç–∏ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞—Ö –¥–æ–¥–∞—Ç–∫—É.
 *
 * –¶–µ–π —Ñ–∞–π–ª –∑–∞–º—ñ–Ω—é—î –∫–æ–ª–∏—à–Ω—ñ ui.js, fix-ui-extended.js, staking-operations-patch.js
 * —Ç–∞ —ñ–Ω—à—ñ –ø–æ–¥—ñ–±–Ω—ñ –ø–∞—Ç—á—ñ, –æ–±'—î–¥–Ω—É—é—á–∏ —ó—Ö –≤ –æ–¥–∏–Ω –ø–æ—Å–ª—ñ–¥–æ–≤–Ω–∏–π –º–æ–¥—É–ª—å.
 */

(function() {
    'use strict';

    console.log("üîß –ó–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è –≤–∏–ø—Ä–∞–≤–ª–µ–Ω—å –¥–ª—è UI WINIX...");

    // ======== –ü–ï–†–ï–í–Ü–†–ö–ê –ó–ê–õ–ï–ñ–ù–û–°–¢–ï–ô ========

    // –§–ª–∞–≥ —É—Å–ø—ñ—à–Ω–æ—ó —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
    let _initialized = false;

    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å WinixAPI
    const hasWinixAPI = window.WinixAPI !== undefined;
    if (!hasWinixAPI) {
        console.warn("‚ö†Ô∏è WinixAPI –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –í–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è UI –±—É–¥—É—Ç—å –æ–±–º–µ–∂–µ–Ω—ñ.");
    }

    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å WinixCore
    const hasWinixCore = window.WinixCore !== undefined;
    if (!hasWinixCore) {
        console.warn("‚ö†Ô∏è WinixCore –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –í–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è UI –±—É–¥—É—Ç—å –æ–±–º–µ–∂–µ–Ω—ñ.");
    }

    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å WinixStakingSystem
    const hasStakingSystem = window.WinixStakingSystem !== undefined;
    if (!hasStakingSystem) {
        console.warn("‚ö†Ô∏è WinixStakingSystem –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –í–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è —Å—Ç–µ–π–∫—ñ–Ω–≥—É –±—É–¥—É—Ç—å –æ–±–º–µ–∂–µ–Ω—ñ.");
    }

    // ======== –ó–ê–ì–ê–õ–¨–ù–Ü –í–ò–ü–†–ê–í–õ–ï–ù–ù–Ø ========

    /**
     * –ë–µ–∑–ø–µ—á–Ω–µ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ—ó –∑ –æ–±—Ä–æ–±–∫–æ—é –ø–æ–º–∏–ª–æ–∫
     * @param {Function} fn - –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤–∏–∫–æ–Ω–∞–Ω–Ω—è
     * @param {Array} args - –ê—Ä–≥—É–º–µ–Ω—Ç–∏ —Ñ—É–Ω–∫—Ü—ñ—ó
     * @param {string} name - –ù–∞–∑–≤–∞ —Ñ—É–Ω–∫—Ü—ñ—ó –¥–ª—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
     * @param {*} defaultValue - –ó–Ω–∞—á–µ–Ω–Ω—è –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º —É –≤–∏–ø–∞–¥–∫—É –ø–æ–º–∏–ª–∫–∏
     * @returns {*} –†–µ–∑—É–ª—å—Ç–∞—Ç –≤–∏–∫–æ–Ω–∞–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ—ó –∞–±–æ defaultValue
     */
    function safeExecute(fn, args = [], name = '—Ñ—É–Ω–∫—Ü—ñ—è', defaultValue = null) {
        try {
            if (typeof fn !== 'function') {
                console.warn(`‚ö†Ô∏è ${name} –Ω–µ —î —Ñ—É–Ω–∫—Ü—ñ—î—é`);
                return defaultValue;
            }
            return fn.apply(this, args);
        } catch (error) {
            console.warn(`‚ö†Ô∏è –ü–µ—Ä–µ—Ö–æ–ø–ª–µ–Ω–æ –ø–æ–º–∏–ª–∫—É –≤ ${name}:`, error);
            return defaultValue;
        }
    }

    /**
     * –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –±–µ–∑–ø–µ—á–Ω–æ–≥–æ –ø—Ä–æ–∫—Å—ñ –¥–ª—è –æ–±'—î–∫—Ç–∞
     * @param {Object} obj - –û—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–∏–π –æ–±'—î–∫—Ç
     * @param {string} name - –ù–∞–∑–≤–∞ –æ–±'—î–∫—Ç–∞ –¥–ª—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
     * @returns {Proxy} –ü—Ä–æ–∫—Å—ñ –∑ –æ–±—Ä–æ–±–∫–æ—é –ø–æ–º–∏–ª–æ–∫
     */
    function createSafeProxy(obj, name = '–æ–±\'—î–∫—Ç') {
        return new Proxy(obj || {}, {
            get(target, prop) {
                if (typeof target[prop] === 'function') {
                    return function(...args) {
                        return safeExecute(target[prop], args, `${name}.${prop}`);
                    };
                }
                return target[prop];
            }
        });
    }

    // ======== –í–ò–ü–†–ê–í–õ–ï–ù–ù–Ø DOM ========

    /**
     * –ë–µ–∑–ø–µ—á–Ω–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –≤–º—ñ—Å—Ç—É –µ–ª–µ–º–µ–Ω—Ç–∞
     * @param {HTMLElement} element - –ï–ª–µ–º–µ–Ω—Ç DOM –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
     * @param {string} content - –ù–æ–≤–∏–π –≤–º—ñ—Å—Ç
     */
    function safeUpdateContent(element, content) {
        try {
            if (element) {
                element.textContent = content !== undefined && content !== null ? content : '';
            }
        } catch (error) {
            console.warn('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –≤–º—ñ—Å—Ç—É –µ–ª–µ–º–µ–Ω—Ç–∞:', error);
        }
    }

    /**
     * –ë–µ–∑–ø–µ—á–Ω–µ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç–∞ DOM
     * @param {string} selector - –°–µ–ª–µ–∫—Ç–æ—Ä –µ–ª–µ–º–µ–Ω—Ç–∞
     * @param {boolean} silent - –ß–∏ –ø—Ä–∏—Ö–æ–≤—É–≤–∞—Ç–∏ –ø–æ–º–∏–ª–∫–∏ —É –∫–æ–Ω—Å–æ–ª—ñ
     * @returns {HTMLElement|null} –ó–Ω–∞–π–¥–µ–Ω–∏–π –µ–ª–µ–º–µ–Ω—Ç –∞–±–æ null
     */
    function safeGetElement(selector, silent = false) {
        try {
            if (selector.startsWith('#')) {
                return document.getElementById(selector.substring(1));
            }
            return document.querySelector(selector);
        } catch (error) {
            if (!silent) {
                console.warn(`‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç–∞ "${selector}":`, error);
            }
            return null;
        }
    }

    /**
     * –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –ø–æ–º–∏–ª–æ–∫ MutationObserver
     */
    function fixMutationObserver() {
        try {
            const originalObserve = MutationObserver.prototype.observe;

            if (originalObserve) {
                MutationObserver.prototype.observe = function(target, options) {
                    if (!target || !(target instanceof Node)) {
                        console.warn('‚ö†Ô∏è –ù–µ–∫–æ—Ä–µ–∫—Ç–Ω–∏–π target –¥–ª—è MutationObserver. –Ü–≥–Ω–æ—Ä—É—î–º–æ.');
                        return;
                    }

                    try {
                        return originalObserve.call(this, target, options);
                    } catch (error) {
                        console.warn('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –≤ MutationObserver.observe:', error);
                    }
                };
            }
        } catch (error) {
            console.warn('‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–ø—Ä–∞–≤–∏—Ç–∏ MutationObserver:', error);
        }
    }

    // ======== –í–ò–ü–†–ê–í–õ–ï–ù–ù–Ø DATAnull –ú–û–î–£–õ–Ü–í ========

    /**
     * –í–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –¥–ª—è WinixCore
     */
    function fixWinixCore() {
        if (!hasWinixCore) return;

        try {
            // –í–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ—ó updateBalanceDisplay
            if (typeof window.WinixCore.updateBalanceDisplay === 'function') {
                const originalUpdateBalance = window.WinixCore.updateBalanceDisplay;

                window.WinixCore.updateBalanceDisplay = function() {
                    try {
                        return originalUpdateBalance.apply(this, arguments);
                    } catch (error) {
                        console.warn('‚ö†Ô∏è –ü–µ—Ä–µ—Ö–æ–ø–ª–µ–Ω–æ –ø–æ–º–∏–ª–∫—É –≤ updateBalanceDisplay:', error);

                        // –ó–∞–ø–∞—Å–Ω–∏–π –º–µ—Ç–æ–¥ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É
                        try {
                            const tokensElement = safeGetElement('#user-tokens');
                            const coinsElement = safeGetElement('#user-coins');

                            if (tokensElement) {
                                const balance = parseFloat(localStorage.getItem('userTokens') || localStorage.getItem('winix_balance') || '0');
                                safeUpdateContent(tokensElement, balance.toFixed(2));
                            }

                            if (coinsElement) {
                                const coins = parseInt(localStorage.getItem('userCoins') || '0');
                                safeUpdateContent(coinsElement, coins);
                            }
                        } catch (fallbackError) {
                            console.warn('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø–∞—Å–Ω–æ–≥–æ –º–µ—Ç–æ–¥—É –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É:', fallbackError);
                        }
                    }
                };
            }

            // –í–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ—ó –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            if (typeof window.WinixCore.updateUserDisplay === 'function') {
                const originalUpdateUser = window.WinixCore.updateUserDisplay;

                window.WinixCore.updateUserDisplay = function() {
                    try {
                        return originalUpdateUser.apply(this, arguments);
                    } catch (error) {
                        console.warn('‚ö†Ô∏è –ü–µ—Ä–µ—Ö–æ–ø–ª–µ–Ω–æ –ø–æ–º–∏–ª–∫—É –≤ updateUserDisplay:', error);

                        // –ó–∞–ø–∞—Å–Ω–∏–π –º–µ—Ç–æ–¥ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
                        try {
                            const userIdElement = safeGetElement('#user-id');
                            const usernameElement = safeGetElement('#username');

                            if (userIdElement) {
                                const userId = localStorage.getItem('telegram_user_id') || 'Unknown ID';
                                safeUpdateContent(userIdElement, userId);
                            }

                            if (usernameElement) {
                                const username = localStorage.getItem('username') || 'WINIX User';
                                safeUpdateContent(usernameElement, username);
                            }
                        } catch (fallbackError) {
                            console.warn('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø–∞—Å–Ω–æ–≥–æ –º–µ—Ç–æ–¥—É –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:', fallbackError);
                        }
                    }
                };
            }

            // –í–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ—ó —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó –¥–∞–Ω–∏—Ö
            if (typeof window.WinixCore.syncUserData === 'function') {
                const originalSyncData = window.WinixCore.syncUserData;

                window.WinixCore.syncUserData = function() {
                    try {
                        return originalSyncData.apply(this, arguments);
                    } catch (error) {
                        console.warn('‚ö†Ô∏è –ü–µ—Ä–µ—Ö–æ–ø–ª–µ–Ω–æ –ø–æ–º–∏–ª–∫—É –≤ syncUserData:', error);

                        // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –ø—Ä–æ–º—ñ—Å –∑ –ø–æ–º–∏–ª–∫–æ—é, —â–æ–± –∫–æ–¥ –º—ñ–≥ –ø—Ä–æ–¥–æ–≤–∂—É–≤–∞—Ç–∏—Å—å
                        return Promise.resolve({
                            success: false,
                            message: error.message || '–ü–æ–º–∏–ª–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó –¥–∞–Ω–∏—Ö',
                            source: 'local_fallback'
                        });
                    }
                };
            }
        } catch (error) {
            console.warn('‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞—Å—Ç–æ—Å—É–≤–∞—Ç–∏ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –¥–ª—è WinixCore:', error);
        }
    }

    /**
     * –í–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –¥–ª—è WinixAPI
     */
    function fixWinixAPI() {
        if (!hasWinixAPI) return;

        try {
            // –í–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –¥–ª—è —Ñ—É–Ω–∫—Ü—ñ—ó apiRequest
            if (typeof window.apiRequest === 'function') {
                const originalApiRequest = window.apiRequest;

                window.apiRequest = function(endpoint, method, data, options, retries) {
                    try {
                        // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ –µ–Ω–¥–ø–æ—ñ–Ω—Ç—É
                        if (!endpoint || typeof endpoint !== 'string') {
                            console.warn('‚ö†Ô∏è –ù–µ–∫–æ—Ä–µ–∫—Ç–Ω–∏–π endpoint –¥–ª—è apiRequest:', endpoint);
                            endpoint = `/api/user/${window.WinixAPI.getUserId() || 'unknown'}`;
                        }

                        // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫–æ—Ä–µ–∫—Ç–Ω–æ—Å—Ç—ñ endpoint –¥–ª—è —Å—Ç–µ–π–∫—ñ–Ω–≥—É
                        if (endpoint.includes('/staking') && !endpoint.includes('/api/user/')) {
                            const userId = window.WinixAPI.getUserId() || localStorage.getItem('telegram_user_id');
                            if (userId) {
                                endpoint = `/api/user/${userId}${endpoint}`;
                                console.warn(`‚ö†Ô∏è –í–∏–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–∏–π URL —Å—Ç–µ–π–∫—ñ–Ω–≥—É: ${endpoint}`);
                            }
                        }

                        return originalApiRequest(endpoint, method, data, options, retries);
                    } catch (error) {
                        console.warn('‚ö†Ô∏è –ü–µ—Ä–µ—Ö–æ–ø–ª–µ–Ω–æ –ø–æ–º–∏–ª–∫—É –≤ apiRequest:', error);

                        // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –ø—Ä–æ–º—ñ—Å –∑ –ø–æ–º–∏–ª–∫–æ—é
                        return Promise.reject(error);
                    }
                };
            }

            // –í–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –¥–ª—è —Ñ—É–Ω–∫—Ü—ñ—ó getUserId
            if (typeof window.WinixAPI.getUserId === 'function') {
                const originalGetUserId = window.WinixAPI.getUserId;

                window.WinixAPI.getUserId = function() {
                    try {
                        const userId = originalGetUserId();
                        if (userId) return userId;

                        // –Ø–∫—â–æ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –Ω–µ –∑–º–æ–≥–ª–∞ –æ—Ç—Ä–∏–º–∞—Ç–∏ ID, –ø—Ä–æ–±—É—î–º–æ –∑ localStorage
                        const localId = localStorage.getItem('telegram_user_id');
                        if (localId && localId !== 'undefined' && localId !== 'null') {
                            return localId;
                        }

                        // –Ø–∫—â–æ —ñ –≤ localStorage –Ω–µ–º–∞—î, –≥–µ–Ω–µ—Ä—É—î–º–æ —Ç–∏–º—á–∞—Å–æ–≤–∏–π ID
                        console.warn('‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Ç–∏–º—á–∞—Å–æ–≤–∏–π ID');
                        return '2449' + Math.floor(Math.random() * 1000000);
                    } catch (error) {
                        console.warn('‚ö†Ô∏è –ü–µ—Ä–µ—Ö–æ–ø–ª–µ–Ω–æ –ø–æ–º–∏–ª–∫—É –≤ getUserId:', error);
                        return '2449' + Math.floor(Math.random() * 1000000);
                    }
                };
            }

            // –í–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É –≤–∏–Ω–∞–≥–æ—Ä–æ–¥–∏ –∑–∞ —Å—Ç–µ–π–∫—ñ–Ω–≥
            if (typeof window.WinixAPI.calculateExpectedReward === 'function') {
                const originalCalculateReward = window.WinixAPI.calculateExpectedReward;

                window.WinixAPI.calculateExpectedReward = function(amount, period) {
                    return new Promise((resolve) => {
                        originalCalculateReward(amount, period)
                            .then(resolve)
                            .catch(error => {
                                console.warn('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É –≤–∏–Ω–∞–≥–æ—Ä–æ–¥–∏ —á–µ—Ä–µ–∑ API, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –ª–æ–∫–∞–ª—å–Ω–∏–π —Ä–æ–∑—Ä–∞—Ö—É–Ω–æ–∫:', error);

                                // –õ–æ–∫–∞–ª—å–Ω–∏–π —Ä–æ–∑—Ä–∞—Ö—É–Ω–æ–∫
                                const rewardRates = { 7: 4, 14: 9, 28: 15 };
                                const rewardPercent = rewardRates[period] || 9;
                                const reward = (amount * rewardPercent) / 100;

                                resolve({
                                    status: 'success',
                                    data: {
                                        reward: parseFloat(reward.toFixed(2)),
                                        rewardPercent: rewardPercent,
                                        amount: parseInt(amount),
                                        period: parseInt(period),
                                        source: 'local_calculation'
                                    }
                                });
                            });
                    });
                };
            }
        } catch (error) {
            console.warn('‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞—Å—Ç–æ—Å—É–≤–∞—Ç–∏ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –¥–ª—è WinixAPI:', error);
        }
    }

    /**
     * –í–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –¥–ª—è WinixStakingSystem
     */
    function fixStakingSystem() {
        if (!hasStakingSystem) {
            // –Ø–∫—â–æ –Ω–µ–º–∞—î WinixStakingSystem, –∞–ª–µ —î —Å—Ç–∞—Ä–∏–π StakingSystem, —Å—Ç–≤–æ—Ä—é—î–º–æ –ø—Ä–æ–∫—Å—ñ
            if (window.StakingSystem && !window.WinixStakingSystem) {
                console.log("‚ÑπÔ∏è –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø—Ä–æ–∫—Å—ñ StakingSystem -> WinixStakingSystem");
                window.WinixStakingSystem = createSafeProxy(window.StakingSystem, 'StakingSystem');
                return;
            }

            return;
        }

        try {
            // –í–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ—ó –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É —Å—Ç–µ–π–∫—ñ–Ω–≥—É
            if (typeof window.WinixStakingSystem.updateUI === 'function') {
                const originalUpdateUI = window.WinixStakingSystem.updateUI;

                window.WinixStakingSystem.updateUI = function() {
                    try {
                        return originalUpdateUI.apply(this, arguments);
                    } catch (error) {
                        console.warn('‚ö†Ô∏è –ü–µ—Ä–µ—Ö–æ–ø–ª–µ–Ω–æ –ø–æ–º–∏–ª–∫—É –≤ updateUI —Å—Ç–µ–π–∫—ñ–Ω–≥—É:', error);

                        // –ó–∞–ø–∞—Å–Ω–∏–π –º–µ—Ç–æ–¥ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É —Å—Ç–µ–π–∫—ñ–Ω–≥—É
                        try {
                            // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞—Ç—É—Å —Å—Ç–µ–π–∫—ñ–Ω–≥—É
                            const stakingStatus = safeGetElement('#staking-status');
                            const stakingData = window.WinixStakingSystem.getStakingData() ||
                                               JSON.parse(localStorage.getItem('stakingData') || localStorage.getItem('winix_staking') || '{}');

                            if (stakingStatus) {
                                if (stakingData && stakingData.hasActiveStaking) {
                                    safeUpdateContent(stakingStatus, `–£ —Å—Ç–µ–π–∫—ñ–Ω–≥—É: ${stakingData.stakingAmount || 0} $WINIX`);
                                } else {
                                    safeUpdateContent(stakingStatus, '–ù–∞—Ä–∞–∑—ñ –Ω–µ–º–∞—î –∞–∫—Ç–∏–≤–Ω–∏—Ö —Å—Ç–µ–π–∫—ñ–Ω–≥—ñ–≤');
                                }
                            }

                            // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω –∫–Ω–æ–ø–æ–∫
                            window.WinixStakingSystem.updateButtonsState(stakingData && stakingData.hasActiveStaking);
                        } catch (fallbackError) {
                            console.warn('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø–∞—Å–Ω–æ–≥–æ –º–µ—Ç–æ–¥—É –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É —Å—Ç–µ–π–∫—ñ–Ω–≥—É:', fallbackError);
                        }
                    }
                };
            }

            // –í–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ—ó –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞–Ω—É –∫–Ω–æ–ø–æ–∫
            if (typeof window.WinixStakingSystem.updateButtonsState === 'function') {
                const originalUpdateButtons = window.WinixStakingSystem.updateButtonsState;

                window.WinixStakingSystem.updateButtonsState = function(hasActiveStaking) {
                    try {
                        return originalUpdateButtons.apply(this, arguments);
                    } catch (error) {
                        console.warn('‚ö†Ô∏è –ü–µ—Ä–µ—Ö–æ–ø–ª–µ–Ω–æ –ø–æ–º–∏–ª–∫—É –≤ updateButtonsState —Å—Ç–µ–π–∫—ñ–Ω–≥—É:', error);

                        // –ó–∞–ø–∞—Å–Ω–∏–π –º–µ—Ç–æ–¥ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞–Ω—É –∫–Ω–æ–ø–æ–∫
                        try {
                            const activeStakingButton = safeGetElement('#active-staking-button');
                            const cancelStakingButton = safeGetElement('#cancel-staking-button');

                            if (activeStakingButton) {
                                if (hasActiveStaking) {
                                    activeStakingButton.classList.remove('disabled');
                                    activeStakingButton.disabled = false;
                                } else {
                                    activeStakingButton.classList.add('disabled');
                                    activeStakingButton.disabled = true;
                                }
                            }

                            if (cancelStakingButton) {
                                if (hasActiveStaking) {
                                    cancelStakingButton.style.opacity = '1';
                                    cancelStakingButton.style.pointerEvents = 'auto';
                                    cancelStakingButton.disabled = false;
                                } else {
                                    cancelStakingButton.style.opacity = '0.5';
                                    cancelStakingButton.style.pointerEvents = 'none';
                                    cancelStakingButton.disabled = true;
                                }
                            }
                        } catch (fallbackError) {
                            console.warn('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø–∞—Å–Ω–æ–≥–æ –º–µ—Ç–æ–¥—É –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞–Ω—É –∫–Ω–æ–ø–æ–∫ —Å—Ç–µ–π–∫—ñ–Ω–≥—É:', fallbackError);
                        }
                    }
                };
            }
        } catch (error) {
            console.warn('‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞—Å—Ç–æ—Å—É–≤–∞—Ç–∏ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –¥–ª—è WinixStakingSystem:', error);
        }
    }

    // ======== –î–û–î–ê–¢–ö–û–í–Ü –£–¢–ò–õ–Ü–¢–ò ========

    /**
     * –í–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Å—Ö–æ–≤–∏—â–∞
     */
    function fixLocalStorage() {
        try {
            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –¥–æ—Å—Ç—É–ø–Ω—ñ—Å—Ç—å localStorage
            const testKey = '_test_ls_' + Date.now();
            localStorage.setItem(testKey, 'test');
            localStorage.removeItem(testKey);

            // –í–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –¥–ª—è –Ω–µ–≤–∞–ª—ñ–¥–Ω–∏—Ö –∑–Ω–∞—á–µ–Ω—å
            const keysToCheck = [
                'userTokens', 'winix_balance',
                'userCoins',
                'telegram_user_id',
                'stakingData', 'winix_staking'
            ];

            for (const key of keysToCheck) {
                try {
                    const value = localStorage.getItem(key);

                    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞ –Ω–µ–≤–∞–ª—ñ–¥–Ω—ñ –∑–Ω–∞—á–µ–Ω–Ω—è
                    if (value === 'undefined' || value === 'null' || value === 'NaN') {
                        console.warn(`‚ö†Ô∏è –ó–Ω–∞–π–¥–µ–Ω–æ –Ω–µ–≤–∞–ª—ñ–¥–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è –≤ localStorage[${key}]:", ${value}`);
                        localStorage.removeItem(key);
                    }

                    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏—Å–ª–æ–≤—ñ –∑–Ω–∞—á–µ–Ω–Ω—è
                    if (key === 'userTokens' || key === 'winix_balance') {
                        const numValue = parseFloat(value);
                        if (isNaN(numValue) || numValue < 0) {
                            console.warn(`‚ö†Ô∏è –ó–Ω–∞–π–¥–µ–Ω–æ –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–µ —á–∏—Å–ª–æ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è –≤ localStorage[${key}]:`, value);
                            localStorage.setItem(key, '0');
                        }
                    }

                    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ü—ñ–ª–æ—á–∏—Å–µ–ª—å–Ω—ñ –∑–Ω–∞—á–µ–Ω–Ω—è
                    if (key === 'userCoins') {
                        const numValue = parseInt(value);
                        if (isNaN(numValue) || numValue < 0) {
                            console.warn(`‚ö†Ô∏è –ó–Ω–∞–π–¥–µ–Ω–æ –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–µ —Ü—ñ–ª–æ—á–∏—Å–µ–ª—å–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è –≤ localStorage[${key}]:`, value);
                            localStorage.setItem(key, '0');
                        }
                    }

                    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ JSON –∑–Ω–∞—á–µ–Ω–Ω—è
                    if (key === 'stakingData' || key === 'winix_staking') {
                        try {
                            if (value) {
                                JSON.parse(value);
                            }
                        } catch (e) {
                            console.warn(`‚ö†Ô∏è –ó–Ω–∞–π–¥–µ–Ω–æ –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–∏–π JSON –≤ localStorage[${key}]:`, value);
                            localStorage.removeItem(key);
                        }
                    }
                } catch (e) {
                    console.warn(`‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ localStorage[${key}]:`, e);
                }
            }
        } catch (error) {
            console.warn('‚ö†Ô∏è localStorage –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π –∞–±–æ –≤–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞:', error);
        }
    }

    /**
     * –ì–ª–æ–±–∞–ª—å–Ω–∏–π –æ–±—Ä–æ–±–Ω–∏–∫ –ø–æ–º–∏–ª–æ–∫
     */
    function setupGlobalErrorHandler() {
        try {
            const originalOnError = window.onerror;

            window.onerror = function(message, source, lineno, colno, error) {
                // –§—ñ–ª—å—Ç—Ä—É—î–º–æ –ø–æ–º–∏–ª–∫–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É
                if (message && (
                    message.includes('originalUpdateDisplay') ||
                    message.includes('undefined is not an object') ||
                    message.includes('cannot read property') ||
                    message.includes('null is not an object')
                )) {
                    console.warn('‚ö†Ô∏è –ü–µ—Ä–µ—Ö–æ–ø–ª–µ–Ω–æ –≥–ª–æ–±–∞–ª—å–Ω—É –ø–æ–º–∏–ª–∫—É UI:', message);
                    return true; // –ó–∞–ø–æ–±—ñ–≥–∞—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—é –ø–æ–º–∏–ª–∫–∏ –≤ –∫–æ–Ω—Å–æ–ª—ñ
                }

                // –î–ª—è —ñ–Ω—à–∏—Ö –ø–æ–º–∏–ª–æ–∫ –≤–∏–∫–ª–∏–∫–∞—î–º–æ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–∏–π –æ–±—Ä–æ–±–Ω–∏–∫, —è–∫—â–æ –≤—ñ–Ω —î
                if (typeof originalOnError === 'function') {
                    return originalOnError(message, source, lineno, colno, error);
                }

                return false; // –î–æ–∑–≤–æ–ª—è—î–º–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É –æ–±—Ä–æ–±–∫—É –ø–æ–º–∏–ª–∫–∏
            };
        } catch (error) {
            console.warn('‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –Ω–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏ –≥–ª–æ–±–∞–ª—å–Ω–∏–π –æ–±—Ä–æ–±–Ω–∏–∫ –ø–æ–º–∏–ª–æ–∫:', error);
        }
    }

    // ======== –Ü–ù–Ü–¶–Ü–ê–õ–Ü–ó–ê–¶–Ü–Ø ========

    /**
     * –ó–∞–≥–∞–ª—å–Ω–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –≤—Å—ñ—Ö –≤–∏–ø—Ä–∞–≤–ª–µ–Ω—å
     */
    function init() {
        if (_initialized) return;

        try {
            // –ó–∞—Å—Ç–æ—Å–æ–≤—É—î–º–æ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è
            fixMutationObserver();
            fixWinixAPI();
            fixWinixCore();
            fixStakingSystem();
            fixLocalStorage();
            setupGlobalErrorHandler();

            _initialized = true;

            console.log("‚úÖ –í–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –¥–ª—è UI WINIX —É—Å–ø—ñ—à–Ω–æ –∑–∞—Å—Ç–æ—Å–æ–≤–∞–Ω—ñ");
        } catch (error) {
            console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è –≤–∏–ø—Ä–∞–≤–ª–µ–Ω—å –¥–ª—è UI WINIX:", error);
        }
    }

    // –ó–∞–ø—É—Å–∫–∞—î–º–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—é
    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', init);
    } else {
        init();
    }
})();