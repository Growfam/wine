/**
 * raffle_history.js - –ú–æ–¥—É–ª—å –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –¥–µ—Ç–∞–ª—å–Ω–æ—ó —ñ—Å—Ç–æ—Ä—ñ—ó —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ WINIX
 */

(function() {
    'use strict';

    console.log("üéÆ Raffle History: –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –º–æ–¥—É–ª—è —ñ—Å—Ç–æ—Ä—ñ—ó —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤");

    // ======== –ü–†–ò–í–ê–¢–ù–Ü –ó–ú–Ü–ù–ù–Ü ========
    let _isLoading = false;
    let _historyData = [];

    // ======== –§–£–ù–ö–¶–Ü–á –î–õ–Ø –†–û–ë–û–¢–ò –ó API ========

    /**
     * –û—Ç—Ä–∏–º–∞–Ω–Ω—è —ñ—Å—Ç–æ—Ä—ñ—ó —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
     */
    async function getRaffleHistory() {
        try {
            if (_isLoading) {
                console.log("‚è≥ Raffle History: –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –≤–∂–µ –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è");
                return _historyData;
            }

            _isLoading = true;
            showHistoryLoader();

            // –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ –∑ API
            const userId = window.WinixAPI.getUserId();
            if (!userId) {
                throw new Error('ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
            }

            const response = await window.WinixAPI.apiRequest(`/api/user/${userId}/raffles-history`, 'GET');
            hideHistoryLoader();
            _isLoading = false;

            if (response.status === 'success') {
                _historyData = response.data || [];
                console.log(`‚úÖ Raffle History: –û—Ç—Ä–∏–º–∞–Ω–æ ${_historyData.length} –∑–∞–ø–∏—Å—ñ–≤ —ñ—Å—Ç–æ—Ä—ñ—ó`);
                return _historyData;
            } else {
                throw new Error(response.message || '–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —ñ—Å—Ç–æ—Ä—ñ—ó —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤');
            }
        } catch (error) {
            console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —ñ—Å—Ç–æ—Ä—ñ—ó —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤:', error);
            hideHistoryLoader();
            _isLoading = false;
            return [];
        }
    }

    // ======== –§–£–ù–ö–¶–Ü–á –î–õ–Ø –†–û–ë–û–¢–ò –ó UI ========

    /**
     * –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —ñ—Å—Ç–æ—Ä—ñ—ó —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ —É –≤–∏–±—Ä–∞–Ω–æ–º—É –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ
     * @param {string} containerId - ID –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —ñ—Å—Ç–æ—Ä—ñ—ó
     */
    async function displayHistory(containerId = 'history-container') {
        const container = document.getElementById(containerId);
        if (!container) {
            console.error(`–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑ ID '${containerId}' –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ`);
            return;
        }

        // –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ —ñ—Å—Ç–æ—Ä—ñ—ó
        const history = await getRaffleHistory();

        // –Ø–∫—â–æ –¥–∞–Ω—ñ –≤—ñ–¥—Å—É—Ç–Ω—ñ –∞–±–æ –ø–æ—Ä–æ–∂–Ω—ñ
        if (!history || history.length === 0) {
            container.innerHTML = createEmptyHistoryHTML();
            return;
        }

        // –†–æ–∑–¥—ñ–ª—è—î–º–æ —ñ—Å—Ç–æ—Ä—ñ—é –Ω–∞ –≤–∏–≥—Ä–∞—à–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ —Ç–∞ –∑–≤–∏—á–∞–π–Ω—ñ —É—á–∞—Å—Ç—ñ
        const wonRaffles = history.filter(item => item.status === 'won');
        const participatedRaffles = history.filter(item => item.status !== 'won');

        // –°—Ç–≤–æ—Ä—é—î–º–æ HTML –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è
        let historyHTML = `
            <div class="history-stats">
                <div class="stats-item">
                    <div class="stats-value">${history.length}</div>
                    <div class="stats-label">–í—Å—å–æ–≥–æ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤</div>
                </div>
                <div class="stats-item">
                    <div class="stats-value">${wonRaffles.length}</div>
                    <div class="stats-label">–ü–µ—Ä–µ–º–æ–≥</div>
                </div>
                <div class="stats-item">
                    <div class="stats-value">${getTotalPrizeAmount(wonRaffles)}</div>
                    <div class="stats-label">WINIX –≤–∏–≥—Ä–∞–Ω–æ</div>
                </div>
            </div>
        `;

        // –î–æ–¥–∞—î–º–æ —Å–µ–∫—Ü—ñ—é "–ú–æ—ó –ø–µ—Ä–µ–º–æ–≥–∏" —è–∫—â–æ —î –≤–∏–≥—Ä–∞—à—ñ
        if (wonRaffles.length > 0) {
            historyHTML += `
                <div class="history-section">
                    <h3 class="section-title">–ú–æ—ó –ø–µ—Ä–µ–º–æ–≥–∏</h3>
                    <div class="history-cards">
                        ${wonRaffles.map(createWinnerCardHTML).join('')}
                    </div>
                </div>
            `;
        }

        // –î–æ–¥–∞—î–º–æ —Å–µ–∫—Ü—ñ—é —É—á–∞—Å—Ç—ñ
        historyHTML += `
            <div class="history-section">
                <h3 class="section-title">–Ü—Å—Ç–æ—Ä—ñ—è —É—á–∞—Å—Ç—ñ</h3>
                <div class="history-cards">
                    ${participatedRaffles.length > 0 
                        ? participatedRaffles.map(createHistoryCardHTML).join('')
                        : '<div class="empty-history-section">–£ –≤–∞—Å –ø–æ–∫–∏ –Ω–µ–º–∞—î —É—á–∞—Å—Ç—ñ –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à–∞—Ö</div>'}
                </div>
            </div>
        `;

        // –í—Å—Ç–∞–≤–ª—è—î–º–æ HTML –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        container.innerHTML = historyHTML;

        // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π
        addHistoryCardEventListeners();
    }

    /**
     * –°—Ç–≤–æ—Ä–∏—Ç–∏ HTML –¥–ª—è –∫–∞—Ä—Ç–∫–∏ –ø–µ—Ä–µ–º–æ–≥–∏
     * @param {Object} item - –î–∞–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
     */
    function createWinnerCardHTML(item) {
        const badgeHTML = getBadgeHTML(item);

        return `
            <div class="history-card winner-card" data-raffle-id="${item.raffle_id}">
                ${badgeHTML}
                <div class="history-card-content">
                    <div class="history-card-header">
                        <div class="history-card-title">${item.title}</div>
                        <div class="history-card-date">${item.date}</div>
                    </div>
                    <div class="history-card-prize">${item.prize}</div>
                    <div class="history-card-result win-result">${item.result}</div>
                    <div class="view-details">–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –¥–ª—è –¥–µ—Ç–∞–ª–µ–π</div>
                </div>
            </div>
        `;
    }

    /**
     * –°—Ç–≤–æ—Ä–∏—Ç–∏ HTML –¥–ª—è –∫–∞—Ä—Ç–∫–∏ —É—á–∞—Å—Ç—ñ –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ
     * @param {Object} item - –î–∞–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
     */
    function createHistoryCardHTML(item) {
        const badgeHTML = getBadgeHTML(item);

        return `
            <div class="history-card" data-raffle-id="${item.raffle_id}">
                ${badgeHTML}
                <div class="history-card-content">
                    <div class="history-card-header">
                        <div class="history-card-title">${item.title}</div>
                        <div class="history-card-date">${item.date}</div>
                    </div>
                    <div class="history-card-prize">${item.prize}</div>
                    <div class="history-card-result">${item.result}</div>
                    <div class="history-card-entry">–í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–æ –∂–µ—Ç–æ–Ω—ñ–≤: ${item.entry_count}</div>
                    <div class="view-details">–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –¥–ª—è –¥–µ—Ç–∞–ª–µ–π</div>
                </div>
            </div>
        `;
    }

    /**
     * –°—Ç–≤–æ—Ä–∏—Ç–∏ HTML –¥–ª—è –ø—É—Å—Ç–æ—ó —ñ—Å—Ç–æ—Ä—ñ—ó
     */
    function createEmptyHistoryHTML() {
        return `
            <div class="empty-history">
                <div class="empty-history-icon">üéÆ</div>
                <h3>–Ü—Å—Ç–æ—Ä—ñ—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ –ø–æ—Ä–æ–∂–Ω—è</h3>
                <p>–í–∏ —â–µ –Ω–µ –±—Ä–∞–ª–∏ —É—á–∞—Å—Ç—ñ –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à–∞—Ö WINIX. –°–ø—Ä–æ–±—É–π—Ç–µ —Å–≤–æ—é —É–¥–∞—á—É –≤–∂–µ —Å—å–æ–≥–æ–¥–Ω—ñ!</p>
                <button class="join-raffle-btn" onclick="window.location.href='raffles.html'">–ü–µ—Ä–µ–π—Ç–∏ –¥–æ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤</button>
            </div>
        `;
    }

    /**
     * –û—Ç—Ä–∏–º–∞—Ç–∏ HTML –¥–ª—è –±–µ–π–¥–∂–∞ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
     * @param {Object} item - –î–∞–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
     */
    function getBadgeHTML(item) {
        if (item.status === 'won') {
            return `<div class="history-card-badge winner-badge">–ü–µ—Ä–µ–º–æ–≥–∞</div>`;
        } else if (item.is_daily) {
            return `<div class="history-card-badge daily-badge">–©–æ–¥–µ–Ω–Ω–∏–π</div>`;
        }
        return '';
    }

    /**
     * –û—Ç—Ä–∏–º–∞—Ç–∏ –∑–∞–≥–∞–ª—å–Ω—É —Å—É–º—É –≤–∏–≥—Ä–∞—à—ñ–≤
     * @param {Array} wonRaffles - –ú–∞—Å–∏–≤ –≤–∏–≥—Ä–∞–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
     */
    function getTotalPrizeAmount(wonRaffles) {
        let total = 0;

        wonRaffles.forEach(raffle => {
            // –í–∏—Ç—è–≥—É—î–º–æ —á–∏—Å–ª–æ–≤—É —Å—É–º—É –∑ —Ä—è–¥–∫–∞ –ø—Ä–∏–∑—É
            const match = raffle.prize.match(/\d+(\.\d+)?/);
            if (match) {
                total += parseFloat(match[0]);
            }
        });

        return total.toLocaleString('uk-UA');
    }

    /**
     * –î–æ–¥–∞—Ç–∏ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π –¥–ª—è –∫–∞—Ä—Ç–æ–∫ —ñ—Å—Ç–æ—Ä—ñ—ó
     */
    function addHistoryCardEventListeners() {
        document.querySelectorAll('.history-card').forEach(card => {
            card.addEventListener('click', function() {
                const raffleId = this.getAttribute('data-raffle-id');
                const historyItem = _historyData.find(item => item.raffle_id === raffleId);

                if (historyItem) {
                    showRaffleDetailsModal(historyItem);
                }
            });
        });
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç–∏ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ –∑ –¥–µ—Ç–∞–ª—è–º–∏ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
     * @param {Object} raffleData - –î–∞–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
     */
    function showRaffleDetailsModal(raffleData) {
        // –í–∏–¥–∞–ª—è—î–º–æ —ñ—Å–Ω—É—é—á–µ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ, —è–∫—â–æ –≤–æ–Ω–æ —î
        let existingModal = document.getElementById('raffle-history-modal');
        if (existingModal) {
            existingModal.remove();
        }

        // –°—Ç–≤–æ—Ä—é—î–º–æ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
        const modal = document.createElement('div');
        modal.id = 'raffle-history-modal';
        modal.className = 'raffle-modal';

        // –ì–µ–Ω–µ—Ä—É—î–º–æ HTML –¥–ª—è –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤
        const winnersHTML = generateWinnersListHTML(raffleData.winners);

        // –í–∏–∑–Ω–∞—á–∞—î–º–æ —Å—Ç–∞—Ç—É—Å —ñ –∫–ª–∞—Å —Å—Ç–∞—Ç—É—Å—É
        const statusClass = raffleData.status === 'won' ? 'win-status' : 'participated-status';
        const statusText = raffleData.status === 'won' ? '–í–∏ –ø–µ—Ä–µ–º–æ–≥–ª–∏' : '–£—á–∞—Å—Ç—å –±–µ–∑ –ø–µ—Ä–µ–º–æ–≥–∏';

        // –í–∏–∑–Ω–∞—á–∞—î–º–æ —Ç–∏–ø —Ä–æ–∑—ñ–≥—Ä–∞—à—É
        const raffleType = raffleData.is_daily ? '–©–æ–¥–µ–Ω–Ω–∏–π —Ä–æ–∑—ñ–≥—Ä–∞—à' : '–ì—Ä–∞–Ω–¥ —Ä–æ–∑—ñ–≥—Ä–∞—à';

        // –§–æ—Ä–º—É—î–º–æ HTML –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞
        modal.innerHTML = `
            <div class="modal-content">
                <div class="modal-header">
                    <h2 class="modal-title">${raffleData.title}</h2>
                    <span class="modal-close">√ó</span>
                </div>
                
                <div class="raffle-details-info">
                    <div class="detail-row">
                        <div class="detail-label">–î–∞—Ç–∞:</div>
                        <div class="detail-value">${raffleData.date}</div>
                    </div>
                    <div class="detail-row">
                        <div class="detail-label">–¢–∏–ø:</div>
                        <div class="detail-value">${raffleType}</div>
                    </div>
                    <div class="detail-row">
                        <div class="detail-label">–ü—Ä–∏–∑–æ–≤–∏–π —Ñ–æ–Ω–¥:</div>
                        <div class="detail-value prize-value">${raffleData.prize}</div>
                    </div>
                    <div class="detail-row">
                        <div class="detail-label">–í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç:</div>
                        <div class="detail-value ${statusClass}">${statusText}</div>
                    </div>
                    <div class="detail-row">
                        <div class="detail-label">–í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–æ –∂–µ—Ç–æ–Ω—ñ–≤:</div>
                        <div class="detail-value">${raffleData.entry_count}</div>
                    </div>
                </div>
                
                <div class="winners-container">
                    <h3>–ü–µ—Ä–µ–º–æ–∂—Ü—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—É</h3>
                    <div class="winners-list">
                        ${winnersHTML}
                    </div>
                </div>
                
                <button class="join-button" id="close-history-btn">–ó–ê–ö–†–ò–¢–ò</button>
            </div>
        `;

        // –î–æ–¥–∞—î–º–æ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É
        document.body.appendChild(modal);

        // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π
        const closeButton = modal.querySelector('.modal-close');
        if (closeButton) {
            closeButton.addEventListener('click', function() {
                modal.classList.remove('open');
                setTimeout(() => modal.remove(), 300);
            });
        }

        const closeActionButton = modal.querySelector('#close-history-btn');
        if (closeActionButton) {
            closeActionButton.addEventListener('click', function() {
                modal.classList.remove('open');
                setTimeout(() => modal.remove(), 300);
            });
        }

        // –ü–æ–∫–∞–∑—É—î–º–æ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
        requestAnimationFrame(() => {
            modal.classList.add('open');
        });

        return modal;
    }

    /**
     * –ì–µ–Ω–µ—Ä—É–≤–∞–Ω–Ω—è HTML –¥–ª—è —Å–ø–∏—Å–∫—É –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤
     * @param {Array} winners - –ú–∞—Å–∏–≤ –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤
     */
    function generateWinnersListHTML(winners) {
        if (!winners || winners.length === 0) {
            return '<div class="no-winners">–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤ –≤—ñ–¥—Å—É—Ç–Ω—è</div>';
        }

        return winners.map(winner => {
            // –í–∏–∑–Ω–∞—á–∞—î–º–æ –∫–ª–∞—Å –¥–ª—è –º—ñ—Å—Ü—è (top-1, top-2, top-3)
            const placeClass = winner.place <= 3 ? `top-${winner.place}` : '';
            const bgColor = winner.place === 1 ? 'linear-gradient(145deg, #FFD700, #FFA500)' :
                            winner.place === 2 ? 'linear-gradient(145deg, #C0C0C0, #A9A9A9)' :
                            winner.place === 3 ? 'linear-gradient(145deg, #CD7F32, #A0522D)' :
                            'rgba(0, 0, 0, 0.3)';
            const boxShadow = winner.place <= 3 ?
                            `box-shadow: 0 0 8px ${winner.place === 1 ? 'rgba(255, 215, 0, 0.5)' : 
                                          winner.place === 2 ? 'rgba(192, 192, 192, 0.5)' : 
                                          'rgba(205, 127, 50, 0.5)'};` : '';

            // –í–∏–∑–Ω–∞—á–∞—î–º–æ, —á–∏ —Ü–µ –ø–æ—Ç–æ—á–Ω–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á
            const currentUserClass = winner.isCurrentUser ? 'current-user' : '';

            // –§–æ—Ä–º—É—î–º–æ HTML –¥–ª—è –æ–¥–Ω–æ–≥–æ –ø–µ—Ä–µ–º–æ–∂—Ü—è
            return `
                <div class="winner-item ${currentUserClass}" ${winner.isCurrentUser ? 'title="–¶–µ –≤–∏!"' : ''}>
                    <div class="winner-place" style="background: ${bgColor}; ${boxShadow}">
                        <span>${winner.place}</span>
                    </div>
                    <div class="winner-info">
                        <div class="winner-name">${winner.username}</div>
                        <div class="winner-id">ID: ${winner.userId}</div>
                    </div>
                    <div class="winner-prize">${winner.prize}</div>
                </div>
            `;
        }).join('');
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç–∏ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–ª—è —ñ—Å—Ç–æ—Ä—ñ—ó
     */
    function showHistoryLoader() {
        const container = document.getElementById('history-container');
        if (!container) return;

        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –≤–∂–µ —î –ª–æ–∞–¥–µ—Ä
        let loader = container.querySelector('.history-loader');
        if (!loader) {
            loader = document.createElement('div');
            loader.className = 'history-loader';
            loader.innerHTML = `
                <div class="loader-spinner"></div>
                <div class="loader-text">–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —ñ—Å—Ç–æ—Ä—ñ—ó...</div>
            `;
            container.innerHTML = '';
            container.appendChild(loader);
        }
    }

    /**
     * –ü—Ä–∏—Ö–æ–≤–∞—Ç–∏ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–ª—è —ñ—Å—Ç–æ—Ä—ñ—ó
     */
    function hideHistoryLoader() {
        const container = document.getElementById('history-container');
        if (!container) return;

        const loader = container.querySelector('.history-loader');
        if (loader) {
            loader.remove();
        }
    }

    /**
     * –î–æ–¥–∞—Ç–∏ —Å—Ç–∏–ª—ñ –¥–ª—è —ñ—Å—Ç–æ—Ä—ñ—ó —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
     */
    function addHistoryStyles() {
        const styleElement = document.createElement('style');
        styleElement.textContent = `
            /* –°—Ç–∏–ª—ñ –¥–ª—è —ñ—Å—Ç–æ—Ä—ñ—ó —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ */
            .history-stats {
                display: flex;
                justify-content: space-between;
                margin-bottom: 1.5rem;
                background: var(--bg-card);
                border-radius: var(--card-border-radius);
                padding: 1rem;
                box-shadow: 0 0.25rem 0.5rem rgba(0, 0, 0, 0.3);
            }
            
            .stats-item {
                text-align: center;
                flex: 1;
            }
            
            .stats-value {
                font-size: 1.5rem;
                font-weight: bold;
                color: var(--text-color);
                margin-bottom: 0.25rem;
            }
            
            .stats-label {
                font-size: 0.75rem;
                color: var(--text-secondary);
            }
            
            .history-section {
                margin-bottom: 2rem;
            }
            
            .section-title {
                font-size: 1.25rem;
                font-weight: bold;
                margin-bottom: 1rem;
                color: var(--text-color);
                text-shadow: 0 0 5px rgba(0, 201, 167, 0.3);
            }
            
            .history-cards {
                display: grid;
                grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
                gap: 1rem;
            }
            
            .history-card {
                background: var(--bg-item);
                border-radius: var(--item-border-radius);
                overflow: hidden;
                position: relative;
                box-shadow: 0 0.25rem 0.5rem rgba(0, 0, 0, 0.3);
                transition: transform 0.3s ease, box-shadow 0.3s ease;
                cursor: pointer;
            }
            
            .history-card:hover {
                transform: translateY(-5px);
                box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.4);
            }
            
            .history-card-badge {
                position: absolute;
                top: 0.5rem;
                right: 0.5rem;
                padding: 0.25rem 0.5rem;
                border-radius: 0.25rem;
                font-size: 0.75rem;
                font-weight: bold;
                z-index: 1;
            }
            
            .winner-badge {
                background: rgba(255, 215, 0, 0.2);
                color: rgb(255, 215, 0);
            }
            
            .daily-badge {
                background: rgba(33, 150, 243, 0.2);
                color: rgba(33, 150, 243, 1);
            }
            
            .winner-card {
                background: linear-gradient(145deg, rgba(26, 26, 46, 0.9), rgba(15, 52, 96, 0.9));
                border: 1px solid rgba(255, 215, 0, 0.3);
            }
            
            .history-card-content {
                padding: 1rem;
            }
            
            .history-card-header {
                display: flex;
                justify-content: space-between;
                align-items: flex-start;
                margin-bottom: 0.5rem;
            }
            
            .history-card-title {
                font-weight: bold;
                color: var(--text-color);
                margin-right: 0.5rem;
            }
            
            .history-card-date {
                font-size: 0.75rem;
                color: var(--text-secondary);
                white-space: nowrap;
            }
            
            .history-card-prize {
                font-size: 1.25rem;
                font-weight: bold;
                color: var(--premium-color);
                margin-bottom: 0.5rem;
            }
            
            .history-card-result {
                font-size: 0.875rem;
                color: var(--text-secondary);
                margin-bottom: 0.5rem;
            }
            
            .win-result {
                color: var(--premium-color);
                font-weight: bold;
            }
            
            .history-card-entry {
                font-size: 0.75rem;
                color: var(--text-secondary);
                margin-bottom: 0.5rem;
            }
            
            .view-details {
                font-size: 0.75rem;
                color: rgba(0, 201, 167, 0.7);
                text-align: center;
                opacity: 0;
                transition: opacity 0.3s ease;
            }
            
            .history-card:hover .view-details {
                opacity: 1;
            }
            
            .empty-history {
                text-align: center;
                padding: 2rem 1rem;
                background: var(--bg-card);
                border-radius: var(--card-border-radius);
                box-shadow: 0 0.25rem 0.5rem rgba(0, 0, 0, 0.3);
            }
            
            .empty-history-icon {
                font-size: 3rem;
                margin-bottom: 1rem;
                animation: pulse 2s infinite ease-in-out;
            }
            
            @keyframes pulse {
                0% { transform: scale(1); opacity: 0.7; }
                50% { transform: scale(1.1); opacity: 1; }
                100% { transform: scale(1); opacity: 0.7; }
            }
            
            .empty-history h3 {
                font-size: 1.5rem;
                margin-bottom: 0.5rem;
                color: var(--text-color);
            }
            
            .empty-history p {
                color: var(--text-secondary);
                margin-bottom: 1.5rem;
            }
            
            .join-raffle-btn {
                background: linear-gradient(90deg, #2D6EB6, #52C0BD);
                border: none;
                border-radius: 1.25rem;
                padding: 0.75rem 1.5rem;
                color: white;
                font-size: 1rem;
                cursor: pointer;
                transition: all 0.3s ease;
                box-shadow: 0 0.25rem 0.5rem rgba(0, 0, 0, 0.3);
            }
            
            .join-raffle-btn:hover {
                transform: translateY(-3px);
                box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.4);
            }
            
            .empty-history-section {
                text-align: center;
                padding: 1.5rem;
                background: rgba(0, 0, 0, 0.2);
                border-radius: var(--item-border-radius);
                color: var(--text-secondary);
            }
            
            /* –°—Ç–∏–ª—ñ –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞ –∑ –¥–µ—Ç–∞–ª—è–º–∏ —Ä–æ–∑—ñ–≥—Ä–∞—à—É */
            .raffle-details-info {
                background: rgba(0, 0, 0, 0.2);
                border-radius: 0.75rem;
                padding: 1rem;
                margin-bottom: 1.5rem;
            }
            
            .detail-row {
                display: flex;
                margin-bottom: 0.75rem;
            }
            
            .detail-row:last-child {
                margin-bottom: 0;
            }
            
            .detail-label {
                width: 40%;
                font-size: 0.875rem;
                color: var(--text-secondary);
            }
            
            .detail-value {
                width: 60%;
                font-size: 0.875rem;
                color: var(--text-color);
                font-weight: bold;
            }
            
            .prize-value {
                color: var(--premium-color);
            }
            
            .win-status {
                color: var(--premium-color);
            }
            
            .participated-status {
                color: var(--text-secondary);
            }
            
            .winners-container {
                margin-bottom: 1.5rem;
            }
            
            .winners-container h3 {
                font-size: 1.125rem;
                margin-bottom: 1rem;
                color: var(--text-color);
            }
            
            .winners-list {
                max-height: 280px;
                overflow-y: auto;
                padding-right: 0.5rem;
            }
            
            .winner-item {
                display: flex;
                align-items: center;
                background: rgba(0, 0, 0, 0.2);
                border-radius: 0.5rem;
                padding: 0.75rem;
                margin-bottom: 0.5rem;
            }
            
            .winner-item.current-user {
                background: rgba(0, 201, 167, 0.2);
                border: 1px solid rgba(0, 201, 167, 0.3);
            }
            
            .winner-place {
                width: 2rem;
                height: 2rem;
                min-width: 2rem;
                border-radius: 50%;
                display: flex;
                justify-content: center;
                align-items: center;
                margin-right: 0.75rem;
                font-weight: bold;
                color: white;
            }
            
            .winner-info {
                flex: 1;
            }
            
            .winner-name {
                font-weight: bold;
                color: var(--text-color);
                margin-bottom: 0.25rem;
            }
            
            .current-user .winner-name {
                color: var(--premium-color);
            }
            
            .winner-id {
                font-size: 0.75rem;
                color: var(--text-secondary);
            }
            
            .winner-prize {
                font-weight: bold;
                color: var(--premium-color);
                white-space: nowrap;
                margin-left: 0.5rem;
            }
            
            .no-winners {
                text-align: center;
                padding: 1.5rem;
                background: rgba(0, 0, 0, 0.1);
                border-radius: 0.5rem;
                color: var(--text-secondary);
            }
            
            /* –°—Ç–∏–ª—ñ –¥–ª—è –ª–æ–∞–¥–µ—Ä–∞ */
            .history-loader {
                display: flex;
                flex-direction: column;
                align-items: center;
                justify-content: center;
                padding: 2rem;
            }
            
            .loader-spinner {
                width: 3rem;
                height: 3rem;
                border: 0.25rem solid rgba(0, 201, 167, 0.3);
                border-top: 0.25rem solid var(--secondary-color);
                border-radius: 50%;
                animation: spinner 1s linear infinite;
                margin-bottom: 1rem;
            }
            
            .loader-text {
                color: var(--text-secondary);
            }
            
            @keyframes spinner {
                0% { transform: rotate(0deg); }
                100% { transform: rotate(360deg); }
            }
            
            /* –ú–µ–¥—ñ–∞-–∑–∞–ø–∏—Ç–∏ –¥–ª—è –∞–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—ñ */
            @media (max-width: 768px) {
                .history-cards {
                    grid-template-columns: 1fr;
                }
                
                .history-stats {
                    flex-direction: row;
                    flex-wrap: wrap;
                }
                
                .stats-item {
                    flex-basis: 33%;
                    margin-bottom: 0.5rem;
                }
            }
            
            @media (max-width: 480px) {
                .history-card-header {
                    flex-direction: column;
                }
                
                .history-card-date {
                    margin-top: 0.25rem;
                }
                
                .detail-row {
                    flex-direction: column;
                }
                
                .detail-label, .detail-value {
                    width: 100%;
                }
                
                .detail-label {
                    margin-bottom: 0.25rem;
                }
                
                .winner-item {
                    flex-wrap: wrap;
                }
                
                .winner-prize {
                    width: 100%;
                    margin-left: 2.75rem;
                    margin-top: 0.5rem;
                }
            }
        `;

        document.head.appendChild(styleElement);
    }

    // ======== –Ü–ù–Ü–¶–Ü–ê–õ–Ü–ó–ê–¶–Ü–Ø ========

    /**
     * –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –º–æ–¥—É–ª—è —ñ—Å—Ç–æ—Ä—ñ—ó —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
     */
    function init() {
        console.log("üéÆ Raffle History: –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è...");

        // –î–æ–¥–∞—î–º–æ —Å—Ç–∏–ª—ñ
        addHistoryStyles();

        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —î –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —ñ—Å—Ç–æ—Ä—ñ—ó
        const historyContainer = document.getElementById('history-container');
        if (historyContainer) {
            // –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –≤—ñ–¥–æ–±—Ä–∞–∂–∞—î–º–æ —ñ—Å—Ç–æ—Ä—ñ—é
            displayHistory('history-container');
        }

        console.log("‚úÖ Raffle History: –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—é –∑–∞–≤–µ—Ä—à–µ–Ω–æ");
    }

    // –ï–∫—Å–ø–æ—Ä—Ç—É—î–º–æ –ø—É–±–ª—ñ—á–Ω–∏–π API
    window.RaffleHistory = {
        init,
        displayHistory,
        getRaffleHistory,
        showRaffleDetailsModal
    };

    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ –º–æ–¥—É–ª—å –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ –¥–æ–∫—É–º–µ–Ω—Ç–∞
    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', init);
    } else {
        init();
    }
})();