/**
 * raffle_history.js - –ú–æ–¥—É–ª—å –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –¥–µ—Ç–∞–ª—å–Ω–æ—ó —ñ—Å—Ç–æ—Ä—ñ—ó —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ WINIX
 */

(function() {
    'use strict';

    console.log("üìã Raffle History: –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –º–æ–¥—É–ª—è —ñ—Å—Ç–æ—Ä—ñ—ó —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤");

    // ======== –ü–†–ò–í–ê–¢–ù–Ü –ó–ú–Ü–ù–ù–Ü ========
    let _isLoading = false;
    let _historyData = [];
    let _filters = {
        type: 'all', // 'all', 'daily', 'main'
        status: 'all', // 'all', 'won', 'participated'
        period: 'all' // 'all', 'week', 'month', 'year'
    };

    // ======== –§–£–ù–ö–¶–Ü–á –î–õ–Ø –†–û–ë–û–¢–ò –ó API ========

    /**
     * –û—Ç—Ä–∏–º–∞–Ω–Ω—è —ñ—Å—Ç–æ—Ä—ñ—ó —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
     * @param {Object} filters - –§—ñ–ª—å—Ç—Ä–∏ –¥–ª—è —ñ—Å—Ç–æ—Ä—ñ—ó
     */
    async function getRaffleHistory(filters = {}) {
        try {
            if (_isLoading) {
                console.log("‚è≥ Raffle History: –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –≤–∂–µ –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è");
                return _historyData;
            }

            _isLoading = true;
            showHistoryLoader();

            // –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ –∑ API
            const userId = window.WinixAPI.getUserId();
            if (!userId) {
                throw new Error('ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
            }

            // –§–æ—Ä–º—É—î–º–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ –∑–∞–ø–∏—Ç—É
            let queryParams = '';
            if (filters.type && filters.type !== 'all') {
                queryParams += `&type=${filters.type}`;
            }
            if (filters.status && filters.status !== 'all') {
                queryParams += `&status=${filters.status}`;
            }
            if (filters.period && filters.period !== 'all') {
                queryParams += `&period=${filters.period}`;
            }

            // –î–æ–¥–∞—î–º–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ –¥–æ URL, —è–∫—â–æ –≤–æ–Ω–∏ —î
            const url = queryParams
                ? `/api/user/${userId}/raffles-history?${queryParams.substring(1)}`
                : `/api/user/${userId}/raffles-history`;

            const response = await window.WinixAPI.apiRequest(url, 'GET');

            hideHistoryLoader();
            _isLoading = false;

            if (response && response.status === 'success') {
                // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —â–æ –æ—Ç—Ä–∏–º–∞–Ω—ñ –¥–∞–Ω—ñ - —Ü–µ –º–∞—Å–∏–≤
                if (!Array.isArray(response.data)) {
                    console.warn("–û—Ç—Ä–∏–º–∞–Ω–æ –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω—ñ –¥–∞–Ω—ñ —ñ—Å—Ç–æ—Ä—ñ—ó:", response.data);
                    _historyData = [];
                    return _historyData;
                }

                _historyData = response.data;
                console.log(`‚úÖ Raffle History: –û—Ç—Ä–∏–º–∞–Ω–æ ${_historyData.length} –∑–∞–ø–∏—Å—ñ–≤ —ñ—Å—Ç–æ—Ä—ñ—ó`);

                // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ø–æ—Ç–æ—á–Ω—ñ —Ñ—ñ–ª—å—Ç—Ä–∏
                _filters = { ...filters };

                return _historyData;
            } else {
                throw new Error((response && response.message) || '–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —ñ—Å—Ç–æ—Ä—ñ—ó —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤');
            }
        } catch (error) {
            console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —ñ—Å—Ç–æ—Ä—ñ—ó —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤:', error);
            hideHistoryLoader();
            _isLoading = false;
            showHistoryError('–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —ñ—Å—Ç–æ—Ä—ñ—é —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤');
            // –ì–∞—Ä–∞–Ω—Ç—É—î–º–æ, —â–æ –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ –º–∞—Å–∏–≤
            _historyData = [];
            return _historyData;
        }
    }

    /**
     * –û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–µ—Ç–∞–ª—å–Ω–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ —Ä–æ–∑—ñ–≥—Ä–∞—à –∑ —ñ—Å—Ç–æ—Ä—ñ—ó
     * @param {string} raffleId - ID —Ä–æ–∑—ñ–≥—Ä–∞—à—É
     */
    async function getRaffleHistoryDetails(raffleId) {
        try {
            if (!raffleId) {
                throw new Error('ID —Ä–æ–∑—ñ–≥—Ä–∞—à—É –Ω–µ –≤–∫–∞–∑–∞–Ω–æ');
            }

            const userId = window.WinixAPI.getUserId();
            if (!userId) {
                throw new Error('ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
            }

            showHistoryLoader();
            const response = await window.WinixAPI.apiRequest(`/api/user/${userId}/raffles-history/${raffleId}`, 'GET');
            hideHistoryLoader();

            if (response && response.status === 'success') {
                return response.data;
            } else {
                throw new Error((response && response.message) || '–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–µ—Ç–∞–ª–µ–π —Ä–æ–∑—ñ–≥—Ä–∞—à—É');
            }
        } catch (error) {
            console.error(`‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–µ—Ç–∞–ª–µ–π —Ä–æ–∑—ñ–≥—Ä–∞—à—É ${raffleId}:`, error);
            hideHistoryLoader();
            showHistoryError('–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –¥–µ—Ç–∞–ª—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—É');
            return null;
        }
    }

    // ======== –§–£–ù–ö–¶–Ü–á –î–õ–Ø –†–û–ë–û–¢–ò –ó UI ========

    /**
     * –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —ñ—Å—Ç–æ—Ä—ñ—ó —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ —É –≤–∏–±—Ä–∞–Ω–æ–º—É –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ
     * @param {string} containerId - ID –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —ñ—Å—Ç–æ—Ä—ñ—ó
     * @param {Object} filters - –§—ñ–ª—å—Ç—Ä–∏ –¥–ª—è —ñ—Å—Ç–æ—Ä—ñ—ó
     */
    async function displayHistory(containerId = 'history-container', filters = {}) {
        const container = document.getElementById(containerId);
        if (!container) {
            console.error(`–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑ ID '${containerId}' –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ`);
            return;
        }

        // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Ñ—ñ–ª—å—Ç—Ä–∏ –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º, —è–∫—â–æ –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω—ñ
        const currentFilters = {
            type: filters.type || _filters.type,
            status: filters.status || _filters.status,
            period: filters.period || _filters.period
        };

        try {
            // –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ —ñ—Å—Ç–æ—Ä—ñ—ó –∑ —Ñ—ñ–ª—å—Ç—Ä–∞–º–∏
            const history = await getRaffleHistory(currentFilters);

            // –Ø–∫—â–æ –¥–∞–Ω—ñ –≤—ñ–¥—Å—É—Ç–Ω—ñ –∞–±–æ –ø–æ—Ä–æ–∂–Ω—ñ
            if (!history || !Array.isArray(history) || history.length === 0) {
                container.innerHTML = createEmptyHistoryHTML();
                return;
            }

            // –†–æ–∑–¥—ñ–ª—è—î–º–æ —ñ—Å—Ç–æ—Ä—ñ—é –Ω–∞ –≤–∏–≥—Ä–∞—à–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ —Ç–∞ –∑–≤–∏—á–∞–π–Ω—ñ —É—á–∞—Å—Ç—ñ
            let wonRaffles = [];
            let participatedRaffles = [];

            try {
                wonRaffles = history.filter(item => item && item.status === 'won');
                participatedRaffles = history.filter(item => item && item.status !== 'won');
            } catch (error) {
                console.error("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—ó —ñ—Å—Ç–æ—Ä—ñ—ó:", error);
                container.innerHTML = createEmptyHistoryHTML('–ü–æ–º–∏–ª–∫–∞ –æ–±—Ä–æ–±–∫–∏ –¥–∞–Ω–∏—Ö. –°–ø—Ä–æ–±—É–π—Ç–µ –æ–Ω–æ–≤–∏—Ç–∏ —Å—Ç–æ—Ä—ñ–Ω–∫—É.');
                return;
            }

            // –°—Ç–≤–æ—Ä—é—î–º–æ HTML –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è
            let historyHTML = `
                <div class="history-filters">
                    <div class="filter-group">
                        <label>–¢–∏–ø:</label>
                        <select id="history-type-filter">
                            <option value="all" ${currentFilters.type === 'all' ? 'selected' : ''}>–£—Å—ñ —Ç–∏–ø–∏</option>
                            <option value="daily" ${currentFilters.type === 'daily' ? 'selected' : ''}>–©–æ–¥–µ–Ω–Ω—ñ</option>
                            <option value="main" ${currentFilters.type === 'main' ? 'selected' : ''}>–î–∂–µ–∫–ø–æ—Ç–∏</option>
                        </select>
                    </div>
                    <div class="filter-group">
                        <label>–°—Ç–∞—Ç—É—Å:</label>
                        <select id="history-status-filter">
                            <option value="all" ${currentFilters.status === 'all' ? 'selected' : ''}>–£—Å—ñ —Å—Ç–∞—Ç—É—Å–∏</option>
                            <option value="won" ${currentFilters.status === 'won' ? 'selected' : ''}>–ü–µ—Ä–µ–º–æ–≥–∏</option>
                            <option value="participated" ${currentFilters.status === 'participated' ? 'selected' : ''}>–£—á–∞—Å—Ç—å</option>
                        </select>
                    </div>
                    <div class="filter-group">
                        <label>–ü–µ—Ä—ñ–æ–¥:</label>
                        <select id="history-period-filter">
                            <option value="all" ${currentFilters.period === 'all' ? 'selected' : ''}>–í–µ—Å—å —á–∞—Å</option>
                            <option value="week" ${currentFilters.period === 'week' ? 'selected' : ''}>–¢–∏–∂–¥–µ–Ω—å</option>
                            <option value="month" ${currentFilters.period === 'month' ? 'selected' : ''}>–ú—ñ—Å—è—Ü—å</option>
                            <option value="year" ${currentFilters.period === 'year' ? 'selected' : ''}>–†—ñ–∫</option>
                        </select>
                    </div>
                </div>

                <div class="history-stats">
                    <div class="stats-item">
                        <div class="stats-value">${history.length}</div>
                        <div class="stats-label">–í—Å—å–æ–≥–æ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤</div>
                    </div>
                    <div class="stats-item">
                        <div class="stats-value">${wonRaffles.length}</div>
                        <div class="stats-label">–ü–µ—Ä–µ–º–æ–≥</div>
                    </div>
                    <div class="stats-item">
                        <div class="stats-value">${getTotalPrizeAmount(wonRaffles)}</div>
                        <div class="stats-label">WINIX –≤–∏–≥—Ä–∞–Ω–æ</div>
                    </div>
                </div>
            `;

            // –î–æ–¥–∞—î–º–æ —Å–µ–∫—Ü—ñ—é "–ú–æ—ó –ø–µ—Ä–µ–º–æ–≥–∏" —è–∫—â–æ —î –≤–∏–≥—Ä–∞—à—ñ
            if (wonRaffles.length > 0 && (currentFilters.status === 'all' || currentFilters.status === 'won')) {
                historyHTML += `
                    <div class="history-section">
                        <h3 class="section-title">–ú–æ—ó –ø–µ—Ä–µ–º–æ–≥–∏</h3>
                        <div class="history-cards">
                            ${wonRaffles.map(createWinnerCardHTML).join('')}
                        </div>
                    </div>
                `;
            }

            // –î–æ–¥–∞—î–º–æ —Å–µ–∫—Ü—ñ—é —É—á–∞—Å—Ç—ñ, —è–∫—â–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î —Ñ—ñ–ª—å—Ç—Ä—É
            if (participatedRaffles.length > 0 && (currentFilters.status === 'all' || currentFilters.status === 'participated')) {
                historyHTML += `
                    <div class="history-section">
                        <h3 class="section-title">–Ü—Å—Ç–æ—Ä—ñ—è —É—á–∞—Å—Ç—ñ</h3>
                        <div class="history-cards">
                            ${participatedRaffles.map(createHistoryCardHTML).join('')}
                        </div>
                    </div>
                `;
            }

            // –í—Å—Ç–∞–≤–ª—è—î–º–æ HTML –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
            container.innerHTML = historyHTML;

            // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π –¥–ª—è —Ñ—ñ–ª—å—Ç—Ä—ñ–≤
            document.getElementById('history-type-filter')?.addEventListener('change', function() {
                applyHistoryFilters(containerId);
            });

            document.getElementById('history-status-filter')?.addEventListener('change', function() {
                applyHistoryFilters(containerId);
            });

            document.getElementById('history-period-filter')?.addEventListener('change', function() {
                applyHistoryFilters(containerId);
            });

            // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π –¥–ª—è –∫–∞—Ä—Ç–æ–∫ —ñ—Å—Ç–æ—Ä—ñ—ó
            addHistoryCardEventListeners();
        } catch (error) {
            console.error("–ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —ñ—Å—Ç–æ—Ä—ñ—ó:", error);
            container.innerHTML = createEmptyHistoryHTML('–©–æ—Å—å –ø—ñ—à–ª–æ –Ω–µ —Ç–∞–∫. –°–ø—Ä–æ–±—É–π—Ç–µ –æ–Ω–æ–≤–∏—Ç–∏ —Å—Ç–æ—Ä—ñ–Ω–∫—É.');
        }
    }

    /**
     * –ó–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è —Ñ—ñ–ª—å—Ç—Ä—ñ–≤ —ñ—Å—Ç–æ—Ä—ñ—ó
     * @param {string} containerId - ID –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è
     */
    function applyHistoryFilters(containerId) {
        const typeFilter = document.getElementById('history-type-filter')?.value || 'all';
        const statusFilter = document.getElementById('history-status-filter')?.value || 'all';
        const periodFilter = document.getElementById('history-period-filter')?.value || 'all';

        // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∑ –Ω–æ–≤–∏–º–∏ —Ñ—ñ–ª—å—Ç—Ä–∞–º–∏
        displayHistory(containerId, {
            type: typeFilter,
            status: statusFilter,
            period: periodFilter
        });
    }

    /**
     * –°—Ç–≤–æ—Ä–∏—Ç–∏ HTML –¥–ª—è –∫–∞—Ä—Ç–∫–∏ –ø–µ—Ä–µ–º–æ–≥–∏
     * @param {Object} item - –î–∞–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
     */
    function createWinnerCardHTML(item) {
        if (!item) return '';

        try {
            const badgeHTML = getBadgeHTML(item);
            const placeHTML = getPlaceBadgeHTML(item.place);

            return `
                <div class="history-card winner-card" data-raffle-id="${item.raffle_id}">
                    ${badgeHTML}
                    ${placeHTML}
                    <div class="history-card-content">
                        <div class="history-card-header">
                            <div class="history-card-title">${item.title || '–†–æ–∑—ñ–≥—Ä–∞—à'}</div>
                            <div class="history-card-date">${item.date || '–î–∞—Ç–∞ –Ω–µ –≤–∫–∞–∑–∞–Ω–∞'}</div>
                        </div>
                        <div class="history-card-prize">${item.prize || '0 WINIX'}</div>
                        <div class="history-card-result win-result">${item.result || '–í–∏–≥—Ä–∞–Ω–æ'}</div>
                        <div class="history-card-entry">–í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–æ –∂–µ—Ç–æ–Ω—ñ–≤: ${item.entry_count || 0}</div>
                        <div class="view-details">–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –¥–ª—è –¥–µ—Ç–∞–ª–µ–π</div>
                    </div>
                </div>
            `;
        } catch (error) {
            console.error("–ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–∞—Ä—Ç–∫–∏ –ø–µ—Ä–µ–º–æ–∂—Ü—è:", error);
            return '';
        }
    }

    /**
     * –°—Ç–≤–æ—Ä–∏—Ç–∏ HTML –¥–ª—è –∫–∞—Ä—Ç–∫–∏ —É—á–∞—Å—Ç—ñ –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ
     * @param {Object} item - –î–∞–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
     */
    function createHistoryCardHTML(item) {
        if (!item) return '';

        try {
            const badgeHTML = getBadgeHTML(item);

            return `
                <div class="history-card" data-raffle-id="${item.raffle_id}">
                    ${badgeHTML}
                    <div class="history-card-content">
                        <div class="history-card-header">
                            <div class="history-card-title">${item.title || '–†–æ–∑—ñ–≥—Ä–∞—à'}</div>
                            <div class="history-card-date">${item.date || '–î–∞—Ç–∞ –Ω–µ –≤–∫–∞–∑–∞–Ω–∞'}</div>
                        </div>
                        <div class="history-card-prize">${item.prize || '0 WINIX'}</div>
                        <div class="history-card-result">${item.result || '–£—á–∞—Å—Ç—å'}</div>
                        <div class="history-card-entry">–í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–æ –∂–µ—Ç–æ–Ω—ñ–≤: ${item.entry_count || 0}</div>
                        <div class="view-details">–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –¥–ª—è –¥–µ—Ç–∞–ª–µ–π</div>
                    </div>
                </div>
            `;
        } catch (error) {
            console.error("–ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–∞—Ä—Ç–∫–∏ —ñ—Å—Ç–æ—Ä—ñ—ó:", error);
            return '';
        }
    }

    /**
     * –°—Ç–≤–æ—Ä–∏—Ç–∏ HTML –¥–ª—è –ø—É—Å—Ç–æ—ó —ñ—Å—Ç–æ—Ä—ñ—ó
     * @param {string} customMessage - –û–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
     */
    function createEmptyHistoryHTML(customMessage) {
        const message = customMessage || '–í–∏ —â–µ –Ω–µ –±—Ä–∞–ª–∏ —É—á–∞—Å—Ç—ñ –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à–∞—Ö WINIX. –°–ø—Ä–æ–±—É–π—Ç–µ —Å–≤–æ—é —É–¥–∞—á—É –≤–∂–µ —Å—å–æ–≥–æ–¥–Ω—ñ!';

        return `
            <div class="empty-history">
                <div class="empty-history-icon">üéÆ</div>
                <h3>–Ü—Å—Ç–æ—Ä—ñ—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ –ø–æ—Ä–æ–∂–Ω—è</h3>
                <p>${message}</p>
                <button class="join-raffle-btn" onclick="window.location.href='raffles.html'">–ü–µ—Ä–µ–π—Ç–∏ –¥–æ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤</button>
            </div>
        `;
    }

    /**
     * –û—Ç—Ä–∏–º–∞—Ç–∏ HTML –¥–ª—è –±–µ–π–¥–∂–∞ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
     * @param {Object} item - –î–∞–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
     */
    function getBadgeHTML(item) {
        if (!item) return '';

        try {
            if (item.status === 'won') {
                return `<div class="history-card-badge winner-badge">–ü–µ—Ä–µ–º–æ–≥–∞</div>`;
            } else if (item.is_daily) {
                return `<div class="history-card-badge daily-badge">–©–æ–¥–µ–Ω–Ω–∏–π</div>`;
            } else {
                return `<div class="history-card-badge jackpot-badge">–î–∂–µ–∫–ø–æ—Ç</div>`;
            }
        } catch (error) {
            console.error("–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –±–µ–π–¥–∂–∞:", error);
            return '';
        }
    }

    /**
     * –û—Ç—Ä–∏–º–∞—Ç–∏ HTML –¥–ª—è –±–µ–π–¥–∂–∞ –º—ñ—Å—Ü—è –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ
     * @param {number} place - –ú—ñ—Å—Ü–µ –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ
     */
    function getPlaceBadgeHTML(place) {
        if (!place) return '';

        try {
            let badgeClass = '';
            if (place === 1) badgeClass = 'place-1';
            else if (place === 2) badgeClass = 'place-2';
            else if (place === 3) badgeClass = 'place-3';
            else badgeClass = 'place-other';

            return `<div class="history-place-badge ${badgeClass}">${place} –º—ñ—Å—Ü–µ</div>`;
        } catch (error) {
            console.error("–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –±–µ–π–¥–∂–∞ –º—ñ—Å—Ü—è:", error);
            return '';
        }
    }

    /**
     * –û—Ç—Ä–∏–º–∞—Ç–∏ –∑–∞–≥–∞–ª—å–Ω—É —Å—É–º—É –≤–∏–≥—Ä–∞—à—ñ–≤
     * @param {Array} wonRaffles - –ú–∞—Å–∏–≤ –≤–∏–≥—Ä–∞–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
     */
    function getTotalPrizeAmount(wonRaffles) {
        if (!wonRaffles || !Array.isArray(wonRaffles)) {
            return '0';
        }

        let total = 0;

        try {
            wonRaffles.forEach(raffle => {
                if (!raffle || !raffle.prize) return;

                // –í–∏—Ç—è–≥—É—î–º–æ —á–∏—Å–ª–æ–≤—É —Å—É–º—É –∑ —Ä—è–¥–∫–∞ –ø—Ä–∏–∑—É (—Ç—ñ–ª—å–∫–∏ –¥–ª—è WINIX)
                const match = raffle.prize.match(/(\d+(?:\.\d+)?)\s*WINIX/i);
                if (match) {
                    total += parseFloat(match[1]);
                }
            });

            return total.toLocaleString('uk-UA');
        } catch (error) {
            console.error("–ü–æ–º–∏–ª–∫–∞ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É –∑–∞–≥–∞–ª—å–Ω–æ—ó —Å—É–º–∏ –≤–∏–≥—Ä–∞—à—ñ–≤:", error);
            return '0';
        }
    }

    /**
     * –î–æ–¥–∞—Ç–∏ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π –¥–ª—è –∫–∞—Ä—Ç–æ–∫ —ñ—Å—Ç–æ—Ä—ñ—ó
     */
    function addHistoryCardEventListeners() {
        try {
            document.querySelectorAll('.history-card').forEach(card => {
                card.addEventListener('click', function() {
                    const raffleId = this.getAttribute('data-raffle-id');
                    if (!raffleId) return;

                    const historyItem = _historyData.find(item => item && item.raffle_id === raffleId);

                    if (historyItem) {
                        showRaffleHistoryDetails(historyItem);
                    } else {
                        // –Ø–∫—â–æ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ –º–∞—Å–∏–≤—ñ, —Å–ø—Ä–æ–±—É—î–º–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ –∑ API
                        getRaffleHistoryDetails(raffleId).then(details => {
                            if (details) {
                                showRaffleHistoryDetails(details);
                            } else {
                                showHistoryError('–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–µ—Ç–∞–ª—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—É');
                            }
                        }).catch(error => {
                            console.error("–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–µ—Ç–∞–ª–µ–π —Ä–æ–∑—ñ–≥—Ä–∞—à—É:", error);
                            showHistoryError('–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–µ—Ç–∞–ª–µ–π —Ä–æ–∑—ñ–≥—Ä–∞—à—É');
                        });
                    }
                });
            });
        } catch (error) {
            console.error("–ü–æ–º–∏–ª–∫–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –ø–æ–¥—ñ–π –¥–ª—è –∫–∞—Ä—Ç–æ–∫:", error);
        }
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç–∏ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ –∑ –¥–µ—Ç–∞–ª—è–º–∏ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
     */
    function showRaffleHistoryDetails(raffleData) {
        if (!raffleData) {
            showHistoryError('–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–∞–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—É');
            return;
        }

        try {
            // –í–∏–¥–∞–ª—è—î–º–æ —ñ—Å–Ω—É—é—á–µ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ, —è–∫—â–æ –≤–æ–Ω–æ —î
            const existingModal = document.getElementById('raffle-history-modal');
            if (existingModal) {
                existingModal.remove();
            }

            // –°—Ç–≤–æ—Ä—é—î–º–æ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
            const modal = document.createElement('div');
            modal.id = 'raffle-history-modal';
            modal.className = 'raffle-modal';

            // –ì–µ–Ω–µ—Ä—É—î–º–æ —Å–ø–∏—Å–æ–∫ –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤, —è–∫—â–æ –≤–æ–Ω–∏ —î
            let winnersHTML = '';
            if (raffleData.winners && Array.isArray(raffleData.winners) && raffleData.winners.length > 0) {
                winnersHTML = generateWinnersListHTML(raffleData.winners);
            } else {
                winnersHTML = '<div class="no-winners">–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤ –≤—ñ–¥—Å—É—Ç–Ω—è</div>';
            }

            // –í–∏–∑–Ω–∞—á–∞—î–º–æ —Å—Ç–∞—Ç—É—Å —ñ –∫–ª–∞—Å —Å—Ç–∞—Ç—É—Å—É
            const statusClass = raffleData.status === 'won' ? 'win-status' : 'participated-status';
            const statusText = raffleData.status === 'won' ? '–í–∏ –ø–µ—Ä–µ–º–æ–≥–ª–∏' : '–£—á–∞—Å—Ç—å –±–µ–∑ –ø–µ—Ä–µ–º–æ–≥–∏';

            // –í–∏–∑–Ω–∞—á–∞—î–º–æ —Ç–∏–ø —Ä–æ–∑—ñ–≥—Ä–∞—à—É
            const raffleType = raffleData.is_daily ? '–©–æ–¥–µ–Ω–Ω–∏–π —Ä–æ–∑—ñ–≥—Ä–∞—à' : '–ì—Ä–∞–Ω–¥ —Ä–æ–∑—ñ–≥—Ä–∞—à';

            // –§–æ—Ä–º—É—î–º–æ HTML –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞
            modal.innerHTML = `
                <div class="modal-content">
                    <div class="modal-header">
                        <h2 class="modal-title">${raffleData.title || '–î–µ—Ç–∞–ª—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—É'}</h2>
                        <span class="modal-close">√ó</span>
                    </div>
                    
                    <div class="prize-details">
                        <div class="detail-item">
                            <div class="detail-label">–î–∞—Ç–∞:</div>
                            <div class="detail-value">${raffleData.date || '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'}</div>
                        </div>
                        <div class="detail-item">
                            <div class="detail-label">–¢–∏–ø:</div>
                            <div class="detail-value">${raffleType}</div>
                        </div>
                        <div class="detail-item">
                            <div class="detail-label">–ü—Ä–∏–∑–æ–≤–∏–π —Ñ–æ–Ω–¥:</div>
                            <div class="detail-value prize-value">${raffleData.prize || '0 WINIX'}</div>
                        </div>
                        <div class="detail-item">
                            <div class="detail-label">–í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç:</div>
                            <div class="detail-value ${statusClass}">${statusText}</div>
                        </div>
                        <div class="detail-item">
                            <div class="detail-label">–í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–æ –∂–µ—Ç–æ–Ω—ñ–≤:</div>
                            <div class="detail-value">${raffleData.entry_count || 0}</div>
                        </div>
                        ${raffleData.status === 'won' ? `
                        <div class="detail-item">
                            <div class="detail-label">–í–∞—à–µ –º—ñ—Å—Ü–µ:</div>
                            <div class="detail-value winner-place-value">${raffleData.place || '-'}</div>
                        </div>
                        ` : ''}
                    </div>
                    
                    <div class="winners-container">
                        <h3>–ü–µ—Ä–µ–º–æ–∂—Ü—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—É</h3>
                        <div class="winners-list">
                            ${winnersHTML}
                        </div>
                    </div>
                    
                    <button class="join-button" id="close-history-btn">–ó–ê–ö–†–ò–¢–ò</button>
                </div>
            `;

            // –î–æ–¥–∞—î–º–æ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É
            document.body.appendChild(modal);

            // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π
            const closeButton = modal.querySelector('.modal-close');
            if (closeButton) {
                closeButton.addEventListener('click', function() {
                    modal.classList.remove('open');
                    setTimeout(() => modal.remove(), 300);
                });
            }

            const closeActionButton = modal.querySelector('#close-history-btn');
            if (closeActionButton) {
                closeActionButton.addEventListener('click', function() {
                    modal.classList.remove('open');
                    setTimeout(() => modal.remove(), 300);
                });
            }

            // –ü–æ–∫–∞–∑—É—î–º–æ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
            requestAnimationFrame(() => {
                modal.classList.add('open');
            });

            return modal;
        } catch (error) {
            console.error("–ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –¥–µ—Ç–∞–ª–µ–π —Ä–æ–∑—ñ–≥—Ä–∞—à—É:", error);
            showHistoryError('–ù–µ –≤–¥–∞–ª–æ—Å—è –≤—ñ–¥–æ–±—Ä–∞–∑–∏—Ç–∏ –¥–µ—Ç–∞–ª—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—É');
            return null;
        }
    }

    /**
     * –ì–µ–Ω–µ—Ä—É–≤–∞–Ω–Ω—è HTML –¥–ª—è —Å–ø–∏—Å–∫—É –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤
     * @param {Array} winners - –ú–∞—Å–∏–≤ –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤
     */
    function generateWinnersListHTML(winners) {
        if (!winners || !Array.isArray(winners) || winners.length === 0) {
            return '<div class="no-winners">–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤ –≤—ñ–¥—Å—É—Ç–Ω—è</div>';
        }

        try {
            // –°–æ—Ä—Ç—É—î–º–æ –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤ –∑–∞ –º—ñ—Å—Ü–µ–º
            const sortedWinners = [...winners].sort((a, b) => {
                if (!a || !b || !a.place || !b.place) return 0;
                return a.place - b.place;
            });

            return sortedWinners.map(winner => {
                if (!winner) return '';

                // –í–∏–∑–Ω–∞—á–∞—î–º–æ –∫–ª–∞—Å –¥–ª—è –º—ñ—Å—Ü—è (top-1, top-2, top-3)
                const placeClass = winner.place <= 3 ? `place-${winner.place}` : 'default-place';

                // –í–∏–∑–Ω–∞—á–∞—î–º–æ, —á–∏ —Ü–µ –ø–æ—Ç–æ—á–Ω–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á
                const currentUserClass = winner.isCurrentUser ? 'current-user' : '';

                // –§–æ—Ä–º—É—î–º–æ HTML –¥–ª—è –æ–¥–Ω–æ–≥–æ –ø–µ—Ä–µ–º–æ–∂—Ü—è
                return `
                    <div class="winner-item ${currentUserClass}" ${winner.isCurrentUser ? 'title="–¶–µ –≤–∏!"' : ''}>
                        <div class="winner-place ${placeClass}">
                            <span>${winner.place || '-'}</span>
                        </div>
                        <div class="winner-info">
                            <div class="winner-name">${winner.username || '–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á'}</div>
                            <div class="winner-id">ID: ${winner.userId || '–Ω–µ–≤—ñ–¥–æ–º–æ'}</div>
                        </div>
                        <div class="winner-prize">${winner.prize || '0 WINIX'}</div>
                    </div>
                `;
            }).join('');
        } catch (error) {
            console.error("–ü–æ–º–∏–ª–∫–∞ –≥–µ–Ω–µ—Ä—É–≤–∞–Ω–Ω—è —Å–ø–∏—Å–∫—É –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤:", error);
            return '<div class="no-winners">–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Å–ø–∏—Å–∫—É –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤</div>';
        }
    }

    /**
     * –ï–∫—Å–ø–æ—Ä—Ç —ñ—Å—Ç–æ—Ä—ñ—ó —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ —É CSV
     */
    function exportHistoryToCSV() {
        if (!_historyData || !Array.isArray(_historyData) || _historyData.length === 0) {
            showHistoryError('–ù–µ–º–∞—î –¥–∞–Ω–∏—Ö –¥–ª—è –µ–∫—Å–ø–æ—Ä—Ç—É');
            return;
        }

        try {
            // –ì–µ–Ω–µ—Ä—É—î–º–æ –∑–∞–≥–æ–ª–æ–≤–∫–∏
            const headers = [
                '–î–∞—Ç–∞',
                '–ù–∞–∑–≤–∞ —Ä–æ–∑—ñ–≥—Ä–∞—à—É',
                '–¢–∏–ø',
                '–ü—Ä–∏–∑',
                '–í–∏—Ç—Ä–∞—á–µ–Ω–æ –∂–µ—Ç–æ–Ω—ñ–≤',
                '–†–µ–∑—É–ª—å—Ç–∞—Ç',
                '–°—Ç–∞—Ç—É—Å'
            ];

            // –ì–µ–Ω–µ—Ä—É—î–º–æ —Ä—è–¥–∫–∏ –¥–∞–Ω–∏—Ö
            const rows = _historyData.map(item => {
                if (!item) return ['-', '-', '-', '-', '-', '-', '-'];

                return [
                    item.date || '-',
                    item.title || '–†–æ–∑—ñ–≥—Ä–∞—à',
                    item.is_daily ? '–©–æ–¥–µ–Ω–Ω–∏–π' : '–î–∂–µ–∫–ø–æ—Ç',
                    item.prize || '0 WINIX',
                    item.entry_count || 0,
                    item.result || '-',
                    item.status === 'won' ? '–ü–µ—Ä–µ–º–æ–≥–∞' : '–£—á–∞—Å—Ç—å'
                ];
            });

            // –û–±'—î–¥–Ω—É—î–º–æ –≤—Å–µ –≤ CSV
            const csvContent = [
                headers.join(','),
                ...rows.map(row => row.map(cell => `"${cell}"`).join(','))
            ].join('\n');

            // –°—Ç–≤–æ—Ä—é—î–º–æ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
            const encodedUri = encodeURI('data:text/csv;charset=utf-8,' + csvContent);
            const link = document.createElement('a');
            link.setAttribute('href', encodedUri);
            link.setAttribute('download', 'winix_raffle_history.csv');
            document.body.appendChild(link);

            // –ö–ª—ñ–∫–∞—î–º–æ –Ω–∞ –ø–æ—Å–∏–ª–∞–Ω–Ω—è
            link.click();

            // –í–∏–¥–∞–ª—è—î–º–æ –ø–æ—Å–∏–ª–∞–Ω–Ω—è
            document.body.removeChild(link);

            showHistorySuccess('–Ü—Å—Ç–æ—Ä—ñ—é —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ —É—Å–ø—ñ—à–Ω–æ –µ–∫—Å–ø–æ—Ä—Ç–æ–≤–∞–Ω–æ');
        } catch (error) {
            console.error('–ü–æ–º–∏–ª–∫–∞ –µ–∫—Å–ø–æ—Ä—Ç—É —ñ—Å—Ç–æ—Ä—ñ—ó:', error);
            showHistoryError('–ù–µ –≤–¥–∞–ª–æ—Å—è –µ–∫—Å–ø–æ—Ä—Ç—É–≤–∞—Ç–∏ —ñ—Å—Ç–æ—Ä—ñ—é');
        }
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç–∏ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–ª—è —ñ—Å—Ç–æ—Ä—ñ—ó
     */
    function showHistoryLoader() {
        try {
            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –≥–ª–æ–±–∞–ª—å–Ω–æ—ó —Ñ—É–Ω–∫—Ü—ñ—ó
            if (window.showLoading && typeof window.showLoading === 'function') {
                return window.showLoading('–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —ñ—Å—Ç–æ—Ä—ñ—ó...');
            }

            const container = document.getElementById('history-container');
            if (!container) return;

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –≤–∂–µ —î –ª–æ–∞–¥–µ—Ä
            let loader = container.querySelector('.history-loader');
            if (!loader) {
                loader = document.createElement('div');
                loader.className = 'history-loader';
                loader.innerHTML = `
                    <div class="loader-spinner"></div>
                    <div class="loader-text">–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —ñ—Å—Ç–æ—Ä—ñ—ó...</div>
                `;
                container.innerHTML = '';
                container.appendChild(loader);
            }
        } catch (error) {
            console.error("–ü–æ–º–∏–ª–∫–∞ –ø–æ–∫–∞–∑—É —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è:", error);
        }
    }

    /**
     * –ü—Ä–∏—Ö–æ–≤–∞—Ç–∏ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–ª—è —ñ—Å—Ç–æ—Ä—ñ—ó
     */
    function hideHistoryLoader() {
        try {
            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –≥–ª–æ–±–∞–ª—å–Ω–æ—ó —Ñ—É–Ω–∫—Ü—ñ—ó
            if (window.hideLoading && typeof window.hideLoading === 'function') {
                return window.hideLoading();
            }

            const container = document.getElementById('history-container');
            if (!container) return;

            const loader = container.querySelector('.history-loader');
            if (loader) {
                loader.remove();
            }
        } catch (error) {
            console.error("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏—Ö–æ–≤—É–≤–∞–Ω–Ω—è —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è:", error);
        }
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É
     * @param {string} message - –¢–µ–∫—Å—Ç –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
     */
    function showHistoryError(message) {
        showHistoryNotification(message, 'error');
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ —É—Å–ø—ñ—Ö
     * @param {string} message - –¢–µ–∫—Å—Ç –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
     */
    function showHistorySuccess(message) {
        showHistoryNotification(message, 'success');
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç–∏ —Å–∏—Å—Ç–µ–º–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
     * @param {string} message - –¢–µ–∫—Å—Ç –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
     * @param {string} type - –¢–∏–ø –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è (error, success, info)
     */
    function showHistoryNotification(message, type = 'info') {
        try {
            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –≥–ª–æ–±–∞–ª—å–Ω–æ—ó —Ñ—É–Ω–∫—Ü—ñ—ó
            if (window.showToast) {
                return window.showToast(message);
            }

            const notification = document.createElement('div');
            notification.className = `history-notification ${type}`;
            notification.textContent = message;

            document.body.appendChild(notification);

            // –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
            setTimeout(() => {
                notification.classList.add('show');
            }, 10);

            // –ü—Ä–∏—Ö–æ–≤—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
            setTimeout(() => {
                notification.classList.remove('show');
                setTimeout(() => {
                    if (notification.parentNode) {
                        notification.remove();
                    }
                }, 300);
            }, 5000);
        } catch (error) {
            console.error("–ü–æ–º–∏–ª–∫–∞ –ø–æ–∫–∞–∑—É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:", error);
            // –£ –≤–∏–ø–∞–¥–∫—É –ø–æ–º–∏–ª–∫–∏, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ alert —è–∫ –∑–∞–ø–∞—Å–Ω–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç
            alert(message);
        }
    }

    /**
     * –î–æ–¥–∞—Ç–∏ —Å—Ç–∏–ª—ñ –¥–ª—è —ñ—Å—Ç–æ—Ä—ñ—ó —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
     */
    function addHistoryStyles() {
        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –≤–∂–µ —î —Å—Ç–∏–ª—ñ
        if (document.getElementById('raffle-history-styles')) {
            return;
        }

        const styleElement = document.createElement('style');
        styleElement.id = 'raffle-history-styles';
        styleElement.textContent = `
            /* –°—Ç–∏–ª—ñ –¥–ª—è —ñ—Å—Ç–æ—Ä—ñ—ó —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ */
            .history-filters {
                display: flex;
                justify-content: space-between;
                margin-bottom: 1.5rem;
                background: var(--bg-item);
                border-radius: var(--item-border-radius);
                padding: 1rem;
                flex-wrap: wrap;
                gap: 0.75rem;
            }
            
            .filter-group {
                display: flex;
                align-items: center;
                gap: 0.5rem;
            }
            
            .filter-group label {
                font-size: 0.875rem;
                color: var(--text-secondary);
                white-space: nowrap;
            }
            
            .filter-group select {
                background: rgba(0, 0, 0, 0.3);
                border: 1px solid rgba(255, 255, 255, 0.1);
                border-radius: 0.5rem;
                padding: 0.375rem 0.5rem;
                color: white;
                font-size: 0.875rem;
                cursor: pointer;
            }
            
            .history-stats {
                display: flex;
                justify-content: space-between;
                margin-bottom: 1.5rem;
                background: var(--bg-card);
                border-radius: var(--card-border-radius);
                padding: 1rem;
                box-shadow: 0 0.25rem 0.5rem rgba(0, 0, 0, 0.3);
            }
            
            .stats-item {
                text-align: center;
                flex: 1;
            }
            
            .stats-value {
                font-size: 1.5rem;
                font-weight: bold;
                color: var(--text-color);
                margin-bottom: 0.25rem;
            }
            
            .stats-label {
                font-size: 0.75rem;
                color: var(--text-secondary);
            }
            
            .history-section {
                margin-bottom: 2rem;
            }
            
            .section-title {
                font-size: 1.25rem;
                font-weight: bold;
                margin-bottom: 1rem;
                color: var(--text-color);
                text-shadow: 0 0 5px rgba(0, 201, 167, 0.3);
            }
            
            .history-cards {
                display: grid;
                grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
                gap: 1rem;
            }
            
            .history-card {
                background: var(--bg-item);
                border-radius: var(--item-border-radius);
                overflow: hidden;
                position: relative;
                box-shadow: 0 0.25rem 0.5rem rgba(0, 0, 0, 0.3);
                transition: transform 0.3s ease, box-shadow 0.3s ease;
                cursor: pointer;
                border: 1px solid rgba(78, 181, 247, 0.1);
            }
            
            .history-card:hover {
                transform: translateY(-5px);
                box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.4);
                border-color: rgba(78, 181, 247, 0.3);
            }
            
            .history-card-badge {
                position: absolute;
                top: 0.5rem;
                right: 0.5rem;
                padding: 0.25rem 0.5rem;
                border-radius: 0.25rem;
                font-size: 0.75rem;
                font-weight: bold;
                z-index: 1;
            }
            
            .winner-badge {
                background: rgba(255, 215, 0, 0.2);
                color: rgb(255, 215, 0);
            }
            
            .daily-badge {
                background: rgba(33, 150, 243, 0.2);
                color: rgba(33, 150, 243, 1);
            }
            
            .jackpot-badge {
                background: rgba(156, 39, 176, 0.2);
                color: rgba(156, 39, 176, 1);
            }
            
            .history-place-badge {
                position: absolute;
                top: 0.5rem;
                left: 0.5rem;
                padding: 0.25rem 0.5rem;
                border-radius: 0.25rem;
                font-size: 0.75rem;
                font-weight: bold;
                z-index: 1;
            }
            
            .place-1 {
                background: linear-gradient(145deg, rgba(255, 215, 0, 0.2), rgba(255, 165, 0, 0.2));
                color: rgb(255, 215, 0);
                border: 1px solid rgba(255, 215, 0, 0.3);
            }
            
            .place-2 {
                background: linear-gradient(145deg, rgba(192, 192, 192, 0.2), rgba(169, 169, 169, 0.2));
                color: rgb(192, 192, 192);
                border: 1px solid rgba(192, 192, 192, 0.3);
            }
            
            .place-3 {
                background: linear-gradient(145deg, rgba(205, 127, 50, 0.2), rgba(160, 82, 45, 0.2));
                color: rgb(205, 127, 50);
                border: 1px solid rgba(205, 127, 50, 0.3);
            }
            
            .place-other {
                background: rgba(0, 0, 0, 0.2);
                color: rgba(255, 255, 255, 0.7);
                border: 1px solid rgba(255, 255, 255, 0.1);
            }
            
            .winner-card {
                background: linear-gradient(145deg, rgba(26, 26, 46, 0.9), rgba(15, 52, 96, 0.9));
                border: 1px solid rgba(255, 215, 0, 0.3);
            }
            
            .history-card-content {
                padding: 1rem;
            }
            
            .history-card-header {
                display: flex;
                justify-content: space-between;
                align-items: flex-start;
                margin-bottom: 0.5rem;
            }
            
            .history-card-title {
                font-weight: bold;
                color: var(--text-color);
                margin-right: 0.5rem;
            }
            
            .history-card-date {
                font-size: 0.75rem;
                color: var(--text-secondary);
                white-space: nowrap;
            }
            
            .history-card-prize {
                font-size: 1.25rem;
                font-weight: bold;
                color: var(--premium-color);
                margin-bottom: 0.5rem;
            }
            
            .history-card-result {
                font-size: 0.875rem;
                color: var(--text-secondary);
                margin-bottom: 0.5rem;
            }
            
            .win-result {
                color: var(--premium-color);
                font-weight: bold;
            }
            
            .history-card-entry {
                font-size: 0.75rem;
                color: var(--text-secondary);
                margin-bottom: 0.5rem;
            }
            
            .view-details {
                font-size: 0.75rem;
                color: rgba(0, 201, 167, 0.7);
                text-align: center;
                opacity: 0;
                transition: opacity 0.3s ease;
            }
            
            .history-card:hover .view-details {
                opacity: 1;
            }
            
            .empty-history {
                text-align: center;
                padding: 2rem 1rem;
                background: var(--bg-card);
                border-radius: var(--card-border-radius);
                box-shadow: 0 0.25rem 0.5rem rgba(0, 0, 0, 0.3);
            }
            
            .empty-history-icon {
                font-size: 3rem;
                margin-bottom: 1rem;
                animation: pulse 2s infinite ease-in-out;
            }
            
            @keyframes pulse {
                0% { transform: scale(1); opacity: 0.7; }
                50% { transform: scale(1.1); opacity: 1; }
                100% { transform: scale(1); opacity: 0.7; }
            }
            
            .empty-history h3 {
                font-size: 1.5rem;
                margin-bottom: 0.5rem;
                color: var(--text-color);
            }
            
            .empty-history p {
                color: var(--text-secondary);
                margin-bottom: 1.5rem;
            }
            
            .join-raffle-btn {
                background: linear-gradient(90deg, #2D6EB6, #52C0BD);
                border: none;
                border-radius: 1.25rem;
                padding: 0.75rem 1.5rem;
                color: white;
                font-size: 1rem;
                cursor: pointer;
                transition: all 0.3s ease;
                box-shadow: 0 0.25rem 0.5rem rgba(0, 0, 0, 0.3);
            }
            
            .join-raffle-btn:hover {
                transform: translateY(-3px);
                box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.4);
            }
            
            .empty-history-section {
                text-align: center;
                padding: 1.5rem;
                background: rgba(0, 0, 0, 0.2);
                border-radius: var(--item-border-radius);
                color: var(--text-secondary);
            }
            
            /* –°—Ç–∏–ª—ñ –¥–ª—è –¥–µ—Ç–∞–ª–µ–π —Ä–æ–∑—ñ–≥—Ä–∞—à—É */
            .raffle-details-info {
                background: rgba(0, 0, 0, 0.2);
                border-radius: 0.75rem;
                padding: 1rem;
                margin-bottom: 1.5rem;
            }
            
            .detail-row {
                display: flex;
                margin-bottom: 0.75rem;
            }
            
            .detail-row:last-child {
                margin-bottom: 0;
            }
            
            .detail-label {
                width: 40%;
                font-size: 0.875rem;
                color: var(--text-secondary);
            }
            
            .detail-value {
                width: 60%;
                font-size: 0.875rem;
                color: var(--text-color);
                font-weight: bold;
            }
            
            .prize-value {
                color: var(--premium-color);
            }
            
            .win-status {
                color: var(--premium-color);
            }
            
            .participated-status {
                color: var(--text-secondary);
            }
            
            .winners-container {
                margin-bottom: 1.5rem;
            }
            
            .winners-container h3 {
                font-size: 1.125rem;
                margin-bottom: 1rem;
                color: var(--text-color);
            }
            
            .winners-list {
                max-height: 280px;
                overflow-y: auto;
                padding-right: 0.5rem;
            }
            
            .winner-item {
                display: flex;
                align-items: center;
                background: rgba(0, 0, 0, 0.2);
                border-radius: 0.5rem;
                padding: 0.75rem;
                margin-bottom: 0.5rem;
                gap: 0.75rem;
            }
            
            .winner-item.current-user {
                background: rgba(0, 201, 167, 0.2);
                border: 1px solid rgba(0, 201, 167, 0.3);
            }
            
            .winner-place {
                width: 2rem;
                height: 2rem;
                min-width: 2rem;
                border-radius: 50%;
                display: flex;
                justify-content: center;
                align-items: center;
                margin-right: 0.75rem;
                font-weight: bold;
                color: white;
                box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);
            }
            
            .winner-place.place-1 {
                background: linear-gradient(145deg, #FFD700, #FFA500);
                box-shadow: 0 0 8px rgba(255, 215, 0, 0.5);
            }
            
            .winner-place.place-2 {
                background: linear-gradient(145deg, #C0C0C0, #A9A9A9);
                box-shadow: 0 0 8px rgba(192, 192, 192, 0.5);
            }
            
            .winner-place.place-3 {
                background: linear-gradient(145deg, #CD7F32, #A0522D);
                box-shadow: 0 0 8px rgba(205, 127, 50, 0.5);
            }
            
            .winner-place.default-place {
                background: rgba(0, 0, 0, 0.3);
            }
            
            .winner-info {
                flex: 1;
            }
            
            .winner-name {
                font-weight: bold;
                color: var(--text-color);
                margin-bottom: 0.25rem;
            }
            
            .current-user .winner-name {
                color: var(--premium-color);
            }
            
            .winner-id {
                font-size: 0.75rem;
                color: var(--text-secondary);
            }
            
            .winner-prize {
                font-weight: bold;
                color: var(--premium-color);
                white-space: nowrap;
                margin-left: 0.5rem;
            }
            
            .no-winners {
                text-align: center;
                padding: 1.5rem;
                background: rgba(0, 0, 0, 0.1);
                border-radius: 0.5rem;
                color: var(--text-secondary);
            }
            
            .winner-place-value {
                color: var(--premium-color);
                font-size: 1rem;
            }
            
            /* –°—Ç–∏–ª—ñ –¥–ª—è –ª–æ–∞–¥–µ—Ä–∞ */
            .history-loader {
                display: flex;
                flex-direction: column;
                align-items: center;
                justify-content: center;
                padding: 2rem;
            }
            
            .loader-spinner {
                width: 3rem;
                height: 3rem;
                border: 0.25rem solid rgba(0, 201, 167, 0.3);
                border-top: 0.25rem solid var(--secondary-color);
                border-radius: 50%;
                animation: spinner 1s linear infinite;
                margin-bottom: 1rem;
            }
            
            .loader-text {
                color: var(--text-secondary);
            }
            
            @keyframes spinner {
                0% { transform: rotate(0deg); }
                100% { transform: rotate(360deg); }
            }
            
            /* –°—Ç–∏–ª—ñ –¥–ª—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å */
            .history-notification {
                position: fixed;
                top: 1.5rem;
                right: 1.5rem;
                padding: 1rem 1.5rem;
                border-radius: 0.5rem;
                background: rgba(30, 39, 70, 0.9);
                color: white;
                font-size: 0.875rem;
                z-index: 10000;
                transform: translateX(calc(100% + 1.5rem));
                transition: transform 0.3s ease;
                box-shadow: 0 0.25rem 1rem rgba(0, 0, 0, 0.5);
                max-width: 300px;
            }
            
            .history-notification.show {
                transform: translateX(0);
            }
            
            .history-notification.error {
                background: rgba(244, 67, 54, 0.9);
                border-left: 0.25rem solid rgb(244, 67, 54);
            }
            
            .history-notification.success {
                background: rgba(76, 175, 80, 0.9);
                border-left: 0.25rem solid rgb(76, 175, 80);
            }
            
            .history-notification.info {
                background: rgba(33, 150, 243, 0.9);
                border-left: 0.25rem solid rgb(33, 150, 243);
            }
            
            /* –ö–Ω–æ–ø–∫–∞ –µ–∫—Å–ø–æ—Ä—Ç—É */
            .export-history-btn {
                background: var(--secondary-gradient);
                border: none;
                border-radius: 0.5rem;
                padding: 0.5rem 1rem;
                color: white;
                font-size: 0.875rem;
                cursor: pointer;
                transition: all 0.3s ease;
                display: flex;
                align-items: center;
                gap: 0.5rem;
                margin-left: auto;
                margin-bottom: 1rem;
            }
            
            .export-history-btn:hover {
                transform: translateY(-2px);
                box-shadow: 0 0.25rem 0.5rem rgba(0, 0, 0, 0.3);
            }
            
            /* –ú–µ–¥—ñ–∞-–∑–∞–ø–∏—Ç–∏ –¥–ª—è –∞–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—ñ */
            @media (max-width: 768px) {
                .history-cards {
                    grid-template-columns: 1fr;
                }
                
                .history-stats {
                    flex-direction: row;
                    flex-wrap: wrap;
                }
                
                .stats-item {
                    flex-basis: 33%;
                    margin-bottom: 0.5rem;
                }
                
                .history-filters {
                    flex-direction: column;
                    gap: 0.75rem;
                }
                
                .filter-group {
                    width: 100%;
                    justify-content: space-between;
                }
            }
            
            @media (max-width: 480px) {
                .history-card-header {
                    flex-direction: column;
                }
                
                .history-card-date {
                    margin-top: 0.25rem;
                }
                
                .detail-row {
                    flex-direction: column;
                }
                
                .detail-label, .detail-value {
                    width: 100%;
                }
                
                .detail-label {
                    margin-bottom: 0.25rem;
                }
                
                .winner-item {
                    flex-wrap: wrap;
                }
                
                .winner-prize {
                    width: 100%;
                    margin-left: 2.75rem;
                    margin-top: 0.5rem;
                }
            }
        `;

        document.head.appendChild(styleElement);
    }

    // ======== –ü–£–ë–õ–Ü–ß–ù–Ü –ú–ï–¢–û–î–ò ========

    /**
     * –ï–∫—Å–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü—ñ–π –¥–ª—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è
     */
    const publicAPI = {
        /**
         * –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –º–æ–¥—É–ª—è —ñ—Å—Ç–æ—Ä—ñ—ó —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
         */
        init() {
            console.log("üìã Raffle History: –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è...");

            try {
                // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –≥–æ—Ç–æ–≤–Ω—ñ—Å—Ç—å DOM
                if (document.readyState !== 'complete' && document.readyState !== 'interactive') {
                    console.log("DOM —â–µ –Ω–µ –≥–æ—Ç–æ–≤–∏–π, –≤—ñ–¥–∫–ª–∞–¥–∞—î–º–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—é");
                    document.addEventListener('DOMContentLoaded', publicAPI.init);
                    return;
                }

                // –î–æ–¥–∞—î–º–æ —Å—Ç–∏–ª—ñ
                addHistoryStyles();

                // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —î –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —ñ—Å—Ç–æ—Ä—ñ—ó
                const historyContainer = document.getElementById('history-container');
                if (historyContainer) {
                    // –î–æ–¥–∞—î–º–æ –∫–Ω–æ–ø–∫—É –µ–∫—Å–ø–æ—Ä—Ç—É
                    const exportButton = document.createElement('button');
                    exportButton.className = 'export-history-btn';
                    exportButton.innerHTML = '<span>üìä</span> –ï–∫—Å–ø–æ—Ä—Ç —ñ—Å—Ç–æ—Ä—ñ—ó';
                    exportButton.addEventListener('click', exportHistoryToCSV);

                    // –î–æ–¥–∞—î–º–æ –∫–Ω–æ–ø–∫—É –ø–µ—Ä–µ–¥ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–º
                    historyContainer.parentNode.insertBefore(exportButton, historyContainer);

                    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –≤—ñ–¥–æ–±—Ä–∞–∂–∞—î–º–æ —ñ—Å—Ç–æ—Ä—ñ—é
                    displayHistory('history-container');
                }

                console.log("‚úÖ Raffle History: –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—é –∑–∞–≤–µ—Ä—à–µ–Ω–æ");
            } catch (error) {
                console.error("–ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó –º–æ–¥—É–ª—è —ñ—Å—Ç–æ—Ä—ñ—ó —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤:", error);
            }
        },

        /**
         * –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —ñ—Å—Ç–æ—Ä—ñ—ó —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
         * @param {string} containerId - ID –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —ñ—Å—Ç–æ—Ä—ñ—ó
         * @param {Object} filters - –§—ñ–ª—å—Ç—Ä–∏ –¥–ª—è —ñ—Å—Ç–æ—Ä—ñ—ó
         */
        displayHistory,

        /**
         * –û—Ç—Ä–∏–º–∞–Ω–Ω—è —ñ—Å—Ç–æ—Ä—ñ—ó —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
         * @param {Object} filters - –§—ñ–ª—å—Ç—Ä–∏ –¥–ª—è —ñ—Å—Ç–æ—Ä—ñ—ó
         */
        getRaffleHistory,

        /**
         * –û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–µ—Ç–∞–ª—å–Ω–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ —Ä–æ–∑—ñ–≥—Ä–∞—à –∑ —ñ—Å—Ç–æ—Ä—ñ—ó
         * @param {string} raffleId - ID —Ä–æ–∑—ñ–≥—Ä–∞—à—É
         */
        getRaffleHistoryDetails,

        /**
         * –ü–æ–∫–∞–∑–∞—Ç–∏ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ –∑ –¥–µ—Ç–∞–ª—è–º–∏ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
         * @param {string} raffleId - ID —Ä–æ–∑—ñ–≥—Ä–∞—à—É
         */
        showRaffleHistoryDetails,

        /**
         * –ï–∫—Å–ø–æ—Ä—Ç —ñ—Å—Ç–æ—Ä—ñ—ó —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ —É CSV
         */
        exportHistoryToCSV
    };

    // –ï–∫—Å–ø–æ—Ä—Ç—É—î–º–æ –ø—É–±–ª—ñ—á–Ω–∏–π API
    window.RaffleHistory = publicAPI;

    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ –º–æ–¥—É–ª—å –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ –¥–æ–∫—É–º–µ–Ω—Ç–∞
    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', publicAPI.init);
    } else {
        publicAPI.init();
    }

    return publicAPI;
})();