/**
 * winix-id-monitor.js - –ú–æ–¥—É–ª—å –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –ø—Ä–æ–±–ª–µ–º –∑ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
 * –î–æ–¥–∞–π—Ç–µ —Ü–µ–π —Å–∫—Ä–∏–ø—Ç –Ω–∞ –≤—Å—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –¥–æ–¥–∞—Ç–∫—É –¥–ª—è –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ —ñ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è
 * –ø—Ä–æ–±–ª–µ–º –∑ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.
 */

(function() {
    // –û–±'—î–∫—Ç –¥–ª—è –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    const WinixIdMonitor = {
        // –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
        settings: {
            debug: false,         // –í–∏–≤–æ–¥–∏—Ç–∏ –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏—á–Ω—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
            autoFix: true,        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –≤–∏–ø—Ä–∞–≤–ª—è—Ç–∏ –ø—Ä–æ–±–ª–µ–º–∏
            checkInterval: 10000, // –Ü–Ω—Ç–µ—Ä–≤–∞–ª –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ ID (–º—Å)
        },

        // –Ü—Å—Ç–æ—Ä—ñ—è –∑–º—ñ–Ω ID
        idHistory: [],

        // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –º–æ–¥—É–ª—è
        init: function() {
            if (this.settings.debug) {
                console.log("üîç ID Monitor: –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –º–æ–¥—É–ª—è –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É ID");
            }

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –ø–æ—Ç–æ—á–Ω–∏–π ID
            this.checkCurrentId();

            // –ù–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥ localStorage
            this.monitorLocalStorage();

            // –ù–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ —Ä–µ–≥—É–ª—è—Ä–Ω—É –ø–µ—Ä–µ–≤—ñ—Ä–∫—É ID
            this.setupPeriodicCheck();

            // –ï–∫—Å–ø–æ—Ä—Ç—É—î–º–æ –ø—É–±–ª—ñ—á–Ω–∏–π API
            window.WinixIdMonitor = {
                checkId: this.checkCurrentId.bind(this),
                fixId: this.fixInvalidId.bind(this),
                getValidId: this.getValidUserId.bind(this)
            };

            return true;
        },

        // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø–æ—Ç–æ—á–Ω–æ–≥–æ ID
        checkCurrentId: function() {
            const telegramId = localStorage.getItem('telegram_user_id');
            const winixId = localStorage.getItem('winix_user_id');
            const userId = localStorage.getItem('userId');

            if (this.settings.debug) {
                console.log("üîç ID Monitor: –ü–æ—Ç–æ—á–Ω—ñ ID:", {
                    telegramId: telegramId,
                    winixId: winixId,
                    userId: userId
                });
            }

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –≤–∞–ª—ñ–¥–Ω—ñ—Å—Ç—å ID —É localStorage
            let foundInvalid = false;

            if (telegramId && !this.isValidId(telegramId)) {
                foundInvalid = true;
                this.logInvalidId('telegram_user_id', telegramId);
            }

            if (winixId && !this.isValidId(winixId)) {
                foundInvalid = true;
                this.logInvalidId('winix_user_id', winixId);
            }

            if (userId && !this.isValidId(userId)) {
                foundInvalid = true;
                this.logInvalidId('userId', userId);
            }

            // –Ø–∫—â–æ –∑–Ω–∞–π–¥–µ–Ω–æ –Ω–µ–≤–∞–ª—ñ–¥–Ω—ñ ID —ñ –≤–∫–ª—é—á–µ–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è
            if (foundInvalid && this.settings.autoFix) {
                this.fixInvalidId();
            }

            return !foundInvalid;
        },

        // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –≤–∞–ª—ñ–¥–Ω–æ—Å—Ç—ñ ID
        isValidId: function(id) {
            return id &&
                   id !== 'undefined' &&
                   id !== 'null' &&
                   id !== undefined &&
                   id !== null &&
                   id.toString().trim() !== '';
        },

        // –õ–æ–≥—É–≤–∞–Ω–Ω—è –Ω–µ–≤–∞–ª—ñ–¥–Ω–æ–≥–æ ID
        logInvalidId: function(key, value) {
            console.warn(`‚ö†Ô∏è ID Monitor: –í–∏—è–≤–ª–µ–Ω–æ –Ω–µ–≤–∞–ª—ñ–¥–Ω–∏–π ID –≤ ${key}: "${value}"`);

            this.idHistory.push({
                time: new Date().toISOString(),
                type: 'invalid_id',
                key: key,
                value: value,
                stack: new Error().stack,
                url: window.location.href
            });
        },

        // –í–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –Ω–µ–≤–∞–ª—ñ–¥–Ω–æ–≥–æ ID
        fixInvalidId: function() {
            console.log("üîß ID Monitor: –°–ø—Ä–æ–±–∞ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –Ω–µ–≤–∞–ª—ñ–¥–Ω–æ–≥–æ ID");

            // –í–∏–¥–∞–ª—è—î–º–æ –Ω–µ–≤–∞–ª—ñ–¥–Ω—ñ ID –∑ localStorage
            const keys = ['telegram_user_id', 'winix_user_id', 'userId'];

            keys.forEach(key => {
                const value = localStorage.getItem(key);
                if (value && !this.isValidId(value)) {
                    console.log(`üîß ID Monitor: –í–∏–¥–∞–ª–µ–Ω–Ω—è –Ω–µ–≤–∞–ª—ñ–¥–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–Ω—è –∑ ${key}: "${value}"`);
                    localStorage.removeItem(key);
                }
            });

            // –û—Ç—Ä–∏–º—É—î–º–æ –≤–∞–ª—ñ–¥–Ω–∏–π ID –∑ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –¥–∂–µ—Ä–µ–ª
            const validId = this.getValidUserId();

            if (validId) {
                console.log(`‚úÖ ID Monitor: –ó–Ω–∞–π–¥–µ–Ω–æ –≤–∞–ª—ñ–¥–Ω–∏–π ID: ${validId}`);

                // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –≤ —É—Å—ñ –ø–æ—Ç—Ä—ñ–±–Ω—ñ –∫–ª—é—á—ñ localStorage
                localStorage.setItem('telegram_user_id', validId);

                // –û–Ω–æ–≤–ª—é—î–º–æ ID –≤ DOM –µ–ª–µ–º–µ–Ω—Ç–∞—Ö
                this.updateDomElements(validId);

                // –ó–∞–ø–∏—Å—É—î–º–æ –≤ —ñ—Å—Ç–æ—Ä—ñ—é
                this.idHistory.push({
                    time: new Date().toISOString(),
                    type: 'fix_id',
                    value: validId,
                    url: window.location.href
                });

                return true;
            } else {
                console.error("‚ùå ID Monitor: –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –≤–∞–ª—ñ–¥–Ω–∏–π ID");
                return false;
            }
        },

        // –û—Ç—Ä–∏–º–∞–Ω–Ω—è –≤–∞–ª—ñ–¥–Ω–æ–≥–æ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ —É—Å—ñ—Ö –º–æ–∂–ª–∏–≤–∏—Ö –¥–∂–µ—Ä–µ–ª
        getValidUserId: function() {
            // 1. –°–ø—Ä–æ–±—É—î–º–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ –∑ API –º–æ–¥—É–ª—è
            if (window.WinixAPI && typeof window.WinixAPI.getUserId === 'function') {
                const apiId = window.WinixAPI.getUserId();
                if (this.isValidId(apiId)) return apiId;
            }

            // 2. –°–ø—Ä–æ–±—É—î–º–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ –∑ Telegram WebApp
            if (window.Telegram?.WebApp?.initDataUnsafe?.user) {
                const tgUserId = window.Telegram.WebApp.initDataUnsafe.user.id;
                if (this.isValidId(tgUserId)) return tgUserId.toString();
            }

            // 3. –°–ø—Ä–æ–±—É—î–º–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ –∑ DOM –µ–ª–µ–º–µ–Ω—Ç—ñ–≤
            const userIdElements = document.querySelectorAll('#user-id, #user-id-display');
            for (const element of userIdElements) {
                if (element && this.isValidId(element.textContent)) {
                    return element.textContent.trim();
                }
            }

            // 4. –°–ø—Ä–æ–±—É—î–º–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ –∑ localStorage (–≤–∞–ª—ñ–¥–Ω—ñ –∑–Ω–∞—á–µ–Ω–Ω—è)
            const keys = ['telegram_user_id', 'winix_user_id', 'userId'];
            for (const key of keys) {
                const value = localStorage.getItem(key);
                if (this.isValidId(value)) return value;
            }

            // 5. –°–ø—Ä–æ–±—É—î–º–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ –∑ URL –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤
            const urlParams = new URLSearchParams(window.location.search);
            const urlId = urlParams.get('id') || urlParams.get('user_id') || urlParams.get('telegram_id');
            if (this.isValidId(urlId)) return urlId;

            // 6. –Ø–∫—â–æ –Ω—ñ—á–æ–≥–æ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ, –≥–µ–Ω–µ—Ä—É—î–º–æ –Ω–æ–≤–∏–π ID
            const generatedId = '2449' + Math.floor(10000 + Math.random() * 90000);
            console.warn(`‚ö†Ô∏è ID Monitor: –°–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–æ —Ç–∏–º—á–∞—Å–æ–≤–∏–π ID: ${generatedId}`);

            return generatedId;
        },

        // –û–Ω–æ–≤–ª–µ–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ DOM –∑ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        updateDomElements: function(userId) {
            const userIdElements = document.querySelectorAll('#user-id, #user-id-display');
            userIdElements.forEach(element => {
                if (element) element.textContent = userId;
            });
        },

        // –ú–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥ –∑–º—ñ–Ω –≤ localStorage
        monitorLocalStorage: function() {
            const originalSetItem = localStorage.setItem;
            const monitor = this;

            localStorage.setItem = function(key, value) {
                // –ú–æ–Ω—ñ—Ç–æ—Ä–∏–º–æ –∫–ª—é—á—ñ, —è–∫—ñ –º—ñ—Å—Ç—è—Ç—å ID
                if (key.toLowerCase().includes('id') || key.toLowerCase().includes('user')) {
                    if (monitor.settings.debug) {
                        console.log(`üîç ID Monitor: localStorage.setItem('${key}', '${value}')`);
                    }

                    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –≤–∞–ª—ñ–¥–Ω—ñ—Å—Ç—å ID
                    if (!monitor.isValidId(value)) {
                        console.warn(`‚ö†Ô∏è ID Monitor: –°–ø—Ä–æ–±–∞ –∑–∞–ø–∏—Å—É –Ω–µ–≤–∞–ª—ñ–¥–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–Ω—è –≤ ${key}: "${value}"`);

                        // –ó–∞–ø–∏—Å—É—î–º–æ –≤ —ñ—Å—Ç–æ—Ä—ñ—é
                        monitor.idHistory.push({
                            time: new Date().toISOString(),
                            type: 'invalid_setItem',
                            key: key,
                            value: value,
                            stack: new Error().stack,
                            url: window.location.href
                        });

                        // –ë–ª–æ–∫—É—î–º–æ –∑–∞–ø–∏—Å –Ω–µ–≤–∞–ª—ñ–¥–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–Ω—è, —è–∫—â–æ —É–≤—ñ–º–∫–Ω–µ–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è
                        if (monitor.settings.autoFix && (key === 'telegram_user_id' || key === 'winix_user_id' || key === 'userId')) {
                            console.warn(`üõë ID Monitor: –ë–ª–æ–∫—É–≤–∞–Ω–Ω—è –∑–∞–ø–∏—Å—É –Ω–µ–≤–∞–ª—ñ–¥–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–Ω—è –≤ ${key}`);
                            return;
                        }
                    }
                }

                // –í–∏–∫–ª–∏–∫–∞—î–º–æ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–∏–π –º–µ—Ç–æ–¥
                originalSetItem.call(this, key, value);
            };
        },

        // –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Ä–µ–≥—É–ª—è—Ä–Ω–æ—ó –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ ID
        setupPeriodicCheck: function() {
            const monitor = this;

            // –†–µ–≥—É–ª—è—Ä–Ω–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ ID
            setInterval(function() {
                monitor.checkCurrentId();
            }, this.settings.checkInterval);
        }
    };

    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ –º–æ–¥—É–ª—å
    WinixIdMonitor.init();
})();