/**
 * winix-connector.js
 *
 * –§–∞–π–ª –¥–ª—è –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ —Å—Ç–æ—Ä—ñ–Ω–æ–∫ HTML –¥–ª—è –≤–∑–∞—î–º–æ–¥—ñ—ó –∑ WinixCore.
 * –¶–µ–π —Ñ–∞–π–ª –º–∞—î –±—É—Ç–∏ –¥–æ–¥–∞–Ω–∏–π –Ω–∞ –∫–æ–∂–Ω—É —Å—Ç–æ—Ä—ñ–Ω–∫—É –ø—ñ—Å–ª—è –≤–∫–ª—é—á–µ–Ω–Ω—è winix-core.js —Ç–∞ api.js.
 */

(function() {
    console.log("üîÑ –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è WINIX Connector...");

    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó Telegram WebApp
    initTelegramWebApp();

    // –§–ª–∞–≥, —â–æ–± –∑–∞–ø–æ–±—ñ–≥—Ç–∏ –ø–æ–≤—Ç–æ—Ä–Ω—ñ–π —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
    window.WinixConnectorInitialized = window.WinixConnectorInitialized || false;

    if (window.WinixConnectorInitialized) {
        console.log("‚ÑπÔ∏è WINIX Connector –≤–∂–µ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ, –ø—Ä–æ–ø—É—Å–∫–∞—î–º–æ");
        return;
    }

    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ WinixCore
    if (!window.WinixCore) {
        console.error('‚ùå –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ WinixCore! –°–ø–æ—á–∞—Ç–∫—É –ø—ñ–¥–∫–ª—é—á—ñ—Ç—å winix-core.js');
        console.log("‚ö†Ô∏è Connector –ø—Ä–æ–¥–æ–≤–∂–∏—Ç—å —Ä–æ–±–æ—Ç—É –≤ –æ–±–º–µ–∂–µ–Ω–æ–º—É —Ä–µ–∂–∏–º—ñ");
    }

    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ API –º–æ–¥—É–ª—å
    if (!window.WinixAPI) {
        console.warn('‚ö†Ô∏è –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ API –º–æ–¥—É–ª—å! –†–µ–∫–æ–º–µ–Ω–¥—É—î–º–æ –ø—ñ–¥–∫–ª—é—á–∏—Ç–∏ api.js');
    }

    // –î–û–î–ê–ù–û: –§—É–Ω–∫—Ü—ñ—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –≤–∞–ª—ñ–¥–Ω–æ—Å—Ç—ñ ID
    function isValidId(id) {
        return id &&
               id !== 'undefined' &&
               id !== 'null' &&
               id !== undefined &&
               id !== null &&
               id.toString().trim() !== '';
    }

    // –î–û–î–ê–ù–û: –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è Telegram WebApp
    function initTelegramWebApp() {
        try {
            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å Telegram WebApp API
            if (window.Telegram && window.Telegram.WebApp) {
                console.log("‚úÖ Telegram WebApp API –∑–Ω–∞–π–¥–µ–Ω–æ");

                // –í–∏–∫–ª–∏–∫–∞—î–º–æ –º–µ—Ç–æ–¥–∏ ready() —Ç–∞ expand()
                try {
                    window.Telegram.WebApp.ready();
                    window.Telegram.WebApp.expand();
                    console.log("‚úÖ Telegram WebApp —É—Å–ø—ñ—à–Ω–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ");

                    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
                    if (window.Telegram.WebApp.initDataUnsafe && window.Telegram.WebApp.initDataUnsafe.user) {
                        const user = window.Telegram.WebApp.initDataUnsafe.user;
                        const userId = user.id.toString();

                        if (isValidId(userId)) {
                            localStorage.setItem('telegram_user_id', userId);
                            console.log("‚úÖ –û—Ç—Ä–∏–º–∞–Ω–æ Telegram ID:", userId);
                        }
                    } else {
                        console.warn("‚ö†Ô∏è –î–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤—ñ–¥—Å—É—Ç–Ω—ñ –≤ Telegram WebApp");
                    }
                } catch (e) {
                    console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó Telegram WebApp:", e);
                }
            } else {
                console.warn("‚ö†Ô∏è Telegram WebApp API –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –ú–æ–∂–ª–∏–≤–æ, –¥–æ–¥–∞—Ç–æ–∫ –∑–∞–ø—É—â–µ–Ω–æ –ø–æ–∑–∞ Telegram.");
            }
        } catch (e) {
            console.error("‚ùå –ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó Telegram WebApp:", e);
        }
    }

    // –§—É–Ω–∫—Ü—ñ—è —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏
    function initPage() {
        console.log('üîÑ –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏ —á–µ—Ä–µ–∑ WinixCore');

        try {
            // –ó–ú–Ü–ù–ï–ù–û: –°–ø–æ—á–∞—Ç–∫—É –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ç–∞ –æ—á–∏—â–∞—î–º–æ –Ω–µ–≤–∞–ª—ñ–¥–Ω—ñ ID
            const storedId = localStorage.getItem('telegram_user_id');
            if (storedId && !isValidId(storedId)) {
                console.warn("‚ö†Ô∏è CONNECTOR: –í–∏–¥–∞–ª–µ–Ω–Ω—è –Ω–µ–≤–∞–ª—ñ–¥–Ω–æ–≥–æ ID –∑ localStorage:", storedId);
                localStorage.removeItem('telegram_user_id');
            }

            // –î–û–î–ê–ù–û: –í–∏–∫–ª–∏–∫–∞—î–º–æ getUserData –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∞–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ ID, —è–∫—â–æ WinixAuth –¥–æ—Å—Ç—É–ø–Ω–∏–π
            if (window.WinixAuth && typeof window.WinixAuth.getUserData === 'function') {
                window.WinixAuth.getUserData()
                    .then(() => {
                        console.log("‚úÖ CONNECTOR: –î–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –æ–Ω–æ–≤–ª–µ–Ω–æ –ø—Ä–∏ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏");
                    })
                    .catch(error => {
                        console.warn("‚ö†Ô∏è CONNECTOR: –ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞", error);
                    });
            }

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –≤–∂–µ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ WinixCore
            if (!window.WinixCoreInitialized && window.WinixCore) {
                // –ó–ú–Ü–ù–ï–ù–û: –î–æ–¥–∞—î–º–æ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ –º–µ—Ç–æ–¥—É init –ø–µ—Ä–µ–¥ –π–æ–≥–æ –≤–∏–∫–ª–∏–∫–æ–º
                if (typeof window.WinixCore.init === 'function') {
                    window.WinixCore.init();
                    window.WinixCoreInitialized = true;
                    console.log('‚úÖ WinixCore —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ —á–µ—Ä–µ–∑ winix-connector');
                } else {
                    console.warn('‚ö†Ô∏è WinixCore.init –Ω–µ —î —Ñ—É–Ω–∫—Ü—ñ—î—é. –ú–æ–∂–ª–∏–≤–æ, WinixCore –Ω–µ –ø–æ–≤–Ω—ñ—Å—Ç—é –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∏–π.');
                }
            }

            // –í–∏–∑–Ω–∞—á–∞—î–º–æ –ø–æ—Ç–æ—á–Ω—É —Å—Ç–æ—Ä—ñ–Ω–∫—É
            const currentPage = getCurrentPage();
            console.log(`üìÑ –í–∏–∑–Ω–∞—á–µ–Ω–æ –ø–æ—Ç–æ—á–Ω—É —Å—Ç–æ—Ä—ñ–Ω–∫—É: ${currentPage}`);

            // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É, —è–∫—â–æ –¥–æ—Å—Ç—É–ø–Ω–æ
            if (window.WinixCore && window.WinixCore.UI && typeof window.WinixCore.UI.updateBalanceDisplay === 'function') {
                try {
                    window.WinixCore.UI.updateBalanceDisplay();
                } catch (e) {
                    console.warn("‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—ñ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É:", e);
                }
            }

            // –ó–∞–ø—É—Å–∫–∞—î–º–æ —Å–ø–µ—Ü–∏—Ñ—ñ—á–Ω—É –¥–ª—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—é
            initSpecificPage(currentPage);

            // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π
            setupEventHandlers();

            // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–¥—ñ—é –ø—Ä–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—é
            document.dispatchEvent(new CustomEvent('winix-connector-initialized'));

            // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Ñ–ª–∞–≥ —É—Å–ø—ñ—à–Ω–æ—ó —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
            window.WinixConnectorInitialized = true;

            console.log('‚úÖ –°—Ç–æ—Ä—ñ–Ω–∫—É —É—Å–ø—ñ—à–Ω–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ');
        } catch (error) {
            console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏:', error);
        }
    }

    // –í–∏–∑–Ω–∞—á–µ–Ω–Ω—è –ø–æ—Ç–æ—á–Ω–æ—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏
    function getCurrentPage() {
        const path = window.location.pathname;
        const filename = path.split('/').pop();

        if (!filename || filename === '' || filename === 'original-index.html' || filename === 'index.html') {
            return 'home';
        }

        // –ü—Ä–∏–±–∏—Ä–∞—î–º–æ —Ä–æ–∑—à–∏—Ä–µ–Ω–Ω—è .html, —è–∫—â–æ –≤–æ–Ω–æ —î
        return filename.replace('.html', '');
    }

    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Å–ø–µ—Ü–∏—Ñ—ñ—á–Ω–æ—ó –¥–ª—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏ —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—ñ
    function initSpecificPage(page) {
        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å WinixCore –ø–µ—Ä–µ–¥ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—î—é —Å—Ç–æ—Ä—ñ–Ω–∫–∏
        if (!window.WinixCore || !window.WinixCore.UI) {
            console.warn(`‚ö†Ô∏è WinixCore –∞–±–æ WinixCore.UI –≤—ñ–¥—Å—É—Ç–Ω—ñ –ø—Ä–∏ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏ ${page}`);
            return;
        }

        switch (page) {
            case 'home':
                initHomePage();
                break;
            case 'wallet':
                initWalletPage();
                break;
            case 'staking':
                initStakingPage();
                break;
            case 'staking-details':
                initStakingDetailsPage();
                break;
            case 'transactions':
                initTransactionsPage();
                break;
            case 'earn':
                initEarnPage();
                break;
            case 'referrals':
                initReferralsPage();
                break;
            default:
                console.log(`‚ÑπÔ∏è –ù–µ–º–∞—î —Å–ø–µ—Ü–∏—Ñ—ñ—á–Ω–æ—ó —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó –¥–ª—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏ ${page}`);
        }
    }

    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –¥–æ–º–∞—à–Ω—å–æ—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏
    function initHomePage() {
        console.log('üè† –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –¥–æ–º–∞—à–Ω—å–æ—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏');

        try {
            // –û–Ω–æ–≤–ª—é—î–º–æ –ø–æ–∫–∞–∑–Ω–∏–∫–∏ –±–∞–ª–∞–Ω—Å—É
            if (window.WinixCore && window.WinixCore.UI && typeof window.WinixCore.UI.updateBalanceDisplay === 'function') {
                window.WinixCore.UI.updateBalanceDisplay();
            }
        } catch (e) {
            console.warn("‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó –¥–æ–º–∞—à–Ω—å–æ—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏:", e);
        }
    }

    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –≥–∞–º–∞–Ω—Ü—è
    function initWalletPage() {
        console.log('üí∞ –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –≥–∞–º–∞–Ω—Ü—è');

        try {
            // –î–û–î–ê–ù–û: –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ ID –ø–µ—Ä–µ–¥ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è–º
            const userId = window.WinixAPI ? window.WinixAPI.getUserId() : localStorage.getItem('telegram_user_id');
            if (isValidId(userId)) {
                console.log(`üí∞ Wallet —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –∑ ID: ${userId}`);
            } else {
                console.warn('‚ö†Ô∏è Wallet —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –±–µ–∑ ID, –±—É–¥–µ –∑–∞–ø—É—â–µ–Ω–æ –ø–æ–≤—Ç–æ—Ä–Ω—É —Å–ø—Ä–æ–±—É');
                if (window.WinixAuth && typeof window.WinixAuth.getUserData === 'function') {
                    window.WinixAuth.getUserData().catch(e => console.error('–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö:', e));
                }
            }

            // –û–Ω–æ–≤–ª—é—î–º–æ —Å–ø–∏—Å–æ–∫ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π
            if (window.WinixCore && window.WinixCore.UI && typeof window.WinixCore.UI.updateTransactionsList === 'function') {
                window.WinixCore.UI.updateTransactionsList('transaction-list', 3);
            }

            // –û–Ω–æ–≤–ª—é—î–º–æ –ø–æ–∫–∞–∑–Ω–∏–∫–∏ —Å—Ç–µ–π–∫—ñ–Ω–≥—É
            if (window.WinixCore && window.WinixCore.UI && typeof window.WinixCore.UI.updateStakingDisplay === 'function') {
                window.WinixCore.UI.updateStakingDisplay();
            }

            // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –¥—ñ–π
            setupWalletButtons();
        } catch (e) {
            console.warn("‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –≥–∞–º–∞–Ω—Ü—è:", e);
        }
    }

    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏ —Å—Ç–µ–π–∫—ñ–Ω–≥—É
    function initStakingPage() {
        console.log('üîí –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏ —Å—Ç–µ–π–∫—ñ–Ω–≥—É');

        try {
            // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Å—Ç–µ–π–∫—ñ–Ω–≥—É
            if (window.WinixCore && window.WinixCore.UI && typeof window.WinixCore.UI.updateStakingDisplay === 'function') {
                window.WinixCore.UI.updateStakingDisplay();
            }

            // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –æ—á—ñ–∫—É–≤–∞–Ω–æ—ó –≤–∏–Ω–∞–≥–æ—Ä–æ–¥–∏
            setupStakingRewardCalculation();
        } catch (e) {
            console.warn("‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏ —Å—Ç–µ–π–∫—ñ–Ω–≥—É:", e);
        }
    }

    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –¥–µ—Ç–∞–ª–µ–π —Å—Ç–µ–π–∫—ñ–Ω–≥—É
    function initStakingDetailsPage() {
        console.log('üìä –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –¥–µ—Ç–∞–ª–µ–π —Å—Ç–µ–π–∫—ñ–Ω–≥—É');

        try {
            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —î –∞–∫—Ç–∏–≤–Ω–∏–π —Å—Ç–µ–π–∫—ñ–Ω–≥
            if (window.WinixCore && window.WinixCore.Staking && typeof window.WinixCore.Staking.hasActiveStaking === 'function') {
                if (!window.WinixCore.Staking.hasActiveStaking()) {
                    // –Ø–∫—â–æ –Ω–µ–º–∞—î —Å—Ç–µ–π–∫—ñ–Ω–≥—É, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è—î–º–æ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É —Å—Ç–µ–π–∫—ñ–Ω–≥—É
                    if (window.WinixCore.UI && typeof window.WinixCore.UI.showNotification === 'function') {
                        window.WinixCore.UI.showNotification(
                            "–£ –≤–∞—Å –Ω–µ–º–∞—î –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å—Ç–µ–π–∫—ñ–Ω–≥—É",
                            window.WinixCore.MESSAGE_TYPES ? window.WinixCore.MESSAGE_TYPES.WARNING : 'warning',
                            () => window.location.href = "staking.html"
                        );
                    } else {
                        alert("–£ –≤–∞—Å –Ω–µ–º–∞—î –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å—Ç–µ–π–∫—ñ–Ω–≥—É");
                        window.location.href = "staking.html";
                    }
                    return;
                }
            }

            // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –¥–µ—Ç–∞–ª–µ–π —Å—Ç–µ–π–∫—ñ–Ω–≥—É
            if (window.WinixCore && window.WinixCore.UI && typeof window.WinixCore.UI.updateStakingDisplay === 'function') {
                window.WinixCore.UI.updateStakingDisplay();
            }
        } catch (e) {
            console.warn("‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –¥–µ—Ç–∞–ª–µ–π —Å—Ç–µ–π–∫—ñ–Ω–≥—É:", e);
        }
    }

    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π
    function initTransactionsPage() {
        console.log('üìÉ –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π');

        try {
            // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ API –º–æ–¥—É–ª—å –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π
            if (window.WinixAPI && typeof window.WinixAPI.getTransactions === 'function') {
                // –ó–ú–Ü–ù–ï–ù–û: –î–æ–¥–∞–Ω–æ —Å–ø—Ä–æ–±—É –æ—Ç—Ä–∏–º–∞—Ç–∏ —Å–≤—ñ–∂–∏–π ID —á–µ—Ä–µ–∑ getUserData –ø–µ—Ä–µ–¥ –∑–∞–ø–∏—Ç–æ–º
                if (window.WinixAuth && typeof window.WinixAuth.getUserData === 'function') {
                    window.WinixAuth.getUserData()
                        .then(() => {
                            // –¢–µ–ø–µ—Ä –æ—Ç—Ä–∏–º—É—î–º–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó –∑ –æ–Ω–æ–≤–ª–µ–Ω–∏–º ID
                            window.WinixAPI.getTransactions()
                                .then(data => {
                                    if (data.status === 'success' && Array.isArray(data.data)) {
                                        // –û–Ω–æ–≤–ª—é—î–º–æ —Å–ø–∏—Å–æ–∫ —É—Å—ñ—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π
                                        if (window.WinixCore && window.WinixCore.UI && typeof window.WinixCore.UI.updateTransactionsList === 'function') {
                                            window.WinixCore.UI.updateTransactionsList('transaction-list', 100);
                                        }
                                    }
                                })
                                .catch(error => {
                                    console.error('–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π:', error);
                                });
                        })
                        .catch(error => {
                            console.warn('‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –æ–Ω–æ–≤–∏—Ç–∏ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:', error);

                            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ ID –ø–µ—Ä–µ–¥ –∑–∞–ø–∏—Ç–æ–º
                            const userId = localStorage.getItem('telegram_user_id');
                            if (!isValidId(userId)) {
                                console.error('‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó: –Ω–µ–≤–∞–ª—ñ–¥–Ω–∏–π ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞');
                                if (window.WinixCore && window.WinixCore.UI && typeof window.WinixCore.UI.showNotification === 'function') {
                                    window.WinixCore.UI.showNotification(
                                        "–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π. –°–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Å—Ç–æ—Ä—ñ–Ω–∫—É.",
                                        window.WinixCore.MESSAGE_TYPES ? window.WinixCore.MESSAGE_TYPES.ERROR : 'error'
                                    );
                                }
                                return;
                            }

                            // –ü—Ä–æ–±—É—î–º–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó –∑ —ñ—Å–Ω—É—é—á–∏–º ID
                            window.WinixAPI.getTransactions()
                                .then(data => {
                                    if (data.status === 'success' && Array.isArray(data.data)) {
                                        if (window.WinixCore && window.WinixCore.UI && typeof window.WinixCore.UI.updateTransactionsList === 'function') {
                                            window.WinixCore.UI.updateTransactionsList('transaction-list', 100);
                                        }
                                    }
                                })
                                .catch(error => {
                                    console.error('–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π:', error);
                                });
                        });
                } else {
                    // –Ø–∫—â–æ –Ω–µ–º–∞—î —Ñ—É–Ω–∫—Ü—ñ—ó getUserData, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∑–≤–∏—á–∞–π–Ω–∏–π –ø—ñ–¥—Ö—ñ–¥
                    const userId = localStorage.getItem('telegram_user_id');
                    if (!isValidId(userId)) {
                        console.error('‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó: –Ω–µ–≤–∞–ª—ñ–¥–Ω–∏–π ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞');
                        if (window.WinixCore && window.WinixCore.UI && typeof window.WinixCore.UI.showNotification === 'function') {
                            window.WinixCore.UI.showNotification(
                                "–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π. –°–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Å—Ç–æ—Ä—ñ–Ω–∫—É.",
                                window.WinixCore.MESSAGE_TYPES ? window.WinixCore.MESSAGE_TYPES.ERROR : 'error'
                            );
                        }
                        return;
                    }

                    window.WinixAPI.getTransactions()
                        .then(data => {
                            if (data.status === 'success' && Array.isArray(data.data)) {
                                if (window.WinixCore && window.WinixCore.UI && typeof window.WinixCore.UI.updateTransactionsList === 'function') {
                                    window.WinixCore.UI.updateTransactionsList('transaction-list', 100);
                                }
                            }
                        })
                        .catch(error => {
                            console.error('–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π:', error);
                        });
                }
            } else {
                // –ó–∞–ø–∞—Å–Ω–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç, —è–∫—â–æ API –º–æ–¥—É–ª—å –Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∏–π
                if (window.WinixCore && window.WinixCore.UI && typeof window.WinixCore.UI.updateTransactionsList === 'function') {
                    window.WinixCore.UI.updateTransactionsList('transaction-list', 100);
                }
            }
        } catch (e) {
            console.warn("‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π:", e);
        }
    }

    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –∑–∞—Ä–æ–±—ñ—Ç–∫—É
    function initEarnPage() {
        console.log('üí∏ –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –∑–∞—Ä–æ–±—ñ—Ç–∫—É');

        try {
            // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –∑–∞—Ä–æ–±—ñ—Ç–∫—É
            setupEarnButtons();
        } catch (e) {
            console.warn("‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –∑–∞—Ä–æ–±—ñ—Ç–∫—É:", e);
        }
    }

    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—ñ–≤
    function initReferralsPage() {
        console.log('üë• –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—ñ–≤');

        try {
            // –î–û–î–ê–ù–û: –°–ø–æ—á–∞—Ç–∫—É –æ–Ω–æ–≤–ª—é—î–º–æ ID —á–µ—Ä–µ–∑ getUserData
            if (window.WinixAuth && typeof window.WinixAuth.getUserData === 'function') {
                window.WinixAuth.getUserData()
                    .then(() => {
                        console.log("‚úÖ –î–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –æ–Ω–æ–≤–ª–µ–Ω–æ –¥–ª—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—ñ–≤");
                        updateReferralLinks();
                    })
                    .catch(error => {
                        console.warn("‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:", error);
                        updateReferralLinks();
                    });
            } else {
                updateReferralLinks();
            }

            // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ—ó –ø—Ä–æ–≥—Ä–∞–º–∏
            setupReferralButtons();
        } catch (e) {
            console.warn("‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—ñ–≤:", e);
        }
    }

    // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –ø–æ—Å–∏–ª–∞–Ω–Ω—è
    function updateReferralLinks() {
        try {
            const referralLinkElement = document.getElementById('referral-link');
            if (referralLinkElement) {
                if (window.WinixAPI && typeof window.WinixAPI.getReferralLink === 'function') {
                    const userId = localStorage.getItem('telegram_user_id');
                    if (!isValidId(userId)) {
                        console.warn('‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è: –Ω–µ–≤–∞–ª—ñ–¥–Ω–∏–π ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞');

                        // –ù–∞–º–∞–≥–∞—î–º–æ—Å—è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏ getUserId –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –≤–∞–ª—ñ–¥–Ω–æ–≥–æ ID
                        const validId = window.WinixAPI.getUserId();
                        if (!validId) {
                            if (window.WinixCore && window.WinixCore.UI && typeof window.WinixCore.UI.showNotification === 'function') {
                                window.WinixCore.UI.showNotification(
                                    "–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –ø–æ—Å–∏–ª–∞–Ω–Ω—è. –°–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Å—Ç–æ—Ä—ñ–Ω–∫—É.",
                                    window.WinixCore.MESSAGE_TYPES ? window.WinixCore.MESSAGE_TYPES.ERROR : 'error'
                                );
                            }
                            return;
                        }
                    }

                    window.WinixAPI.getReferralLink()
                        .then(data => {
                            if (data.status === 'success' && data.data && data.data.referral_link) {
                                referralLinkElement.textContent = data.data.referral_link;
                            }
                        })
                        .catch(error => {
                            console.error('–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –ø–æ—Å–∏–ª–∞–Ω–Ω—è:', error);
                        });
                } else if (window.WinixCore && window.WinixCore.Referrals && typeof window.WinixCore.Referrals.getReferralLink === 'function') {
                    // –ó–∞–ø–∞—Å–Ω–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç
                    referralLinkElement.textContent = window.WinixCore.Referrals.getReferralLink();
                }
            }
        } catch (e) {
            console.warn("‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—ñ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∏—Ö –ø–æ—Å–∏–ª–∞–Ω—å:", e);
        }
    }

    // –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –ø–æ–¥—ñ–π –¥–ª—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏
    function setupEventHandlers() {
        try {
            // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –¥–ª—è –Ω–∞–≤—ñ–≥–∞—Ü—ñ–π–Ω–∏—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤
            setupNavigation();

            // –Ü–Ω—à—ñ –∑–∞–≥–∞–ª—å–Ω—ñ –æ–±—Ä–æ–±–Ω–∏–∫–∏
            setupCommonElements();
        } catch (e) {
            console.warn("‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ñ –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –ø–æ–¥—ñ–π:", e);
        }
    }

    // –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –¥–ª—è –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó
    function setupNavigation() {
        try {
            const navItems = document.querySelectorAll('.nav-item');
            navItems.forEach(item => {
                // –°—Ç–≤–æ—Ä—é—î–º–æ –∫–æ–ø—ñ—é –µ–ª–µ–º–µ–Ω—Ç–∞ –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è –≤—Å—ñ—Ö –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤
                const newItem = item.cloneNode(true);
                if (item.parentNode) {
                    item.parentNode.replaceChild(newItem, item);
                }

                newItem.addEventListener('click', function() {
                    const section = this.getAttribute('data-section');
                    if (!section) return;

                    // –ó–º—ñ–Ω—é—î–º–æ –∞–∫—Ç–∏–≤–Ω–∏–π –µ–ª–µ–º–µ–Ω—Ç
                    document.querySelectorAll('.nav-item').forEach(navItem => {
                        navItem.classList.remove('active');
                    });
                    this.classList.add('active');

                    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º–æ –Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—É —Å—Ç–æ—Ä—ñ–Ω–∫—É
                    navigateTo(section);
                });
            });
        } catch (e) {
            console.warn("‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ñ –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó:", e);
        }
    }

    // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó
    function navigateTo(section) {
        try {
            // –í–∏–∑–Ω–∞—á–∞—î–º–æ URL –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥—É
            let url = '';
            switch(section) {
                case 'home':
                    url = 'original-index.html';
                    break;
                case 'earn':
                    url = 'earn.html';
                    break;
                case 'referrals':
                    url = 'referrals.html';
                    break;
                case 'wallet':
                    url = 'wallet.html';
                    break;
                case 'general':
                    if (window.WinixCore && window.WinixCore.UI && typeof window.WinixCore.UI.showNotification === 'function') {
                        window.WinixCore.UI.showNotification(
                            "–¶—è —Ñ—É–Ω–∫—Ü—ñ—è –±—É–¥–µ –¥–æ—Å—Ç—É–ø–Ω–∞ –ø—ñ–∑–Ω—ñ—à–µ",
                            window.WinixCore.MESSAGE_TYPES ? window.WinixCore.MESSAGE_TYPES.INFO : 'info'
                        );
                    } else {
                        alert("–¶—è —Ñ—É–Ω–∫—Ü—ñ—è –±—É–¥–µ –¥–æ—Å—Ç—É–ø–Ω–∞ –ø—ñ–∑–Ω—ñ—à–µ");
                    }
                    return;
                default:
                    url = section + '.html';
            }

            // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ø–æ—Ç–æ—á–Ω–∏–π –±–∞–ª–∞–Ω—Å –ø–µ—Ä–µ–¥ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—î—é
            saveBalanceBeforeNavigation();

            // –ü–µ—Ä–µ—Ö–æ–¥–∏–º–æ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É
            window.location.href = url;
        } catch (e) {
            console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó:", e);
        }
    }

    // –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É –ø–µ—Ä–µ–¥ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—î—é
    function saveBalanceBeforeNavigation() {
        try {
            if (window.WinixCore && window.WinixCore.Balance) {
                if (typeof window.WinixCore.Balance.getTokens === 'function') {
                    const tokens = window.WinixCore.Balance.getTokens();
                    sessionStorage.setItem('lastBalance', tokens.toString());
                }

                if (typeof window.WinixCore.Balance.getCoins === 'function') {
                    const coins = window.WinixCore.Balance.getCoins();
                    sessionStorage.setItem('lastCoins', coins.toString());
                }
            } else if (window.balanceSystem) {
                if (typeof window.balanceSystem.getTokens === 'function') {
                    const tokens = window.balanceSystem.getTokens();
                    sessionStorage.setItem('lastBalance', tokens.toString());
                }

                if (typeof window.balanceSystem.getCoins === 'function') {
                    const coins = window.balanceSystem.getCoins();
                    sessionStorage.setItem('lastCoins', coins.toString());
                }
            }

            sessionStorage.setItem('navigationTime', Date.now().toString());
        } catch (e) {
            console.warn("‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—ñ –±–∞–ª–∞–Ω—Å—É:", e);
        }
    }

    // –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –¥–ª—è –∑–∞–≥–∞–ª—å–Ω–∏—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤
    function setupCommonElements() {
        try {
            // –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥", —è–∫—â–æ –≤–æ–Ω–∞ —î
            const backButton = document.getElementById('back-button');
            if (backButton) {
                // –°—Ç–≤–æ—Ä—é—î–º–æ –∫–æ–ø—ñ—é –µ–ª–µ–º–µ–Ω—Ç–∞ –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è –≤—Å—ñ—Ö –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤
                const newBackButton = backButton.cloneNode(true);
                if (backButton.parentNode) {
                    backButton.parentNode.replaceChild(newBackButton, backButton);
                }

                newBackButton.addEventListener('click', function() {
                    // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ø–æ—Ç–æ—á–Ω–∏–π –±–∞–ª–∞–Ω—Å –ø–µ—Ä–µ–¥ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—î—é
                    saveBalanceBeforeNavigation();

                    // –í–∏–∑–Ω–∞—á–∞—î–º–æ, –Ω–∞ —è–∫—É —Å—Ç–æ—Ä—ñ–Ω–∫—É –ø–æ–≤–µ—Ä—Ç–∞—Ç–∏—Å—è
                    const currentPage = getCurrentPage();

                    if (currentPage === 'staking-details') {
                        window.location.href = 'staking.html';
                    } else if (currentPage === 'staking') {
                        window.location.href = 'wallet.html';
                    } else {
                        window.history.back();
                    }
                });
            }

            // –ù–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ —Ç–µ—Å—Ç–æ–≤—É –∫–Ω–æ–ø–∫—É, —è–∫—â–æ –≤–æ–Ω–∞ —î
            const testRewardBtn = document.getElementById('test-reward-btn');
            if (testRewardBtn) {
                // –°—Ç–≤–æ—Ä—é—î–º–æ –∫–æ–ø—ñ—é –µ–ª–µ–º–µ–Ω—Ç–∞ –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è –≤—Å—ñ—Ö –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤
                const newTestRewardBtn = testRewardBtn.cloneNode(true);
                if (testRewardBtn.parentNode) {
                    testRewardBtn.parentNode.replaceChild(newTestRewardBtn, testRewardBtn);
                }

                newTestRewardBtn.addEventListener('click', function() {
                    // –î–û–î–ê–ù–û: –°–ø–æ—á–∞—Ç–∫—É –æ–Ω–æ–≤–ª—é—î–º–æ ID —á–µ—Ä–µ–∑ getUserData
                    if (window.WinixAuth && typeof window.WinixAuth.getUserData === 'function') {
                        window.WinixAuth.getUserData()
                            .then(() => {
                                addTestTokens();
                            })
                            .catch(error => {
                                console.warn("‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:", error);
                                addTestTokens();
                            });
                    } else {
                        addTestTokens();
                    }
                });
            }
        } catch (e) {
            console.warn("‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ñ –∑–∞–≥–∞–ª—å–Ω–∏—Ö –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤:", e);
        }
    }

    // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è —Ç–µ—Å—Ç–æ–≤–∏—Ö —Ç–æ–∫–µ–Ω—ñ–≤
    function addTestTokens() {
        try {
            // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ API –º–æ–¥—É–ª—å –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è —Ç–æ–∫–µ–Ω—ñ–≤
            if (window.WinixAPI && typeof window.WinixAPI.addTokens === 'function') {
                // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ ID
                const userId = localStorage.getItem('telegram_user_id');
                if (!isValidId(userId)) {
                    console.warn('‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –¥–æ–¥–∞—Ç–∏ —Ç–æ–∫–µ–Ω–∏: –Ω–µ–≤–∞–ª—ñ–¥–Ω–∏–π ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞');

                    // –ù–∞–º–∞–≥–∞—î–º–æ—Å—è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏ getUserId –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –≤–∞–ª—ñ–¥–Ω–æ–≥–æ ID
                    if (typeof window.WinixAPI.getUserId === 'function') {
                        const validId = window.WinixAPI.getUserId();
                        if (!validId) {
                            if (window.WinixCore && window.WinixCore.UI && typeof window.WinixCore.UI.showNotification === 'function') {
                                window.WinixCore.UI.showNotification(
                                    "–ù–µ –≤–¥–∞–ª–æ—Å—è –¥–æ–¥–∞—Ç–∏ —Ç–æ–∫–µ–Ω–∏. –°–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Å—Ç–æ—Ä—ñ–Ω–∫—É.",
                                    window.WinixCore.MESSAGE_TYPES ? window.WinixCore.MESSAGE_TYPES.ERROR : 'error'
                                );
                            } else {
                                alert("–ù–µ –≤–¥–∞–ª–æ—Å—è –¥–æ–¥–∞—Ç–∏ —Ç–æ–∫–µ–Ω–∏. –°–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Å—Ç–æ—Ä—ñ–Ω–∫—É.");
                            }
                            return;
                        }
                    }
                }

                window.WinixAPI.addTokens(50, '–¢–µ—Å—Ç–æ–≤–∞ –≤–∏–Ω–∞–≥–æ—Ä–æ–¥–∞')
                    .then(data => {
                        if (data.status === 'success') {
                            if (window.WinixCore && window.WinixCore.UI && typeof window.WinixCore.UI.showNotification === 'function') {
                                window.WinixCore.UI.showNotification('–î–æ–¥–∞–Ω–æ 50 WINIX!');
                            } else {
                                alert('–î–æ–¥–∞–Ω–æ 50 WINIX!');
                            }
                        }
                    })
                    .catch(error => {
                        console.error('–ü–æ–º–∏–ª–∫–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è —Ç–æ–∫–µ–Ω—ñ–≤:', error);
                    });
            } else if (window.WinixCore && window.WinixCore.Balance && typeof window.WinixCore.Balance.addTokens === 'function') {
                // –ó–∞–ø–∞—Å–Ω–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç
                window.WinixCore.Balance.addTokens(50, '–¢–µ—Å—Ç–æ–≤–∞ –≤–∏–Ω–∞–≥–æ—Ä–æ–¥–∞');
                if (window.WinixCore.UI && typeof window.WinixCore.UI.showNotification === 'function') {
                    window.WinixCore.UI.showNotification('–î–æ–¥–∞–Ω–æ 50 WINIX!');
                } else {
                    alert('–î–æ–¥–∞–Ω–æ 50 WINIX!');
                }
            } else {
                alert('–î–æ–¥–∞–Ω–æ 50 WINIX! (—Ç—ñ–ª—å–∫–∏ –¥–µ–º–æ)');
            }
        } catch (e) {
            console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –¥–æ–¥–∞–≤–∞–Ω–Ω—ñ —Ç–µ—Å—Ç–æ–≤–∏—Ö —Ç–æ–∫–µ–Ω—ñ–≤:", e);
        }
    }

    // –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ –≥–∞–º–∞–Ω—Ü—è
    function setupWalletButtons() {
        try {
            // –ö–Ω–æ–ø–∫–∞ "–ù–∞–¥—ñ—Å–ª–∞—Ç–∏"
            const sendButton = document.getElementById('send-button');
            if (sendButton) {
                // –°—Ç–≤–æ—Ä—é—î–º–æ –∫–æ–ø—ñ—é –µ–ª–µ–º–µ–Ω—Ç–∞ –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è –≤—Å—ñ—Ö –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤
                const newSendButton = sendButton.cloneNode(true);
                if (sendButton.parentNode) {
                    sendButton.parentNode.replaceChild(newSendButton, sendButton);
                }

                newSendButton.addEventListener('click', function() {
                    saveBalanceBeforeNavigation();
                    window.location.href = 'send.html';
                });
            }

            // –ö–Ω–æ–ø–∫–∞ "–û—Ç—Ä–∏–º–∞—Ç–∏"
            const receiveButton = document.getElementById('receive-button');
            if (receiveButton) {
                // –°—Ç–≤–æ—Ä—é—î–º–æ –∫–æ–ø—ñ—é –µ–ª–µ–º–µ–Ω—Ç–∞ –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è –≤—Å—ñ—Ö –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤
                const newReceiveButton = receiveButton.cloneNode(true);
                if (receiveButton.parentNode) {
                    receiveButton.parentNode.replaceChild(newReceiveButton, receiveButton);
                }

                newReceiveButton.addEventListener('click', function() {
                    saveBalanceBeforeNavigation();
                    window.location.href = 'receive.html';
                });
            }

            // –ö–Ω–æ–ø–∫–∞ "–°—Ç–µ–π–∫—ñ–Ω–≥"
            const stakingButton = document.getElementById('staking-button');
            if (stakingButton) {
                // –°—Ç–≤–æ—Ä—é—î–º–æ –∫–æ–ø—ñ—é –µ–ª–µ–º–µ–Ω—Ç–∞ –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è –≤—Å—ñ—Ö –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤
                const newStakingButton = stakingButton.cloneNode(true);
                if (stakingButton.parentNode) {
                    stakingButton.parentNode.replaceChild(newStakingButton, stakingButton);
                }

                newStakingButton.addEventListener('click', function() {
                    saveBalanceBeforeNavigation();
                    window.location.href = 'staking.html';
                });
            }

            // –ö–Ω–æ–ø–∫–∞ "–ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –≤—Å—ñ" –¥–ª—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π
            const viewAllButton = document.getElementById('view-all-transactions');
            if (viewAllButton) {
                // –°—Ç–≤–æ—Ä—é—î–º–æ –∫–æ–ø—ñ—é –µ–ª–µ–º–µ–Ω—Ç–∞ –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è –≤—Å—ñ—Ö –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤
                const newViewAllButton = viewAllButton.cloneNode(true);
                if (viewAllButton.parentNode) {
                    viewAllButton.parentNode.replaceChild(newViewAllButton, viewAllButton);
                }

                newViewAllButton.addEventListener('click', function() {
                    saveBalanceBeforeNavigation();
                    window.location.href = 'transactions.html';
                });
            }
        } catch (e) {
            console.warn("‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ñ –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –≥–∞–º–∞–Ω—Ü—è:", e);
        }
    }

    // –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –¥–ª—è —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É –≤–∏–Ω–∞–≥–æ—Ä–æ–¥–∏ —Å—Ç–µ–π–∫—ñ–Ω–≥—É
    function setupStakingRewardCalculation() {
        try {
            const amountInput = document.getElementById('staking-amount');
            const periodSelect = document.getElementById('staking-period');
            const rewardElement = document.getElementById('expected-reward');

            if (!amountInput || !periodSelect || !rewardElement) return;

            // –§—É–Ω–∫—Ü—ñ—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –≤–∏–Ω–∞–≥–æ—Ä–æ–¥–∏
            const updateReward = () => {
                try {
                    const amount = parseFloat(amountInput.value) || 0;
                    const period = parseInt(periodSelect.value) || 14;

                    // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ API –º–æ–¥—É–ª—å –¥–ª—è —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É –æ—á—ñ–∫—É–≤–∞–Ω–æ—ó –≤–∏–Ω–∞–≥–æ—Ä–æ–¥–∏
                    if (window.WinixAPI && typeof window.WinixAPI.calculateExpectedReward === 'function') {
                        // –î–û–î–ê–ù–û: –°–ø–æ—á–∞—Ç–∫—É –æ–Ω–æ–≤–ª—é—î–º–æ ID —á–µ—Ä–µ–∑ getUserData
                        if (window.WinixAuth && typeof window.WinixAuth.getUserData === 'function') {
                            window.WinixAuth.getUserData()
                                .then(() => {
                                    calculateReward();
                                })
                                .catch(error => {
                                    console.warn("‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:", error);
                                    calculateReward();
                                });
                        } else {
                            calculateReward();
                        }
                    } else {
                        // –ó–∞–ø–∞—Å–Ω–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç
                        localCalculateReward();
                    }
                } catch (e) {
                    console.warn("‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—ñ –≤–∏–Ω–∞–≥–æ—Ä–æ–¥–∏ —Å—Ç–µ–π–∫—ñ–Ω–≥—É:", e);
                    localCalculateReward();
                }
            };

            // –§—É–Ω–∫—Ü—ñ—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É –≤–∏–Ω–∞–≥–æ—Ä–æ–¥–∏
            function localCalculateReward() {
                try {
                    const amount = parseFloat(amountInput.value) || 0;
                    const period = parseInt(periodSelect.value) || 14;

                    // –í–∏–∑–Ω–∞—á–∞—î–º–æ –≤—ñ–¥—Å–æ—Ç–æ–∫ –≤–∏–Ω–∞–≥–æ—Ä–æ–¥–∏
                    let rewardPercent;
                    if (period === 7) rewardPercent = 4;
                    else if (period === 14) rewardPercent = 9;
                    else if (period === 28) rewardPercent = 15;
                    else rewardPercent = 9;

                    // –†–æ–∑—Ä–∞—Ö–æ–≤—É—î–º–æ –≤–∏–Ω–∞–≥–æ—Ä–æ–¥—É
                    const reward = amount * (rewardPercent / 100);

                    // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è
                    rewardElement.textContent = reward.toFixed(2);
                } catch (e) {
                    console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ª–æ–∫–∞–ª—å–Ω–æ–º—É —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É –≤–∏–Ω–∞–≥–æ—Ä–æ–¥–∏:", e);
                    rewardElement.textContent = '0.00';
                }
            }

            // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É –≤–∏–Ω–∞–≥–æ—Ä–æ–¥–∏ —á–µ—Ä–µ–∑ API
            function calculateReward() {
                try {
                    const amount = parseFloat(amountInput.value) || 0;
                    const period = parseInt(periodSelect.value) || 14;

                    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ ID
                    const userId = localStorage.getItem('telegram_user_id');
                    if (!isValidId(userId)) {
                        console.warn('‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è —Ä–æ–∑—Ä–∞—Ö—É–≤–∞—Ç–∏ –≤–∏–Ω–∞–≥–æ—Ä–æ–¥—É: –Ω–µ–≤–∞–ª—ñ–¥–Ω–∏–π ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞');

                        // –ù–∞–º–∞–≥–∞—î–º–æ—Å—è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏ getUserId –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –≤–∞–ª—ñ–¥–Ω–æ–≥–æ ID
                        if (typeof window.WinixAPI.getUserId === 'function') {
                            const validId = window.WinixAPI.getUserId();
                            if (!validId) {
                                // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –ª–æ–∫–∞–ª—å–Ω–∏–π —Ä–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ —è–∫ –∑–∞–ø–∞—Å–Ω–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç
                                localCalculateReward();
                                return;
                            }
                        } else {
                            localCalculateReward();
                            return;
                        }
                    }

                    window.WinixAPI.calculateExpectedReward(amount, period)
                        .then(data => {
                            if (data.status === 'success' && data.data && typeof data.data.reward === 'number') {
                                rewardElement.textContent = data.data.reward.toFixed(2);
                            } else {
                                // –õ–æ–∫–∞–ª—å–Ω–∏–π —Ä–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –ø—Ä–∏ –ø–æ–º–∏–ª—Ü—ñ –¥–∞–Ω–∏—Ö
                                localCalculateReward();
                            }
                        })
                        .catch(error => {
                            console.error('–ü–æ–º–∏–ª–∫–∞ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É –≤–∏–Ω–∞–≥–æ—Ä–æ–¥–∏:', error);
                            // –õ–æ–∫–∞–ª—å–Ω–∏–π —Ä–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –ø—Ä–∏ –ø–æ–º–∏–ª—Ü—ñ –∑–∞–ø–∏—Ç—É
                            localCalculateReward();
                        });
                } catch (e) {
                    console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Å–ø—Ä–æ–±—ñ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É –≤–∏–Ω–∞–≥–æ—Ä–æ–¥–∏:', e);
                    localCalculateReward();
                }
            }

            // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π –¥–ª—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ —Ñ–æ—Ä–º–∏
            // –°—Ç–≤–æ—Ä—é—î–º–æ –∫–æ–ø—ñ—ó –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è –≤—Å—ñ—Ö –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤
            if (amountInput.parentNode) {
                const newAmountInput = amountInput.cloneNode(true);
                amountInput.parentNode.replaceChild(newAmountInput, amountInput);
                newAmountInput.addEventListener('input', updateReward);
            }

            if (periodSelect.parentNode) {
                const newPeriodSelect = periodSelect.cloneNode(true);
                periodSelect.parentNode.replaceChild(newPeriodSelect, periodSelect);
                newPeriodSelect.addEventListener('change', updateReward);
            }

            // –ö–Ω–æ–ø–∫–∞ "Max"
            const maxButton = document.getElementById('max-button');
            if (maxButton && amountInput) {
                // –°—Ç–≤–æ—Ä—é—î–º–æ –∫–æ–ø—ñ—é –µ–ª–µ–º–µ–Ω—Ç–∞ –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è –≤—Å—ñ—Ö –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤
                const newMaxButton = maxButton.cloneNode(true);
                if (maxButton.parentNode) {
                    maxButton.parentNode.replaceChild(newMaxButton, maxButton);
                }

                newMaxButton.addEventListener('click', function() {
                    try {
                        let balance = 0;

                        // –û—Ç—Ä–∏–º—É—î–º–æ –±–∞–ª–∞–Ω—Å
                        if (window.WinixCore && window.WinixCore.Balance && typeof window.WinixCore.Balance.getTokens === 'function') {
                            balance = window.WinixCore.Balance.getTokens();
                        } else {
                            // –°–ø—Ä–æ–±–∞ –æ—Ç—Ä–∏–º–∞—Ç–∏ –±–∞–ª–∞–Ω—Å –∑ localStorage
                            balance = parseFloat(localStorage.getItem('userTokens') || '0');
                        }

                        // –û–Ω–æ–≤–ª—é—î–º–æ –∑–Ω–∞—á–µ–Ω–Ω—è –ø–æ–ª—è –≤–≤–æ–¥—É
                        document.getElementById('staking-amount').value = balance.toFixed(2);

                        // –í–∏–∫–ª–∏–∫–∞—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –≤–∏–Ω–∞–≥–æ—Ä–æ–¥–∏
                        updateReward();
                    } catch (e) {
                        console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—ñ –∫–Ω–æ–ø–∫–∏ Max:", e);
                    }
                });
            }

            // –ü–æ—á–∞—Ç–∫–æ–≤–µ –æ–±—á–∏—Å–ª–µ–Ω–Ω—è
            updateReward();
        } catch (e) {
            console.warn("‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ñ –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É –≤–∏–Ω–∞–≥–æ—Ä–æ–¥–∏ —Å—Ç–µ–π–∫—ñ–Ω–≥—É:", e);
        }
    }

    // –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ –∑–∞—Ä–æ–±—ñ—Ç–∫—É
    function setupEarnButtons() {
        try {
            // –ö–Ω–æ–ø–∫–∏ –ø—ñ–¥–ø–∏—Å–∫–∏ –Ω–∞ —Å–æ—Ü–º–µ—Ä–µ–∂—ñ
            const subscribeButtons = [
                {id: 'twitter-subscribe', platform: 'twitter'},
                {id: 'telegram-subscribe', platform: 'telegram'},
                {id: 'youtube-subscribe', platform: 'youtube'}
            ];

            subscribeButtons.forEach(button => {
                const btnElement = document.getElementById(button.id);
                if (btnElement) {
                    // –°—Ç–≤–æ—Ä—é—î–º–æ –∫–æ–ø—ñ—é –µ–ª–µ–º–µ–Ω—Ç–∞ –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è –≤—Å—ñ—Ö –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤
                    const newBtnElement = btnElement.cloneNode(true);
                    if (btnElement.parentNode) {
                        btnElement.parentNode.replaceChild(newBtnElement, btnElement);
                    }

                    newBtnElement.addEventListener('click', function() {
                        localStorage.setItem(`${button.platform}_link_clicked`, 'true');

                        let url = '';
                        switch(button.platform) {
                            case 'twitter': url = 'https://twitter.com/winix_project'; break;
                            case 'telegram': url = 'https://t.me/winix_channel'; break;
                            case 'youtube': url = 'https://youtube.com/@winix_project'; break;
                        }

                        window.open(url, '_blank');
                    });
                }
            });

            // –ö–Ω–æ–ø–∫–∏ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –ø—ñ–¥–ø–∏—Å–∫–∏
            const verifyButtons = [
                {id: 'twitter-verify', platform: 'twitter', reward: 50},
                {id: 'telegram-verify', platform: 'telegram', reward: 80},
                {id: 'youtube-verify', platform: 'youtube', reward: 50}
            ];

            verifyButtons.forEach(button => {
                const btnElement = document.getElementById(button.id);
                if (btnElement) {
                    // –°—Ç–≤–æ—Ä—é—î–º–æ –∫–æ–ø—ñ—é –µ–ª–µ–º–µ–Ω—Ç–∞ –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è –≤—Å—ñ—Ö –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤
                    const newBtnElement = btnElement.cloneNode(true);
                    if (btnElement.parentNode) {
                        btnElement.parentNode.replaceChild(newBtnElement, btnElement);
                    }

                    newBtnElement.addEventListener('click', async function() {
                        try {
                            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –∑–∞–≤–¥–∞–Ω–Ω—è –≤–∂–µ –≤–∏–∫–æ–Ω–∞–Ω–æ
                            if (localStorage.getItem(`${button.platform}_task_completed`) === 'true') {
                                if (window.WinixCore && window.WinixCore.UI && typeof window.WinixCore.UI.showNotification === 'function') {
                                    window.WinixCore.UI.showNotification('–¶–µ –∑–∞–≤–¥–∞–Ω–Ω—è –≤–∂–µ –≤–∏–∫–æ–Ω–∞–Ω–æ!', window.WinixCore.MESSAGE_TYPES ? window.WinixCore.MESSAGE_TYPES.INFO : 'info');
                                } else {
                                    alert('–¶–µ –∑–∞–≤–¥–∞–Ω–Ω—è –≤–∂–µ –≤–∏–∫–æ–Ω–∞–Ω–æ!');
                                }
                                return;
                            }

                            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –∫–ª—ñ–∫–Ω—É–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É –ø—ñ–¥–ø–∏—Å–∫–∏
                            if (localStorage.getItem(`${button.platform}_link_clicked`) !== 'true') {
                                if (window.WinixCore && window.WinixCore.UI && typeof window.WinixCore.UI.showNotification === 'function') {
                                    window.WinixCore.UI.showNotification('–°–ø–æ—á–∞—Ç–∫—É –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É "–ü—ñ–¥–ø–∏—Å–∞—Ç–∏—Å—å"!', window.WinixCore.MESSAGE_TYPES ? window.WinixCore.MESSAGE_TYPES.WARNING : 'warning');
                                } else {
                                    alert('–°–ø–æ—á–∞—Ç–∫—É –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É "–ü—ñ–¥–ø–∏—Å–∞—Ç–∏—Å—å"!');
                                }
                                return;
                            }

                            if (window.WinixCore && window.WinixCore.UI && typeof window.WinixCore.UI.showNotification === 'function') {
                                window.WinixCore.UI.showNotification('–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø—ñ–¥–ø–∏—Å–∫–∏...', window.WinixCore.MESSAGE_TYPES ? window.WinixCore.MESSAGE_TYPES.INFO : 'info');
                            } else {
                                alert('–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø—ñ–¥–ø–∏—Å–∫–∏...');
                            }

                            // –î–û–î–ê–ù–û: –°–ø–æ—á–∞—Ç–∫—É –æ–Ω–æ–≤–ª—é—î–º–æ ID —á–µ—Ä–µ–∑ getUserData
                            if (window.WinixAuth && typeof window.WinixAuth.getUserData === 'function') {
                                window.WinixAuth.getUserData()
                                    .then(() => {
                                        verifySubscription();
                                    })
                                    .catch(error => {
                                        console.warn("‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:", error);
                                        verifySubscription();
                                    });
                            } else {
                                verifySubscription();
                            }
                        } catch (e) {
                            console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–µ—Ä–∏—Ñ—ñ–∫–∞—Ü—ñ—ó –ø—ñ–¥–ø–∏—Å–∫–∏:", e);
                        }
                    });
                }
            });
        } catch (e) {
            console.warn("‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ñ –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –∑–∞—Ä–æ–±—ñ—Ç–∫—É:", e);
        }
    }

    // –§—É–Ω–∫—Ü—ñ—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –ø—ñ–¥–ø–∏—Å–∫–∏
    function verifySubscription(button) {
        try {
            // –Ü–º—ñ—Ç—É—î–º–æ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É –ø—ñ–¥–ø–∏—Å–∫–∏
            setTimeout(() => {
                const randomSuccess = Math.random() > 0.3; // 70% —à–∞–Ω—Å —É—Å–ø—ñ—Ö—É

                if (randomSuccess) {
                    if (window.WinixAPI && typeof window.WinixAPI.addTokens === 'function') {
                        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ ID
                        const userId = localStorage.getItem('telegram_user_id');
                        if (!isValidId(userId)) {
                            console.warn('‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –Ω–∞—Ä–∞—Ö—É–≤–∞—Ç–∏ –≤–∏–Ω–∞–≥–æ—Ä–æ–¥—É: –Ω–µ–≤–∞–ª—ñ–¥–Ω–∏–π ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞');

                            // –ù–∞–º–∞–≥–∞—î–º–æ—Å—è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏ getUserId –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –≤–∞–ª—ñ–¥–Ω–æ–≥–æ ID
                            if (typeof window.WinixAPI.getUserId === 'function') {
                                const validId = window.WinixAPI.getUserId();
                                if (!validId) {
                                    if (window.WinixCore && window.WinixCore.UI && typeof window.WinixCore.UI.showNotification === 'function') {
                                        window.WinixCore.UI.showNotification(
                                            "–ù–µ –≤–¥–∞–ª–æ—Å—è –Ω–∞—Ä–∞—Ö—É–≤–∞—Ç–∏ –≤–∏–Ω–∞–≥–æ—Ä–æ–¥—É. –°–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Å—Ç–æ—Ä—ñ–Ω–∫—É.",
                                            window.WinixCore.MESSAGE_TYPES ? window.WinixCore.MESSAGE_TYPES.ERROR : 'error'
                                        );
                                    } else {
                                        alert("–ù–µ –≤–¥–∞–ª–æ—Å—è –Ω–∞—Ä–∞—Ö—É–≤–∞—Ç–∏ –≤–∏–Ω–∞–≥–æ—Ä–æ–¥—É. –°–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Å—Ç–æ—Ä—ñ–Ω–∫—É.");
                                    }
                                    return;
                                }
                            }
                        }

                        window.WinixAPI.addTokens(button.reward, `–í–∏–Ω–∞–≥–æ—Ä–æ–¥–∞ –∑–∞ –ø—ñ–¥–ø–∏—Å–∫—É –Ω–∞ ${button.platform}`)
                            .then(data => {
                                if (data.status === 'success') {
                                    // –û–±—Ä–æ–±–ª—è—î–º–æ —É—Å–ø—ñ—à–Ω–µ –Ω–∞—Ä–∞—Ö—É–≤–∞–Ω–Ω—è
                                    handleSuccessfulVerification(button);
                                } else {
                                    if (window.WinixCore && window.WinixCore.UI && typeof window.WinixCore.UI.showNotification === 'function') {
                                        window.WinixCore.UI.showNotification('–ü–æ–º–∏–ª–∫–∞ –Ω–∞—Ä–∞—Ö—É–≤–∞–Ω–Ω—è –≤–∏–Ω–∞–≥–æ—Ä–æ–¥–∏. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.', window.WinixCore.MESSAGE_TYPES ? window.WinixCore.MESSAGE_TYPES.ERROR : 'error');
                                    } else {
                                        alert('–ü–æ–º–∏–ª–∫–∞ –Ω–∞—Ä–∞—Ö—É–≤–∞–Ω–Ω—è –≤–∏–Ω–∞–≥–æ—Ä–æ–¥–∏. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.');
                                    }
                                }
                            })
                            .catch(error => {
                                console.error('–ü–æ–º–∏–ª–∫–∞ –Ω–∞—Ä–∞—Ö—É–≤–∞–Ω–Ω—è –≤–∏–Ω–∞–≥–æ—Ä–æ–¥–∏:', error);
                                if (window.WinixCore && window.WinixCore.UI && typeof window.WinixCore.UI.showNotification === 'function') {
                                    window.WinixCore.UI.showNotification('–ü–æ–º–∏–ª–∫–∞ –Ω–∞—Ä–∞—Ö—É–≤–∞–Ω–Ω—è –≤–∏–Ω–∞–≥–æ—Ä–æ–¥–∏. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.', window.WinixCore.MESSAGE_TYPES ? window.WinixCore.MESSAGE_TYPES.ERROR : 'error');
                                } else {
                                    alert('–ü–æ–º–∏–ª–∫–∞ –Ω–∞—Ä–∞—Ö—É–≤–∞–Ω–Ω—è –≤–∏–Ω–∞–≥–æ—Ä–æ–¥–∏. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.');
                                }
                            });
                    } else if (window.WinixCore && window.WinixCore.Balance && typeof window.WinixCore.Balance.addTokens === 'function') {
                        // –ó–∞–ø–∞—Å–Ω–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç
                        window.WinixCore.Balance.addTokens(button.reward, `–í–∏–Ω–∞–≥–æ—Ä–æ–¥–∞ –∑–∞ –ø—ñ–¥–ø–∏—Å–∫—É –Ω–∞ ${button.platform}`);
                        handleSuccessfulVerification(button);
                    } else {
                        // –°–∏–º—É–ª—è—Ü—ñ—è
                        handleSuccessfulVerification(button);
                    }
                } else {
                    if (window.WinixCore && window.WinixCore.UI && typeof window.WinixCore.UI.showNotification === 'function') {
                        window.WinixCore.UI.showNotification('–ü—ñ–¥–ø–∏—Å–∫—É –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.', window.WinixCore.MESSAGE_TYPES ? window.WinixCore.MESSAGE_TYPES.ERROR : 'error');
                    } else {
                        alert('–ü—ñ–¥–ø–∏—Å–∫—É –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.');
                    }
                }
            }, 1500);
        } catch (e) {
            console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–≤—ñ—Ä—Ü—ñ –ø—ñ–¥–ø–∏—Å–∫–∏:", e);
        }
    }

    // –û–±—Ä–æ–±–∫–∞ —É—Å–ø—ñ—à–Ω–æ—ó –≤–µ—Ä–∏—Ñ—ñ–∫–∞—Ü—ñ—ó
    function handleSuccessfulVerification(button) {
        try {
            // –ü–æ–∑–Ω–∞—á–∞—î–º–æ –∑–∞–≤–¥–∞–Ω–Ω—è —è–∫ –≤–∏–∫–æ–Ω–∞–Ω–µ
            localStorage.setItem(`${button.platform}_task_completed`, 'true');

            // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∏–ª—ñ
            const btnElement = document.getElementById(`${button.id}`);
            const taskItem = btnElement ? btnElement.closest('.task-item') : null;
            if (taskItem) {
                taskItem.classList.add('completed-task');
            }

            if (window.WinixCore && window.WinixCore.UI && typeof window.WinixCore.UI.showNotification === 'function') {
                window.WinixCore.UI.showNotification(`–í—ñ—Ç–∞—î–º–æ! –û—Ç—Ä–∏–º–∞–Ω–æ ${button.reward} $WINIX`, window.WinixCore.MESSAGE_TYPES ? window.WinixCore.MESSAGE_TYPES.SUCCESS : 'success');
            } else {
                alert(`–í—ñ—Ç–∞—î–º–æ! –û—Ç—Ä–∏–º–∞–Ω–æ ${button.reward} $WINIX`);
            }
        } catch (e) {
            console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–±—Ä–æ–±—Ü—ñ —É—Å–ø—ñ—à–Ω–æ—ó –≤–µ—Ä–∏—Ñ—ñ–∫–∞—Ü—ñ—ó:", e);
        }
    }

    // –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ —Ä–µ—Ñ–µ—Ä–∞–ª—ñ–≤
    function setupReferralButtons() {
        try {
            // –ö–Ω–æ–ø–∫–∏ –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –ø–æ—Å–∏–ª–∞–Ω–Ω—è
            const inviteButtons = [
                'invite-friends',
                'invite-friends-10',
                'invite-friends-25',
                'invite-friends-100'
            ];

            inviteButtons.forEach(buttonId => {
                const button = document.getElementById(buttonId);
                if (button) {
                    // –°—Ç–≤–æ—Ä—é—î–º–æ –∫–æ–ø—ñ—é –µ–ª–µ–º–µ–Ω—Ç–∞ –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è –≤—Å—ñ—Ö –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤
                    const newButton = button.cloneNode(true);
                    if (button.parentNode) {
                        button.parentNode.replaceChild(newButton, button);
                    }

                    newButton.addEventListener('click', function() {
                        try {
                            // –î–û–î–ê–ù–û: –°–ø–æ—á–∞—Ç–∫—É –æ–Ω–æ–≤–ª—é—î–º–æ ID —á–µ—Ä–µ–∑ getUserData
                            if (window.WinixAuth && typeof window.WinixAuth.getUserData === 'function') {
                                window.WinixAuth.getUserData()
                                    .then(() => {
                                        copyReferralLink();
                                    })
                                    .catch(error => {
                                        console.warn("‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:", error);
                                        copyReferralLink();
                                    });
                            } else {
                                copyReferralLink();
                            }
                        } catch (e) {
                            console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—ñ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –ø–æ—Å–∏–ª–∞–Ω–Ω—è:", e);
                        }
                    });
                }
            });
        } catch (e) {
            console.warn("‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ñ –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –¥–ª—è –∫–Ω–æ–ø–æ–∫ —Ä–µ—Ñ–µ—Ä–∞–ª—ñ–≤:", e);
        }
    }

    // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –ø–æ—Å–∏–ª–∞–Ω–Ω—è
    function copyReferralLink() {
        try {
            // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ API –º–æ–¥—É–ª—å –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –ø–æ—Å–∏–ª–∞–Ω–Ω—è
            if (window.WinixAPI && typeof window.WinixAPI.getReferralLink === 'function') {
                // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ ID
                const userId = localStorage.getItem('telegram_user_id');
                if (!isValidId(userId)) {
                    console.warn('‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è: –Ω–µ–≤–∞–ª—ñ–¥–Ω–∏–π ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞');

                    // –ù–∞–º–∞–≥–∞—î–º–æ—Å—è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏ getUserId –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –≤–∞–ª—ñ–¥–Ω–æ–≥–æ ID
                    if (typeof window.WinixAPI.getUserId === 'function') {
                        const validId = window.WinixAPI.getUserId();
                        if (!validId) {
                            if (window.WinixCore && window.WinixCore.UI && typeof window.WinixCore.UI.showNotification === 'function') {
                                window.WinixCore.UI.showNotification(
                                    "–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è. –°–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Å—Ç–æ—Ä—ñ–Ω–∫—É.",
                                    window.WinixCore.MESSAGE_TYPES ? window.WinixCore.MESSAGE_TYPES.ERROR : 'error'
                                );
                            } else {
                                alert("–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è. –°–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Å—Ç–æ—Ä—ñ–Ω–∫—É.");
                            }
                            return;
                        }
                    }
                }

                window.WinixAPI.getReferralLink()
                    .then(data => {
                        let referralLink = '';
                        if (data.status === 'success' && data.data && data.data.referral_link) {
                            referralLink = data.data.referral_link;
                        } else {
                            // –ó–∞–ø–∞—Å–Ω–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç
                            if (typeof window.WinixAPI.getUserId === 'function') {
                                const validId = window.WinixAPI.getUserId();
                                referralLink = validId ? window.location.origin + '?ref=' + validId : '';
                            }
                        }

                        if (referralLink) {
                            // –ö–æ–ø—ñ—é—î–º–æ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –≤ –±—É—Ñ–µ—Ä –æ–±–º—ñ–Ω—É
                            navigator.clipboard.writeText(referralLink)
                                .then(() => {
                                    if (window.WinixCore && window.WinixCore.UI && typeof window.WinixCore.UI.showNotification === 'function') {
                                        window.WinixCore.UI.showNotification('–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è —Å–∫–æ–ø—ñ–π–æ–≤–∞–Ω–æ!', window.WinixCore.MESSAGE_TYPES ? window.WinixCore.MESSAGE_TYPES.SUCCESS : 'success');
                                    } else {
                                        alert('–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è —Å–∫–æ–ø—ñ–π–æ–≤–∞–Ω–æ!');
                                    }
                                })
                                .catch(() => {
                                    if (window.WinixCore && window.WinixCore.UI && typeof window.WinixCore.UI.showNotification === 'function') {
                                        window.WinixCore.UI.showNotification('–ü–æ–º–∏–ª–∫–∞ –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è –ø–æ—Å–∏–ª–∞–Ω–Ω—è', window.WinixCore.MESSAGE_TYPES ? window.WinixCore.MESSAGE_TYPES.ERROR : 'error');
                                    } else {
                                        alert('–ü–æ–º–∏–ª–∫–∞ –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è –ø–æ—Å–∏–ª–∞–Ω–Ω—è');
                                    }
                                });
                        } else {
                            if (window.WinixCore && window.WinixCore.UI && typeof window.WinixCore.UI.showNotification === 'function') {
                                window.WinixCore.UI.showNotification('–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è', window.WinixCore.MESSAGE_TYPES ? window.WinixCore.MESSAGE_TYPES.ERROR : 'error');
                            } else {
                                alert('–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è');
                            }
                        }
                    })
                    .catch(error => {
                        console.error('–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –ø–æ—Å–∏–ª–∞–Ω–Ω—è:', error);
                        if (window.WinixCore && window.WinixCore.UI && typeof window.WinixCore.UI.showNotification === 'function') {
                            window.WinixCore.UI.showNotification('–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –ø–æ—Å–∏–ª–∞–Ω–Ω—è', window.WinixCore.MESSAGE_TYPES ? window.WinixCore.MESSAGE_TYPES.ERROR : 'error');
                        } else {
                            alert('–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –ø–æ—Å–∏–ª–∞–Ω–Ω—è');
                        }
                    });
            } else if (window.WinixCore && window.WinixCore.Referrals && typeof window.WinixCore.Referrals.getReferralLink === 'function') {
                // –ó–∞–ø–∞—Å–Ω–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç
                const referralLink = window.WinixCore.Referrals.getReferralLink();

                if (referralLink) {
                    // –ö–æ–ø—ñ—é—î–º–æ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –≤ –±—É—Ñ–µ—Ä –æ–±–º—ñ–Ω—É
                    navigator.clipboard.writeText(referralLink)
                        .then(() => {
                            if (window.WinixCore && window.WinixCore.UI && typeof window.WinixCore.UI.showNotification === 'function') {
                                window.WinixCore.UI.showNotification('–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è —Å–∫–æ–ø—ñ–π–æ–≤–∞–Ω–æ!', window.WinixCore.MESSAGE_TYPES ? window.WinixCore.MESSAGE_TYPES.SUCCESS : 'success');
                            } else {
                                alert('–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è —Å–∫–æ–ø—ñ–π–æ–≤–∞–Ω–æ!');
                            }
                        })
                        .catch(() => {
                            if (window.WinixCore && window.WinixCore.UI && typeof window.WinixCore.UI.showNotification === 'function') {
                                window.WinixCore.UI.showNotification('–ü–æ–º–∏–ª–∫–∞ –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è –ø–æ—Å–∏–ª–∞–Ω–Ω—è', window.WinixCore.MESSAGE_TYPES ? window.WinixCore.MESSAGE_TYPES.ERROR : 'error');
                            } else {
                                alert('–ü–æ–º–∏–ª–∫–∞ –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è –ø–æ—Å–∏–ª–∞–Ω–Ω—è');
                            }
                        });
                } else {
                    if (window.WinixCore && window.WinixCore.UI && typeof window.WinixCore.UI.showNotification === 'function') {
                        window.WinixCore.UI.showNotification('–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è', window.WinixCore.MESSAGE_TYPES ? window.WinixCore.MESSAGE_TYPES.ERROR : 'error');
                    } else {
                        alert('–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è');
                    }
                }
            } else {
                // –°–∏–º—É–ª—è—Ü—ñ—è
                const userId = localStorage.getItem('telegram_user_id') || '123456';
                const referralLink = window.location.origin + '?ref=' + userId;

                navigator.clipboard.writeText(referralLink)
                    .then(() => {
                        if (window.WinixCore && window.WinixCore.UI && typeof window.WinixCore.UI.showNotification === 'function') {
                            window.WinixCore.UI.showNotification('–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è —Å–∫–æ–ø—ñ–π–æ–≤–∞–Ω–æ!', window.WinixCore.MESSAGE_TYPES ? window.WinixCore.MESSAGE_TYPES.SUCCESS : 'success');
                        } else {
                            alert('–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è —Å–∫–æ–ø—ñ–π–æ–≤–∞–Ω–æ!');
                        }
                    })
                    .catch(() => {
                        if (window.WinixCore && window.WinixCore.UI && typeof window.WinixCore.UI.showNotification === 'function') {
                            window.WinixCore.UI.showNotification('–ü–æ–º–∏–ª–∫–∞ –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è –ø–æ—Å–∏–ª–∞–Ω–Ω—è', window.WinixCore.MESSAGE_TYPES ? window.WinixCore.MESSAGE_TYPES.ERROR : 'error');
                        } else {
                            alert('–ü–æ–º–∏–ª–∫–∞ –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è –ø–æ—Å–∏–ª–∞–Ω–Ω—è');
                        }
                    });
            }
        } catch (e) {
            console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—ñ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –ø–æ—Å–∏–ª–∞–Ω–Ω—è:", e);
        }
    }

    // –ü–µ—Ä—ñ–æ–¥–∏—á–Ω–∞ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è –¥–∞–Ω–∏—Ö
    function setupPeriodicSync() {
        // –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑—É—î–º–æ –¥–∞–Ω—ñ –∫–æ–∂–Ω—ñ 30 —Å–µ–∫—É–Ω–¥
        const syncInterval = setInterval(async () => {
            try {
                // –î–û–î–ê–ù–û: –ü—Ä—ñ–æ—Ä–∏—Ç–µ—Ç–Ω–∞ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è —á–µ—Ä–µ–∑ getUserData
                if (window.WinixAuth && typeof window.WinixAuth.getUserData === 'function') {
                    window.WinixAuth.getUserData()
                        .then(() => {
                            console.log("‚úÖ –ü–µ—Ä—ñ–æ–¥–∏—á–Ω–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞");
                        })
                        .catch(err => {
                            console.warn("‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä—ñ–æ–¥–∏—á–Ω–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö:", err);
                            syncFallback();
                        });
                } else {
                    syncFallback();
                }

                // –†–µ–∑–µ—Ä–≤–Ω–∏–π –º–µ—Ç–æ–¥ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó
                function syncFallback() {
                    if (window.WinixAPI && typeof window.WinixAPI.getUserData === 'function') {
                        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –≤–∞–ª—ñ–¥–Ω—ñ—Å—Ç—å ID
                        const userId = localStorage.getItem('telegram_user_id');
                        if (!isValidId(userId)) {
                            console.warn("‚ö†Ô∏è –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—é –≤—ñ–¥–∫–ª–∞–¥–µ–Ω–æ: –Ω–µ–≤–∞–ª—ñ–¥–Ω–∏–π ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞");

                            // –°–ø—Ä–æ–±—É—î–º–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ –≤–∞–ª—ñ–¥–Ω–∏–π ID —á–µ—Ä–µ–∑ –ø–æ–∫—Ä–∞—â–µ–Ω—É —Ñ—É–Ω–∫—Ü—ñ—é
                            if (typeof window.WinixAPI.getUserId === 'function') {
                                const validId = window.WinixAPI.getUserId();
                                if (!validId) {
                                    return; // –ü—Ä–æ–ø—É—Å–∫–∞—î–º–æ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—é —Ü—å–æ–≥–æ —Ä–∞–∑—É
                                }
                            } else {
                                return; // –ü—Ä–æ–ø—É—Å–∫–∞—î–º–æ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—é —Ü—å–æ–≥–æ —Ä–∞–∑—É
                            }
                        }

                        // –û–Ω–æ–≤–ª—é—î–º–æ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
                        window.WinixAPI.getUserData()
                            .then(data => {
                                if (data.status === 'success') {
                                    // –û–Ω–æ–≤–ª—é—î–º–æ –¥–∞–Ω—ñ –≤ localStorage
                                    if (data.data.balance !== undefined) {
                                        localStorage.setItem('userTokens', data.data.balance.toString());
                                        localStorage.setItem('winix_balance', data.data.balance.toString());
                                    }

                                    if (data.data.coins !== undefined) {
                                        localStorage.setItem('userCoins', data.data.coins.toString());
                                        localStorage.setItem('winix_coins', data.data.coins.toString());
                                    }

                                    // –û–Ω–æ–≤–ª—é—î–º–æ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å
                                    if (window.WinixCore && window.WinixCore.UI && typeof window.WinixCore.UI.updateBalanceDisplay === 'function') {
                                        window.WinixCore.UI.updateBalanceDisplay();
                                    }
                                }
                            })
                            .catch(error => {
                                console.error("–ü–æ–º–∏–ª–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó –¥–∞–Ω–∏—Ö:", error);
                            });
                    }
                }
            } catch (error) {
                console.error("–ü–æ–º–∏–ª–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó –¥–∞–Ω–∏—Ö:", error);
            }
        }, 30000); // 30 —Å–µ–∫—É–Ω–¥

        // –û—á–∏—â–∞—î–º–æ —ñ–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–∏ –∑–∞–∫—Ä–∏—Ç—Ç—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
        window.addEventListener('beforeunload', () => {
            clearInterval(syncInterval);
        });
    }

    // –ï–∫—Å–ø–æ—Ä—Ç—É—î–º–æ –≥–ª–æ–±–∞–ª—å–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –¥–ª—è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è —ñ–Ω—à–∏–º–∏ –º–æ–¥—É–ª—è–º–∏
    window.navigateTo = function(section) {
        saveBalanceBeforeNavigation();

        // –ü–µ—Ä–µ—Ö–æ–¥–∏–º–æ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É
        if (section === 'home') {
            window.location.href = 'original-index.html';
        } else {
            window.location.href = section + '.html';
        }
    };

    window.goBack = function() {
        saveBalanceBeforeNavigation();
        window.history.back();
    };

    // –ó–∞–ø—É—Å–∫–∞—î–º–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—é –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ DOM
    document.addEventListener('DOMContentLoaded', function() {
        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –≤–∂–µ –≤—ñ–¥–±—É–ª–∞—Å—è –ø–æ–≤–Ω–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è
        if (window.WinixConnectorInitialized) {
            console.log('‚úÖ WINIX Connector –≤–∂–µ –ø–æ–≤–Ω—ñ—Å—Ç—é —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–∏–π');
            return;
        }

        // –ó–ú–Ü–ù–ï–ù–û: –°–ø–æ—á–∞—Ç–∫—É —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ Telegram WebApp
        initTelegramWebApp();

        // –ó–ú–Ü–ù–ï–ù–û: –°–ø–æ—á–∞—Ç–∫—É –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ ID –≤ localStorage
        const userId = localStorage.getItem('telegram_user_id');
        if (userId && !isValidId(userId)) {
            console.warn("‚ö†Ô∏è CONNECTOR: –í–∏–¥–∞–ª–µ–Ω–Ω—è –Ω–µ–≤–∞–ª—ñ–¥–Ω–æ–≥–æ ID –∑ localStorage:", userId);
            localStorage.removeItem('telegram_user_id');
        }

        // –î–û–î–ê–ù–û: –°–ø–æ—á–∞—Ç–∫—É –æ–Ω–æ–≤–ª—é—î–º–æ –¥–∞–Ω—ñ —á–µ—Ä–µ–∑ getUserData
        if (window.WinixAuth && typeof window.WinixAuth.getUserData === 'function') {
            window.WinixAuth.getUserData()
                .then(() => {
                    console.log("‚úÖ –î–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –æ–Ω–æ–≤–ª–µ–Ω–æ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ DOM");
                    initPage();
                })
                .catch(error => {
                    console.warn("‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:", error);
                    initPage();
                });
        } else {
            initPage();
        }

        // –ù–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ –ø–µ—Ä—ñ–æ–¥–∏—á–Ω—É —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—é
        setupPeriodicSync();
    });

    // –í–∏–∫–æ–Ω—É—î–º–æ –¥—ñ—ó –ø—ñ—Å–ª—è –ø–æ–≤–Ω–æ–≥–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏
    window.addEventListener('load', function() {
        // –î–û–î–ê–ù–û: –û–Ω–æ–≤–ª—é—î–º–æ –¥–∞–Ω—ñ —á–µ—Ä–µ–∑ getUserData –ø—ñ—Å–ª—è –ø–æ–≤–Ω–æ–≥–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
        if (window.WinixAuth && typeof window.WinixAuth.getUserData === 'function') {
            window.WinixAuth.getUserData()
                .then(() => {
                    console.log("‚úÖ –î–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –æ–Ω–æ–≤–ª–µ–Ω–æ –ø—ñ—Å–ª—è –ø–æ–≤–Ω–æ–≥–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è");
                })
                .catch(error => {
                    console.warn("‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:", error);
                });
        }

        // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É –ø—ñ—Å–ª—è –ø–æ–≤–Ω–æ–≥–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
        if (window.WinixCore && window.WinixCore.UI) {
            if (typeof window.WinixCore.UI.updateBalanceDisplay === 'function') {
                window.WinixCore.UI.updateBalanceDisplay();
            }

            if (typeof window.WinixCore.UI.updateStakingDisplay === 'function') {
                window.WinixCore.UI.updateStakingDisplay();
            }
        }
    });

    // –Ø–∫—â–æ DOM –≤–∂–µ –≥–æ—Ç–æ–≤–∏–π, —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ —Å—Ç–æ—Ä—ñ–Ω–∫—É –∑–∞—Ä–∞–∑
    if (document.readyState === 'interactive' || document.readyState === 'complete') {
        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –≤–∂–µ –≤—ñ–¥–±—É–ª–∞—Å—è –ø–æ–≤–Ω–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è
        if (window.WinixConnectorInitialized) {
            console.log('‚úÖ WINIX Connector –≤–∂–µ –ø–æ–≤–Ω—ñ—Å—Ç—é —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–∏–π');
            return;
        }

        // –ó–ú–Ü–ù–ï–ù–û: –°–ø–æ—á–∞—Ç–∫—É –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ ID –≤ localStorage
        const userId = localStorage.getItem('telegram_user_id');
        if (userId && !isValidId(userId)) {
            console.warn("‚ö†Ô∏è CONNECTOR: –í–∏–¥–∞–ª–µ–Ω–Ω—è –Ω–µ–≤–∞–ª—ñ–¥–Ω–æ–≥–æ ID –∑ localStorage:", userId);
            localStorage.removeItem('telegram_user_id');
        }

        // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ —Å—Ç–æ—Ä—ñ–Ω–∫—É
        initPage();

        // –ù–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ –ø–µ—Ä—ñ–æ–¥–∏—á–Ω—É —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—é
        setupPeriodicSync();
    }
})();