// –§–∞–π–ª: frontend/js/winix-loader.js

/**
 * –ì–æ–ª–æ–≤–Ω–∏–π –∑–∞–≤–∞–Ω—Ç–∞–∂—É–≤–∞—á –º–æ–¥—É–ª—ñ–≤ WINIX
 *
 * –ü—Ä–∏–∑–Ω–∞—á–µ–Ω–∏–π –¥–ª—è –≤–∏—Ä—ñ—à–µ–Ω–Ω—è –ø—Ä–æ–±–ª–µ–º —ñ–∑ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è–º –º–æ–¥—É–ª—ñ–≤ ES6,
 * –ø–æ–º–∏–ª–∫–∞–º–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó —Ç–∞ –æ–±—Ä–æ–±–∫–∏ –ø–æ–º–∏–ª–æ–∫ –≤ —Å–∏—Å—Ç–µ–º—ñ WINIX
 *
 * @version 1.0.0
 */

(function() {
  'use strict';

  console.log('üöÄ WINIX-LOADER: –ü–æ—á–∏–Ω–∞—î–º–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—é —Å–∏—Å—Ç–µ–º–∏...');

  // –§–ª–∞–≥–∏ –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è —Å—Ç–∞–Ω—É –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
  const state = {
    initialized: false,
    authFixLoaded: false,
    moduleFixLoaded: false,
    telegramInitialized: false,
    errors: [],
    startTime: Date.now(),
    userId: null,
    debugInfo: {}
  };

  // –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è
  const config = {
    debug: true,
    version: '1.0.0',
    paths: {
      authFix: '/js/auth-fix.js',
      moduleFix: '/js/fix-module-loader.js',
      apiJs: '/js/api.js',
      authJs: '/js/auth.js',
      criticalModules: [
        '/js/tasks/api/models/daily-bonus.js',
        '/js/tasks/config/index.js',
        '/js/tasks/utils/index.js'
      ]
    }
  };

  // –õ–æ–≥—É–≤–∞–Ω–Ω—è –∑ –ø—Ä–µ—Ñ—ñ–∫—Å–æ–º
  function log(message, type = 'log', details = null) {
    const timestamp = new Date().toISOString().substring(11, 19);
    const prefix = `[${timestamp}] üöÄ WINIX-LOADER:`;

    if (details && config.debug) {
      console[type](`${prefix} ${message}`, details);
    } else {
      console[type](`${prefix} ${message}`);
    }

    // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ª–æ–≥–∏ –¥–ª—è –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
    if (type === 'error') {
      state.errors.push({
        message,
        details,
        timestamp: Date.now(),
        timeSinceStart: Date.now() - state.startTime
      });
    }
  }

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –¥–∏–Ω–∞–º—ñ—á–Ω–æ–≥–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å–∫—Ä–∏–ø—Ç—ñ–≤
  function loadScript(src, options = {}) {
    return new Promise((resolve, reject) => {
      const script = document.createElement('script');
      script.src = src;
      script.async = options.async !== false;
      script.defer = options.defer === true;
      script.type = options.type || 'text/javascript';
      script.dataset.loader = 'winix-loader';

      // –û–ø—Ü—ñ–π–Ω—ñ –¥–æ–¥–∞—Ç–∫–æ–≤—ñ –∞—Ç—Ä–∏–±—É—Ç–∏
      if (options.id) script.id = options.id;
      if (options.className) script.className = options.className;

      // –û–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π
      script.onload = () => {
        log(`‚úÖ –°–∫—Ä–∏–ø—Ç –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ: ${src}`);
        resolve(script);
      };

      script.onerror = (error) => {
        log(`‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å–∫—Ä–∏–ø—Ç–∞: ${src}`, 'error', error);
        reject(new Error(`Failed to load script: ${src}`));
      };

      // –î–æ–¥–∞—î–º–æ –¥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞
      document.head.appendChild(script);
      log(`üîÑ –ü–æ—á–∞—Ç–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å–∫—Ä–∏–ø—Ç–∞: ${src}`);
    });
  }

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–∞—Ç—á—É –æ–±'—î–∫—Ç–∞ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ API
  function patchWinixAPI() {
    try {
      if (window.WinixAPI) {
        log('üîß –ü–∞—Ç—á —ñ—Å–Ω—É—é—á–æ–≥–æ WinixAPI...');
        return;
      }

      // –°—Ç–≤–æ—Ä—é—î–º–æ –±–∞–∑–æ–≤—É –∑–∞–≥–ª—É—à–∫—É –¥–ª—è WinixAPI, —è–∫—â–æ –≤—ñ–Ω —â–µ –Ω–µ —ñ—Å–Ω—É—î
      window.WinixAPI = window.WinixAPI || {
        config: {
          baseUrl: window.location.origin,
          version: '3.0.0',
          environment: window.location.hostname.includes('localhost') ? 'development' : 'production',
        },
        getUserId: function() {
          return state.userId || null;
        },
        getAuthToken: function() {
          try {
            return localStorage.getItem('auth_token');
          } catch (e) {
            return null;
          }
        },
        apiRequest: async function(endpoint, method = 'GET', data = null, options = {}) {
          try {
            const userId = this.getUserId();

            // –ü—Ä–æ—Å—Ç–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç –∑–∞–ø–∏—Ç—É –∑ —É—Ä–∞—Ö—É–≤–∞–Ω–Ω—è–º –º–µ—Ç–æ–¥—É
            if (!endpoint.startsWith('http')) {
              if (!endpoint.startsWith('/')) {
                endpoint = `/api/${endpoint}`;
              } else {
                endpoint = `/api${endpoint}`;
              }
            }

            const requestOptions = {
              method: method,
              headers: {
                'Content-Type': 'application/json',
                'Accept': 'application/json'
              }
            };

            // –î–æ–¥–∞—î–º–æ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤ –∑–∞–≥–æ–ª–æ–≤–æ–∫, —è–∫—â–æ –≤—ñ–Ω —î
            if (userId) {
              requestOptions.headers['X-Telegram-User-Id'] = userId;
            }

            // –î–æ–¥–∞—î–º–æ —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó, —è–∫—â–æ –≤—ñ–Ω —î
            const token = this.getAuthToken();
            if (token) {
              requestOptions.headers['Authorization'] = token.startsWith('Bearer ') ? token : `Bearer ${token}`;
            }

            // –î–æ–¥–∞—î–º–æ —Ç—ñ–ª–æ –∑–∞–ø–∏—Ç—É –¥–ª—è POST/PUT/PATCH
            if (data && ['POST', 'PUT', 'PATCH'].includes(method.toUpperCase())) {
              requestOptions.body = JSON.stringify(data);
            }

            // –í–∏–∫–æ–Ω—É—î–º–æ –∑–∞–ø–∏—Ç
            const response = await fetch(endpoint, requestOptions);
            const responseData = await response.json();

            return responseData;
          } catch (error) {
            log(`‚ùå –ü–æ–º–∏–ª–∫–∞ API –∑–∞–ø–∏—Ç—É –¥–æ ${endpoint}`, 'error', error);
            return {
              status: 'error',
              message: error.message || '–ü–æ–º–∏–ª–∫–∞ –∑–∞–ø–∏—Ç—É',
              source: 'winix-loader.apiRequest'
            };
          }
        },
        refreshToken: async function() {
          try {
            const userId = this.getUserId();
            if (!userId) return null;

            return this.apiRequest('auth/refresh-token', 'POST', {
              telegram_id: userId,
              token: this.getAuthToken() || ''
            });
          } catch (error) {
            log('‚ùå –ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω—É', 'error', error);
            return null;
          }
        }
      };

      log('‚úÖ –°—Ç–≤–æ—Ä–µ–Ω–æ –∑–∞–≥–ª—É—à–∫—É WinixAPI');
    } catch (error) {
      log('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø–∞—Ç—á—ñ WinixAPI', 'error', error);
    }
  }

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó Telegram API
  function initializeTelegram() {
    try {
      if (window.Telegram && window.Telegram.WebApp) {
        // –í–∏–∫–ª–∏–∫–∞—î–º–æ ready() —ñ expand()
        try {
          window.Telegram.WebApp.ready();
          window.Telegram.WebApp.expand();
          log('‚úÖ Telegram WebApp —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ (–≤–∂–µ —ñ—Å–Ω—É—î)');
          state.telegramInitialized = true;

          // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–¥—ñ—é –ø—Ä–æ –≥–æ—Ç–æ–≤–Ω—ñ—Å—Ç—å
          document.dispatchEvent(new CustomEvent('telegram-ready', {
            detail: { timestamp: Date.now() }
          }));

          return true;
        } catch (e) {
          log('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏–∫–ª–∏–∫—É Telegram WebApp –º–µ—Ç–æ–¥—ñ–≤', 'warn', e);
        }
      }

      // –Ø–∫—â–æ Telegram –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∏–π, –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —Ü–µ –ª–æ–∫–∞–ª—å–Ω–µ —Å–µ—Ä–µ–¥–æ–≤–∏—â–µ
      if (window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1') {
        log('‚ö†Ô∏è –õ–æ–∫–∞–ª—å–Ω–µ —Å–µ—Ä–µ–¥–æ–≤–∏—â–µ, —Å—Ç–≤–æ—Ä—é—î–º–æ —Å—Ç–∞–± –¥–ª—è Telegram WebApp', 'warn');

        window.Telegram = {
          WebApp: {
            ready: function() { log('üì± Mock Telegram.WebApp.ready() –≤–∏–∫–ª–∏–∫–∞–Ω–æ'); },
            expand: function() { log('üì± Mock Telegram.WebApp.expand() –≤–∏–∫–ª–∏–∫–∞–Ω–æ'); },
            initData: '',
            initDataUnsafe: {
              user: {
                id: '685982514', // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Ç–µ—Å—Ç–æ–≤–∏–π ID –∑ .env
                first_name: 'Test',
                last_name: 'User',
                username: 'testuser',
                language_code: 'uk'
              },
              start_param: ''
            }
          }
        };

        state.telegramInitialized = true;

        // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–¥—ñ—é –ø—Ä–æ –≥–æ—Ç–æ–≤–Ω—ñ—Å—Ç—å
        document.dispatchEvent(new CustomEvent('telegram-ready', {
          detail: { timestamp: Date.now(), isMock: true }
        }));

        log('‚úÖ –°—Ç–≤–æ—Ä–µ–Ω–æ —Å—Ç–∞–± Telegram WebApp –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ—ó —Ä–æ–∑—Ä–æ–±–∫–∏');
        return true;
      }

      return false;
    } catch (error) {
      log('‚ùå –ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó Telegram', 'error', error);
      return false;
    }
  }

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —ñ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
  function getUserId() {
    try {
      // –Ø–∫—â–æ ID –≤–∂–µ –∑–±–µ—Ä–µ–∂–µ–Ω–æ –≤ —Å—Ç–∞–Ω—ñ
      if (state.userId) return state.userId;

      // –§—É–Ω–∫—Ü—ñ—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –≤–∞–ª—ñ–¥–Ω–æ—Å—Ç—ñ ID
      function isValidId(id) {
        return (
          id &&
          id !== 'undefined' &&
          id !== 'null' &&
          id !== undefined &&
          id !== null &&
          typeof id !== 'function' &&
          id.toString().trim() !== ''
        );
      }

      // 1. –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ Telegram WebApp
      if (window.Telegram && window.Telegram.WebApp) {
        try {
          if (
            window.Telegram.WebApp.initDataUnsafe &&
            window.Telegram.WebApp.initDataUnsafe.user &&
            window.Telegram.WebApp.initDataUnsafe.user.id
          ) {
            const tgUserId = window.Telegram.WebApp.initDataUnsafe.user.id.toString();

            if (isValidId(tgUserId)) {
              try {
                localStorage.setItem('telegram_user_id', tgUserId);
              } catch (e) {}

              state.userId = tgUserId;
              return tgUserId;
            }
          }
        } catch (e) {
          log('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è ID –∑ Telegram WebApp', 'warn', e);
        }
      }

      // 2. –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ localStorage
      try {
        const localId = localStorage.getItem('telegram_user_id');
        if (isValidId(localId)) {
          state.userId = localId;
          return localId;
        }
      } catch (e) {
        log('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è ID –∑ localStorage', 'warn', e);
      }

      // 3. –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ DOM –µ–ª–µ–º–µ–Ω—Ç
      try {
        const userIdElement = document.getElementById('user-id');
        if (userIdElement && userIdElement.textContent) {
          const domId = userIdElement.textContent.trim();
          if (isValidId(domId)) {
            try {
              localStorage.setItem('telegram_user_id', domId);
            } catch (e) {}

            state.userId = domId;
            return domId;
          }
        }
      } catch (e) {
        log('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è ID –∑ DOM', 'warn', e);
      }

      // 4. –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ URL –ø–∞—Ä–∞–º–µ—Ç—Ä–∏
      try {
        const urlParams = new URLSearchParams(window.location.search);
        const urlId = urlParams.get('id') || urlParams.get('user_id') || urlParams.get('telegram_id');
        if (isValidId(urlId)) {
          try {
            localStorage.setItem('telegram_user_id', urlId);
          } catch (e) {}

          state.userId = urlId;
          return urlId;
        }
      } catch (e) {
        log('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è ID –∑ URL', 'warn', e);
      }

      // 5. –î–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Ç–µ—Å—Ç–æ–≤–∏–π ID
      if (window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1') {
        const testId = '685982514';
        try {
          localStorage.setItem('telegram_user_id', testId);
        } catch (e) {}

        state.userId = testId;
        log('‚ö†Ô∏è –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Ç–µ—Å—Ç–æ–≤–∏–π ID –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞', 'warn');
        return testId;
      }

      return null;
    } catch (error) {
      log('‚ùå –ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞', 'error', error);
      return null;
    }
  }

  // –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤ DOM
  function setUserIdInDom() {
    try {
      const userId = getUserId();
      if (!userId) return;

      // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –µ–ª–µ–º–µ–Ω—Ç–∞ –∞–±–æ —Å—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤–∏–π
      let userIdElement = document.getElementById('user-id');

      if (!userIdElement) {
        userIdElement = document.createElement('div');
        userIdElement.id = 'user-id';
        userIdElement.style.display = 'none';
        document.body.appendChild(userIdElement);
      }

      userIdElement.textContent = userId;
      log(`‚úÖ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ (${userId}) –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –≤ DOM`);
    } catch (error) {
      log('‚ùå –ü–æ–º–∏–ª–∫–∞ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è ID –≤ DOM', 'error', error);
    }
  }

  // –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –≤–∏–ø—Ä–∞–≤–ª–µ–Ω—å –¥–ª—è —Å–∏—Å—Ç–µ–º–∏
  async function loadFixes() {
    try {
      // –°—Ç–≤–æ—Ä—é—î–º–æ –≥–ª–æ–±–∞–ª—å–Ω–∏–π —Ä–µ—î—Å—Ç—Ä –º–æ–¥—É–ª—ñ–≤, —è–∫—â–æ –≤—ñ–Ω —â–µ –Ω–µ —ñ—Å–Ω—É—î
      window.ModuleRegistry = window.ModuleRegistry || {
        modules: {},
        register: function(name, module) {
          this.modules[name] = module;
          log(`üì¶ –ó–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–æ –º–æ–¥—É–ª—å: ${name}`);
          return module;
        },
        get: function(name) {
          return this.modules[name];
        },
        list: function() {
          return Object.keys(this.modules);
        }
      };

      // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –¥–ª—è –º–æ–¥—É–ª—ñ–≤
      await loadScript(config.paths.moduleFix, { id: 'module-fix-script' });
      state.moduleFixLoaded = true;

      // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó
      await loadScript(config.paths.authFix, { id: 'auth-fix-script' });
      state.authFixLoaded = true;

      log('‚úÖ –í—Å—ñ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ');
      return true;
    } catch (error) {
      log('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω—å', 'error', error);
      return false;
    }
  }

  // –í–∏–∫–æ–Ω–∞–Ω–Ω—è –∑–∞–ø–∏—Ç—É –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ñ–∞–π–ª—É, —â–æ–± –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –¥–æ—Å—Ç—É–ø–Ω—ñ—Å—Ç—å
  async function checkFileAvailability(path) {
    try {
      const response = await fetch(path, { method: 'HEAD' });
      return {
        path,
        exists: response.ok,
        status: response.status
      };
    } catch (error) {
      return {
        path,
        exists: false,
        status: 0,
        error: error.message
      };
    }
  }

  // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ –∫—Ä–∏—Ç–∏—á–Ω–∏—Ö —Ñ–∞–π–ª—ñ–≤
  async function checkCriticalFiles() {
    try {
      const results = await Promise.all([
        ...config.paths.criticalModules.map(path => checkFileAvailability(path)),
        checkFileAvailability(config.paths.apiJs),
        checkFileAvailability(config.paths.authJs)
      ]);

      const allExist = results.every(result => result.exists);

      // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –≤ —Å—Ç–∞–Ω—ñ –¥–ª—è –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
      state.debugInfo.fileCheck = results;

      log('üìã –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ –∫—Ä–∏—Ç–∏—á–Ω–∏—Ö —Ñ–∞–π–ª—ñ–≤:', allExist ? 'log' : 'warn', results);

      return allExist;
    } catch (error) {
      log('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ —Ñ–∞–π–ª—ñ–≤', 'error', error);
      return false;
    }
  }

  // –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏—á–Ω–∏—Ö –¥–∞–Ω–∏—Ö –Ω–∞ —Å–µ—Ä–≤–µ—Ä
  async function sendDiagnostics() {
    try {
      // –ó–±–∏—Ä–∞—î–º–æ –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏—á–Ω—ñ –¥–∞–Ω—ñ
      const diagnosticData = {
        state: { ...state },
        navigator: {
          userAgent: navigator.userAgent,
          language: navigator.language,
          onLine: navigator.onLine
        },
        localStorage: {
          available: (() => {
            try {
              const test = 'test';
              localStorage.setItem(test, test);
              localStorage.removeItem(test);
              return true;
            } catch (e) {
              return false;
            }
          })()
        },
        screen: {
          width: window.innerWidth,
          height: window.innerHeight,
          devicePixelRatio: window.devicePixelRatio
        },
        url: window.location.href,
        timestamp: Date.now()
      };

      // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏—á–Ω—ñ –¥–∞–Ω—ñ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
      const response = await fetch('/api/debug', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(diagnosticData)
      });

      if (!response.ok) {
        throw new Error(`–ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∏: ${response.status}`);
      }

      log('‚úÖ –î—ñ–∞–≥–Ω–æ—Å—Ç–∏—á–Ω—ñ –¥–∞–Ω—ñ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä');
      return true;
    } catch (error) {
      log('‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –≤—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏—á–Ω—ñ –¥–∞–Ω—ñ', 'warn', error);
      return false;
    }
  }

  // –û—Å–Ω–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
  async function initialize() {
    if (state.initialized) return;

    try {
      log('üöÄ –ü–æ—á–∞—Ç–æ–∫ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó —Å–∏—Å—Ç–µ–º–∏ WINIX');

      // 1. –û—Ç—Ä–∏–º—É—î–º–æ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
      const userId = getUserId();
      log(`üîë ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞: ${userId || '–Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ'}`);

      // 2. –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ Telegram API
      initializeTelegram();

      // 3. –°—Ç–≤–æ—Ä—é—î–º–æ –±–∞–∑–æ–≤—É –∑–∞–≥–ª—É—à–∫—É –¥–ª—è WinixAPI
      patchWinixAPI();

      // 4. –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –∫—Ä–∏—Ç–∏—á–Ω–∏—Ö —Ñ–∞–π–ª—ñ–≤
      await checkCriticalFiles();

      // 5. –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è
      await loadFixes();

      // 6. –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤ DOM
      setUserIdInDom();

      // 7. –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏—á–Ω—ñ –¥–∞–Ω—ñ
      await sendDiagnostics();

      // 8. –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–¥—ñ—é –ø—Ä–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—é
      document.dispatchEvent(new CustomEvent('winix-loader-ready', {
        detail: {
          state,
          timestamp: Date.now(),
          userId,
          telegramAvailable: state.telegramInitialized
        }
      }));

      state.initialized = true;
      log(`‚úÖ –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—é –∑–∞–≤–µ—Ä—à–µ–Ω–æ –∑–∞ ${Date.now() - state.startTime}ms`);

      return true;
    } catch (error) {
      log('‚ùå –ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó', 'error', error);
      state.errors.push({
        message: '–ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó',
        error,
        timestamp: Date.now(),
        timeSinceStart: Date.now() - state.startTime
      });

      return false;
    }
  }

  // –ó–∞–ø—É—Å–∫–∞—î–º–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—é
  initialize().then((success) => {
    // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –≥–ª–æ–±–∞–ª—å–Ω–∏–π API –¥–ª—è –¥–æ—Å—Ç—É–ø—É
    window.WinixLoader = {
      state,
      config,
      initialize,
      getUserId,
      loadScript,
      checkCriticalFiles,
      sendDiagnostics,
      version: config.version
    };
  });

  // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è DOM
  document.addEventListener('DOMContentLoaded', function() {
    log('üìÑ DOMContentLoaded –æ—Ç—Ä–∏–º–∞–Ω–æ');

    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —â–µ —Ä–∞–∑ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤ DOM
    setUserIdInDom();

    // –Ø–∫—â–æ –Ω–µ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ, —Ä–æ–±–∏–º–æ —Ü–µ –∑–∞—Ä–∞–∑
    if (!state.initialized) {
      initialize();
    }
  });
})();