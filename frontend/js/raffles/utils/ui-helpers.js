/**
 * ui-helpers.js - –£—Ç–∏–ª—ñ—Ç–∞—Ä–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ UI
 */

import WinixRaffles from '../globals.js';

/**
 * –ü–æ–∫–∞–∑–∞—Ç–∏ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
 * @param {string} message - –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, —è–∫–µ –±—É–¥–µ –ø–æ–∫–∞–∑–∞–Ω–æ
 */
export function showLoading(message = '–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...') {
    // –°–ø–æ—á–∞—Ç–∫—É –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —î –≥–ª–æ–±–∞–ª—å–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è
    if (window.showLoading && typeof window.showLoading === 'function') {
        try {
            return window.showLoading(message);
        } catch (e) {
            console.warn("–ü–æ–º–∏–ª–∫–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ showLoading:", e);
        }
    }

    // –ó–∞–ø–∞—Å–Ω–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç, —è–∫—â–æ –≥–ª–æ–±–∞–ª—å–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –Ω–µ –ø—Ä–∞—Ü—é—î
    const spinner = document.getElementById('loading-spinner');
    if (spinner) spinner.classList.add('show');

    // –î–æ–¥–∞—î–º–æ —Ç–µ–∫—Å—Ç –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, —è–∫—â–æ —î –µ–ª–µ–º–µ–Ω—Ç
    const spinnerText = document.getElementById('loading-spinner-text');
    if (spinnerText) spinnerText.textContent = message;
}

/**
 * –ü—Ä–∏—Ö–æ–≤–∞—Ç–∏ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
 */
export function hideLoading() {
    // –°–ø–æ—á–∞—Ç–∫—É –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —î –≥–ª–æ–±–∞–ª—å–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è
    if (window.hideLoading && typeof window.hideLoading === 'function') {
        try {
            return window.hideLoading();
        } catch (e) {
            console.warn("–ü–æ–º–∏–ª–∫–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ hideLoading:", e);
        }
    }

    // –ó–∞–ø–∞—Å–Ω–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç, —è–∫—â–æ –≥–ª–æ–±–∞–ª—å–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –Ω–µ –ø—Ä–∞—Ü—é—î
    const spinner = document.getElementById('loading-spinner');
    if (spinner) spinner.classList.remove('show');
}

/**
 * –ü–æ–∫–∞–∑–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è toast
 * @param {string} message - –¢–µ–∫—Å—Ç –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
 * @param {number} duration - –¢—Ä–∏–≤–∞–ª—ñ—Å—Ç—å –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –≤ –º—ñ–ª—ñ—Å–µ–∫—É–Ω–¥–∞—Ö
 */
export function showToast(message, duration = 3000) {
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –≥–ª–æ–±–∞–ª—å–Ω–æ—ó —Ñ—É–Ω–∫—Ü—ñ—ó
    if (window.showToast && typeof window.showToast === 'function') {
        try {
            return window.showToast(message, duration);
        } catch (e) {
            console.warn("–ü–æ–º–∏–ª–∫–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ showToast:", e);
        }
    }

    // –ó–∞–ø–∞—Å–Ω–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç, —è–∫—â–æ –≥–ª–æ–±–∞–ª—å–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –≤—ñ–¥—Å—É—Ç–Ω—è
    const toast = document.getElementById('toast-message');
    if (!toast) {
        // –°—Ç–≤–æ—Ä—é—î–º–æ –µ–ª–µ–º–µ–Ω—Ç toast
        const newToast = document.createElement('div');
        newToast.id = 'toast-message';
        newToast.className = 'toast-message';
        document.body.appendChild(newToast);

        // –î–æ–¥–∞—î–º–æ —Å—Ç–∏–ª—ñ, —è–∫—â–æ —ó—Ö –Ω–µ–º–∞—î
        if (!document.getElementById('toast-styles')) {
            const style = document.createElement('style');
            style.id = 'toast-styles';
            style.textContent = `
                .toast-message {
                    position: fixed;
                    bottom: 20px;
                    left: 50%;
                    transform: translateX(-50%) translateY(100px);
                    background: rgba(0, 0, 0, 0.7);
                    color: white;
                    padding: 12px 24px;
                    border-radius: 8px;
                    z-index: 10000;
                    opacity: 0;
                    transition: transform 0.3s, opacity 0.3s;
                    font-size: 16px;
                    max-width: 90%;
                    text-align: center;
                }
                .toast-message.show {
                    opacity: 1;
                    transform: translateX(-50%) translateY(0);
                }
            `;
            document.head.appendChild(style);
        }

        setTimeout(() => showToast(message, duration), 100);
        return;
    }

    toast.textContent = message;
    toast.classList.add('show');

    setTimeout(() => {
        toast.classList.remove('show');
    }, duration);
}

/**
 * –ü–æ–∫–∞–∑–∞—Ç–∏ –¥—ñ–∞–ª–æ–≥ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è
 * @param {string} message - –¢–µ–∫—Å—Ç –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
 * @param {string} confirmText - –¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è
 * @param {string} cancelText - –¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ —Å–∫–∞—Å—É–≤–∞–Ω–Ω—è
 * @returns {Promise<boolean>} –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è
 */
export function showConfirm(message, confirmText = '–¢–∞–∫', cancelText = '–ù—ñ') {
    return new Promise((resolve) => {
        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –≥–ª–æ–±–∞–ª—å–Ω–æ—ó —Ñ—É–Ω–∫—Ü—ñ—ó
        if (window.showConfirm && typeof window.showConfirm === 'function') {
            try {
                return window.showConfirm(message, confirmText, cancelText).then(resolve);
            } catch (e) {
                console.warn("–ü–æ–º–∏–ª–∫–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ showConfirm:", e);
            }
        }

        // –ó–∞–ø–∞—Å–Ω–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç: –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏–π confirm
        const result = window.confirm(message);
        resolve(result);
    });
}

/**
 * –î–æ–¥–∞–≤–∞–Ω–Ω—è –≤–æ–¥—è–Ω–æ–≥–æ –∑–Ω–∞–∫—É –¥–æ –±–ª–æ–∫—É –∑ –±–æ–Ω—É—Å–æ–º –Ω–æ–≤–∞—á–∫–∞
 * @param {HTMLElement} container - –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –≤–æ–¥—è–Ω–æ–≥–æ –∑–Ω–∞–∫—É
 * @param {string} text - –¢–µ–∫—Å—Ç –≤–æ–¥—è–Ω–æ–≥–æ –∑–Ω–∞–∫—É
 * @returns {HTMLElement} –°—Ç–≤–æ—Ä–µ–Ω–∏–π –µ–ª–µ–º–µ–Ω—Ç –≤–æ–¥—è–Ω–æ–≥–æ –∑–Ω–∞–∫—É
 */
export function markElement(container, text = '–û–¢–†–ò–ú–ê–ù–û') {
    if (!container) return;

    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –≤–∂–µ —î –≤–æ–¥—è–Ω–∏–π –∑–Ω–∞–∫
    if (container.querySelector('.watermark')) {
        return;
    }

    // –°—Ç–≤–æ—Ä—é—î–º–æ –≤–æ–¥—è–Ω–∏–π –∑–Ω–∞–∫
    const watermark = document.createElement('div');
    watermark.className = 'watermark';
    watermark.style.position = 'absolute';
    watermark.style.top = '0';
    watermark.style.left = '0';
    watermark.style.width = '100%';
    watermark.style.height = '100%';
    watermark.style.display = 'flex';
    watermark.style.justifyContent = 'center';
    watermark.style.alignItems = 'center';
    watermark.style.pointerEvents = 'none';

    // –°—Ç–≤–æ—Ä—é—î–º–æ –∑–∞—Ç–µ–º–Ω–µ–Ω–Ω—è
    const overlay = document.createElement('div');
    overlay.style.position = 'absolute';
    overlay.style.top = '0';
    overlay.style.left = '0';
    overlay.style.width = '100%';
    overlay.style.height = '100%';
    overlay.style.backgroundColor = 'rgba(0, 0, 0, 0.3)';

    // –°—Ç–≤–æ—Ä—é—î–º–æ —Ç–µ–∫—Å—Ç
    const textElement = document.createElement('div');
    textElement.textContent = text;
    textElement.style.position = 'absolute';
    textElement.style.transform = 'rotate(-30deg)';
    textElement.style.fontSize = '24px';
    textElement.style.fontWeight = 'bold';
    textElement.style.color = 'white';
    textElement.style.textShadow = '0 0 5px rgba(0, 0, 0, 0.7)';

    // –î–æ–¥–∞—î–º–æ –µ–ª–µ–º–µ–Ω—Ç–∏
    watermark.appendChild(overlay);
    watermark.appendChild(textElement);

    // –Ø–∫—â–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –º–∞—î position: relative, –¥–æ–¥–∞—î–º–æ –π–æ–≥–æ
    if (getComputedStyle(container).position === 'static') {
        container.style.position = 'relative';
    }

    container.appendChild(watermark);
    return watermark;
}

// –î–æ–¥–∞—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—ó –≤ –≥–ª–æ–±–∞–ª—å–Ω–∏–π –æ–±'—î–∫—Ç –¥–ª—è –∑–≤–æ—Ä–æ—Ç–Ω–æ—ó —Å—É–º—ñ—Å–Ω–æ—Å—Ç—ñ
WinixRaffles.utils.showLoading = showLoading;
WinixRaffles.utils.hideLoading = hideLoading;
WinixRaffles.utils.showToast = showToast;
WinixRaffles.utils.showConfirm = showConfirm;
WinixRaffles.utils.markElement = markElement;

// –§—É–Ω–∫—Ü—ñ—ó –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ UI —Ç–∞–∫–æ–∂ –¥–æ–¥–∞—î–º–æ –≤ —Å—É–±–æ–±'—î–∫—Ç ui
WinixRaffles.utils.ui = {
    showLoading,
    hideLoading,
    showToast,
    showConfirm,
    markElement
};

console.log("üéÆ WINIX Raffles: –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —É—Ç–∏–ª—ñ—Ç UI");

// –ï–∫—Å–ø–æ—Ä—Ç—É—î–º–æ –≤—Å—ñ –æ—Å–Ω–æ–≤–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó
export default {
    showLoading,
    hideLoading,
    showToast,
    showConfirm,
    markElement
};