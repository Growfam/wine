/**
 * cache.js - –ú–æ–¥—É–ª—å –∫–µ—à—É–≤–∞–Ω–Ω—è –¥–ª—è WINIX WebApp
 * –ù–∞–¥–∞—î —É–Ω—ñ—Ñ—ñ–∫–æ–≤–∞–Ω–∏–π —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è —Ç–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∫–µ—à–æ–≤–∞–Ω–∏—Ö –¥–∞–Ω–∏—Ö,
 * –∑ –ø—ñ–¥—Ç—Ä–∏–º–∫–æ—é —Ç–µ—Ä–º—ñ–Ω—É –¥—ñ—ó, —ñ–Ω–≤–∞–ª—ñ–¥–∞—Ü—ñ—ó —Ç–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–µ—à—É.
 */

import WinixRaffles from '../globals.js';

// –ü—Ä–µ—Ñ—ñ–∫—Å –¥–ª—è –∫–ª—é—á—ñ–≤ –∫–µ—à—É
const CACHE_PREFIX = 'winix_cache_';

// –¢–∏–ø–∏ –∫–µ—à—É (–¥–ª—è —Ä—ñ–∑–Ω–∏—Ö –ø—Ä–æ—Å—Ç–æ—Ä—ñ–≤ —ñ–º–µ–Ω)
export const CACHE_TYPES = {
    USER: 'USER',
    RAFFLE: 'RAFFLE',
    STATS: 'STATS',
    HISTORY: 'HISTORY',
    SYSTEM: 'SYSTEM',
    GLOBAL: 'GLOBAL'
};

// –ü—Ä–µ—Ñ—ñ–∫—Å–∏ –¥–ª—è —Ç–∏–ø—ñ–≤ –∫–µ—à—É
const TYPE_PREFIXES = {
    USER: 'user_',
    RAFFLE: 'raffle_',
    STATS: 'stats_',
    HISTORY: 'history_',
    SYSTEM: 'system_',
    GLOBAL: 'global_'
};

// –ó–Ω–∞—á–µ–Ω–Ω—è TTL –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º (—É –º—ñ–ª—ñ—Å–µ–∫—É–Ω–¥–∞—Ö)
const DEFAULT_TTL = {
    USER: 5 * 60 * 1000,        // 5 —Ö–≤–∏–ª–∏–Ω –¥–ª—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    RAFFLE: 2 * 60 * 1000,      // 2 —Ö–≤–∏–ª–∏–Ω–∏ –¥–ª—è –¥–∞–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
    STATS: 10 * 60 * 1000,      // 10 —Ö–≤–∏–ª–∏–Ω –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    HISTORY: 30 * 60 * 1000,    // 30 —Ö–≤–∏–ª–∏–Ω –¥–ª—è —ñ—Å—Ç–æ—Ä—ñ—ó
    SYSTEM: 60 * 60 * 1000,     // 1 –≥–æ–¥–∏–Ω–∞ –¥–ª—è —Å–∏—Å—Ç–µ–º–Ω–∏—Ö –¥–∞–Ω–∏—Ö
    GLOBAL: 15 * 60 * 1000      // 15 —Ö–≤–∏–ª–∏–Ω –¥–ª—è –≥–ª–æ–±–∞–ª—å–Ω–∏—Ö –¥–∞–Ω–∏—Ö
};

// –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∏–π —Ä–æ–∑–º—ñ—Ä –∫–µ—à—É (—É –±–∞–π—Ç–∞—Ö, –ø—Ä–∏–±–ª–∏–∑–Ω–æ 4MB)
const MAX_CACHE_SIZE = 4 * 1024 * 1024;

// –ü—Ä–∞–ø–æ—Ä–µ—Ü—å —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
let _initialized = false;

// –ü—Ä–∞–ø–æ—Ä–µ—Ü—å –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—ñ localStorage
let _localStorageAvailable = false;

// –†–µ–∑–µ—Ä–≤–Ω–∏–π –∫–µ—à –¥–ª—è –≤–∏–ø–∞–¥–∫—É –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—ñ localStorage
const _memoryCache = {};

// –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–µ—à—É
let _cacheStats = {
    hits: 0,
    misses: 0,
    writes: 0,
    errors: 0,
    cleanups: 0,
    lastCleanup: 0
};

/**
 * –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—ñ localStorage
 * @returns {boolean} –ß–∏ –¥–æ—Å—Ç—É–ø–Ω–∏–π localStorage
 */
function _checkLocalStorageAvailability() {
    try {
        const testKey = CACHE_PREFIX + 'test';
        localStorage.setItem(testKey, 'test');
        const result = localStorage.getItem(testKey) === 'test';
        localStorage.removeItem(testKey);
        return result;
    } catch (e) {
        return false;
    }
}

/**
 * –ë–µ–∑–ø–µ—á–Ω–µ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –∑ localStorage
 * @param {string} key - –ö–ª—é—á –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è
 * @returns {string|null} –û—Ç—Ä–∏–º–∞–Ω—ñ –¥–∞–Ω—ñ –∞–±–æ null –ø—Ä–∏ –ø–æ–º–∏–ª—Ü—ñ
 */
function _safeGetItem(key) {
    if (!_localStorageAvailable) {
        return _memoryCache[key] || null;
    }

    try {
        return localStorage.getItem(key);
    } catch (e) {
        console.warn(`üîå Cache: –ü–æ–º–∏–ª–∫–∞ —á–∏—Ç–∞–Ω–Ω—è –∑ localStorage: ${e.message}`);
        _localStorageAvailable = false; // –ü–æ–∑–Ω–∞—á–∞—î–º–æ, —â–æ localStorage –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π
        return _memoryCache[key] || null;
    }
}

/**
 * –ë–µ–∑–ø–µ—á–Ω–µ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö —É localStorage
 * @param {string} key - –ö–ª—é—á –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è
 * @param {string} value - –ó–Ω–∞—á–µ–Ω–Ω—è –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è
 * @returns {boolean} –£—Å–ø—ñ—à–Ω—ñ—Å—Ç—å –æ–ø–µ—Ä–∞—Ü—ñ—ó
 */
function _safeSetItem(key, value) {
    // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –≤ memory cache –≤ –±—É–¥—å-—è–∫–æ–º—É –≤–∏–ø–∞–¥–∫—É
    _memoryCache[key] = value;

    if (!_localStorageAvailable) {
        return false;
    }

    try {
        localStorage.setItem(key, value);
        return true;
    } catch (e) {
        console.warn(`üîå Cache: –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø–∏—Å—É –≤ localStorage: ${e.message}`);

        // –Ø–∫—â–æ –ø–æ–º–∏–ª–∫–∞ –ø–æ–≤'—è–∑–∞–Ω–∞ –∑ –ø–µ—Ä–µ–ø–æ–≤–Ω–µ–Ω–Ω—è–º, —Å–ø—Ä–æ–±—É—î–º–æ –æ—á–∏—Å—Ç–∏—Ç–∏ –∫–µ—à
        if (e.name === 'QuotaExceededError' || e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {
            try {
                // –û—á–∏—â–∞—î–º–æ —Å—Ç–∞—Ä—ñ –¥–∞–Ω—ñ —ñ –ø—Ä–æ–±—É—î–º–æ –∑–Ω–æ–≤—É
                cleanupCache();
                localStorage.setItem(key, value);
                return true;
            } catch (retryError) {
                // –ù–µ –≤–¥–∞–ª–æ—Å—è –Ω–∞–≤—ñ—Ç—å –ø—ñ—Å–ª—è –æ—á–∏—â–µ–Ω–Ω—è
                _localStorageAvailable = false;
                return false;
            }
        }

        _localStorageAvailable = false;
        return false;
    }
}

/**
 * –ë–µ–∑–ø–µ—á–Ω–µ –≤–∏–¥–∞–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∑ localStorage
 * @param {string} key - –ö–ª—é—á –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è
 * @returns {boolean} –£—Å–ø—ñ—à–Ω—ñ—Å—Ç—å –æ–ø–µ—Ä–∞—Ü—ñ—ó
 */
function _safeRemoveItem(key) {
    // –í–∏–¥–∞–ª—è—î–º–æ –∑ memory cache –≤ –±—É–¥—å-—è–∫–æ–º—É –≤–∏–ø–∞–¥–∫—É
    delete _memoryCache[key];

    if (!_localStorageAvailable) {
        return false;
    }

    try {
        localStorage.removeItem(key);
        return true;
    } catch (e) {
        console.warn(`üîå Cache: –ü–æ–º–∏–ª–∫–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è –∑ localStorage: ${e.message}`);
        _localStorageAvailable = false;
        return false;
    }
}

/**
 * –ë–µ–∑–ø–µ—á–Ω–µ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –≤—Å—ñ—Ö –∫–ª—é—á—ñ–≤ localStorage
 * @returns {Array<string>} –ú–∞—Å–∏–≤ –∫–ª—é—á—ñ–≤
 */
function _safeGetKeys() {
    if (!_localStorageAvailable) {
        return Object.keys(_memoryCache);
    }

    try {
        const keys = [];
        for (let i = 0; i < localStorage.length; i++) {
            const key = localStorage.key(i);
            if (key) {
                keys.push(key);
            }
        }
        return keys;
    } catch (e) {
        console.warn(`üîå Cache: –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∫–ª—é—á—ñ–≤ localStorage: ${e.message}`);
        _localStorageAvailable = false;
        return Object.keys(_memoryCache);
    }
}

/**
 * –ì–µ–Ω–µ—Ä—É—î –∫–ª—é—á –∫–µ—à—É –Ω–∞ –æ—Å–Ω–æ–≤—ñ —Ç–∏–ø—É —Ç–∞ –∫–ª—é—á–∞
 * @param {string} type - –¢–∏–ø –∫–µ—à—É
 * @param {string} key - –ö–ª—é—á –¥–ª—è –∫–µ—à—É–≤–∞–Ω–Ω—è
 * @returns {string} –ü–æ–≤–Ω–∏–π –∫–ª—é—á –¥–ª—è localStorage
 */
function generateCacheKey(type, key) {
    if (!type || !key) {
        console.warn("üîå Cache: –ü–æ—Ä–æ–∂–Ω—ñ–π —Ç–∏–ø –∞–±–æ –∫–ª—é—á", { type, key });
        return CACHE_PREFIX + TYPE_PREFIXES.GLOBAL + (key || "unknown");
    }

    const normalizedType = type.toUpperCase();
    const cacheType = TYPE_PREFIXES[normalizedType] || TYPE_PREFIXES.GLOBAL;
    return CACHE_PREFIX + cacheType + key;
}

/**
 * –ó–±–µ—Ä—ñ–≥–∞—î –¥–∞–Ω—ñ –≤ –∫–µ—à
 * @param {string} type - –¢–∏–ø –∫–µ—à—É (–∑ CACHE_TYPES)
 * @param {string} key - –ö–ª—é—á –¥–ª—è –∫–µ—à—É–≤–∞–Ω–Ω—è
 * @param {any} data - –î–∞–Ω—ñ –¥–ª—è –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è
 * @param {number} ttl - –ß–∞—Å –∂–∏—Ç—Ç—è –≤ –º—ñ–ª—ñ—Å–µ–∫—É–Ω–¥–∞—Ö (–Ω–µ–æ–±–æ–≤'—è–∑–∫–æ–≤–æ)
 * @returns {boolean} –£—Å–ø—ñ—à–Ω—ñ—Å—Ç—å –æ–ø–µ—Ä–∞—Ü—ñ—ó
 */
export function setCache(type, key, data, ttl) {
    if (!type || !key) {
        console.warn("üîå Cache: –ù–µ –≤–∫–∞–∑–∞–Ω–æ —Ç–∏–ø –∞–±–æ –∫–ª—é—á", { type, key });
        _cacheStats.errors++;
        return false;
    }

    try {
        // –Ø–∫—â–æ —Ç–∏–ø –Ω–µ–≤–∞–ª—ñ–¥–Ω–∏–π, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ GLOBAL
        const normalizedType = (type && type.toUpperCase && CACHE_TYPES[type.toUpperCase()]) ?
            type.toUpperCase() : 'GLOBAL';

        // –í–∏–∑–Ω–∞—á–∞—î–º–æ TTL (—á–∞—Å –∂–∏—Ç—Ç—è)
        const expiresAt = Date.now() + (ttl || DEFAULT_TTL[normalizedType] || DEFAULT_TTL.GLOBAL);

        // –°—Ç–≤–æ—Ä—é—î–º–æ –æ–±'—î–∫—Ç –∫–µ—à—É
        const cacheObject = {
            data: data,
            expiresAt: expiresAt,
            createdAt: Date.now(),
            type: normalizedType
        };

        // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –≤ localStorage
        const cacheKey = generateCacheKey(normalizedType, key);

        // –°–µ—Ä—ñ–∞–ª—ñ–∑—É—î–º–æ –¥–∞–Ω—ñ, –æ–±—Ä–æ–±–ª—è—é—á–∏ –º–æ–∂–ª–∏–≤—ñ –ø–æ–º–∏–ª–∫–∏
        let serializedData;
        try {
            serializedData = JSON.stringify(cacheObject);
        } catch (jsonError) {
            console.warn(`üîå Cache: –ü–æ–º–∏–ª–∫–∞ —Å–µ—Ä—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó –¥–∞–Ω–∏—Ö –¥–ª—è –∫–ª—é—á–∞ ${key}:`, jsonError);
            // –°–ø—Ä–æ–±—É—î–º–æ —Å–ø—Ä–æ—Å—Ç–∏—Ç–∏ –¥–∞–Ω—ñ —ñ —Å–µ—Ä—ñ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ –∑–Ω–æ–≤—É
            try {
                const simplifiedData = {
                    ...cacheObject,
                    data: typeof data === 'object' ? { simplified: true } : String(data)
                };
                serializedData = JSON.stringify(simplifiedData);
            } catch (simplifyError) {
                console.error(`üîå Cache: –ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞ —Å–µ—Ä—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó –¥–∞–Ω–∏—Ö –¥–ª—è –∫–ª—é—á–∞ ${key}:`, simplifyError);
                _cacheStats.errors++;
                return false;
            }
        }

        // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –¥–∞–Ω—ñ
        const success = _safeSetItem(cacheKey, serializedData);

        // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        _cacheStats.writes++;

        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ä–æ–∑–º—ñ—Ä –∫–µ—à—É —Ç–∞ –æ—á–∏—â–∞—î–º–æ —Å—Ç–∞—Ä—ñ –∑–∞–ø–∏—Å–∏ –ø—Ä–∏ –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ—Å—Ç—ñ
        if (_cacheStats.writes % 10 === 0) {
            setTimeout(cleanupCache, 0);
        }

        return success;
    } catch (error) {
        console.error("‚ùå Cache: –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—ñ –¥–∞–Ω–∏—Ö –¥–æ –∫–µ—à—É:", error);
        _cacheStats.errors++;
        return false;
    }
}

/**
 * –û—Ç—Ä–∏–º—É—î –¥–∞–Ω—ñ –∑ –∫–µ—à—É
 * @param {string} type - –¢–∏–ø –∫–µ—à—É (–∑ CACHE_TYPES)
 * @param {string} key - –ö–ª—é—á –¥–ª—è –ø–æ—à—É–∫—É
 * @param {any} defaultValue - –ó–Ω–∞—á–µ–Ω–Ω—è –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º, —è–∫—â–æ –∫–µ—à –≤—ñ–¥—Å—É—Ç–Ω—ñ–π
 * @returns {any} –î–∞–Ω—ñ –∑ –∫–µ—à—É –∞–±–æ defaultValue
 */
export function getCache(type, key, defaultValue = null) {
    if (!type || !key) {
        console.warn("üîå Cache: –ù–µ –≤–∫–∞–∑–∞–Ω–æ —Ç–∏–ø –∞–±–æ –∫–ª—é—á", { type, key });
        _cacheStats.misses++;
        return defaultValue;
    }

    try {
        // –Ø–∫—â–æ —Ç–∏–ø –Ω–µ–≤–∞–ª—ñ–¥–Ω–∏–π, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ GLOBAL
        const normalizedType = (type && type.toUpperCase && CACHE_TYPES[type.toUpperCase()]) ?
            type.toUpperCase() : 'GLOBAL';

        // –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ –∑ localStorage
        const cacheKey = generateCacheKey(normalizedType, key);
        const cachedData = _safeGetItem(cacheKey);

        if (!cachedData) {
            _cacheStats.misses++;
            return defaultValue;
        }

        // –ü–∞—Ä—Å–∏–º–æ –¥–∞–Ω—ñ –∑ –∫–µ—à—É
        let cacheObject;
        try {
            cacheObject = JSON.parse(cachedData);
        } catch (parseError) {
            console.warn(`üîå Cache: –ü–æ–º–∏–ª–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥—É –¥–∞–Ω–∏—Ö –¥–ª—è –∫–ª—é—á–∞ ${key}:`, parseError);
            _cacheStats.errors++;
            _safeRemoveItem(cacheKey); // –í–∏–¥–∞–ª—è—î–º–æ –ø–æ—à–∫–æ–¥–∂–µ–Ω—ñ –¥–∞–Ω—ñ
            _cacheStats.misses++;
            return defaultValue;
        }

        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ç–µ—Ä–º—ñ–Ω –¥—ñ—ó
        if (!cacheObject || !cacheObject.expiresAt || cacheObject.expiresAt < Date.now()) {
            // –ö–µ—à –∑–∞—Å—Ç–∞—Ä—ñ–≤
            _safeRemoveItem(cacheKey);
            _cacheStats.misses++;
            return defaultValue;
        }

        // –ö–µ—à –≤–∞–ª—ñ–¥–Ω–∏–π
        _cacheStats.hits++;
        return cacheObject.data;
    } catch (error) {
        console.error("‚ùå Cache: –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –¥–∞–Ω–∏—Ö –∑ –∫–µ—à—É:", error);
        _cacheStats.errors++;
        return defaultValue;
    }
}

/**
 * –ü–µ—Ä–µ–≤—ñ—Ä—è—î –Ω–∞—è–≤–Ω—ñ—Å—Ç—å —Ç–∞ –∞–∫—Ç—É–∞–ª—å–Ω—ñ—Å—Ç—å –¥–∞–Ω–∏—Ö —É –∫–µ—à—ñ
 * @param {string} type - –¢–∏–ø –∫–µ—à—É (–∑ CACHE_TYPES)
 * @param {string} key - –ö–ª—é—á –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏
 * @returns {boolean} –ß–∏ —î –≤–∞–ª—ñ–¥–Ω–∏–π –∫–µ—à
 */
export function hasValidCache(type, key) {
    if (!type || !key) {
        return false;
    }

    try {
        // –Ø–∫—â–æ —Ç–∏–ø –Ω–µ–≤–∞–ª—ñ–¥–Ω–∏–π, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ GLOBAL
        const normalizedType = (type && type.toUpperCase && CACHE_TYPES[type.toUpperCase()]) ?
            type.toUpperCase() : 'GLOBAL';

        // –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ –∑ localStorage
        const cacheKey = generateCacheKey(normalizedType, key);
        const cachedData = _safeGetItem(cacheKey);

        if (!cachedData) {
            return false;
        }

        // –ü–∞—Ä—Å–∏–º–æ –¥–∞–Ω—ñ –∑ –∫–µ—à—É
        let cacheObject;
        try {
            cacheObject = JSON.parse(cachedData);
        } catch (parseError) {
            _safeRemoveItem(cacheKey); // –í–∏–¥–∞–ª—è—î–º–æ –ø–æ—à–∫–æ–¥–∂–µ–Ω—ñ –¥–∞–Ω—ñ
            return false;
        }

        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ç–µ—Ä–º—ñ–Ω –¥—ñ—ó
        if (!cacheObject || !cacheObject.expiresAt) {
            return false;
        }

        return cacheObject.expiresAt >= Date.now();
    } catch (error) {
        console.error("‚ùå Cache: –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–≤—ñ—Ä—Ü—ñ –∫–µ—à—É:", error);
        return false;
    }
}

/**
 * –í–∏–¥–∞–ª—è—î –¥–∞–Ω—ñ –∑ –∫–µ—à—É
 * @param {string} type - –¢–∏–ø –∫–µ—à—É (–∑ CACHE_TYPES)
 * @param {string} key - –ö–ª—é—á –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è
 * @returns {boolean} –£—Å–ø—ñ—à–Ω—ñ—Å—Ç—å –æ–ø–µ—Ä–∞—Ü—ñ—ó
 */
export function removeCache(type, key) {
    if (!type || !key) {
        return false;
    }

    try {
        // –Ø–∫—â–æ —Ç–∏–ø –Ω–µ–≤–∞–ª—ñ–¥–Ω–∏–π, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ GLOBAL
        const normalizedType = (type && type.toUpperCase && CACHE_TYPES[type.toUpperCase()]) ?
            type.toUpperCase() : 'GLOBAL';

        // –í–∏–¥–∞–ª—è—î–º–æ –¥–∞–Ω—ñ –∑ localStorage
        const cacheKey = generateCacheKey(normalizedType, key);
        return _safeRemoveItem(cacheKey);
    } catch (error) {
        console.error("‚ùå Cache: –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏–¥–∞–ª–µ–Ω–Ω—ñ –¥–∞–Ω–∏—Ö –∑ –∫–µ—à—É:", error);
        return false;
    }
}

/**
 * –û—á–∏—â–∞—î –≤—Å—ñ –¥–∞–Ω—ñ –∫–µ—à—É –ø–µ–≤–Ω–æ–≥–æ —Ç–∏–ø—É
 * @param {string} type - –¢–∏–ø –∫–µ—à—É –¥–ª—è –æ—á–∏—â–µ–Ω–Ω—è (–Ω–µ–æ–±–æ–≤'—è–∑–∫–æ–≤–æ)
 * @returns {number} –ö—ñ–ª—å–∫—ñ—Å—Ç—å –≤–∏–¥–∞–ª–µ–Ω–∏—Ö –∑–∞–ø–∏—Å—ñ–≤
 */
export function clearCacheByType(type = null) {
    try {
        let count = 0;
        const keys = _safeGetKeys();

        if (type && CACHE_TYPES[type.toUpperCase()]) {
            // –í–∏–¥–∞–ª—è—î–º–æ –¥–∞–Ω—ñ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ç–∏–ø—É
            const normalizedType = type.toUpperCase();
            const prefix = CACHE_PREFIX + TYPE_PREFIXES[normalizedType];

            // –ó–±–∏—Ä–∞—î–º–æ –∫–ª—é—á—ñ –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è
            const keysToRemove = keys.filter(key => key && key.startsWith(prefix));

            // –í–∏–¥–∞–ª—è—î–º–æ –∑—ñ–±—Ä–∞–Ω—ñ –∫–ª—é—á—ñ
            keysToRemove.forEach(key => {
                if (_safeRemoveItem(key)) {
                    count++;
                }
            });
        } else {
            // –í–∏–¥–∞–ª—è—î–º–æ –≤—Å—ñ –¥–∞–Ω—ñ –∫–µ—à—É
            const prefix = CACHE_PREFIX;

            // –ó–±–∏—Ä–∞—î–º–æ –∫–ª—é—á—ñ –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è
            const keysToRemove = keys.filter(key => key && key.startsWith(prefix));

            // –í–∏–¥–∞–ª—è—î–º–æ –∑—ñ–±—Ä–∞–Ω—ñ –∫–ª—é—á—ñ
            keysToRemove.forEach(key => {
                if (_safeRemoveItem(key)) {
                    count++;
                }
            });
        }

        console.log(`üßπ Cache: –û—á–∏—â–µ–Ω–æ ${count} –∑–∞–ø–∏—Å—ñ–≤ ${type ? `—Ç–∏–ø—É ${type}` : '–≤—Å—ñ—Ö —Ç–∏–ø—ñ–≤'}`);
        return count;
    } catch (error) {
        console.error("‚ùå Cache: –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—á–∏—â–µ–Ω–Ω—ñ –∫–µ—à—É:", error);
        return 0;
    }
}

/**
 * –û–Ω–æ–≤–ª—é—î —á–∞—Å –∂–∏—Ç—Ç—è –∫–µ—à—É
 * @param {string} type - –¢–∏–ø –∫–µ—à—É (–∑ CACHE_TYPES)
 * @param {string} key - –ö–ª—é—á –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
 * @param {number} ttl - –ù–æ–≤–∏–π —á–∞—Å –∂–∏—Ç—Ç—è –≤ –º—ñ–ª—ñ—Å–µ–∫—É–Ω–¥–∞—Ö
 * @returns {boolean} –£—Å–ø—ñ—à–Ω—ñ—Å—Ç—å –æ–ø–µ—Ä–∞—Ü—ñ—ó
 */
export function updateCacheTTL(type, key, ttl) {
    if (!type || !key || !ttl || isNaN(ttl) || ttl <= 0) {
        return false;
    }

    try {
        // –Ø–∫—â–æ —Ç–∏–ø –Ω–µ–≤–∞–ª—ñ–¥–Ω–∏–π, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ GLOBAL
        const normalizedType = (type && type.toUpperCase && CACHE_TYPES[type.toUpperCase()]) ?
            type.toUpperCase() : 'GLOBAL';

        // –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ –∑ localStorage
        const cacheKey = generateCacheKey(normalizedType, key);
        const cachedData = _safeGetItem(cacheKey);

        if (!cachedData) {
            return false;
        }

        // –ü–∞—Ä—Å–∏–º–æ –¥–∞–Ω—ñ –∑ –∫–µ—à—É
        let cacheObject;
        try {
            cacheObject = JSON.parse(cachedData);
        } catch (parseError) {
            _safeRemoveItem(cacheKey); // –í–∏–¥–∞–ª—è—î–º–æ –ø–æ—à–∫–æ–¥–∂–µ–Ω—ñ –¥–∞–Ω—ñ
            return false;
        }

        // –û–Ω–æ–≤–ª—é—î–º–æ —á–∞—Å –∂–∏—Ç—Ç—è
        cacheObject.expiresAt = Date.now() + ttl;

        // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω–∏–π –æ–±'—î–∫—Ç
        return _safeSetItem(cacheKey, JSON.stringify(cacheObject));
    } catch (error) {
        console.error("‚ùå Cache: –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—ñ TTL –∫–µ—à—É:", error);
        return false;
    }
}

/**
 * –û—á–∏—â–∞—î –∑–∞—Å—Ç–∞—Ä—ñ–ª—ñ –¥–∞–Ω—ñ –∫–µ—à—É —Ç–∞ –æ–ø—Ç–∏–º—ñ–∑—É—î —Ä–æ–∑–º—ñ—Ä
 * @returns {number} –ö—ñ–ª—å–∫—ñ—Å—Ç—å –≤–∏–¥–∞–ª–µ–Ω–∏—Ö –∑–∞–ø–∏—Å—ñ–≤
 */
export function cleanupCache() {
    try {
        const now = Date.now();

        // –ù–µ –æ—á–∏—â—É—î–º–æ –∫–µ—à —á–∞—Å—Ç—ñ—à–µ –Ω—ñ–∂ —Ä–∞–∑ –≤ 5 —Ö–≤–∏–ª–∏–Ω (–æ–∫—Ä—ñ–º –ø—Ä–∏–º—É—Å–æ–≤–æ–≥–æ –≤–∏–∫–ª–∏–∫—É)
        if (arguments.length === 0 && now - _cacheStats.lastCleanup < 5 * 60 * 1000) {
            return 0;
        }

        console.log("üßπ Cache: –ü–æ—á–∞—Ç–æ–∫ –æ—á–∏—â–µ–Ω–Ω—è –∫–µ—à—É");
        _cacheStats.lastCleanup = now;

        // –ó–±–∏—Ä–∞—î–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –≤—Å—ñ –∫–µ—à—ñ
        const cacheEntries = [];
        const keys = _safeGetKeys();

        for (const key of keys) {
            if (key && key.startsWith(CACHE_PREFIX)) {
                try {
                    const data = _safeGetItem(key);
                    if (!data) continue;

                    let cacheObject;
                    try {
                        cacheObject = JSON.parse(data);
                    } catch (parseError) {
                        // –ù–µ–≤–∞–ª—ñ–¥–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç –∫–µ—à—É, –≤–∏–¥–∞–ª—è—î–º–æ
                        _safeRemoveItem(key);
                        continue;
                    }

                    cacheEntries.push({
                        key: key,
                        size: data.length,
                        expiresAt: cacheObject.expiresAt || 0,
                        createdAt: cacheObject.createdAt || 0,
                        type: cacheObject.type || 'GLOBAL'
                    });
                } catch (entryError) {
                    // –ü–æ–º–∏–ª–∫–∞ –æ–±—Ä–æ–±–∫–∏ –∑–∞–ø–∏—Å—É, –≤–∏–¥–∞–ª—è—î–º–æ –π–æ–≥–æ
                    _safeRemoveItem(key);
                }
            }
        }

        // –í–∏–¥–∞–ª—è—î–º–æ –∑–∞—Å—Ç–∞—Ä—ñ–ª—ñ –∑–∞–ø–∏—Å–∏
        let removedCount = 0;
        for (const entry of cacheEntries) {
            if (entry.expiresAt < now) {
                if (_safeRemoveItem(entry.key)) {
                    removedCount++;
                }
            }
        }

        // –Ø–∫—â–æ —Ä–æ–∑–º—ñ—Ä –∫–µ—à—É –ø–µ—Ä–µ–≤–∏—â—É—î –ª—ñ–º—ñ—Ç, –≤–∏–¥–∞–ª—è—î–º–æ –Ω–∞–π—Å—Ç–∞—Ä—ñ—à—ñ –∑–∞–ø–∏—Å–∏
        let currentSize = cacheEntries.reduce((total, entry) => total + entry.size, 0);

        if (currentSize > MAX_CACHE_SIZE) {
            console.log(`üì¶ Cache: –†–æ–∑–º—ñ—Ä –∫–µ—à—É (${currentSize} –±–∞–π—Ç) –ø–µ—Ä–µ–≤–∏—â—É—î –ª—ñ–º—ñ—Ç (${MAX_CACHE_SIZE} –±–∞–π—Ç)`);

            try {
                // –°–æ—Ä—Ç—É—î–º–æ –∑–∞ —á–∞—Å–æ–º —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è (—Å–ø–æ—á–∞—Ç–∫—É –Ω–∞–π—Å—Ç–∞—Ä—ñ—à—ñ)
                cacheEntries.sort((a, b) => a.createdAt - b.createdAt);

                // –í–∏–¥–∞–ª—è—î–º–æ –Ω–∞–π—Å—Ç–∞—Ä—ñ—à—ñ –∑–∞–ø–∏—Å–∏, –ø–æ–∫–∏ —Ä–æ–∑–º—ñ—Ä –Ω–µ —Å—Ç–∞–Ω–µ –ø—Ä–∏–π–Ω—è—Ç–Ω–∏–º
                while (currentSize > MAX_CACHE_SIZE * 0.8 && cacheEntries.length > 0) {
                    const oldestEntry = cacheEntries.shift();
                    if (_safeRemoveItem(oldestEntry.key)) {
                        currentSize -= oldestEntry.size;
                        removedCount++;
                    }
                }
            } catch (sortError) {
                console.error("‚ùå Cache: –ü–æ–º–∏–ª–∫–∞ —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è –∫–µ—à—É:", sortError);

                // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∏–π —Å–ø–æ—Å—ñ–±: –ø—Ä–æ—Å—Ç–æ –≤–∏–¥–∞–ª—è—î–º–æ –ø–µ—Ä—à—ñ N –∑–∞–ø–∏—Å—ñ–≤
                for (let i = 0; i < Math.min(10, cacheEntries.length); i++) {
                    if (_safeRemoveItem(cacheEntries[i].key)) {
                        removedCount++;
                    }
                }
            }
        }

        console.log(`‚úÖ Cache: –û—á–∏—â–µ–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ, –≤–∏–¥–∞–ª–µ–Ω–æ ${removedCount} –∑–∞–ø–∏—Å—ñ–≤`);
        _cacheStats.cleanups++;

        return removedCount;
    } catch (error) {
        console.error("‚ùå Cache: –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—á–∏—â–µ–Ω–Ω—ñ –∫–µ—à—É:", error);
        return 0;
    }
}

/**
 * –û—Ç—Ä–∏–º—É—î —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∫–µ—à—É
 * @returns {Object} –û–±'—î–∫—Ç –∑—ñ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ—é –∫–µ—à—É
 */
export function getCacheStats() {
    // –ü—ñ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–∏—Ö –ø—Ä–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Å—Ö–æ–≤–∏—â–∞
    const storageStats = {
        total: 0,
        used: 0,
        items: 0,
        cacheItems: 0,
        available: _localStorageAvailable
    };

    try {
        // –†–∞—Ö—É—î–º–æ –∑–∞–≥–∞–ª—å–Ω–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è localStorage –∞–±–æ memory cache
        const keys = _safeGetKeys();

        for (const key of keys) {
            const value = _safeGetItem(key) || '';

            storageStats.total += key.length + value.length;
            storageStats.items++;

            if (key.startsWith(CACHE_PREFIX)) {
                storageStats.used += key.length + value.length;
                storageStats.cacheItems++;
            }
        }
    } catch (e) {
        console.warn("‚ö†Ô∏è Cache: –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø—ñ–¥—Ä–∞—Ö—É–Ω–∫—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Å—Ö–æ–≤–∏—â–∞:", e);
    }

    return {
        ..._cacheStats,
        storage: storageStats,
        hitRate: _cacheStats.hits + _cacheStats.misses > 0
            ? _cacheStats.hits / (_cacheStats.hits + _cacheStats.misses) * 100
            : 0
    };
}

/**
 * –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î –º–æ–¥—É–ª—å –∫–µ—à—É–≤–∞–Ω–Ω—è
 */
export function init() {
    if (_initialized) {
        return;
    }

    try {
        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –¥–æ—Å—Ç—É–ø–Ω—ñ—Å—Ç—å localStorage
        _localStorageAvailable = _checkLocalStorageAvailability();

        if (!_localStorageAvailable) {
            console.warn("üîå Cache: localStorage –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ memory cache");
        }

        // –û—á–∏—â–µ–Ω–Ω—è –∑–∞—Å—Ç–∞—Ä—ñ–ª–∏—Ö –¥–∞–Ω–∏—Ö –ø—Ä–∏ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
        cleanupCache();

        // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Ñ–ª–∞–≥ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
        _initialized = true;

        console.log("‚úÖ Cache: –°–∏—Å—Ç–µ–º–∞ –∫–µ—à—É–≤–∞–Ω–Ω—è —É—Å–ø—ñ—à–Ω–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–∞");
    } catch (error) {
        console.error("‚ùå Cache: –ü–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó —Å–∏—Å—Ç–µ–º–∏ –∫–µ—à—É–≤–∞–Ω–Ω—è:", error);
        // –ó–∞–±–µ–∑–ø–µ—á—É—î–º–æ, —â–æ —Å–∏—Å—Ç–µ–º–∞ –≤—Å–µ –æ–¥–Ω–æ –ø—Ä–∞—Ü—é—î –≤ —Ä–µ–∂–∏–º—ñ memory cache
        _localStorageAvailable = false;
    }
}

// –û–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ—ó –Ω–∏–∑—å–∫–æ–≥–æ –∑–∞—Ä—è–¥—É –±–∞—Ç–∞—Ä–µ—ó
if (navigator.getBattery) {
    try {
        navigator.getBattery().then(function(battery) {
            battery.addEventListener('levelchange', function() {
                if (battery.level < 0.15) {
                    console.log("üîã Cache: –ù–∏–∑—å–∫–∏–π —Ä—ñ–≤–µ–Ω—å –∑–∞—Ä—è–¥—É, –æ–ø—Ç–∏–º—ñ–∑—É—î–º–æ –∫–µ—à");
                    cleanupCache();
                }
            });
        }).catch(function(err) {
            console.warn("‚ö†Ô∏è Cache: –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Å—Ç–∞–Ω—É –±–∞—Ç–∞—Ä–µ—ó:", err);
        });
    } catch (batteryError) {
        console.warn("‚ö†Ô∏è Cache: –ü–æ–º–∏–ª–∫–∞ –¥–æ—Å—Ç—É–ø—É –¥–æ API –±–∞—Ç–∞—Ä–µ—ó:", batteryError);
    }
}

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –æ—á–∏—â–µ–Ω–Ω—è –∫–µ—à—É –ø–µ—Ä–µ–¥ –≤–∏–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è–º —Å—Ç–æ—Ä—ñ–Ω–∫–∏
window.addEventListener('beforeunload', function() {
    try {
        // –¢—ñ–ª—å–∫–∏ —è–∫—â–æ –±–∞–≥–∞—Ç–æ –∑–∞–ø–∏—Å—ñ–≤ —É –∫–µ—à—ñ
        const stats = getCacheStats();
        if (stats.storage.cacheItems > 50) {
            cleanupCache();
        }
    } catch (error) {
        console.warn("‚ö†Ô∏è Cache: –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—á–∏—â–µ–Ω–Ω—ñ –∫–µ—à—É –ø–µ—Ä–µ–¥ –≤–∏–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è–º:", error);
    }
});

// –°—Ç–≤–æ—Ä—é—î–º–æ –æ–±'—î–∫—Ç –∑ —É—Å—ñ–º–∞ —Ñ—É–Ω–∫—Ü—ñ—è–º–∏ –∫–µ—à—É
const cacheAPI = {
    set: setCache,
    get: getCache,
    has: hasValidCache,
    remove: removeCache,
    clear: clearCacheByType,
    updateTTL: updateCacheTTL,
    cleanup: cleanupCache,
    getStats: getCacheStats,
    types: CACHE_TYPES,
    init
};

// –î–æ–¥–∞—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—ó –≤ –≥–ª–æ–±–∞–ª—å–Ω–∏–π –æ–±'—î–∫—Ç –¥–ª—è –∑–≤–æ—Ä–æ—Ç–Ω–æ—ó —Å—É–º—ñ—Å–Ω–æ—Å—Ç—ñ
if (WinixRaffles && WinixRaffles.utils) {
    WinixRaffles.utils.cache = cacheAPI;
}

// –î–ª—è –ø–æ–≤–Ω–æ—ó –∑–≤–æ—Ä–æ—Ç–Ω–æ—ó —Å—É–º—ñ—Å–Ω–æ—Å—Ç—ñ –¥–æ–¥–∞—î–º–æ –≤ window
window.WinixCache = cacheAPI;

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è
init();

console.log("üì¶ Cache: –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Å–∏—Å—Ç–µ–º–∏ –∫–µ—à—É–≤–∞–Ω–Ω—è");

// –ï–∫—Å–ø–æ—Ä—Ç—É—î–º–æ –æ–±'—î–∫—Ç –∑ —É—Å—ñ–º–∞ —Ñ—É–Ω–∫—Ü—ñ—è–º–∏ —è–∫ –æ—Å–Ω–æ–≤–Ω–∏–π –µ–∫—Å–ø–æ—Ä—Ç
export default cacheAPI;