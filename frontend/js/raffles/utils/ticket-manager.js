/**
 * WINIX - –°–∏—Å—Ç–µ–º–∞ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ (ticket-manager.js)
 * –û–ø—Ç–∏–º—ñ–∑–æ–≤–∞–Ω–∏–π –º–æ–¥—É–ª—å –¥–ª—è —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –±—ñ–ª–µ—Ç–∞–º–∏
 * –í–∏–ø—Ä–∞–≤–ª–µ–Ω–æ –ø—Ä–æ–±–ª–µ–º–∏ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó –∑ participation.js
 * @version 2.0.0
 */

(function() {
    'use strict';

    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–æ–¥—É–ª—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
    if (typeof window.WinixRaffles === 'undefined') {
        console.error('‚ùå WinixRaffles –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ! –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—è, —â–æ core.js –ø—ñ–¥–∫–ª—é—á–µ–Ω–æ —Ä–∞–Ω—ñ—à–µ ticket-manager.js');
        return;
    }

    // –¢—Ä–µ–∫–µ—Ä –ø–æ–∫–∞–∑–∞–Ω–∏—Ö —Å–ø–æ–≤—ñ—â–µ–Ω—å –¥–ª—è –∑–∞–ø–æ–±—ñ–≥–∞–Ω–Ω—è –¥—É–±–ª—é–≤–∞–Ω–Ω—é
    const shownNotifications = new Set();

    // –ú–æ–¥—É–ª—å —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –±—ñ–ª–µ—Ç–∞–º–∏
    const ticketManager = {
        // –î–∞–Ω—ñ –ø—Ä–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –±—ñ–ª–µ—Ç—ñ–≤ –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
        ticketCounts: {},

        // –î–∞–Ω—ñ –ø—Ä–æ –≤–∞—Ä—Ç—ñ—Å—Ç—å —É—á–∞—Å—Ç—ñ –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
        entryFees: {},

        // –ß–∞—Å –æ—Å—Ç–∞–Ω–Ω—å–æ—ó —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó
        lastTransactionTime: 0,

        // –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–π —ñ–Ω—Ç–µ—Ä–≤–∞–ª –º—ñ–∂ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—è–º–∏ (–º—Å)
        minTransactionInterval: 2000, // 2 —Å–µ–∫—É–Ω–¥–∏

        // –°—Ç–∞–Ω —Ç–∞–π–º–µ—Ä–∞ –∑–≤–æ—Ä–æ—Ç–Ω–æ–≥–æ –≤—ñ–¥–ª—ñ–∫—É
        cooldownTimers: {},

        // –¢–∞–π–º–µ—Ä –¥–ª—è –≤—ñ–¥–∫–ª–∞–¥–µ–Ω–æ—ó —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó
        syncTimer: null,

        // –Ü–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö
        isLoading: false,

        /**
         * –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –º–æ–¥—É–ª—è
         */
        init: function() {
            console.log('üéüÔ∏è –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –º–æ–¥—É–ª—è —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –±—ñ–ª–µ—Ç–∞–º–∏...');

            // –û—á–∏—â–µ–Ω–Ω—è —Å—Ç–∞–Ω—É –ø–µ—Ä–µ–¥ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—î—é
            this._cleanupState();

            // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –±—ñ–ª–µ—Ç—ñ–≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            this.loadUserTickets();

            // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π
            this.setupEventHandlers();

            console.log('‚úÖ –ú–æ–¥—É–ª—å —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –±—ñ–ª–µ—Ç–∞–º–∏ —É—Å–ø—ñ—à–Ω–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ');
        },

        /**
         * –û—á–∏—â–µ–Ω–Ω—è —Å—Ç–∞–Ω—É –ø–µ—Ä–µ–¥ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—î—é
         * @private
         */
        _cleanupState: function() {
            // –û—á–∏—â–µ–Ω–Ω—è —Ç–∞–π–º–µ—Ä—É —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó
            if (this.syncTimer) {
                clearTimeout(this.syncTimer);
                this.syncTimer = null;
            }

            // –û—á–∏—â–µ–Ω–Ω—è —Ç–∞–π–º–µ—Ä—ñ–≤ –∑–≤–æ—Ä–æ—Ç–Ω–æ–≥–æ –≤—ñ–¥–ª—ñ–∫—É
            for (const timerId in this.cooldownTimers) {
                if (this.cooldownTimers.hasOwnProperty(timerId)) {
                    clearTimeout(this.cooldownTimers[timerId]);
                }
            }
            this.cooldownTimers = {};

            // –°–∫–∏–¥–∞—î–º–æ —Å—Ç–∞–Ω –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
            this.isLoading = false;
        },

        /**
         * –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –ø–æ–¥—ñ–π
         */
        setupEventHandlers: function() {
            // –û–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ—ó —É—Å–ø—ñ—à–Ω–æ—ó —É—á–∞—Å—Ç—ñ –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ
            document.addEventListener('raffle-participation', (event) => {
                if (event.detail && event.detail.successful) {
                    this.handleSuccessfulParticipation(event.detail);
                }
            });

            // –û–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ—ó –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            document.addEventListener('balance-updated', (event) => {
                if (event.detail && event.detail.newBalance !== undefined) {
                    // –û—Ç—Ä–∏–º—É—î–º–æ –¥–∂–µ—Ä–µ–ª–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
                    const source = event.detail.source || 'unknown';

                    // –Ø–∫—â–æ —Ü–µ –Ω–µ –Ω–∞—à–∞ –ø–æ–¥—ñ—è —ñ –Ω–µ participation, –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –¥–∞–Ω—ñ —É—á–∞—Å—Ç—ñ
                    if (source !== 'ticket-manager' && source !== 'participation.js') {
                        setTimeout(() => {
                            this.syncWithServer();
                        }, 1000);
                    }
                }
            });

            // –û–±—Ä–æ–±–Ω–∏–∫ –∫–ª—ñ–∫—ñ–≤ –Ω–∞ –∫–Ω–æ–ø–∫–∏ —É—á–∞—Å—Ç—ñ –∑ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è–º –¥–µ–ª–µ–≥—É–≤–∞–Ω–Ω—è
            document.addEventListener('click', (event) => {
                const participateButton = event.target.closest('.join-button, .mini-raffle-button');
                if (!participateButton) return;

                // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –Ω–µ –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–∞ –∫–Ω–æ–ø–∫–∞
                if (participateButton.disabled || participateButton.classList.contains('processing')) {
                    event.preventDefault();
                    return;
                }

                const raffleId = participateButton.getAttribute('data-raffle-id');
                if (!raffleId) return;

                // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ —Ç–∞–π–º–µ—Ä –∑–≤–æ—Ä–æ—Ç–Ω–æ–≥–æ –≤—ñ–¥–ª—ñ–∫—É
                if (this.cooldownTimers[raffleId]) {
                    event.preventDefault();
                    this._showToast('–ë—É–¥—å –ª–∞—Å–∫–∞, –∑–∞—á–µ–∫–∞–π—Ç–µ –ø–µ—Ä–µ–¥ –Ω–∞—Å—Ç—É–ø–Ω–æ—é —Å–ø—Ä–æ–±–æ—é', 'info');
                    return;
                }

                // –ó–∞–ø–∞–º'—è—Ç–æ–≤—É—î–º–æ –≤–∞—Ä—Ç—ñ—Å—Ç—å —É—á–∞—Å—Ç—ñ
                const entryFee = parseInt(participateButton.getAttribute('data-entry-fee')) || 1;
                this.entryFees[raffleId] = entryFee;

                // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –±–∞–ª–∞–Ω—Å –ø–µ—Ä–µ–¥ –∫–ª—ñ–∫–æ–º
                const userCoins = this.getUserCoins();
                if (userCoins < entryFee) {
                    event.preventDefault();
                    this._showToast(`–ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –∂–µ—Ç–æ–Ω—ñ–≤. –ü–æ—Ç—Ä—ñ–±–Ω–æ: ${entryFee}, —É –≤–∞—Å: ${userCoins}`, 'warning');
                    return;
                }

                // –°—Ç–≤–æ—Ä—é—î–º–æ —Ç–∞–π–º–µ—Ä –∑–≤–æ—Ä–æ—Ç–Ω–æ–≥–æ –≤—ñ–¥–ª—ñ–∫—É –¥–ª—è —Ü—å–æ–≥–æ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
                this.cooldownTimers[raffleId] = setTimeout(() => {
                    delete this.cooldownTimers[raffleId];
                }, this.minTransactionInterval);
            });

            // –û–±—Ä–æ–±–Ω–∏–∫ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
            document.addEventListener('raffles-loaded', () => {
                this.extractEntryFeesFromDOM();

                // –û–Ω–æ–≤–ª—é—î–º–æ –¥–∞–Ω—ñ –ø—Ä–æ –±—ñ–ª–µ—Ç–∏
                setTimeout(() => {
                    this.loadUserTickets();
                }, 1000);
            });

            // –û–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –ø—Ä–∏ –∑–º—ñ–Ω—ñ –≤–∏–¥–∏–º–æ—Å—Ç—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
            document.addEventListener('visibilitychange', () => {
                if (document.visibilityState === 'visible' && !this.isLoading) {
                    // –ü—Ä–∏ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—ñ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –¥–∞–Ω—ñ
                    this.syncWithServer();
                }
            });
        },

        /**
         * –ü–æ–∫–∞–∑ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –±–µ–∑ –¥—É–±–ª—é–≤–∞–Ω–Ω—è
         * @param {string} message - –¢–µ–∫—Å—Ç –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
         * @param {string} type - –¢–∏–ø –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è (info, warning, error, success)
         * @private
         */
        _showToast: function(message, type = 'info') {
            if (typeof window.showToast !== 'function') return;

            // –°—Ç–≤–æ—Ä—é—î–º–æ —É–Ω—ñ–∫–∞–ª—å–Ω–∏–π –∫–ª—é—á –¥–ª—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
            const messageKey = message + (type || '');

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –Ω–µ –ø–æ–∫–∞–∑—É–≤–∞–ª–∏ —Ü–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–µ—â–æ–¥–∞–≤–Ω–æ
            if (shownNotifications.has(messageKey)) {
                return;
            }

            // –î–æ–¥–∞—î–º–æ –¥–æ —Å–ø–∏—Å–∫—É –ø–æ–∫–∞–∑–∞–Ω–∏—Ö
            shownNotifications.add(messageKey);

            // –í–∏–¥–∞–ª—è—î–º–æ –∑—ñ —Å–ø–∏—Å–∫—É —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
            setTimeout(() => {
                shownNotifications.delete(messageKey);
            }, 5000);

            // –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
            window.showToast(message, type);
        },

        /**
         * –û—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–æ—Ç–æ—á–Ω–æ—ó –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –∂–µ—Ç–æ–Ω—ñ–≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
         * @returns {number} –ö—ñ–ª—å–∫—ñ—Å—Ç—å –∂–µ—Ç–æ–Ω—ñ–≤
         */
        getUserCoins: function() {
            try {
                // –°—Ç–≤–æ—Ä—é—î–º–æ –¥–∞–Ω—ñ –¥–ª—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
                const debugData = {
                    sources: {},
                    selectedSource: '',
                    selectedValue: 0
                };

                // 1. –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –æ—Å—Ç–∞–Ω–Ω—ñ —Å–µ—Ä–≤–µ—Ä–Ω—ñ –¥–∞–Ω—ñ –≤ localStorage
                // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –Ω–∞–π–≤–∏—â–∏–π –ø—Ä—ñ–æ—Ä–∏—Ç–µ—Ç –¥–ª—è —Å–µ—Ä–≤–µ—Ä–Ω–æ–≥–æ –±–∞–ª–∞–Ω—Å—É
                const serverTimestamp = parseInt(localStorage.getItem('winix_server_balance_ts') || '0');
                const serverBalance = parseInt(localStorage.getItem('winix_server_balance') || '0');

                // –Ø–∫—â–æ —Å–µ—Ä–≤–µ—Ä–Ω—ñ –¥–∞–Ω—ñ —ñ—Å–Ω—É—é—Ç—å —ñ –Ω–µ —Å—Ç–∞—Ä—à—ñ 2 —Ö–≤–∏–ª–∏–Ω, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —ó—Ö
                if (serverBalance > 0 && serverTimestamp > 0 && (Date.now() - serverTimestamp < 120000)) {
                    debugData.sources.server = serverBalance;
                    debugData.selectedSource = 'server';
                    debugData.selectedValue = serverBalance;

                    return serverBalance;
                }

                // 2. –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –≥–ª–æ–±–∞–ª—å–Ω–∏–π –∫–æ–Ω—Ç—Ä–æ–ª–µ—Ä —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó
                if (window.__winixSyncControl &&
                    window.__winixSyncControl.lastValidBalance !== null &&
                    typeof window.__winixSyncControl.lastValidBalance === 'number') {

                    debugData.sources.syncControl = window.__winixSyncControl.lastValidBalance;
                    debugData.selectedSource = 'syncControl';
                    debugData.selectedValue = window.__winixSyncControl.lastValidBalance;

                    return window.__winixSyncControl.lastValidBalance;
                }

                // 3. –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ WinixCore
                if (window.WinixCore && typeof window.WinixCore.getCoins === 'function') {
                    const coreCoins = window.WinixCore.getCoins();
                    if (typeof coreCoins === 'number' && !isNaN(coreCoins) && coreCoins >= 0) {
                        debugData.sources.winixCore = coreCoins;
                        debugData.selectedSource = 'winixCore';
                        debugData.selectedValue = coreCoins;

                        return coreCoins;
                    }
                }

                // 4. –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —É—á–∞—Å—Ç—å
                if (window.WinixRaffles && window.WinixRaffles.participation &&
                    window.WinixRaffles.participation.lastKnownBalance !== null) {

                    debugData.sources.participation = window.WinixRaffles.participation.lastKnownBalance;

                    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —è–∫ –¥–∞–≤–Ω–æ –±—É–ª–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
                    const participationUpdateTime = window.WinixRaffles.participation.lastBalanceUpdateTime || 0;
                    const storedUpdateTime = parseInt(localStorage.getItem('winix_balance_update_time') || '0');

                    // –Ø–∫—â–æ –¥–∞–Ω—ñ participation —Å–≤—ñ–∂—ñ—à—ñ, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —ó—Ö
                    if (participationUpdateTime > storedUpdateTime) {
                        debugData.selectedSource = 'participation';
                        debugData.selectedValue = window.WinixRaffles.participation.lastKnownBalance;

                        return window.WinixRaffles.participation.lastKnownBalance;
                    }
                }

                // 5. –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ DOM
                const userCoinsElement = document.getElementById('user-coins');
                if (userCoinsElement) {
                    const domCoins = parseInt(userCoinsElement.textContent);
                    if (!isNaN(domCoins) && domCoins >= 0) {
                        debugData.sources.dom = domCoins;

                        // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ DOM —Ç—ñ–ª—å–∫–∏ —è–∫—â–æ –Ω–µ–º–∞—î —Å–≤—ñ–∂—ñ—à–∏—Ö –¥–∞–Ω–∏—Ö
                        const domUpdateTime = parseInt(localStorage.getItem('winix_balance_update_time') || '0');

                        if (domUpdateTime > serverTimestamp) {
                            debugData.selectedSource = 'dom';
                            debugData.selectedValue = domCoins;

                            return domCoins;
                        }
                    }
                }

                // 6. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ localStorage —è–∫ –æ—Å—Ç–∞–Ω–Ω—ñ–π –≤–∞—Ä—ñ–∞–Ω—Ç
                const storedCoins = parseInt(localStorage.getItem('userCoins') || localStorage.getItem('winix_coins') || '0');
                debugData.sources.localStorage = storedCoins;
                debugData.selectedSource = 'localStorage';
                debugData.selectedValue = storedCoins;

                return !isNaN(storedCoins) ? storedCoins : 0;
            } catch (error) {
                console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É –≤ ticket-manager:', error);

                // –ë–µ–∑–ø–µ—á–Ω–µ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –ø—Ä–∏ –ø–æ–º–∏–ª—Ü—ñ
                try {
                    return parseInt(localStorage.getItem('userCoins') || localStorage.getItem('winix_coins') || '0') || 0;
                } catch (e) {
                    return 0;
                }
            }
        },

        /**
         * –í–∏—Ç—è–≥—É–≤–∞–Ω–Ω—è –≤–∞—Ä—Ç–æ—Å—Ç—ñ —É—á–∞—Å—Ç—ñ –∑ DOM
         */
        extractEntryFeesFromDOM: function() {
            // –ü–µ—Ä–µ–±–∏—Ä–∞—î–º–æ –≤—Å—ñ –∫–Ω–æ–ø–∫–∏ —É—á–∞—Å—Ç—ñ
            const buttons = document.querySelectorAll('.join-button, .mini-raffle-button');
            buttons.forEach(button => {
                const raffleId = button.getAttribute('data-raffle-id');
                if (!raffleId) return;

                // –í–∏—Ç—è–≥—É—î–º–æ –≤–∞—Ä—Ç—ñ—Å—Ç—å —É—á–∞—Å—Ç—ñ
                let entryFee = 1;

                // –°–ø—Ä–æ–±—É—î–º–æ –≤–∏—Ç—è–≥—Ç–∏ –∑ –∞—Ç—Ä–∏–±—É—Ç—É
                if (button.hasAttribute('data-entry-fee')) {
                    entryFee = parseInt(button.getAttribute('data-entry-fee')) || 1;
                } else {
                    // –°–ø—Ä–æ–±—É—î–º–æ –≤–∏—Ç—è–≥—Ç–∏ –∑ —Ç–µ–∫—Å—Ç—É –∫–Ω–æ–ø–∫–∏
                    const buttonText = button.textContent;
                    const matches = buttonText.match(/–∑–∞\s+(\d+)\s+–∂–µ—Ç–æ–Ω/i);
                    if (matches && matches[1]) {
                        entryFee = parseInt(matches[1]) || 1;
                    }
                }

                // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –≤–∞—Ä—Ç—ñ—Å—Ç—å —É—á–∞—Å—Ç—ñ
                this.entryFees[raffleId] = entryFee;

                // –î–æ–¥–∞—î–º–æ –∞—Ç—Ä–∏–±—É—Ç, —è–∫—â–æ –π–æ–≥–æ –Ω–µ–º–∞—î
                if (!button.hasAttribute('data-entry-fee')) {
                    button.setAttribute('data-entry-fee', entryFee);
                }
            });
        },

        /**
         * –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –±—ñ–ª–µ—Ç—ñ–≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
         * @param {boolean} forceRefresh - –ü—Ä–∏–º—É—Å–æ–≤–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
         */
        loadUserTickets: function(forceRefresh = false) {
            // –ó–∞–ø–æ–±—ñ–≥–∞—î–º–æ –ø–∞—Ä–∞–ª–µ–ª—å–Ω–∏–º –∑–∞–ø–∏—Ç–∞–º
            if (this.isLoading && !forceRefresh) {
                console.log('üéüÔ∏è –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –±—ñ–ª–µ—Ç—ñ–≤ –≤–∂–µ –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è');
                return;
            }

            // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ—Å—Ç—ñ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
            if (!forceRefresh && Object.keys(this.ticketCounts).length > 0) {
                console.log('üéüÔ∏è –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∫–µ—à–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ –ø—Ä–æ –±—ñ–ª–µ—Ç–∏');
                return;
            }

            console.log('üéüÔ∏è –û–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –ø—Ä–æ –±—ñ–ª–µ—Ç–∏');
            this.isLoading = true;

            // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ–π —Å—Ç–∞–Ω –¥–ª—è –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è
            const previousTickets = {...this.ticketCounts};

            try {
                // –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ –∑ WinixRaffles.participation (–ø—Ä—ñ–æ—Ä–∏—Ç–µ—Ç–Ω–µ –¥–∂–µ—Ä–µ–ª–æ)
                if (window.WinixRaffles && window.WinixRaffles.participation) {
                    const participation = window.WinixRaffles.participation;

                    // –û—á–∏—â–∞—î–º–æ –ø–æ—Ç–æ—á–Ω—ñ –¥–∞–Ω—ñ
                    this.ticketCounts = {};

                    // –ó–∞–ø–æ–≤–Ω—é—î–º–æ –∑ –¥–∞–Ω–∏—Ö participation
                    if (participation.participatingRaffles && participation.userRaffleTickets) {
                        participation.participatingRaffles.forEach(raffleId => {
                            // –û—Ç—Ä–∏–º—É—î–º–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –±—ñ–ª–µ—Ç—ñ–≤
                            const ticketCount = participation.userRaffleTickets[raffleId] || 1;
                            this.ticketCounts[raffleId] = ticketCount;
                        });
                    }
                } else {
                    // –ó–∞–ø–∞—Å–Ω–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç - –Ω–∞–º–∞–≥–∞—î–º–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –∑ localStorage
                    try {
                        const savedTickets = localStorage.getItem('winix_user_tickets');
                        if (savedTickets) {
                            const parsedTickets = JSON.parse(savedTickets);
                            // –û–±'—î–¥–Ω—É—î–º–æ –∑ –ø–æ—Ç–æ—á–Ω–∏–º–∏ –¥–∞–Ω–∏–º–∏
                            this.ticketCounts = {...parsedTickets};
                        }
                    } catch (e) {
                        console.warn('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –ø—Ä–æ –±—ñ–ª–µ—Ç–∏ –∑ localStorage:', e);
                    }
                }

                // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∑–º—ñ–Ω–∏
                let hasChanges = false;

                // –ü–æ—Ä—ñ–≤–Ω—é—î–º–æ –Ω–æ–≤–∏–π —ñ —Å—Ç–∞—Ä–∏–π —Å—Ç–∞–Ω
                for (const raffleId in this.ticketCounts) {
                    if (previousTickets[raffleId] !== this.ticketCounts[raffleId]) {
                        hasChanges = true;
                        break;
                    }
                }

                for (const raffleId in previousTickets) {
                    if (this.ticketCounts[raffleId] === undefined) {
                        hasChanges = true;
                        break;
                    }
                }

                if (hasChanges || forceRefresh) {
                    console.log('üéüÔ∏è –û–Ω–æ–≤–ª–µ–Ω—ñ –¥–∞–Ω—ñ –ø—Ä–æ –±—ñ–ª–µ—Ç–∏:', this.ticketCounts);
                    this.saveTicketsToStorage();
                    this.updateTicketsUI();
                }
            } catch (error) {
                console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –±—ñ–ª–µ—Ç—ñ–≤:', error);
            } finally {
                this.isLoading = false;
            }
        },

        /**
         * –û–Ω–æ–≤–ª–µ–Ω–Ω—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –±—ñ–ª–µ—Ç—ñ–≤
         */
        updateTicketsUI: function() {
            // –ü–µ—Ä–µ–±–∏—Ä–∞—î–º–æ –≤—Å—ñ –∫–Ω–æ–ø–∫–∏
            for (const raffleId in this.ticketCounts) {
                const ticketCount = this.ticketCounts[raffleId];
                const buttons = document.querySelectorAll(`.join-button[data-raffle-id="${raffleId}"], .mini-raffle-button[data-raffle-id="${raffleId}"]`);

                buttons.forEach(button => {
                    // –ó–º—ñ–Ω—é—î–º–æ —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏, —Ç—ñ–ª—å–∫–∏ —è–∫—â–æ –≤–æ–Ω–∞ –Ω–µ –æ–±—Ä–æ–±–ª—è—î—Ç—å—Å—è
                    if (!button.classList.contains('processing')) {
                        const isMini = button.classList.contains('mini-raffle-button');
                        if (ticketCount > 0) {
                            button.classList.add('participating');
                            button.textContent = isMini ?
                                `–î–æ–¥–∞—Ç–∏ —â–µ –±—ñ–ª–µ—Ç (${ticketCount})` :
                                `–î–æ–¥–∞—Ç–∏ —â–µ –±—ñ–ª–µ—Ç (—É –≤–∞—Å: ${ticketCount})`;
                        }
                    }
                });
            }
        },

        /**
         * –û–±—Ä–æ–±–∫–∞ —É—Å–ø—ñ—à–Ω–æ—ó —É—á–∞—Å—Ç—ñ –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ
         * @param {Object} data - –î–∞–Ω—ñ –ø—Ä–æ —É—á–∞—Å—Ç—å
         */
        handleSuccessfulParticipation: function(data) {
            if (!data || !data.raffleId) return;

            // –û–Ω–æ–≤–ª—é—î–º–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –±—ñ–ª–µ—Ç—ñ–≤
            const raffleId = data.raffleId;
            const ticketCount = data.ticketCount || (this.ticketCounts[raffleId] || 0) + 1;

            // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å –±—ñ–ª–µ—Ç—ñ–≤
            this.ticketCounts[raffleId] = ticketCount;

            // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –≤ localStorage
            this.saveTicketsToStorage();

            // –†–æ–∑–∫–ª–∞–¥ –≤—ñ–¥–∫–ª–∞–¥–µ–Ω–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
            if (this.syncTimer) clearTimeout(this.syncTimer);
            this.syncTimer = setTimeout(() => {
                this.syncWithServer();
            }, 3000);

            console.log(`‚úÖ –û–Ω–æ–≤–ª–µ–Ω–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –±—ñ–ª–µ—Ç—ñ–≤ –¥–ª—è —Ä–æ–∑—ñ–≥—Ä–∞—à—É ${raffleId}: ${ticketCount}`);
        },

        /**
         * –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –ø—Ä–æ –±—ñ–ª–µ—Ç–∏ –≤ localStorage
         */
        saveTicketsToStorage: function() {
            try {
                localStorage.setItem('winix_user_tickets', JSON.stringify(this.ticketCounts));
            } catch (e) {
                console.warn('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –ø—Ä–æ –±—ñ–ª–µ—Ç–∏:', e);
            }
        },

        /**
         * –£—á–∞—Å—Ç—å —É —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ - –¥–µ–ª–µ–≥—É—î–º–æ –º–æ–¥—É–ª—é participation
         * @param {string} raffleId - ID —Ä–æ–∑—ñ–≥—Ä–∞—à—É
         * @param {number} entryCount - –ö—ñ–ª—å–∫—ñ—Å—Ç—å –±—ñ–ª–µ—Ç—ñ–≤ –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è
         * @returns {Promise<Object>} –†–µ–∑—É–ª—å—Ç–∞—Ç —É—á–∞—Å—Ç—ñ
         */
        participateInRaffle: async function(raffleId, entryCount = 1) {
            try {
                // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ –º–æ–¥—É–ª—è participation
                if (!window.WinixRaffles ||
                    !window.WinixRaffles.participation ||
                    typeof window.WinixRaffles.participation.participateInRaffle !== 'function') {

                    console.error('‚ùå –ú–æ–¥—É–ª—å participation –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π');
                    this._showToast('–ú–æ–¥—É–ª—å –æ–±—Ä–æ–±–∫–∏ —É—á–∞—Å—Ç—ñ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π. –û–Ω–æ–≤—ñ—Ç—å —Å—Ç–æ—Ä—ñ–Ω–∫—É.', 'error');
                    return {
                        success: false,
                        message: '–ú–æ–¥—É–ª—å –æ–±—Ä–æ–±–∫–∏ —É—á–∞—Å—Ç—ñ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π. –û–Ω–æ–≤—ñ—Ç—å —Å—Ç–æ—Ä—ñ–Ω–∫—É.'
                    };
                }

                // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å—É
                const userCoins = this.getUserCoins();
                const entryFee = this.getEntryFee(raffleId) || 1;

                if (userCoins < entryFee) {
                    this._showToast(`–ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –∂–µ—Ç–æ–Ω—ñ–≤. –ü–æ—Ç—Ä—ñ–±–Ω–æ: ${entryFee}, —É –≤–∞—Å: ${userCoins}`, 'warning');
                    return {
                        success: false,
                        message: `–ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –∂–µ—Ç–æ–Ω—ñ–≤. –ü–æ—Ç—Ä—ñ–±–Ω–æ: ${entryFee}, —É –≤–∞—Å: ${userCoins}`
                    };
                }

                console.log('üîÑ –î–µ–ª–µ–≥—É–≤–∞–Ω–Ω—è –∑–∞–ø–∏—Ç—É —É—á–∞—Å—Ç—ñ –º–æ–¥—É–ª—é participation...');

                // –í–∏–∫–ª–∏–∫–∞—î–º–æ –º–µ—Ç–æ–¥ participation
                const result = await window.WinixRaffles.participation.participateInRaffle(raffleId, 'delegate', entryCount);

                // –û–±—Ä–æ–±–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É
                if (result.success) {
                    // –ó–∞–ø–∞–º'—è—Ç–æ–≤—É—î–º–æ –∫–≤–∏—Ç–∫–∏ –ª–æ–∫–∞–ª—å–Ω–æ
                    if (result.data && typeof result.data.total_entries === 'number') {
                        this.ticketCounts[raffleId] = result.data.total_entries;
                        this.saveTicketsToStorage();
                        this.updateTicketsUI();
                    }
                }

                return result;
            } catch (error) {
                console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –¥–µ–ª–µ–≥—É–≤–∞–Ω–Ω—è –∑–∞–ø–∏—Ç—É —É—á–∞—Å—Ç—ñ:', error);
                this._showToast(error.message || '–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Å–ø—Ä–æ–±—ñ —É—á–∞—Å—Ç—ñ –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ', 'error');
                return {
                    success: false,
                    message: error.message || '–í–Ω—É—Ç—Ä—ñ—à–Ω—è –ø–æ–º–∏–ª–∫–∞ –¥–µ–ª–µ–≥—É–≤–∞–Ω–Ω—è –∑–∞–ø–∏—Ç—É —É—á–∞—Å—Ç—ñ'
                };
            }
        },

        /**
         * –û—Ç—Ä–∏–º–∞–Ω–Ω—è –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –±—ñ–ª–µ—Ç—ñ–≤ –¥–ª—è —Ä–æ–∑—ñ–≥—Ä–∞—à—É
         * @param {string} raffleId - ID —Ä–æ–∑—ñ–≥—Ä–∞—à—É
         * @returns {number} –ö—ñ–ª—å–∫—ñ—Å—Ç—å –±—ñ–ª–µ—Ç—ñ–≤
         */
        getTicketCount: function(raffleId) {
            return this.ticketCounts[raffleId] || 0;
        },

        /**
         * –û—Ç—Ä–∏–º–∞–Ω–Ω—è –≤–∞—Ä—Ç–æ—Å—Ç—ñ —É—á–∞—Å—Ç—ñ –¥–ª—è —Ä–æ–∑—ñ–≥—Ä–∞—à—É
         * @param {string} raffleId - ID —Ä–æ–∑—ñ–≥—Ä–∞—à—É
         * @returns {number} –í–∞—Ä—Ç—ñ—Å—Ç—å —É—á–∞—Å—Ç—ñ
         */
        getEntryFee: function(raffleId) {
            return this.entryFees[raffleId] || 1;
        },

        /**
         * –û–Ω–æ–≤–ª–µ–Ω–Ω—è –≤–∞—Ä—Ç–æ—Å—Ç—ñ —É—á–∞—Å—Ç—ñ –¥–ª—è —Ä–æ–∑—ñ–≥—Ä–∞—à—É
         * @param {string} raffleId - ID —Ä–æ–∑—ñ–≥—Ä–∞—à—É
         * @param {number} fee - –í–∞—Ä—Ç—ñ—Å—Ç—å —É—á–∞—Å—Ç—ñ
         */
        updateEntryFee: function(raffleId, fee) {
            if (!raffleId) return;

            // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –≤–∞—Ä—Ç—ñ—Å—Ç—å —É—á–∞—Å—Ç—ñ
            this.entryFees[raffleId] = fee;

            // –û–Ω–æ–≤–ª—é—î–º–æ –∞—Ç—Ä–∏–±—É—Ç–∏ –∫–Ω–æ–ø–æ–∫
            const buttons = document.querySelectorAll(`.join-button[data-raffle-id="${raffleId}"], .mini-raffle-button[data-raffle-id="${raffleId}"]`);
            buttons.forEach(button => {
                button.setAttribute('data-entry-fee', fee);

                // –Ø–∫—â–æ –∫–Ω–æ–ø–∫–∞ –Ω–µ –≤ —Å—Ç–∞–Ω—ñ —É—á–∞—Å—Ç—ñ, –æ–Ω–æ–≤–ª—é—î–º–æ —Ç–µ–∫—Å—Ç
                if (!button.classList.contains('participating') && !button.classList.contains('processing')) {
                    if (button.classList.contains('mini-raffle-button')) {
                        button.textContent = `–í–∑—è—Ç–∏ —É—á–∞—Å—Ç—å`;
                    } else {
                        button.textContent = `–í–∑—è—Ç–∏ —É—á–∞—Å—Ç—å –∑–∞ ${fee} –∂–µ—Ç–æ–Ω${fee > 1 ? '–∏' : ''}`;
                    }
                }
            });
        },

        /**
         * –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è –∑ —Å–µ—Ä–≤–µ—Ä–æ–º
         * @returns {Promise<boolean>} –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó
         */
        syncWithServer: async function() {
            // –ó–∞–ø–æ–±—ñ–≥–∞—î–º–æ –ø–∞—Ä–∞–ª–µ–ª—å–Ω–∏–º –≤–∏–∫–ª–∏–∫–∞–º
            if (this.isLoading) {
                return false;
            }

            this.isLoading = true;

            try {
                // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Ä—ñ–¥–Ω–∏–π –º–µ—Ç–æ–¥ participation
                if (window.WinixRaffles && window.WinixRaffles.participation) {
                    const result = await window.WinixRaffles.participation.loadUserRaffles(true);

                    // –û–Ω–æ–≤–ª—é—î–º–æ –Ω–∞—à—ñ –¥–∞–Ω—ñ –ø—ñ—Å–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó
                    this.loadUserTickets(true);

                    return result.success;
                } else {
                    // –Ø–∫—â–æ participation –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π, –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —Å–∞–º—ñ
                    this.loadUserTickets(true);
                    return true;
                }
            } catch (error) {
                console.warn('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó –∑ —Å–µ—Ä–≤–µ—Ä–æ–º:', error);
                return false;
            } finally {
                this.isLoading = false;
            }
        },

        /**
         * –°–∫–∏–¥–∞–Ω–Ω—è —Å—Ç–∞–Ω—É
         */
        reset: function() {
            console.log('üîÑ –°–∫–∏–¥–∞–Ω–Ω—è —Å—Ç–∞–Ω—É ticket-manager...');

            // –û—á–∏—â–µ–Ω–Ω—è —Ç–∞–π–º–µ—Ä—ñ–≤
            this._cleanupState();

            // –û—á–∏—â–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö
            this.ticketCounts = {};
            this.entryFees = {};
            this.lastTransactionTime = 0;

            // –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –ø–æ—Ä–æ–∂–Ω—ñ—Ö –¥–∞–Ω–∏—Ö
            this.saveTicketsToStorage();

            console.log('‚úÖ –°—Ç–∞–Ω ticket-manager —É—Å–ø—ñ—à–Ω–æ —Å–∫–∏–Ω—É—Ç–æ');
        }
    };

    // –î–æ–¥–∞—î–º–æ –º–æ–¥—É–ª—å –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–æ–¥—É–ª—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
    window.WinixRaffles.ticketManager = ticketManager;

    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –º–æ–¥—É–ª—è
    document.addEventListener('DOMContentLoaded', function() {
        if (window.WinixRaffles.state.isInitialized) {
            ticketManager.init();
        } else {
            // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ—ó —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
            document.addEventListener('winix-raffles-initialized', function() {
                ticketManager.init();
            });
        }
    });

    console.log('‚úÖ –ú–æ–¥—É–ª—å —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –±—ñ–ª–µ—Ç–∞–º–∏ —É—Å–ø—ñ—à–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ');
})();