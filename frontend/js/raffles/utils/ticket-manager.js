/**
 * WINIX - –°–∏—Å—Ç–µ–º–∞ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ (ticket-manager.js)
 * –ü–æ–∫—Ä–∞—â–µ–Ω–∏–π –º–æ–¥—É–ª—å –¥–ª—è –∫–æ—Ä–µ–∫—Ç–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –±—ñ–ª–µ—Ç–∞–º–∏ —Ç–∞ –∂–µ—Ç–æ–Ω–∞–º–∏
 * –í–∏–ø—Ä–∞–≤–ª–µ–Ω—ñ –ø—Ä–æ–±–ª–µ–º–∏ –∑ –¥—É–±–ª—é–≤–∞–Ω–Ω—è–º —É—á–∞—Å—Ç—ñ
 * @version 1.1.0
 */

(function() {
    'use strict';

    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–æ–¥—É–ª—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
    if (typeof window.WinixRaffles === 'undefined') {
        console.error('‚ùå WinixRaffles –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ! –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—è, —â–æ core.js –ø—ñ–¥–∫–ª—é—á–µ–Ω–æ —Ä–∞–Ω—ñ—à–µ ticket-manager.js');
        return;
    }

    // –ú–æ–¥—É–ª—å —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –±—ñ–ª–µ—Ç–∞–º–∏
    const ticketManager = {
        // –î–∞–Ω—ñ –ø—Ä–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –±—ñ–ª–µ—Ç—ñ–≤ –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
        ticketCounts: {},

        // –î–∞–Ω—ñ –ø—Ä–æ –≤–∞—Ä—Ç—ñ—Å—Ç—å —É—á–∞—Å—Ç—ñ –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
        entryFees: {},

        // –ü–æ—Ç–æ—á–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∂–µ—Ç–æ–Ω—ñ–≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        currentCoins: 0,

        // –õ—ñ—á–∏–ª—å–Ω–∏–∫ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è
        transactionCounter: 0,

        // –ß–∏ –≤—ñ–¥–±—É–≤–∞—î—Ç—å—Å—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—è –∑–∞—Ä–∞–∑
        isTransactionInProgress: false,

        // –ß–∞—Å –æ—Å—Ç–∞–Ω–Ω—å–æ—ó —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó
        lastTransactionTime: 0,

        // –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–π —ñ–Ω—Ç–µ—Ä–≤–∞–ª –º—ñ–∂ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—è–º–∏ (–º—Å)
        minTransactionInterval: 1500, // –ó–±—ñ–ª—å—à–µ–Ω–æ –∑ 600 –¥–æ 1500

        // –Ü—Å—Ç–æ—Ä—ñ—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π
        transactionHistory: [],

        // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∏–π —Ä–æ–∑–º—ñ—Ä —ñ—Å—Ç–æ—Ä—ñ—ó —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π
        maxHistorySize: 50,

        // –ù–û–í–ï: –¢–∞–π–º–µ—Ä –¥–ª—è –≤—ñ–¥–∫–ª–∞–¥–µ–Ω–æ—ó —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó
        syncTimer: null,

        // –ù–û–í–ï: –°—Ç–∞–Ω —Ç–∞–π–º–µ—Ä–∞ –∑–≤–æ—Ä–æ—Ç–Ω–æ–≥–æ –≤—ñ–¥–ª—ñ–∫—É
        cooldownTimers: {},

        /**
         * –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –º–æ–¥—É–ª—è
         */
        init: function() {
            console.log('üéüÔ∏è –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –º–æ–¥—É–ª—è —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –±—ñ–ª–µ—Ç–∞–º–∏...');

            // –ù–û–í–ï: –û—á–∏—â–µ–Ω–Ω—è —Å—Ç–∞–Ω—É –ø–µ—Ä–µ–¥ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—î—é
            this._cleanupState();

            // –û–Ω–æ–≤–ª—é—î–º–æ –¥–æ—Å—Ç—É–ø–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∂–µ—Ç–æ–Ω—ñ–≤
            this.updateCurrentCoins();

            // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –±—ñ–ª–µ—Ç—ñ–≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            this.loadUserTickets();

            // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π
            this.setupEventHandlers();

            // –ù–û–í–ï: –°–∏–ª–æ–≤–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –ø—ñ—Å–ª—è –∑–∞—Ç—Ä–∏–º–∫–∏
            setTimeout(() => {
                this.loadUserTickets(true);
            }, 2000);
        },

        /**
         * –ù–û–í–ï: –û—á–∏—â–µ–Ω–Ω—è —Å—Ç–∞–Ω—É –ø–µ—Ä–µ–¥ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—î—é
         * @private
         */
        _cleanupState: function() {
            // –°–∫–∏–¥–∞–Ω–Ω—è —Å—Ç–∞–Ω—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó
            this.isTransactionInProgress = false;

            // –û—á–∏—â–µ–Ω–Ω—è —Ç–∞–π–º–µ—Ä—É –∑–≤–æ—Ä–æ—Ç–Ω–æ–≥–æ –≤—ñ–¥–ª—ñ–∫—É
            for (const timerId in this.cooldownTimers) {
                if (this.cooldownTimers.hasOwnProperty(timerId)) {
                    clearTimeout(this.cooldownTimers[timerId]);
                }
            }
            this.cooldownTimers = {};

            // –û—á–∏—â–µ–Ω–Ω—è —Ç–∞–π–º–µ—Ä—É —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó
            if (this.syncTimer) {
                clearTimeout(this.syncTimer);
                this.syncTimer = null;
            }
        },

        /**
         * –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –ø–æ–¥—ñ–π
         */
        setupEventHandlers: function() {
            // –û–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ—ó —É—Å–ø—ñ—à–Ω–æ—ó —É—á–∞—Å—Ç—ñ –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ
            document.addEventListener('raffle-participation', (event) => {
                if (event.detail && event.detail.successful) {
                    this.handleSuccessfulParticipation(event.detail);
                }
            });

            // –û–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ—ó –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            document.addEventListener('user-data-updated', (event) => {
                if (event.detail && event.detail.userData) {
                    this.updateCurrentCoins(event.detail.userData.coins);

                    // –ù–û–í–ï: –û–Ω–æ–≤–ª—é—î–º–æ –¥–∞–Ω—ñ –ø—Ä–æ –±—ñ–ª–µ—Ç–∏
                    if (!event.detail.source || event.detail.source !== 'ticket-manager') {
                        setTimeout(() => {
                            this.loadUserTickets(true);
                        }, 1000);
                    }
                }
            });

            // –û–±—Ä–æ–±–Ω–∏–∫ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –Ω–∞ –∫–Ω–æ–ø–∫–∏ —É—á–∞—Å—Ç—ñ
            document.addEventListener('click', (event) => {
                const participateButton = event.target.closest('.join-button, .mini-raffle-button');
                if (!participateButton) return;

                // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –Ω–µ –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–∞ –∫–Ω–æ–ø–∫–∞
                if (participateButton.disabled || participateButton.classList.contains('processing')) {
                    event.preventDefault();
                    event.stopPropagation();
                    console.log('üëÜ –ö–ª—ñ–∫–∏ –ø–æ –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω—ñ–π –∫–Ω–æ–ø—Ü—ñ –∑–∞–±–æ—Ä–æ–Ω–µ–Ω–æ');
                    return;
                }

                // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —Ü–µ –∫–Ω–æ–ø–∫–∞ –¥–ª—è –≤–∂–µ —ñ—Å–Ω—É—é—á–æ—ó —É—á–∞—Å—Ç—ñ
                if (participateButton.classList.contains('participating')) {
                    const raffleId = participateButton.getAttribute('data-raffle-id');
                    if (raffleId) {
                        // –ù–û–í–ï: –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ —Ç–∞–π–º–µ—Ä –∑–≤–æ—Ä–æ—Ç–Ω–æ–≥–æ –≤—ñ–¥–ª—ñ–∫—É
                        if (this.cooldownTimers[raffleId]) {
                            event.preventDefault();
                            event.stopPropagation();

                            if (typeof window.showToast === 'function') {
                                window.showToast('–ë—É–¥—å –ª–∞—Å–∫–∞, –∑–∞—á–µ–∫–∞–π—Ç–µ –ø–µ—Ä–µ–¥ –Ω–∞—Å—Ç—É–ø–Ω–æ—é —Å–ø—Ä–æ–±–æ—é', 'info');
                            }
                            return;
                        }

                        // –ó–∞–ø–∞–º'—è—Ç–æ–≤—É—î–º–æ –≤–∞—Ä—Ç—ñ—Å—Ç—å —É—á–∞—Å—Ç—ñ
                        const entryFee = parseInt(participateButton.getAttribute('data-entry-fee')) || 1;
                        this.entryFees[raffleId] = entryFee;

                        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –¥–æ—Å—Ç–∞—Ç–Ω—å–æ—ó –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –∂–µ—Ç–æ–Ω—ñ–≤
                        if (!this.hasEnoughCoins(entryFee)) {
                            event.preventDefault();
                            event.stopPropagation();

                            this.showNotEnoughCoinsMessage(entryFee);
                            return false;
                        }

                        // –ù–û–í–ï: –°—Ç–≤–æ—Ä—é—î–º–æ —Ç–∞–π–º–µ—Ä –∑–≤–æ—Ä–æ—Ç–Ω–æ–≥–æ –≤—ñ–¥–ª—ñ–∫—É –¥–ª—è —Ü—å–æ–≥–æ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
                        this.cooldownTimers[raffleId] = setTimeout(() => {
                            delete this.cooldownTimers[raffleId];
                        }, this.minTransactionInterval);
                    }
                }
            });

            // –û–±—Ä–æ–±–Ω–∏–∫ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
            document.addEventListener('raffles-loaded', () => {
                this.extractEntryFeesFromDOM();

                // –ù–û–í–ï: –û–Ω–æ–≤–ª—é—î–º–æ –¥–∞–Ω—ñ –ø—Ä–æ –±—ñ–ª–µ—Ç–∏
                setTimeout(() => {
                    this.loadUserTickets();
                }, 1000);
            });
        },

        /**
         * –í–∏—Ç—è–≥—É–≤–∞–Ω–Ω—è –≤–∞—Ä—Ç–æ—Å—Ç—ñ —É—á–∞—Å—Ç—ñ –∑ DOM
         */
        extractEntryFeesFromDOM: function() {
            // –ü–µ—Ä–µ–±–∏—Ä–∞—î–º–æ –≤—Å—ñ –∫–Ω–æ–ø–∫–∏ —É—á–∞—Å—Ç—ñ
            const buttons = document.querySelectorAll('.join-button, .mini-raffle-button');
            buttons.forEach(button => {
                const raffleId = button.getAttribute('data-raffle-id');
                if (!raffleId) return;

                // –í–∏—Ç—è–≥—É—î–º–æ –≤–∞—Ä—Ç—ñ—Å—Ç—å —É—á–∞—Å—Ç—ñ
                let entryFee = 1;

                // –°–ø—Ä–æ–±—É—î–º–æ –≤–∏—Ç—è–≥—Ç–∏ –∑ –∞—Ç—Ä–∏–±—É—Ç—É
                if (button.hasAttribute('data-entry-fee')) {
                    entryFee = parseInt(button.getAttribute('data-entry-fee')) || 1;
                } else {
                    // –°–ø—Ä–æ–±—É—î–º–æ –≤–∏—Ç—è–≥—Ç–∏ –∑ —Ç–µ–∫—Å—Ç—É
                    const buttonText = button.textContent;
                    const matches = buttonText.match(/–∑–∞\s+(\d+)\s+–∂–µ—Ç–æ–Ω/i);
                    if (matches && matches[1]) {
                        entryFee = parseInt(matches[1]) || 1;
                    }
                }

                // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –≤–∞—Ä—Ç—ñ—Å—Ç—å —É—á–∞—Å—Ç—ñ
                this.entryFees[raffleId] = entryFee;

                // –î–æ–¥–∞—î–º–æ –∞—Ç—Ä–∏–±—É—Ç, —è–∫—â–æ –π–æ–≥–æ –Ω–µ–º–∞—î
                if (!button.hasAttribute('data-entry-fee')) {
                    button.setAttribute('data-entry-fee', entryFee);
                }
            });
        },

        /**
         * –û–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–æ—Ç–æ—á–Ω–æ—ó –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –∂–µ—Ç–æ–Ω—ñ–≤
         * @param {number} coins - –ö—ñ–ª—å–∫—ñ—Å—Ç—å –∂–µ—Ç–æ–Ω—ñ–≤
         */
        updateCurrentCoins: function(coins) {
            // –Ø–∫—â–æ –ø–µ—Ä–µ–¥–∞–Ω–æ –∑–Ω–∞—á–µ–Ω–Ω—è, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –π–æ–≥–æ
            if (coins !== undefined) {
                this.currentCoins = coins;
                return;
            }

            // –°–ø—Ä–æ–±—É—î–º–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ –∑ –µ–ª–µ–º–µ–Ω—Ç–∞ DOM
            const coinsElement = document.getElementById('user-coins');
            if (coinsElement) {
                this.currentCoins = parseInt(coinsElement.textContent) || 0;
                return;
            }

            // –°–ø—Ä–æ–±—É—î–º–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ –∑ localStorage
            this.currentCoins = parseInt(localStorage.getItem('userCoins') || localStorage.getItem('winix_coins')) || 0;
        },

        /**
         * –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –±—ñ–ª–µ—Ç—ñ–≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
         * @param {boolean} forceRefresh - –ü—Ä–∏–º—É—Å–æ–≤–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
         */
        loadUserTickets: function(forceRefresh = false) {
            // –ù–û–í–ï: –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ—Å—Ç—ñ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
            if (!forceRefresh && Object.keys(this.ticketCounts).length > 0) {
                console.log('üéüÔ∏è –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∫–µ—à–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ –ø—Ä–æ –±—ñ–ª–µ—Ç–∏');
                return;
            }

            console.log('üéüÔ∏è –û–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –ø—Ä–æ –±—ñ–ª–µ—Ç–∏');

            // –°–∫–∏–¥–∞—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ–π —Å—Ç–∞–Ω
            const previousTickets = {...this.ticketCounts};
            this.ticketCounts = {};

            // –°–ø—Ä–æ–±—É—î–º–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–∞–Ω—ñ –∑ WinixRaffles
            if (window.WinixRaffles && window.WinixRaffles.participation) {
                const participation = window.WinixRaffles.participation;

                // –Ø–∫—â–æ —î —Å–ø–∏—Å–æ–∫ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ –∑ —É—á–∞—Å—Ç—é
                if (participation.participatingRaffles) {
                    participation.participatingRaffles.forEach(raffleId => {
                        // –û—Ç—Ä–∏–º—É—î–º–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –±—ñ–ª–µ—Ç—ñ–≤
                        const ticketCount = participation.userRaffleTickets &&
                                          participation.userRaffleTickets[raffleId] || 1;

                        // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –±—ñ–ª–µ—Ç—ñ–≤
                        this.ticketCounts[raffleId] = ticketCount;
                    });
                }

                // –Ø–∫—â–æ —î –¥–∞–Ω—ñ –ø—Ä–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –±—ñ–ª–µ—Ç—ñ–≤
                if (participation.userRaffleTickets) {
                    Object.keys(participation.userRaffleTickets).forEach(raffleId => {
                        this.ticketCounts[raffleId] = participation.userRaffleTickets[raffleId];
                    });
                }
            }

            // –°–ø—Ä–æ–±—É—î–º–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–∞–Ω—ñ –∑ localStorage
            try {
                const savedTickets = localStorage.getItem('winix_user_tickets');
                if (savedTickets) {
                    const parsedTickets = JSON.parse(savedTickets);

                    // –û–±'—î–¥–Ω—É—î–º–æ –∑ –ø–æ—Ç–æ—á–Ω–∏–º–∏ –¥–∞–Ω–∏–º–∏
                    this.ticketCounts = {...this.ticketCounts, ...parsedTickets};
                }
            } catch (e) {
                console.warn('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –ø—Ä–æ –±—ñ–ª–µ—Ç–∏:', e);
            }

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∑–º—ñ–Ω–∏ —ñ –≤–∏–≤–æ–¥–∏–º–æ –ª–æ–≥–∏
            let hasChanges = false;
            for (const raffleId in this.ticketCounts) {
                if (previousTickets[raffleId] !== this.ticketCounts[raffleId]) {
                    hasChanges = true;
                    break;
                }
            }

            if (hasChanges || forceRefresh) {
                console.log('üéüÔ∏è –û–Ω–æ–≤–ª–µ–Ω—ñ –¥–∞–Ω—ñ –ø—Ä–æ –±—ñ–ª–µ—Ç–∏:', this.ticketCounts);
                this.saveTicketsToStorage();
                this.updateTicketDisplayForAll();
            }
        },

        /**
         * –ù–û–í–ï: –û–Ω–æ–≤–ª–µ–Ω–Ω—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –±—ñ–ª–µ—Ç—ñ–≤ –¥–ª—è –≤—Å—ñ—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
         */
        updateTicketDisplayForAll: function() {
            for (const raffleId in this.ticketCounts) {
                this.updateTicketDisplay(raffleId, this.ticketCounts[raffleId]);
            }
        },

        /**
         * –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ –¥–æ—Å—Ç–∞—Ç–Ω—å–æ—ó –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –∂–µ—Ç–æ–Ω—ñ–≤
         * @param {number} requiredCoins - –ù–µ–æ–±—Ö—ñ–¥–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∂–µ—Ç–æ–Ω—ñ–≤
         * @returns {boolean} –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏
         */
        hasEnoughCoins: function(requiredCoins) {
            return this.currentCoins >= requiredCoins;
        },

        /**
         * –ü–æ–∫–∞–∑ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –Ω–µ–¥–æ—Å—Ç–∞—Ç–Ω—é –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∂–µ—Ç–æ–Ω—ñ–≤
         * @param {number} requiredCoins - –ù–µ–æ–±—Ö—ñ–¥–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∂–µ—Ç–æ–Ω—ñ–≤
         */
        showNotEnoughCoinsMessage: function(requiredCoins) {
            // –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –Ω–µ–¥–æ—Å—Ç–∞—Ç–Ω—é –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∂–µ—Ç–æ–Ω—ñ–≤
            if (typeof window.showToast === 'function') {
                window.showToast(`–ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –∂–µ—Ç–æ–Ω—ñ–≤ –¥–ª—è —É—á–∞—Å—Ç—ñ. –ü–æ—Ç—Ä—ñ–±–Ω–æ ${requiredCoins}, —É –≤–∞—Å ${this.currentCoins}.`, 'warning');
            } else {
                alert(`–ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –∂–µ—Ç–æ–Ω—ñ–≤ –¥–ª—è —É—á–∞—Å—Ç—ñ. –ü–æ—Ç—Ä—ñ–±–Ω–æ ${requiredCoins}, —É –≤–∞—Å ${this.currentCoins}.`);
            }
        },

        /**
         * –û–±—Ä–æ–±–∫–∞ —É—Å–ø—ñ—à–Ω–æ—ó —É—á–∞—Å—Ç—ñ –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ
         * @param {Object} data - –î–∞–Ω—ñ –ø—Ä–æ —É—á–∞—Å—Ç—å
         */
        handleSuccessfulParticipation: function(data) {
            if (!data || !data.raffleId) return;

            // –û–Ω–æ–≤–ª—é—î–º–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –±—ñ–ª–µ—Ç—ñ–≤
            const raffleId = data.raffleId;
            const ticketCount = data.ticketCount || (this.ticketCounts[raffleId] || 0) + 1;

            // –ù–û–í–ï: –ó–∞–ø–∞–º'—è—Ç–æ–≤—É—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—é –∫—ñ–ª—å–∫—ñ—Å—Ç—å –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –∑–º—ñ–Ω
            const previousTicketCount = this.ticketCounts[raffleId] || 0;

            // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å –±—ñ–ª–µ—Ç—ñ–≤
            this.ticketCounts[raffleId] = ticketCount;

            // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –≤ localStorage
            this.saveTicketsToStorage();

            // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –±—ñ–ª–µ—Ç—ñ–≤
            this.updateTicketDisplay(raffleId, ticketCount);

            // –ó–º–µ–Ω—à—É—î–º–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∂–µ—Ç–æ–Ω—ñ–≤
            this.decreaseCoins(raffleId);

            // –î–æ–¥–∞—î–º–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—é –≤ —ñ—Å—Ç–æ—Ä—ñ—é
            this.addTransaction({
                type: 'participation',
                raffleId: raffleId,
                ticketCount: ticketCount,
                previousTicketCount: previousTicketCount,
                fee: this.entryFees[raffleId] || 1,
                timestamp: Date.now()
            });

            // –ù–û–í–ï: –ü–ª–∞–Ω—É—î–º–æ –¥–æ–¥–∞—Ç–∫–æ–≤—É —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—é —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥–∏
            if (this.syncTimer) {
                clearTimeout(this.syncTimer);
            }

            this.syncTimer = setTimeout(() => {
                console.log('üîÑ –í–∏–∫–æ–Ω—É—î–º–æ –≤—ñ–¥–∫–ª–∞–¥–µ–Ω—É –ø–µ—Ä–µ–≤—ñ—Ä–∫—É —Å—Ç–∞–Ω—É –±—ñ–ª–µ—Ç—ñ–≤');
                this.loadUserTickets(true);
            }, 3000);
        },

        /**
         * –ó–º–µ–Ω—à–µ–Ω–Ω—è –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –∂–µ—Ç–æ–Ω—ñ–≤ –ø—ñ—Å–ª—è —É—á–∞—Å—Ç—ñ
         * @param {string} raffleId - ID —Ä–æ–∑—ñ–≥—Ä–∞—à—É
         */
        decreaseCoins: function(raffleId) {
            // –û—Ç—Ä–∏–º—É—î–º–æ –≤–∞—Ä—Ç—ñ—Å—Ç—å —É—á–∞—Å—Ç—ñ
            const entryFee = this.entryFees[raffleId] || 1;

            // –û–Ω–æ–≤–ª—é—î–º–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∂–µ—Ç–æ–Ω—ñ–≤
            this.currentCoins = Math.max(0, this.currentCoins - entryFee);

            // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∂–µ—Ç–æ–Ω—ñ–≤
            const coinsElement = document.getElementById('user-coins');
            if (coinsElement) {
                coinsElement.textContent = this.currentCoins;

                // –î–æ–¥–∞—î–º–æ –∞–Ω—ñ–º–∞—Ü—ñ—é –∑–º—ñ–Ω–∏
                coinsElement.classList.add('decreasing');
                setTimeout(() => {
                    coinsElement.classList.remove('decreasing');
                }, 1000);
            }

            // –û–Ω–æ–≤–ª—é—î–º–æ localStorage
            localStorage.setItem('userCoins', this.currentCoins.toString());
            localStorage.setItem('winix_coins', this.currentCoins.toString());

            // –ù–û–í–ï: –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–¥—ñ—é –ø—Ä–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É
            document.dispatchEvent(new CustomEvent('user-data-updated', {
                detail: {
                    userData: {
                        coins: this.currentCoins,
                        update_source: 'participation'
                    },
                    source: 'ticket-manager'
                }
            }));
        },

        /**
         * –û–Ω–æ–≤–ª–µ–Ω–Ω—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –±—ñ–ª–µ—Ç—ñ–≤
         * @param {string} raffleId - ID —Ä–æ–∑—ñ–≥—Ä–∞—à—É
         * @param {number} ticketCount - –ö—ñ–ª—å–∫—ñ—Å—Ç—å –±—ñ–ª–µ—Ç—ñ–≤
         */
        updateTicketDisplay: function(raffleId, ticketCount) {
            // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –∫–Ω–æ–ø–∫–∏ —É—á–∞—Å—Ç—ñ –¥–ª—è —Ü—å–æ–≥–æ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
            const buttons = document.querySelectorAll(`.join-button[data-raffle-id="${raffleId}"], .mini-raffle-button[data-raffle-id="${raffleId}"]`);

            buttons.forEach(button => {
                // –ü–µ—Ä–µ–∫–æ–Ω—É—î–º–æ—Å—è, —â–æ –∫–Ω–æ–ø–∫–∞ –º–∞—î –ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —Å—Ç–∞–Ω
                button.classList.add('participating');
                button.disabled = false;

                // –û–Ω–æ–≤–ª—é—î–º–æ —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏
                const isMini = button.classList.contains('mini-raffle-button');
                button.textContent = isMini ?
                    `–î–æ–¥–∞—Ç–∏ —â–µ –±—ñ–ª–µ—Ç (${ticketCount})` :
                    `–î–æ–¥–∞—Ç–∏ —â–µ –±—ñ–ª–µ—Ç (—É –≤–∞—Å: ${ticketCount})`;
            });

            // –û–Ω–æ–≤–ª—é—î–º–æ –≤ –º–æ–¥—É–ª—ñ participation, —è–∫—â–æ –≤—ñ–Ω –¥–æ—Å—Ç—É–ø–Ω–∏–π
            if (window.WinixRaffles && window.WinixRaffles.participation) {
                // –î–æ–¥–∞—î–º–æ —Ä–æ–∑—ñ–≥—Ä–∞—à –¥–æ –º–Ω–æ–∂–∏–Ω–∏ –∑ —É—á–∞—Å—Ç—é
                if (window.WinixRaffles.participation.participatingRaffles) {
                    window.WinixRaffles.participation.participatingRaffles.add(raffleId);
                }

                // –û–Ω–æ–≤–ª—é—î–º–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –±—ñ–ª–µ—Ç—ñ–≤
                if (window.WinixRaffles.participation.userRaffleTickets) {
                    window.WinixRaffles.participation.userRaffleTickets[raffleId] = ticketCount;
                }

                // –ù–û–í–ï: –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —Å—Ç–∞–Ω —É—á–∞—Å—Ç—ñ
                if (typeof window.WinixRaffles.participation._saveParticipationToStorage === 'function') {
                    window.WinixRaffles.participation._saveParticipationToStorage();
                }
            }
        },

        /**
         * –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –ø—Ä–æ –±—ñ–ª–µ—Ç–∏ –≤ localStorage
         */
        saveTicketsToStorage: function() {
            try {
                localStorage.setItem('winix_user_tickets', JSON.stringify(this.ticketCounts));
            } catch (e) {
                console.warn('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –ø—Ä–æ –±—ñ–ª–µ—Ç–∏:', e);
            }
        },

        /**
         * –£—á–∞—Å—Ç—å —É —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ
         * @param {string} raffleId - ID —Ä–æ–∑—ñ–≥—Ä–∞—à—É
         * @param {number} entryCount - –ö—ñ–ª—å–∫—ñ—Å—Ç—å –±—ñ–ª–µ—Ç—ñ–≤ –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è
         * @returns {Promise<Object>} –†–µ–∑—É–ª—å—Ç–∞—Ç —É—á–∞—Å—Ç—ñ
         */
        participateInRaffle: async function(raffleId, entryCount = 1) {
            // –í–∞–ª—ñ–¥–∞—Ü—ñ—è –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤
            if (!raffleId) {
                return {
                    success: false,
                    message: '–ù–µ –≤–∫–∞–∑–∞–Ω–æ ID —Ä–æ–∑—ñ–≥—Ä–∞—à—É'
                };
            }

            // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –º—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–π —ñ–Ω—Ç–µ—Ä–≤–∞–ª –º—ñ–∂ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—è–º–∏
            const now = Date.now();
            if (now - this.lastTransactionTime < this.minTransactionInterval) {
                return {
                    success: false,
                    message: '–ó–∞–Ω–∞–¥—Ç–æ –±–∞–≥–∞—Ç–æ –∑–∞–ø–∏—Ç—ñ–≤. –ó–∞—á–µ–∫–∞–π—Ç–µ —Å–µ–∫—É–Ω–¥—É.'
                };
            }

            // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –∞–∫—Ç–∏–≤–Ω—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—é
            if (this.isTransactionInProgress) {
                return {
                    success: false,
                    message: '–ó–∞—á–µ–∫–∞–π—Ç–µ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ—ó —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó'
                };
            }

            // –ù–û–í–ï: –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ —Ç–∞–π–º–µ—Ä –∑–≤–æ—Ä–æ—Ç–Ω–æ–≥–æ –≤—ñ–¥–ª—ñ–∫—É
            if (this.cooldownTimers[raffleId]) {
                return {
                    success: false,
                    message: '–ü–æ—Ç—Ä—ñ–±–Ω–æ –∑–∞—á–µ–∫–∞—Ç–∏ –ø–µ—Ä–µ–¥ –Ω–∞—Å—Ç—É–ø–Ω–æ—é —Å–ø—Ä–æ–±–æ—é'
                };
            }

            // –û—Ç—Ä–∏–º—É—î–º–æ –≤–∞—Ä—Ç—ñ—Å—Ç—å —É—á–∞—Å—Ç—ñ
            const entryFee = this.entryFees[raffleId] || 1;

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –¥–æ—Å—Ç–∞—Ç–Ω—å–æ—ó –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –∂–µ—Ç–æ–Ω—ñ–≤
            if (!this.hasEnoughCoins(entryFee * entryCount)) {
                this.showNotEnoughCoinsMessage(entryFee * entryCount);
                return {
                    success: false,
                    message: '–ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –∂–µ—Ç–æ–Ω—ñ–≤ –¥–ª—è —É—á–∞—Å—Ç—ñ'
                };
            }

            // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Ñ–ª–∞–≥ –∞–∫—Ç–∏–≤–Ω–æ—ó —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó
            this.isTransactionInProgress = true;
            this.lastTransactionTime = now;

            // –ù–û–í–ï: –°—Ç–≤–æ—Ä—é—î–º–æ —Ç–∞–π–º–µ—Ä –∑–≤–æ—Ä–æ—Ç–Ω–æ–≥–æ –≤—ñ–¥–ª—ñ–∫—É –¥–ª—è —Ü—å–æ–≥–æ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
            this.cooldownTimers[raffleId] = setTimeout(() => {
                delete this.cooldownTimers[raffleId];
            }, this.minTransactionInterval);

            try {
                // –ü–æ–∫–∞–∑—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
                if (typeof window.showLoading === 'function') {
                    window.showLoading();
                }

                // –ì–µ–Ω–µ—Ä—É—î–º–æ —É–Ω—ñ–∫–∞–ª—å–Ω–∏–π ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó
                const transactionId = `${raffleId}_${now}_${this.transactionCounter++}`;

                // –ù–û–í–ï: –ó–∞–ø–∞–º'—è—Ç–æ–≤—É—î–º–æ –ø–æ—Ç–æ—á–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å –±—ñ–ª–µ—Ç—ñ–≤
                const currentTicketCount = this.ticketCounts[raffleId] || 0;

                // –ó–∞–ø–∏—Ç –¥–æ API —á–µ—Ä–µ–∑ –æ—Å–Ω–æ–≤–Ω–∏–π –º–æ–¥—É–ª—å participation
                if (window.WinixRaffles &&
                    window.WinixRaffles.participation &&
                    typeof window.WinixRaffles.participation.participateInRaffle === 'function') {

                    const result = await window.WinixRaffles.participation.participateInRaffle(raffleId, entryCount);

                    // –û–±—Ä–æ–±–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É
                    if (result.success) {
                        // –û–Ω–æ–≤–ª—é—î–º–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –±—ñ–ª–µ—Ç—ñ–≤
                        // –ù–û–í–ï: –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –¥–∞–Ω—ñ —ñ–∑ —Å–µ—Ä–≤–µ—Ä–∞, —è–∫—â–æ –≤–æ–Ω–∏ —î
                        let newTicketCount;
                        if (result.data && result.data.total_entries) {
                            newTicketCount = result.data.total_entries;
                        } else {
                            newTicketCount = currentTicketCount + entryCount;
                        }

                        this.ticketCounts[raffleId] = newTicketCount;

                        // –ó–º–µ–Ω—à—É—î–º–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∂–µ—Ç–æ–Ω—ñ–≤
                        this.updateCurrentCoins(this.currentCoins - (entryFee * entryCount));

                        // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –≤ localStorage
                        this.saveTicketsToStorage();

                        // –ì–µ–Ω–µ—Ä—É—î–º–æ –ø–æ–¥—ñ—é –ø—Ä–æ —É—Å–ø—ñ—à–Ω—É —É—á–∞—Å—Ç—å
                        this.triggerParticipationEvent(raffleId, newTicketCount);

                        // –ù–û–í–ï: –ó–∞–ø–ª–∞–Ω—É–≤–∞—Ç–∏ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥–∏
                        setTimeout(() => {
                            this.loadUserTickets(true);
                        }, 3000);
                    }

                    return result;
                } else {
                    // –ó–∞–ø–∞—Å–Ω–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç, —è–∫—â–æ –º–æ–¥—É–ª—å participation –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π
                    try {
                        // –û—Ç—Ä–∏–º—É—î–º–æ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
                        const userId = this.getUserId();
                        if (!userId) {
                            throw new Error('–ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–∑–Ω–∞—á–∏—Ç–∏ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞');
                        }

                        // –§–æ—Ä–º—É—î–º–æ –∑–∞–ø–∏—Ç –¥–æ API
                        let response;

                        if (typeof window.WinixAPI !== 'undefined' &&
                            typeof window.WinixAPI.apiRequest === 'function') {

                            response = await window.WinixAPI.apiRequest(`user/${userId}/participate-raffle`, 'POST', {
                                raffle_id: raffleId,
                                entry_count: entryCount,
                                _transaction_id: transactionId,
                                // –ù–û–í–ï: –î–æ–¥–∞—î–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –ø–æ—Ç–æ—á–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å –±—ñ–ª–µ—Ç—ñ–≤
                                _current_tickets: currentTicketCount
                            });
                        } else {
                            // –ü—Ä—è–º–∏–π –∑–∞–ø–∏—Ç —á–µ—Ä–µ–∑ fetch
                            const fetchResponse = await fetch(`/api/user/${userId}/participate-raffle`, {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json'
                                },
                                body: JSON.stringify({
                                    raffle_id: raffleId,
                                    entry_count: entryCount,
                                    _transaction_id: transactionId,
                                    _current_tickets: currentTicketCount
                                })
                            });

                            response = await fetchResponse.json();
                        }

                        // –û–±—Ä–æ–±–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É
                        if (response && response.status === 'success') {
                            // –û–Ω–æ–≤–ª—é—î–º–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –±—ñ–ª–µ—Ç—ñ–≤
                            // –ù–û–í–ï: –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –¥–∞–Ω—ñ —ñ–∑ —Å–µ—Ä–≤–µ—Ä–∞, —è–∫—â–æ –≤–æ–Ω–∏ —î
                            let newTicketCount;
                            if (response.data && response.data.total_entries) {
                                newTicketCount = response.data.total_entries;
                            } else {
                                newTicketCount = currentTicketCount + entryCount;
                            }

                            this.ticketCounts[raffleId] = newTicketCount;

                            // –ó–º–µ–Ω—à—É—î–º–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∂–µ—Ç–æ–Ω—ñ–≤
                            this.updateCurrentCoins(this.currentCoins - (entryFee * entryCount));

                            // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –≤ localStorage
                            this.saveTicketsToStorage();

                            // –ì–µ–Ω–µ—Ä—É—î–º–æ –ø–æ–¥—ñ—é –ø—Ä–æ —É—Å–ø—ñ—à–Ω—É —É—á–∞—Å—Ç—å
                            this.triggerParticipationEvent(raffleId, newTicketCount);

                            // –ù–û–í–ï: –ó–∞–ø–ª–∞–Ω—É–≤–∞—Ç–∏ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥–∏
                            setTimeout(() => {
                                this.loadUserTickets(true);
                            }, 3000);

                            return {
                                success: true,
                                data: response.data,
                                message: '–£—Å–ø—ñ—à–Ω–∞ —É—á–∞—Å—Ç—å —É —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ'
                            };
                        } else {
                            throw new Error(response.message || '–ü–æ–º–∏–ª–∫–∞ —É—á–∞—Å—Ç—ñ –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ');
                        }
                    } catch (error) {
                        return {
                            success: false,
                            message: error.message || '–ü–æ–º–∏–ª–∫–∞ —É—á–∞—Å—Ç—ñ –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ'
                        };
                    }
                }
            } catch (error) {
                console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ —É—á–∞—Å—Ç—ñ –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ:', error);

                return {
                    success: false,
                    message: error.message || '–ü–æ–º–∏–ª–∫–∞ —É—á–∞—Å—Ç—ñ –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ'
                };
            } finally {
                // –°–∫–∏–¥–∞—î–º–æ —Ñ–ª–∞–≥ –∞–∫—Ç–∏–≤–Ω–æ—ó —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó
                this.isTransactionInProgress = false;

                // –ü—Ä–∏—Ö–æ–≤—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
                if (typeof window.hideLoading === 'function') {
                    window.hideLoading();
                }
            }
        },

        /**
         * –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –ø–æ–¥—ñ—ó –ø—Ä–æ —É—Å–ø—ñ—à–Ω—É —É—á–∞—Å—Ç—å —É —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ
         * @param {string} raffleId - ID —Ä–æ–∑—ñ–≥—Ä–∞—à—É
         * @param {number} ticketCount - –ö—ñ–ª—å–∫—ñ—Å—Ç—å –±—ñ–ª–µ—Ç—ñ–≤
         */
        triggerParticipationEvent: function(raffleId, ticketCount) {
            document.dispatchEvent(new CustomEvent('raffle-participation', {
                detail: {
                    successful: true,
                    raffleId: raffleId,
                    ticketCount: ticketCount
                }
            }));
        },

        /**
         * –û—Ç—Ä–∏–º–∞–Ω–Ω—è ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
         * @returns {string|null} ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
         */
        getUserId: function() {
            // –°–ø—Ä–æ–±—É—î–º–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ –∑ WinixRaffles
            if (window.WinixRaffles && window.WinixRaffles.state && window.WinixRaffles.state.telegramId) {
                return window.WinixRaffles.state.telegramId;
            }

            // –°–ø—Ä–æ–±—É—î–º–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ –∑ WinixAPI
            if (window.WinixAPI && typeof window.WinixAPI.getUserId === 'function') {
                return window.WinixAPI.getUserId();
            }

            // –°–ø—Ä–æ–±—É—î–º–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ –∑ –µ–ª–µ–º–µ–Ω—Ç–∞ DOM
            const userIdElement = document.getElementById('user-id') || document.getElementById('header-user-id');
            if (userIdElement) {
                return userIdElement.textContent;
            }

            // –°–ø—Ä–æ–±—É—î–º–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ –∑ localStorage
            return localStorage.getItem('telegram_user_id');
        },

        /**
         * –î–æ–¥–∞–≤–∞–Ω–Ω—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó –≤ —ñ—Å—Ç–æ—Ä—ñ—é
         * @param {Object} transaction - –î–∞–Ω—ñ –ø—Ä–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—é
         */
        addTransaction: function(transaction) {
            // –î–æ–¥–∞—î–º–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—é –≤ –ø–æ—á–∞—Ç–æ–∫ –º–∞—Å–∏–≤—É
            this.transactionHistory.unshift(transaction);

            // –û–±–º–µ–∂—É—î–º–æ —Ä–æ–∑–º—ñ—Ä —ñ—Å—Ç–æ—Ä—ñ—ó
            if (this.transactionHistory.length > this.maxHistorySize) {
                this.transactionHistory = this.transactionHistory.slice(0, this.maxHistorySize);
            }

            // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —ñ—Å—Ç–æ—Ä—ñ—é –≤ localStorage
            try {
                localStorage.setItem('winix_transaction_history', JSON.stringify(this.transactionHistory));
            } catch (e) {
                console.warn('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —ñ—Å—Ç–æ—Ä—ñ—ó —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π:', e);
            }
        },

        /**
         * –û—Ç—Ä–∏–º–∞–Ω–Ω—è –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –±—ñ–ª–µ—Ç—ñ–≤ –¥–ª—è —Ä–æ–∑—ñ–≥—Ä–∞—à—É
         * @param {string} raffleId - ID —Ä–æ–∑—ñ–≥—Ä–∞—à—É
         * @returns {number} –ö—ñ–ª—å–∫—ñ—Å—Ç—å –±—ñ–ª–µ—Ç—ñ–≤
         */
        getTicketCount: function(raffleId) {
            return this.ticketCounts[raffleId] || 0;
        },

        /**
         * –û—Ç—Ä–∏–º–∞–Ω–Ω—è –≤–∞—Ä—Ç–æ—Å—Ç—ñ —É—á–∞—Å—Ç—ñ –¥–ª—è —Ä–æ–∑—ñ–≥—Ä–∞—à—É
         * @param {string} raffleId - ID —Ä–æ–∑—ñ–≥—Ä–∞—à—É
         * @returns {number} –í–∞—Ä—Ç—ñ—Å—Ç—å —É—á–∞—Å—Ç—ñ
         */
        getEntryFee: function(raffleId) {
            return this.entryFees[raffleId] || 1;
        },

        /**
         * –û–Ω–æ–≤–ª–µ–Ω–Ω—è –≤–∞—Ä—Ç–æ—Å—Ç—ñ —É—á–∞—Å—Ç—ñ –¥–ª—è —Ä–æ–∑—ñ–≥—Ä–∞—à—É
         * @param {string} raffleId - ID —Ä–æ–∑—ñ–≥—Ä–∞—à—É
         * @param {number} fee - –í–∞—Ä—Ç—ñ—Å—Ç—å —É—á–∞—Å—Ç—ñ
         */
        updateEntryFee: function(raffleId, fee) {
            if (!raffleId) return;

            // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –≤–∞—Ä—Ç—ñ—Å—Ç—å —É—á–∞—Å—Ç—ñ
            this.entryFees[raffleId] = fee;

            // –û–Ω–æ–≤–ª—é—î–º–æ –∞—Ç—Ä–∏–±—É—Ç–∏ –∫–Ω–æ–ø–æ–∫
            const buttons = document.querySelectorAll(`.join-button[data-raffle-id="${raffleId}"], .mini-raffle-button[data-raffle-id="${raffleId}"]`);
            buttons.forEach(button => {
                button.setAttribute('data-entry-fee', fee);

                // –Ø–∫—â–æ –∫–Ω–æ–ø–∫–∞ –Ω–µ –≤ —Å—Ç–∞–Ω—ñ —É—á–∞—Å—Ç—ñ, –æ–Ω–æ–≤–ª—é—î–º–æ —Ç–µ–∫—Å—Ç
                if (!button.classList.contains('participating')) {
                    if (button.classList.contains('mini-raffle-button')) {
                        button.textContent = `–í–∑—è—Ç–∏ —É—á–∞—Å—Ç—å (${fee} –∂–µ—Ç–æ–Ω${fee > 1 ? '–∏' : ''})`;
                    } else {
                        button.textContent = `–í–∑—è—Ç–∏ —É—á–∞—Å—Ç—å –∑–∞ ${fee} –∂–µ—Ç–æ–Ω${fee > 1 ? '–∏' : ''}`;
                    }
                }
            });
        },

        /**
         * –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è –∑ —Å–µ—Ä–≤–µ—Ä–æ–º
         * @returns {Promise<boolean>} –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó
         */
        syncWithServer: async function() {
            // –ù–û–í–ï: –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –∞–∫—Ç–∏–≤–Ω—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—é
            if (this.isTransactionInProgress) {
                console.log('‚ö†Ô∏è –ù–µ –º–æ–∂–Ω–∞ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑—É–≤–∞—Ç–∏ –ø—ñ–¥ —á–∞—Å –∞–∫—Ç–∏–≤–Ω–æ—ó —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó');
                return false;
            }

            console.log('üîÑ –ó–∞–ø—É—Å–∫ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó –∑ —Å–µ—Ä–≤–µ—Ä–æ–º...');

            // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –∞–∫—Ç—É–∞–ª—å–Ω—ñ –¥–∞–Ω—ñ –ø—Ä–æ —É—á–∞—Å—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            if (window.WinixRaffles &&
                window.WinixRaffles.participation &&
                typeof window.WinixRaffles.participation.loadUserRaffles === 'function') {

                try {
                    // –ù–û–í–ï: –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Ñ–ª–∞–≥ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó –¥–ª—è –∑–∞–ø–æ–±—ñ–≥–∞–Ω–Ω—è –∫–æ–Ω—Ñ–ª—ñ–∫—Ç–∞–º
                    this.isTransactionInProgress = true;

                    await window.WinixRaffles.participation.loadUserRaffles(true);

                    // –û–Ω–æ–≤–ª—é—î–º–æ –ª–æ–∫–∞–ª—å–Ω—ñ –¥–∞–Ω—ñ
                    this.loadUserTickets(true);

                    // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è
                    Object.keys(this.ticketCounts).forEach(raffleId => {
                        this.updateTicketDisplay(raffleId, this.ticketCounts[raffleId]);
                    });

                    // –û–Ω–æ–≤–ª—é—î–º–æ –ø–æ—Ç–æ—á–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∂–µ—Ç–æ–Ω—ñ–≤
                    this.updateCurrentCoins();

                    console.log('‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è –∑ —Å–µ—Ä–≤–µ—Ä–æ–º —É—Å–ø—ñ—à–Ω–∞');
                    return true;
                } catch (error) {
                    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó –∑ —Å–µ—Ä–≤–µ—Ä–æ–º:', error);
                    return false;
                } finally {
                    // –°–∫–∏–¥–∞—î–º–æ —Ñ–ª–∞–≥ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó
                    this.isTransactionInProgress = false;
                }
            }

            return false;
        },

        /**
         * –°–∫–∏–¥–∞–Ω–Ω—è —Å—Ç–∞–Ω—É –∫–Ω–æ–ø–æ–∫ —É—á–∞—Å—Ç—ñ
         */
        resetParticipationButtons: function() {
            // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –≤—Å—ñ –∫–Ω–æ–ø–∫–∏ —É—á–∞—Å—Ç—ñ
            const buttons = document.querySelectorAll('.join-button, .mini-raffle-button');

            buttons.forEach(button => {
                const raffleId = button.getAttribute('data-raffle-id');
                if (!raffleId) return;

                // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –±–µ—Ä–µ —É—á–∞—Å—Ç—å —É —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ
                if (this.ticketCounts[raffleId]) {
                    // –û–Ω–æ–≤–ª—é—î–º–æ –≤–∏–≥–ª—è–¥ –∫–Ω–æ–ø–∫–∏
                    button.classList.add('participating');
                    button.disabled = false;

                    // –û–Ω–æ–≤–ª—é—î–º–æ —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏
                    const isMini = button.classList.contains('mini-raffle-button');
                    button.textContent = isMini ?
                        `–î–æ–¥–∞—Ç–∏ —â–µ –±—ñ–ª–µ—Ç (${this.ticketCounts[raffleId]})` :
                        `–î–æ–¥–∞—Ç–∏ —â–µ –±—ñ–ª–µ—Ç (—É –≤–∞—Å: ${this.ticketCounts[raffleId]})`;
                } else {
                    // –°–∫–∏–¥–∞—î–º–æ —Å—Ç–∞–Ω –∫–Ω–æ–ø–∫–∏
                    button.classList.remove('participating');
                    button.disabled = false;

                    // –û–Ω–æ–≤–ª—é—î–º–æ —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏
                    const entryFee = this.entryFees[raffleId] || 1;

                    if (button.classList.contains('mini-raffle-button')) {
                        button.textContent = `–í–∑—è—Ç–∏ —É—á–∞—Å—Ç—å`;
                    } else {
                        button.textContent = `–í–∑—è—Ç–∏ —É—á–∞—Å—Ç—å –∑–∞ ${entryFee} –∂–µ—Ç–æ–Ω${entryFee > 1 ? '–∏' : ''}`;
                    }
                }
            });
        },

        /**
         * –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–∞–Ω—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π
         * –í–∏—è–≤–ª—è—î –∑–∞–≤–∏—Å–∞—é—á—ñ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó —Ç–∞ —Å–∫–∏–¥–∞—î —ó—Ö
         */
        checkTransactionState: function() {
            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —î –∞–∫—Ç–∏–≤–Ω–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—è
            if (!this.isTransactionInProgress) return;

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∞—Å –æ—Å—Ç–∞–Ω–Ω—å–æ—ó —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó
            const now = Date.now();
            const timeSinceLastTransaction = now - this.lastTransactionTime;

            // –Ø–∫—â–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—è —Ç—Ä–∏–≤–∞—î –±—ñ–ª—å—à–µ 10 —Å–µ–∫—É–Ω–¥, —Å–∫–∏–¥–∞—î–º–æ —ó—ó
            if (timeSinceLastTransaction > 10000) {
                console.warn('‚ö†Ô∏è –í–∏—è–≤–ª–µ–Ω–æ –∑–∞–≤–∏—Å–∞—é—á—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—é, —Å–∫–∏–¥–∞—î–º–æ —Å—Ç–∞–Ω');

                // –°–∫–∏–¥–∞—î–º–æ —Å—Ç–∞–Ω —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó
                this.isTransactionInProgress = false;

                // –ü—Ä–∏—Ö–æ–≤—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
                if (typeof window.hideLoading === 'function') {
                    window.hideLoading();
                }

                // –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑—É—î–º–æ –∑ —Å–µ—Ä–≤–µ—Ä–æ–º
                this.syncWithServer();
            }
        }
    };

    // –î–æ–¥–∞—î–º–æ –º–æ–¥—É–ª—å –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–æ–¥—É–ª—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
    window.WinixRaffles.ticketManager = ticketManager;

    // –î–æ–¥–∞—î–º–æ —Å—Ç–∏–ª—ñ –¥–ª—è –º–æ–¥—É–ª—è
    const addTicketManagerStyles = function() {
        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —Å—Ç–∏–ª—ñ –≤–∂–µ –¥–æ–¥–∞–Ω—ñ
        if (document.getElementById('ticket-manager-styles')) return;

        const style = document.createElement('style');
        style.id = 'ticket-manager-styles';
        style.textContent = `
            /* –ê–Ω—ñ–º–∞—Ü—ñ—è –∑–º—ñ–Ω–∏ –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –∂–µ—Ç–æ–Ω—ñ–≤ */
            @keyframes decrease-coins {
                0% { color: #FF5722; transform: scale(1.1); }
                100% { color: inherit; transform: scale(1); }
            }
            
            #user-coins.decreasing {
                animation: decrease-coins 0.5s ease-out;
            }
            
            /* –ù–û–í–ï: –ê–Ω—ñ–º–∞—Ü—ñ—è –º–µ—Ä–µ—Ö—Ç—ñ–Ω–Ω—è –¥–ª—è –∫–Ω–æ–ø–æ–∫ –ø—ñ–¥ —á–∞—Å —Ç–∞–π–º–∞—É—Ç—É */
            @keyframes button-cooldown {
                0% { opacity: 0.8; }
                50% { opacity: 0.6; }
                100% { opacity: 0.8; }
            }
            
            /* –ù–û–í–ï: –°—Ç–∏–ª—ñ –¥–ª—è –∫–Ω–æ–ø–æ–∫ —É —Å—Ç–∞–Ω—ñ –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è */
            .join-button.cooling-down,
            .mini-raffle-button.cooling-down {
                animation: button-cooldown 1s ease-in-out infinite;
                background: linear-gradient(90deg, #9e9e9e, #616161) !important;
                pointer-events: none;
            }
        `;

        document.head.appendChild(style);
    };

    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –º–æ–¥—É–ª—è
    document.addEventListener('DOMContentLoaded', function() {
        // –î–æ–¥–∞—î–º–æ —Å—Ç–∏–ª—ñ
        addTicketManagerStyles();

        if (window.WinixRaffles.state.isInitialized) {
            ticketManager.init();

            // –ó–∞–ø—É—Å–∫–∞—î–º–æ –ø–µ—Ä—ñ–æ–¥–∏—á–Ω—É –ø–µ—Ä–µ–≤—ñ—Ä–∫—É —Å—Ç–∞–Ω—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π
            setInterval(() => {
                ticketManager.checkTransactionState();
            }, 5000);
        } else {
            // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ—ó —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
            document.addEventListener('winix-raffles-initialized', function() {
                ticketManager.init();

                // –ó–∞–ø—É—Å–∫–∞—î–º–æ –ø–µ—Ä—ñ–æ–¥–∏—á–Ω—É –ø–µ—Ä–µ–≤—ñ—Ä–∫—É —Å—Ç–∞–Ω—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π
                setInterval(() => {
                    ticketManager.checkTransactionState();
                }, 5000);
            });
        }
    });

    // –ù–û–í–ï: –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –≥–ª–æ–±–∞–ª—å–Ω–∏—Ö –ø–æ–º–∏–ª–æ–∫
    window.addEventListener('error', function(event) {
        // –°–∫–∏–¥–∞—î–º–æ —Å—Ç–∞–Ω —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó –ø—Ä–∏ –≥–ª–æ–±–∞–ª—å–Ω–∏—Ö –ø–æ–º–∏–ª–∫–∞—Ö
        if (ticketManager && ticketManager.isTransactionInProgress) {
            console.warn('‚ö†Ô∏è –í–∏—è–≤–ª–µ–Ω–æ –≥–ª–æ–±–∞–ª—å–Ω—É –ø–æ–º–∏–ª–∫—É –ø—ñ–¥ —á–∞—Å —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó. –°–∫–∏–¥–∞—î–º–æ —Å—Ç–∞–Ω.');
            ticketManager.isTransactionInProgress = false;

            // –û—á–∏—â–µ–Ω–Ω—è —Ç–∞–π–º–µ—Ä—ñ–≤
            for (const timerId in ticketManager.cooldownTimers) {
                if (ticketManager.cooldownTimers.hasOwnProperty(timerId)) {
                    clearTimeout(ticketManager.cooldownTimers[timerId]);
                }
            }
            ticketManager.cooldownTimers = {};

            // –ü—Ä–∏—Ö–æ–≤—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
            if (typeof window.hideLoading === 'function') {
                window.hideLoading();
            }
        }
    });

    console.log('‚úÖ –ú–æ–¥—É–ª—å —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –±—ñ–ª–µ—Ç–∞–º–∏ —É—Å–ø—ñ—à–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ');
})();