/**
 * WINIX - –°–∏—Å—Ç–µ–º–∞ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ (error-handler.js)
 * –ú–æ–¥—É–ª—å –¥–ª—è –∫–æ—Ä–µ–∫—Ç–Ω–æ—ó –æ–±—Ä–æ–±–∫–∏ –ø–æ–º–∏–ª–æ–∫ —Ç–∞ –ø–æ–∫—Ä–∞—â–µ–Ω–Ω—è UX
 * @version 1.2.0
 */

(function() {
    'use strict';

    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–æ–¥—É–ª—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
    if (typeof window.WinixRaffles === 'undefined') {
        console.error('‚ùå WinixRaffles –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ! –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—è, —â–æ core.js –ø—ñ–¥–∫–ª—é—á–µ–Ω–æ —Ä–∞–Ω—ñ—à–µ error-handler.js');
        return;
    }

    // –ú–æ–¥—É–ª—å –æ–±—Ä–æ–±–∫–∏ –ø–æ–º–∏–ª–æ–∫
    const errorHandler = {
        // –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è –æ–±—Ä–æ–±–∫–∏ –ø–æ–º–∏–ª–æ–∫
        config: {
            // –Ü–≥–Ω–æ—Ä—É–≤–∞—Ç–∏ –Ω–µ–∫—Ä–∏—Ç–∏—á–Ω—ñ –ø–æ–º–∏–ª–∫–∏
            ignoreNonCritical: true,

            // –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –ø–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂—É–≤–∞—Ç–∏ –ø—Ä–∏ –∫—Ä–∏—Ç–∏—á–Ω–∏—Ö –ø–æ–º–∏–ª–∫–∞—Ö
            autoReloadOnCritical: false,

            // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ–º–∏–ª–æ–∫ –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è–º
            maxErrorsBeforeReload: 5,

            // –¢–∏–ø–∏ –ø–æ–º–∏–ª–æ–∫
            errorTypes: {
                NETWORK: 'network_error',       // –ü–æ–º–∏–ª–∫–∏ –º–µ—Ä–µ–∂—ñ
                API: 'api_error',               // –ü–æ–º–∏–ª–∫–∏ API
                VALIDATION: 'validation_error', // –ü–æ–º–∏–ª–∫–∏ –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó
                AUTH: 'auth_error',             // –ü–æ–º–∏–ª–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó
                UI: 'ui_error',                 // –ü–æ–º–∏–ª–∫–∏ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É
                UNKNOWN: 'unknown_error'        // –ù–µ–≤—ñ–¥–æ–º—ñ –ø–æ–º–∏–ª–∫–∏
            },

            // –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–ª—è —Ç–∏–ø—ñ–≤ –ø–æ–º–∏–ª–æ–∫
            errorMessages: {
                network_error: '–ü—Ä–æ–±–ª–µ–º–∏ –∑ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è–º. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –∑\'—î–¥–Ω–∞–Ω–Ω—è –∑ —ñ–Ω—Ç–µ—Ä–Ω–µ—Ç–æ–º.',
                api_error: '–°–µ—Ä–≤—ñ—Å —Ç–∏–º—á–∞—Å–æ–≤–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.',
                validation_error: '–ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ñ—Å—Ç—å –≤–≤–µ–¥–µ–Ω–∏—Ö –¥–∞–Ω–∏—Ö.',
                auth_error: '–ü–æ–º–∏–ª–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó. –°–ø—Ä–æ–±—É–π—Ç–µ –æ–Ω–æ–≤–∏—Ç–∏ —Å—Ç–æ—Ä—ñ–Ω–∫—É.',
                ui_error: '–ü–æ–º–∏–ª–∫–∞ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É. –°–ø—Ä–æ–±—É–π—Ç–µ –æ–Ω–æ–≤–∏—Ç–∏ —Å—Ç–æ—Ä—ñ–Ω–∫—É.',
                unknown_error: '–í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞. –°–ø—Ä–æ–±—É–π—Ç–µ –æ–Ω–æ–≤–∏—Ç–∏ —Å—Ç–æ—Ä—ñ–Ω–∫—É.'
            }
        },

        // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–º–∏–ª–æ–∫
        stats: {
            totalErrors: 0,
            errorsByType: {},
            lastError: null,
            lastErrorTime: 0,
            errorsInSession: 0
        },

        // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –º–æ–¥—É–ª—è
        init: function() {
            console.log('üõ°Ô∏è –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –º–æ–¥—É–ª—è –æ–±—Ä–æ–±–∫–∏ –ø–æ–º–∏–ª–æ–∫...');

            // –†–µ—î—Å—Ç—Ä—É—î–º–æ –≥–ª–æ–±–∞–ª—å–Ω—ñ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–º–∏–ª–æ–∫
            this.registerGlobalErrorHandlers();

            // –†–µ—î—Å—Ç—Ä—É—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –¥–ª—è –∑–∞–ø–∏—Ç—ñ–≤ API
            this.registerApiErrorHandlers();

            // –†–µ—î—Å—Ç—Ä—É—î–º–æ —Å–ø–µ—Ü—ñ–∞–ª—å–Ω—ñ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –¥–ª—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
            this.registerRaffleErrorHandlers();

            // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É —Ñ—É–Ω–∫—Ü—ñ—é –ø–æ–∫–∞–∑—É —Å–ø–æ–≤—ñ—â–µ–Ω—å
            this.upgradeToastFunction();
        },

        /**
         * –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –≥–ª–æ–±–∞–ª—å–Ω–∏—Ö –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –ø–æ–º–∏–ª–æ–∫
         */
        registerGlobalErrorHandlers: function() {
            // –û–±—Ä–æ–±–Ω–∏–∫ –ø–æ–º–∏–ª–æ–∫ JavaScript
            window.addEventListener('error', (event) => {
                this.handleJavaScriptError(event);
            });

            // –û–±—Ä–æ–±–Ω–∏–∫ –Ω–µ–æ–±—Ä–æ–±–ª–µ–Ω–∏—Ö Promise –ø–æ–º–∏–ª–æ–∫
            window.addEventListener('unhandledrejection', (event) => {
                this.handlePromiseError(event);
            });

            // –û–±—Ä–æ–±–Ω–∏–∫ –º–µ—Ä–µ–∂–µ–≤–∏—Ö –ø–æ–º–∏–ª–æ–∫
            window.addEventListener('offline', () => {
                this.showUserFriendlyError('–í—ñ–¥—Å—É—Ç–Ω—î –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ —ñ–Ω—Ç–µ—Ä–Ω–µ—Ç—É. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –º–µ—Ä–µ–∂—É.', 'warning');
            });
        },

        /**
         * –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –ø–æ–º–∏–ª–æ–∫ API
         */
        registerApiErrorHandlers: function() {
            // –ü–µ—Ä–µ–≤–∏–∑–Ω–∞—á–∞—î–º–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏–π fetch –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –ø–æ–º–∏–ª–æ–∫
            const originalFetch = window.fetch;

            window.fetch = async (...args) => {
                try {
                    const response = await originalFetch(...args);

                    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Å—Ç–∞—Ç—É—Å –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ
                    if (!response.ok) {
                        // –û–±—Ä–æ–±–ª—è—î–º–æ –ø–æ–º–∏–ª–∫—É HTTP
                        this.handleHttpError(response, args[0]);
                    }

                    return response;
                } catch (error) {
                    // –û–±—Ä–æ–±–ª—è—î–º–æ –ø–æ–º–∏–ª–∫—É –º–µ—Ä–µ–∂—ñ
                    this.handleFetchError(error, args[0]);
                    throw error;
                }
            };

            // –û–±—Ä–æ–±–Ω–∏–∫ –ø–æ–º–∏–ª–æ–∫ WinixAPI
            if (window.WinixAPI) {
                document.addEventListener('api-error', (event) => {
                    if (event.detail && event.detail.error) {
                        this.handleApiError(event.detail.error, event.detail.endpoint);
                    }
                });
            }
        },

        /**
         * –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –ø–æ–º–∏–ª–æ–∫ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
         */
        registerRaffleErrorHandlers: function() {
            // –û–±—Ä–æ–±–Ω–∏–∫ –ø–æ–º–∏–ª–æ–∫ —É—á–∞—Å—Ç—ñ –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ
            document.addEventListener('raffle-participation-error', (event) => {
                if (event.detail && event.detail.error) {
                    this.handleRaffleParticipationError(event.detail.error, event.detail.raffleId);
                }
            });

            // –û–±—Ä–æ–±–Ω–∏–∫ –∫–Ω–æ–ø–æ–∫ —É—á–∞—Å—Ç—ñ –¥–ª—è –∑–∞–ø–æ–±—ñ–≥–∞–Ω–Ω—è –ø–æ–º–∏–ª–∫–∞–º
            document.addEventListener('click', (event) => {
                const participateButton = event.target.closest('.join-button, .mini-raffle-button');

                if (participateButton && participateButton.disabled) {
                    event.preventDefault();
                    event.stopPropagation();

                    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–æ–º—É –∫–Ω–æ–ø–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞
                    if (participateButton.classList.contains('processing')) {
                        this.showUserFriendlyError('–ó–∞—á–µ–∫–∞–π—Ç–µ, –≤–∞—à –∑–∞–ø–∏—Ç –æ–±—Ä–æ–±–ª—è—î—Ç—å—Å—è', 'info');
                    } else if (participateButton.classList.contains('participating')) {
                        // –ù—ñ—á–æ–≥–æ –Ω–µ —Ä–æ–±–∏–º–æ, –∫–Ω–æ–ø–∫–∞ "–î–æ–¥–∞—Ç–∏ —â–µ –±—ñ–ª–µ—Ç" –ø–æ–≤–∏–Ω–Ω–∞ –±—É—Ç–∏ –¥–æ—Å—Ç—É–ø–Ω–∞
                    } else if (participateButton.classList.contains('disabled')) {
                        this.showUserFriendlyError('–¶–µ–π —Ä–æ–∑—ñ–≥—Ä–∞—à –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π', 'info');
                    }
                }
            }, true);
        },

        /**
         * –ü–æ–∫—Ä–∞—â–µ–Ω–Ω—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ—ó —Ñ—É–Ω–∫—Ü—ñ—ó —Å–ø–æ–≤—ñ—â–µ–Ω—å
         */
        upgradeToastFunction: function() {
            // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω—É —Ñ—É–Ω–∫—Ü—ñ—é
            const originalShowToast = window.showToast;

            // –Ø–∫—â–æ —Ñ—É–Ω–∫—Ü—ñ—è –Ω–µ —ñ—Å–Ω—É—î, —Å—Ç–≤–æ—Ä—é—î–º–æ —ó—ó
            if (typeof originalShowToast !== 'function') {
                window.showToast = (message, type = 'info') => {
                    this.createToast(message, type);
                };
                return;
            }

            // –ü–µ—Ä–µ–≤–∏–∑–Ω–∞—á–∞—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é
            window.showToast = (message, type = 'info') => {
                // –°–ø–µ—Ü—ñ–∞–ª—å–Ω–∞ –æ–±—Ä–æ–±–∫–∞ –¥–ª—è –ø–æ–º–∏–ª–æ–∫
                if (type === 'error') {
                    // –ö–æ–Ω–≤–µ—Ä—Ç—É—î–º–æ —á–µ—Ä–≤–æ–Ω—ñ –ø–æ–º–∏–ª–∫–∏ –≤ –±—ñ–ª—å—à –¥—Ä—É–∂–Ω—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
                    const userFriendlyMessage = this.getHumanReadableMessage(message);

                    // –ó–º—ñ–Ω—é—î–º–æ —Ç–∏–ø —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –¥–ª—è –Ω–µ–∫—Ä–∏—Ç–∏—á–Ω–∏—Ö –ø–æ–º–∏–ª–æ–∫
                    const alertType = this.isCriticalError(message) ? 'error' : 'warning';

                    // –í–∏–∫–ª–∏–∫–∞—î–º–æ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω—É —Ñ—É–Ω–∫—Ü—ñ—é –∑ –Ω–æ–≤–∏–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
                    originalShowToast(userFriendlyMessage, alertType);

                    // –õ–æ–≥—É—î–º–æ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω—É –ø–æ–º–∏–ª–∫—É –¥–ª—è –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
                    console.warn('üî∂ –û–±—Ä–æ–±–ª–µ–Ω–∞ –ø–æ–º–∏–ª–∫–∞:', message);
                } else {
                    // –î–ª—è —ñ–Ω—à–∏—Ö —Ç–∏–ø—ñ–≤ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω—É —Ñ—É–Ω–∫—Ü—ñ—é
                    originalShowToast(message, type);
                }
            };
        },

        /**
         * –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è, —è–∫—â–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞
         * @param {string} message - –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
         * @param {string} type - –¢–∏–ø —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è
         */
        createToast: function(message, type = 'info') {
            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
            let container = document.getElementById('toast-container');

            if (!container) {
                container = document.createElement('div');
                container.id = 'toast-container';
                container.style.cssText = `
                    position: fixed;
                    top: 20px;
                    right: 20px;
                    z-index: 1000;
                `;
                document.body.appendChild(container);
            }

            // –°—Ç–≤–æ—Ä—é—î–º–æ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è
            const toast = document.createElement('div');
            toast.className = `toast-message ${type}`;
            toast.style.cssText = `
                background-color: ${this.getColorForType(type)};
                color: white;
                padding: 12px 20px;
                border-radius: 6px;
                margin-bottom: 10px;
                box-shadow: 0 3px 10px rgba(0,0,0,0.2);
                display: flex;
                justify-content: space-between;
                align-items: center;
                min-width: 250px;
                max-width: 350px;
                opacity: 0;
                transform: translateX(50px);
                transition: opacity 0.3s, transform 0.3s;
            `;

            // –°—Ç–≤–æ—Ä—é—î–º–æ –∫–æ–Ω—Ç–µ–Ω—Ç —ñ –∫–Ω–æ–ø–∫—É –∑–∞–∫—Ä–∏—Ç—Ç—è
            toast.innerHTML = `
                <div class="toast-content">${message}</div>
                <button class="toast-close" style="background: none; border: none; color: white; cursor: pointer; font-size: 18px; margin-left: 10px;">&times;</button>
            `;

            // –î–æ–¥–∞—î–º–æ –¥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
            container.appendChild(toast);

            // –ó–∞—Ç—Ä–∏–º–∫–∞ –¥–ª—è –∞–Ω—ñ–º–∞—Ü—ñ—ó
            setTimeout(() => {
                toast.style.opacity = '1';
                toast.style.transform = 'translateX(0)';
            }, 10);

            // –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –ø—Ä–∏—Ö–æ–≤—É–≤–∞–Ω–Ω—è
            const hideTimeout = setTimeout(() => {
                this.hideToast(toast);
            }, 5000);

            // –û–±—Ä–æ–±–Ω–∏–∫ –∑–∞–∫—Ä–∏—Ç—Ç—è
            toast.querySelector('.toast-close').addEventListener('click', () => {
                clearTimeout(hideTimeout);
                this.hideToast(toast);
            });
        },

        /**
         * –ü—Ä–∏—Ö–æ–≤—É–≤–∞–Ω–Ω—è —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è
         * @param {HTMLElement} toast - –ï–ª–µ–º–µ–Ω—Ç —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è
         */
        hideToast: function(toast) {
            toast.style.opacity = '0';
            toast.style.transform = 'translateX(50px)';

            setTimeout(() => {
                if (toast.parentNode) {
                    toast.parentNode.removeChild(toast);
                }
            }, 300);
        },

        /**
         * –û—Ç—Ä–∏–º–∞–Ω–Ω—è –∫–æ–ª—å–æ—Ä—É –¥–ª—è —Ç–∏–ø—É —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è
         * @param {string} type - –¢–∏–ø —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è
         * @returns {string} –ö–æ–ª—ñ—Ä
         */
        getColorForType: function(type) {
            switch (type) {
                case 'success': return '#4CAF50';
                case 'error': return '#F44336';
                case 'warning': return '#FF9800';
                case 'info': return '#2196F3';
                default: return '#2196F3';
            }
        },

        /**
         * –û–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–æ–∫ JavaScript
         * @param {ErrorEvent} event - –ü–æ–¥—ñ—è –ø–æ–º–∏–ª–∫–∏
         */
        handleJavaScriptError: function(event) {
            // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            this.updateErrorStats({
                type: this.config.errorTypes.UNKNOWN,
                message: event.message,
                source: event.filename,
                stack: event.error ? event.error.stack : null
            });

            // –û–±—Ä–æ–±–ª—è—î–º–æ –ø–æ–º–∏–ª–∫—É, —è–∫—â–æ –≤–æ–Ω–∞ –ø–æ–≤'—è–∑–∞–Ω–∞ –∑ —Ä–æ–∑—ñ–≥—Ä–∞—à–∞–º–∏
            if (this.isRaffleRelatedError(event)) {
                this.handleRaffleError(event.error);

                // –ó–∞–ø–æ–±—ñ–≥–∞—î–º–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ñ–π –æ–±—Ä–æ–±—Ü—ñ
                event.preventDefault();
                return;
            }

            // –î–ª—è –∫—Ä–∏—Ç–∏—á–Ω–∏—Ö –ø–æ–º–∏–ª–æ–∫ –ø–æ–∫–∞–∑—É—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
            if (this.isCriticalError(event.message)) {
                this.showUserFriendlyError(event.message, 'error');

                // –ü–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø—Ä–∏ –∫—Ä–∏—Ç–∏—á–Ω–∏—Ö –ø–æ–º–∏–ª–∫–∞—Ö
                if (this.config.autoReloadOnCritical && this.stats.errorsInSession >= this.config.maxErrorsBeforeReload) {
                    this.reloadApplication();
                }
            } else if (!this.config.ignoreNonCritical) {
                // –î–ª—è –Ω–µ–∫—Ä–∏—Ç–∏—á–Ω–∏—Ö –ø–æ–º–∏–ª–æ–∫ –ø–æ–∫–∞–∑—É—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è
                this.showUserFriendlyError(event.message, 'warning');
            }

            // –°–∫–∏–¥–∞—î–º–æ —Å—Ç–∞–Ω —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä—ñ–≤ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
            this.resetLoadingIndicators();
        },

        /**
         * –û–±—Ä–æ–±–∫–∞ –Ω–µ–æ–±—Ä–æ–±–ª–µ–Ω–∏—Ö –ø–æ–º–∏–ª–æ–∫ Promise
         * @param {PromiseRejectionEvent} event - –ü–æ–¥—ñ—è –ø–æ–º–∏–ª–∫–∏
         */
        handlePromiseError: function(event) {
            // –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ –ø—Ä–æ –ø–æ–º–∏–ª–∫—É
            const error = event.reason;
            const message = error && typeof error === 'object' ? error.message : String(error);

            // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            this.updateErrorStats({
                type: this.config.errorTypes.UNKNOWN,
                message: message,
                stack: error && error.stack ? error.stack : null
            });

            // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –∑–∞—á–µ–∫–∞–π—Ç–µ
            if (message && message.toLowerCase().includes('–∑–∞—á–µ–∫–∞–π—Ç–µ')) {
                // –¶–µ —Ç–∏–ø–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –æ–±–º–µ–∂–µ–Ω–Ω—è —à–≤–∏–¥–∫–æ—Å—Ç—ñ, –ø–æ–∫–∞–∑—É—î–º–æ –¥—Ä—É–∂–Ω—î –ø–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è
                this.showUserFriendlyError('–ë—É–¥—å –ª–∞—Å–∫–∞, –∑–∞—á–µ–∫–∞–π—Ç–µ –ø–µ—Ä–µ–¥ –Ω–∞—Å—Ç—É–ø–Ω–æ—é —Å–ø—Ä–æ–±–æ—é', 'info');
                event.preventDefault();
                return;
            }

            // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–π —Ä–æ–∑—ñ–≥—Ä–∞—à
            if (message && (message.toLowerCase().includes('–∑–∞–≤–µ—Ä—à–µ–Ω–æ') ||
                          message.toLowerCase().includes('—Ä–æ–∑—ñ–≥—Ä–∞—à') &&
                          (message.toLowerCase().includes('–Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ') ||
                           message.toLowerCase().includes('not found')))) {
                // –¶–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–π —Ä–æ–∑—ñ–≥—Ä–∞—à
                this.showUserFriendlyError('–¶–µ–π —Ä–æ–∑—ñ–≥—Ä–∞—à –≤–∂–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ –∞–±–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π', 'info');

                // –ù–∞–º–∞–≥–∞—î–º–æ—Å—å –∑–Ω–∞–π—Ç–∏ ID —Ä–æ–∑—ñ–≥—Ä–∞—à—É –≤ –ø–æ–º–∏–ª—Ü—ñ –∞–±–æ –≤ –∞–∫—Ç–∏–≤–Ω–∏—Ö –∑–∞–ø–∏—Ç–∞—Ö
                const raffleId = this.extractRaffleIdFromError(error);
                if (raffleId) {
                    this.markRaffleAsInvalid(raffleId);
                }

                event.preventDefault();
                return;
            }

            // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –Ω–µ–¥–æ—Å—Ç–∞—Ç–Ω—ñ—Å—Ç—å –∂–µ—Ç–æ–Ω—ñ–≤
            if (message && (message.toLowerCase().includes('–Ω–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ') ||
                          message.toLowerCase().includes('–∂–µ—Ç–æ–Ω'))) {
                this.showUserFriendlyError('–ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –∂–µ—Ç–æ–Ω—ñ–≤ –¥–ª—è —É—á–∞—Å—Ç—ñ. –û—Ç—Ä–∏–º–∞–π—Ç–µ –±—ñ–ª—å—à–µ –∂–µ—Ç–æ–Ω—ñ–≤.', 'warning');
                event.preventDefault();
                return;
            }

            // –û–±—Ä–æ–±–ª—è—î–º–æ –ø–æ–º–∏–ª–∫—É, —è–∫—â–æ –≤–æ–Ω–∞ –ø–æ–≤'—è–∑–∞–Ω–∞ –∑ —Ä–æ–∑—ñ–≥—Ä–∞—à–∞–º–∏
            if (this.isRaffleRelatedError(event)) {
                this.handleRaffleError(error);

                // –ó–∞–ø–æ–±—ñ–≥–∞—î–º–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ñ–π –æ–±—Ä–æ–±—Ü—ñ
                event.preventDefault();
                return;
            }

            // –ü–æ–∫–∞–∑—É—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ü—å–∫–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
            this.showUserFriendlyError(message, 'warning');

            // –°–∫–∏–¥–∞—î–º–æ —Å—Ç–∞–Ω —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä—ñ–≤ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
            this.resetLoadingIndicators();

            // –°–∫–∏–¥–∞—î–º–æ —Å—Ç–∞–Ω –∫–Ω–æ–ø–æ–∫ —É—á–∞—Å—Ç—ñ
            this.resetParticipationState();

            // –ó–∞–ø–æ–±—ñ–≥–∞—î–º–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ñ–π –æ–±—Ä–æ–±—Ü—ñ, —â–æ–± –Ω–µ –ø–æ–∫–∞–∑—É–≤–∞—Ç–∏ —á–µ—Ä–≤–æ–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —É –∫–æ–Ω—Å–æ–ª—ñ
            event.preventDefault();
        },

        /**
         * –°–ø—Ä–æ–±–∞ –∑–Ω–∞–π—Ç–∏ ID —Ä–æ–∑—ñ–≥—Ä–∞—à—É –≤ –ø–æ–º–∏–ª—Ü—ñ
         * @param {Error} error - –û–±'—î–∫—Ç –ø–æ–º–∏–ª–∫–∏
         * @returns {string|null} - ID —Ä–æ–∑—ñ–≥—Ä–∞—à—É –∞–±–æ null
         */
        extractRaffleIdFromError: function(error) {
            // –°–ø—Ä–æ–±–∞ –æ—Ç—Ä–∏–º–∞—Ç–∏ ID –∑ –æ–±'—î–∫—Ç–∞ –ø–æ–º–∏–ª–∫–∏
            if (error && error.raffleId) {
                return error.raffleId;
            }

            // –°–ø—Ä–æ–±–∞ –æ—Ç—Ä–∏–º–∞—Ç–∏ ID –∑ –¥–µ—Ç–∞–ª–µ–π –ø–æ–º–∏–ª–∫–∏
            if (error && error.details && error.details.raffle_id) {
                return error.details.raffle_id;
            }

            // –°–ø—Ä–æ–±–∞ –æ—Ç—Ä–∏–º–∞—Ç–∏ ID –∑ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏
            if (error && error.message) {
                const uuidMatch = error.message.match(/[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}/i);
                if (uuidMatch) {
                    return uuidMatch[0];
                }
            }

            // –Ø–∫—â–æ —î –∞–∫—Ç–∏–≤–Ω–∏–π –º–æ–¥—É–ª—å —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤, —Å–ø—Ä–æ–±—É—î–º–æ –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –ø–æ—Ç–æ—á–Ω–∏–π –∑–∞–ø–∏—Ç
            if (window.WinixRaffles && window.WinixRaffles.participation && window.WinixRaffles.participation.pendingRequests) {
                // –®—É–∫–∞—î–º–æ –ø–µ—Ä—à–∏–π –∞–∫—Ç–∏–≤–Ω–∏–π –∑–∞–ø–∏—Ç
                const pendingRaffleId = Object.keys(window.WinixRaffles.participation.pendingRequests)[0];
                if (pendingRaffleId && this.isValidUUID(pendingRaffleId)) {
                    return pendingRaffleId;
                }
            }

            return null;
        },

        /**
         * –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ —î UUID –≤–∞–ª—ñ–¥–Ω–∏–º
         * @param {string} id - UUID –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏
         * @returns {boolean} - –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏
         */
        isValidUUID: function(id) {
            if (!id || typeof id !== 'string') return false;
            const uuidRegex = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;
            return uuidRegex.test(id);
        },

        /**
         * –û–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–æ–∫ HTTP
         * @param {Response} response - –í—ñ–¥–ø–æ–≤—ñ–¥—å
         * @param {string} url - URL –∑–∞–ø–∏—Ç—É
         */
        handleHttpError: function(response, url) {
            // –§–æ—Ä–º—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É
            const message = `HTTP –ø–æ–º–∏–ª–∫–∞ ${response.status}: ${response.statusText}`;

            // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            this.updateErrorStats({
                type: this.config.errorTypes.API,
                message: message,
                code: response.status,
                url: url
            });

            // –°–ø–µ—Ü—ñ–∞–ª—å–Ω–∞ –æ–±—Ä–æ–±–∫–∞ –¥–ª—è —Ä—ñ–∑–Ω–∏—Ö HTTP-—Å—Ç–∞—Ç—É—Å—ñ–≤
            if (response.status === 404) {
                // –û—Å–æ–±–ª–∏–≤–∞ –æ–±—Ä–æ–±–∫–∞ –¥–ª—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
                if (url && url.toString().includes('raffles')) {
                    this.handleRaffleNotFoundError(url);
                    return;
                }

                // –ó–∞–≥–∞–ª—å–Ω–∞ –æ–±—Ä–æ–±–∫–∞ 404
                this.showUserFriendlyError('–ó–∞–ø–∏—Ç–∞–Ω—ñ –¥–∞–Ω—ñ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ', 'warning');
            } else if (response.status === 429) {
                this.showUserFriendlyError('–ó–∞–±–∞–≥–∞—Ç–æ –∑–∞–ø–∏—Ç—ñ–≤. –ó–∞—á–µ–∫–∞–π—Ç–µ –∫—ñ–ª—å–∫–∞ —Å–µ–∫—É–Ω–¥ —ñ —Å–ø—Ä–æ–±—É–π—Ç–µ –∑–Ω–æ–≤—É.', 'warning');
            } else if (response.status >= 500) {
                this.showUserFriendlyError('–°–µ—Ä–≤–µ—Ä —Ç–∏–º—á–∞—Å–æ–≤–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.', 'error');
            } else {
                this.showUserFriendlyError(this.getHumanReadableMessage(message), 'warning');
            }
        },

        /**
         * –û–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–æ–∫ –º–µ—Ä–µ–∂—ñ
         * @param {Error} error - –ü–æ–º–∏–ª–∫–∞
         * @param {string} url - URL –∑–∞–ø–∏—Ç—É
         */
        handleFetchError: function(error, url) {
            // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            this.updateErrorStats({
                type: this.config.errorTypes.NETWORK,
                message: error.message,
                url: url
            });

            // –ü–æ–∫–∞–∑—É—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ü—å–∫–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
            this.showUserFriendlyError('–ü—Ä–æ–±–ª–µ–º–∏ –∑ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è–º. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ —ñ–Ω—Ç–µ—Ä–Ω–µ—Ç-–∑\'—î–¥–Ω–∞–Ω–Ω—è.', 'warning');

            // –°–∫–∏–¥–∞—î–º–æ —Å—Ç–∞–Ω —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä—ñ–≤ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
            this.resetLoadingIndicators();
        },

        /**
         * –û–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–æ–∫ API
         * @param {Error} error - –ü–æ–º–∏–ª–∫–∞
         * @param {string} endpoint - –ï–Ω–¥–ø–æ–π–Ω—Ç API
         */
        handleApiError: function(error, endpoint) {
            // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            this.updateErrorStats({
                type: this.config.errorTypes.API,
                message: error.message,
                endpoint: endpoint
            });

            // –û–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–æ–∫ –¥–ª—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
            if (endpoint && endpoint.includes('raffles')) {
                this.handleRaffleApiError(error, endpoint);
                return;
            }

            // –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞ –æ–±—Ä–æ–±–∫–∞
            const message = this.getHumanReadableMessage(error.message);

            // –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É
            this.showUserFriendlyError(message, 'warning');
        },

        /**
         * –û–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–æ–∫ —É—á–∞—Å—Ç—ñ –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ
         * @param {Error} error - –ü–æ–º–∏–ª–∫–∞
         * @param {string} raffleId - ID —Ä–æ–∑—ñ–≥—Ä–∞—à—É
         */
        handleRaffleParticipationError: function(error, raffleId) {
            // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            this.updateErrorStats({
                type: this.config.errorTypes.API,
                message: error.message,
                raffleId: raffleId
            });

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ç–∏–ø –ø–æ–º–∏–ª–∫–∏
            if (error.message && error.message.toLowerCase().includes('–∂–µ—Ç–æ–Ω')) {
                // –ü–æ–º–∏–ª–∫–∞ –Ω–µ–¥–æ—Å—Ç–∞—Ç–Ω–æ—Å—Ç—ñ –∂–µ—Ç–æ–Ω—ñ–≤
                this.showUserFriendlyError('–ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –∂–µ—Ç–æ–Ω—ñ–≤ –¥–ª—è —É—á–∞—Å—Ç—ñ. –û—Ç—Ä–∏–º–∞–π—Ç–µ –±—ñ–ª—å—à–µ –∂–µ—Ç–æ–Ω—ñ–≤ —ñ —Å–ø—Ä–æ–±—É–π—Ç–µ –∑–Ω–æ–≤—É.', 'warning');
            } else if (error.message && (
                error.message.toLowerCase().includes('—Ä–æ–∑—ñ–≥—Ä–∞—à') ||
                error.message.toLowerCase().includes('–∑–∞–≤–µ—Ä—à–µ–Ω–æ') ||
                error.message.toLowerCase().includes('–Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ') ||
                error.message.toLowerCase().includes('not found')
            )) {
                // –ü–æ–º–∏–ª–∫–∞ –∑ —Ä–æ–∑—ñ–≥—Ä–∞—à–µ–º
                this.showUserFriendlyError('–¶–µ–π —Ä–æ–∑—ñ–≥—Ä–∞—à –≤–∂–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π –∞–±–æ –∑–∞–≤–µ—Ä—à–∏–≤—Å—è.', 'info');

                // –ü–æ–∑–Ω–∞—á–∞—î–º–æ —Ä–æ–∑—ñ–≥—Ä–∞—à —è–∫ –Ω–µ–¥—ñ–π—Å–Ω–∏–π
                this.markRaffleAsInvalid(raffleId);
            } else if (error.message && error.message.toLowerCase().includes('–∑–∞—á–µ–∫–∞–π—Ç–µ')) {
                // –ü–æ–º–∏–ª–∫–∞ –æ–±–º–µ–∂–µ–Ω–Ω—è —à–≤–∏–¥–∫–æ—Å—Ç—ñ
                this.showUserFriendlyError('–ë—É–¥—å –ª–∞—Å–∫–∞, –∑–∞—á–µ–∫–∞–π—Ç–µ –∫—ñ–ª—å–∫–∞ —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ –Ω–∞—Å—Ç—É–ø–Ω–æ—é —Å–ø—Ä–æ–±–æ—é.', 'info');
            } else {
                // –Ü–Ω—à—ñ –ø–æ–º–∏–ª–∫–∏
                this.showUserFriendlyError('–ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∑—è—Ç–∏ —É—á–∞—Å—Ç—å —É —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.', 'warning');
            }

            // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω –∫–Ω–æ–ø–æ–∫ —É—á–∞—Å—Ç—ñ
            this.resetParticipationState();
        },

        /**
         * –û–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–æ–∫, –ø–æ–≤'—è–∑–∞–Ω–∏—Ö –∑ —Ä–æ–∑—ñ–≥—Ä–∞—à–∞–º–∏
         * @param {Error} error - –ü–æ–º–∏–ª–∫–∞
         */
        handleRaffleError: function(error) {
            // –Ø–∫—â–æ –ø–æ–º–∏–ª–∫–∞ —Å—Ç–æ—Å—É—î—Ç—å—Å—è –Ω–µ–≤–∞–ª—ñ–¥–Ω–æ–≥–æ UUID
            if (error.message && error.message.toLowerCase().includes('uuid')) {
                this.showUserFriendlyError('–î–∞–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—É –Ω–µ–¥—ñ–π—Å–Ω—ñ. –°–ø—Ä–æ–±—É–π—Ç–µ –æ–Ω–æ–≤–∏—Ç–∏ —Å—Ç–æ—Ä—ñ–Ω–∫—É.', 'warning');
                return;
            }

            // –Ø–∫—â–æ –ø–æ–º–∏–ª–∫–∞ —Å—Ç–æ—Å—É—î—Ç—å—Å—è –Ω–µ–∑–Ω–∞–π–¥–µ–Ω–æ–≥–æ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
            if (error.message && (
                error.message.toLowerCase().includes('–Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ') ||
                error.message.toLowerCase().includes('not found')
            )) {
                this.showUserFriendlyError('–†–æ–∑—ñ–≥—Ä–∞—à –≤–∂–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ –∞–±–æ –≤–∏–¥–∞–ª–µ–Ω–æ.', 'info');
                return;
            }

            // –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞ –æ–±—Ä–æ–±–∫–∞
            this.showUserFriendlyError('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Ä–æ–±–æ—Ç—ñ –∑ —Ä–æ–∑—ñ–≥—Ä–∞—à–µ–º. –°–ø—Ä–æ–±—É–π—Ç–µ –æ–Ω–æ–≤–∏—Ç–∏ —Å—Ç–æ—Ä—ñ–Ω–∫—É.', 'warning');
        },

        /**
         * –û–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–∫–∏ –Ω–µ–∑–Ω–∞–π–¥–µ–Ω–æ–≥–æ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
         * @param {string} url - URL –∑–∞–ø–∏—Ç—É
         */
        handleRaffleNotFoundError: function(url) {
            // –í–∏—Ç—è–≥—É—î–º–æ ID —Ä–æ–∑—ñ–≥—Ä–∞—à—É –∑ URL
            let raffleId = null;

            if (typeof url === 'string') {
                const matches = url.match(/raffles\/([^/?]+)/i);
                if (matches && matches[1]) {
                    raffleId = matches[1];
                }
            }

            // –ü–æ–∑–Ω–∞—á–∞—î–º–æ —Ä–æ–∑—ñ–≥—Ä–∞—à —è–∫ –Ω–µ–¥—ñ–π—Å–Ω–∏–π
            if (raffleId) {
                this.markRaffleAsInvalid(raffleId);
            }

            // –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É
            this.showUserFriendlyError('–†–æ–∑—ñ–≥—Ä–∞—à –≤–∂–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ –∞–±–æ –≤–∏–¥–∞–ª–µ–Ω–æ.', 'info');

            // –°–ø—Ä–æ–±–∞ –æ–Ω–æ–≤–∏—Ç–∏ —Å–ø–∏—Å–æ–∫ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
            if (window.WinixRaffles &&
                window.WinixRaffles.active &&
                typeof window.WinixRaffles.active.loadActiveRaffles === 'function') {

                setTimeout(() => {
                    window.WinixRaffles.active.loadActiveRaffles(true);
                }, 1000);
            }
        },

        /**
         * –û–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–æ–∫ API, –ø–æ–≤'—è–∑–∞–Ω–∏—Ö –∑ —Ä–æ–∑—ñ–≥—Ä–∞—à–∞–º–∏
         * @param {Error} error - –ü–æ–º–∏–ª–∫–∞
         * @param {string} endpoint - –ï–Ω–¥–ø–æ–π–Ω—Ç API
         */
        handleRaffleApiError: function(error, endpoint) {
            // –û–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–æ–∫ —É—á–∞—Å—Ç—ñ –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ
            if (endpoint.includes('participate-raffle')) {
                // –í–∏—Ç—è–≥—É—î–º–æ ID —Ä–æ–∑—ñ–≥—Ä–∞—à—É –∑ –ø–æ–º–∏–ª–∫–∏ –∞–±–æ –∑–∞–ø–∏—Ç—É
                let raffleId = null;

                if (error.raffleId) {
                    raffleId = error.raffleId;
                } else if (error.details && error.details.raffle_id) {
                    raffleId = error.details.raffle_id;
                } else {
                    // –°–ø—Ä–æ–±–∞ –≤–∏—Ç—è–≥—Ç–∏ –∑ URL
                    const match = endpoint.match(/participate-raffle\/([^/?]+)/i);
                    if (match && match[1]) {
                        raffleId = match[1];
                    }
                }

                this.handleRaffleParticipationError(error, raffleId);
                return;
            }

            // –û–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–æ–∫ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
            if (endpoint.includes('raffles') && !endpoint.includes('participate')) {
                this.showUserFriendlyError('–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ. –°–ø—Ä–æ–±—É–π—Ç–µ –æ–Ω–æ–≤–∏—Ç–∏ —Å—Ç–æ—Ä—ñ–Ω–∫—É.', 'warning');
                return;
            }

            // –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞ –æ–±—Ä–æ–±–∫–∞
            this.showUserFriendlyError(this.getHumanReadableMessage(error.message), 'warning');
        },

        /**
         * –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ–º–∏–ª–æ–∫
         * @param {Object} errorData - –î–∞–Ω—ñ –ø—Ä–æ –ø–æ–º–∏–ª–∫—É
         */
        updateErrorStats: function(errorData) {
            // –ó–±—ñ–ª—å—à—É—î–º–æ –ª—ñ—á–∏–ª—å–Ω–∏–∫–∏
            this.stats.totalErrors++;
            this.stats.errorsInSession++;

            // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ —Ç–∏–ø—É
            const errorType = errorData.type || this.config.errorTypes.UNKNOWN;
            this.stats.errorsByType[errorType] = (this.stats.errorsByType[errorType] || 0) + 1;

            // –ó–∞–ø–∞–º'—è—Ç–æ–≤—É—î–º–æ –æ—Å—Ç–∞–Ω–Ω—é –ø–æ–º–∏–ª–∫—É
            this.stats.lastError = errorData;
            this.stats.lastErrorTime = Date.now();

            // –õ–æ–≥—É—î–º–æ –¥–∞–Ω—ñ –ø—Ä–æ –ø–æ–º–∏–ª–∫—É
            console.error('üî¥ –ü–æ–º–∏–ª–∫–∞ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–∞:', errorData);
        },

        /**
         * –ü–æ–∫–∞–∑ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ü—å–∫–æ–≥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É
         * @param {string} message - –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
         * @param {string} type - –¢–∏–ø —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è (error/warning/info)
         */
        showUserFriendlyError: function(message, type = 'warning') {
            // –Ø–∫—â–æ —Ñ—É–Ω–∫—Ü—ñ—è showToast –¥–æ—Å—Ç—É–ø–Ω–∞, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —ó—ó
            if (typeof window.showToast === 'function') {
                window.showToast(message, type);
            } else {
                // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç
                console.error(`${type.toUpperCase()}: ${message}`);
            }
        },

        /**
         * –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ –ø–æ–º–∏–ª–∫–∞ –ø–æ–≤'—è–∑–∞–Ω–∞ –∑ —Ä–æ–∑—ñ–≥—Ä–∞—à–∞–º–∏
         * @param {Error|Event} error - –ü–æ–º–∏–ª–∫–∞ –∞–±–æ –ø–æ–¥—ñ—è –ø–æ–º–∏–ª–∫–∏
         * @returns {boolean} –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏
         */
        isRaffleRelatedError: function(error) {
            // –í–∏—Ç—è–≥—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ —Ä—ñ–∑–Ω–∏—Ö —Ç–∏–ø—ñ–≤ –ø–æ–º–∏–ª–æ–∫
            let message = '';

            if (error instanceof Error) {
                message = error.message;
            } else if (error.error && error.error.message) {
                message = error.error.message;
            } else if (error.reason && error.reason.message) {
                message = error.reason.message;
            } else if (error.message) {
                message = error.message;
            } else if (typeof error === 'string') {
                message = error;
            }

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∫–ª—é—á–æ–≤—ñ —Å–ª–æ–≤–∞, –ø–æ–≤'—è–∑–∞–Ω—ñ –∑ —Ä–æ–∑—ñ–≥—Ä–∞—à–∞–º–∏
            const raffleKeywords = ['raffle', '—Ä–æ–∑—ñ–≥—Ä–∞—à', 'uuid', '–±—ñ–ª–µ—Ç', 'ticket', 'participate'];

            return raffleKeywords.some(keyword => message.toLowerCase().includes(keyword));
        },

        /**
         * –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ –ø–æ–º–∏–ª–∫–∞ —î –∫—Ä–∏—Ç–∏—á–Ω–æ—é
         * @param {string} message - –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É
         * @returns {boolean} –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏
         */
        isCriticalError: function(message) {
            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∫–ª—é—á–æ–≤—ñ —Å–ª–æ–≤–∞ –∫—Ä–∏—Ç–∏—á–Ω–∏—Ö –ø–æ–º–∏–ª–æ–∫
            const criticalKeywords = [
                'undefined is not a function',
                'null is not an object',
                'cannot read property',
                'is not defined',
                'out of memory',
                'script error',
                'failed to fetch',
                'aborted',
                'quota exceeded'
            ];

            // –Ø–∫—â–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –º—ñ—Å—Ç–∏—Ç—å —Ö–æ—á–∞ –± –æ–¥–Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–µ –∫–ª—é—á–æ–≤–µ —Å–ª–æ–≤–æ
            if (typeof message === 'string') {
                return criticalKeywords.some(keyword => message.toLowerCase().includes(keyword));
            }

            return false;
        },

        /**
         * –û—Ç—Ä–∏–º–∞–Ω–Ω—è –∑—Ä–æ–∑—É–º—ñ–ª–æ–≥–æ –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
         * @param {string} errorMessage - –¢–µ—Ö–Ω—ñ—á–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É
         * @returns {string} –ó—Ä–æ–∑—É–º—ñ–ª–µ –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
         */
        getHumanReadableMessage: function(errorMessage) {
            if (!errorMessage) {
                return this.config.errorMessages.unknown_error;
            }

            // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –ø–æ–º–∏–ª–∫–∏ –º–µ—Ä–µ–∂—ñ
            if (errorMessage.includes('network') ||
                errorMessage.includes('–º–µ—Ä–µ–∂') ||
                errorMessage.includes('fetch') ||
                errorMessage.includes('connect')) {
                return this.config.errorMessages.network_error;
            }

            // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –ø–æ–º–∏–ª–∫–∏ API
            if (errorMessage.includes('API') ||
                errorMessage.includes('endpoint') ||
                errorMessage.includes('REST') ||
                errorMessage.includes('HTTP')) {
                return this.config.errorMessages.api_error;
            }

            // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –ø–æ–º–∏–ª–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó
            if (errorMessage.includes('auth') ||
                errorMessage.includes('token') ||
                errorMessage.includes('–∞–≤—Ç–æ—Ä–∏–∑') ||
                errorMessage.includes('permission') ||
                errorMessage.includes('–¥–æ—Å—Ç—É–ø')) {
                return this.config.errorMessages.auth_error;
            }

            // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –ø–æ–º–∏–ª–∫–∏ –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó
            if (errorMessage.includes('valid') ||
                errorMessage.includes('–≤–∞–ª—ñ–¥') ||
                errorMessage.includes('format') ||
                errorMessage.includes('—Ñ–æ—Ä–º–∞—Ç') ||
                errorMessage.includes('required') ||
                errorMessage.includes('–Ω–µ–æ–±—Ö—ñ–¥–Ω')) {
                return this.config.errorMessages.validation_error;
            }

            // –°–ø–µ—Ü–∏—Ñ—ñ—á–Ω—ñ –ø–æ–º–∏–ª–∫–∏ –¥–ª—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
            if (errorMessage.toLowerCase().includes('–∂–µ—Ç–æ–Ω') &&
                (errorMessage.toLowerCase().includes('–Ω–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ') ||
                 errorMessage.toLowerCase().includes('insufficient'))) {
                return '–ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –∂–µ—Ç–æ–Ω—ñ–≤ –¥–ª—è —É—á–∞—Å—Ç—ñ. –û—Ç—Ä–∏–º–∞–π—Ç–µ –±—ñ–ª—å—à–µ –∂–µ—Ç–æ–Ω—ñ–≤.';
            }

            if (errorMessage.toLowerCase().includes('—Ä–æ–∑—ñ–≥—Ä–∞—à') &&
                (errorMessage.toLowerCase().includes('–Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ') ||
                 errorMessage.toLowerCase().includes('not found'))) {
                return '–†–æ–∑—ñ–≥—Ä–∞—à –≤–∂–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ –∞–±–æ –≤–∏–¥–∞–ª–µ–Ω–æ.';
            }

            if (errorMessage.toLowerCase().includes('uuid') ||
                errorMessage.toLowerCase().includes('id') &&
                errorMessage.toLowerCase().includes('invalid')) {
                return '–î–∞–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—É –Ω–µ–¥—ñ–π—Å–Ω—ñ. –°–ø—Ä–æ–±—É–π—Ç–µ –æ–Ω–æ–≤–∏—Ç–∏ —Å—Ç–æ—Ä—ñ–Ω–∫—É.';
            }

            // –û–±—Ä–æ–±–∫–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –∑–∞—á–µ–∫–∞–π—Ç–µ
            if (errorMessage.toLowerCase().includes('–∑–∞—á–µ–∫–∞–π—Ç–µ')) {
                return '–ë—É–¥—å –ª–∞—Å–∫–∞, –∑–∞—á–µ–∫–∞–π—Ç–µ –ø–µ—Ä–µ–¥ –Ω–∞—Å—Ç—É–ø–Ω–æ—é —Å–ø—Ä–æ–±–æ—é.';
            }

            // –í–∏–¥–∞–ª—è—î–º–æ —Ç–µ—Ö–Ω—ñ—á–Ω—ñ –¥–µ—Ç–∞–ª—ñ –∑ –ø–æ–º–∏–ª–∫–∏
            let cleanMessage = errorMessage;

            // –í–∏–¥–∞–ª—è—î–º–æ —Ç–µ—Ö–Ω—ñ—á–Ω—ñ –ø—Ä–µ—Ñ—ñ–∫—Å–∏
            cleanMessage = cleanMessage.replace(/Error: /g, '');
            cleanMessage = cleanMessage.replace(/TypeError: /g, '');
            cleanMessage = cleanMessage.replace(/ReferenceError: /g, '');

            // –Ø–∫—â–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑–∞–Ω–∞–¥—Ç–æ —Ç–µ—Ö–Ω—ñ—á–Ω–µ, –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ –∑–∞–≥–∞–ª—å–Ω–µ
            if (cleanMessage.includes('undefined') ||
                cleanMessage.includes('null') ||
                cleanMessage.includes('NaN') ||
                cleanMessage.includes('prop')) {
                return this.config.errorMessages.unknown_error;
            }

            // –Ø–∫—â–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–æ—Ç–∫–µ —Ç–∞ –∑—Ä–æ–∑—É–º—ñ–ª–µ, –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ –π–æ–≥–æ
            if (cleanMessage.length < 50 && !cleanMessage.includes('Cannot ')) {
                return cleanMessage;
            }

            // –ó–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ –∑–∞–≥–∞–ª—å–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
            return this.config.errorMessages.unknown_error;
        },

        /**
         * –°–∫–∏–¥–∞–Ω–Ω—è —Å—Ç–∞–Ω—É —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä—ñ–≤ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
         */
        resetLoadingIndicators: function() {
            // –°–∫–∏–¥–∞—î–º–æ —Å—Ç–∞–Ω —Å–ø—ñ–Ω–µ—Ä–∞
            if (typeof window.resetLoadingState === 'function') {
                window.resetLoadingState();
            } else if (typeof window.hideLoading === 'function') {
                window.hideLoading();
            }

            // –°–∫–∏–¥–∞—î–º–æ —Å—Ç–∞–Ω –≥–ª–æ–±–∞–ª—å–Ω–∏—Ö –ª—ñ—á–∏–ª—å–Ω–∏–∫—ñ–≤
            if (window.loadingCounter !== undefined) {
                window.loadingCounter = 0;
            }

            // –ó–Ω–∞—Ö–æ–¥–∏–º–æ —Å–ø—ñ–Ω–µ—Ä —ñ —Ö–æ–≤–∞—î–º–æ –π–æ–≥–æ
            const spinner = document.getElementById('loading-spinner');
            if (spinner) {
                spinner.style.display = 'none';
                spinner.classList.remove('active');
            }
        },

        /**
         * –°–∫–∏–¥–∞–Ω–Ω—è —Å—Ç–∞–Ω—É –∫–Ω–æ–ø–æ–∫ —É—á–∞—Å—Ç—ñ
         */
        resetParticipationState: function() {
            // –°–∫–∏–¥–∞—î–º–æ —Å—Ç–∞–Ω —Å–∏—Å—Ç–µ–º–∏ —É—á–∞—Å—Ç—ñ
            if (window.WinixRaffles &&
                window.WinixRaffles.participation) {

                // –°–∫–∏–¥–∞—î–º–æ –≥–ª–æ–±–∞–ª—å–Ω—ñ —Å—Ç–∞–Ω–∏
                if (window.WinixRaffles.participation.requestInProgress) {
                    window.WinixRaffles.participation.requestInProgress = false;
                }

                // –°–∫–∏–¥–∞—î–º–æ –∫–∞—Ä—Ç—É –∞–∫—Ç–∏–≤–Ω–∏—Ö –∑–∞–ø–∏—Ç—ñ–≤
                if (window.WinixRaffles.participation.activeTransactions &&
                    typeof window.WinixRaffles.participation.activeTransactions.clear === 'function') {
                    window.WinixRaffles.participation.activeTransactions.clear();
                }

                // –Ø–∫—â–æ —î —Å–ø–µ—Ü—ñ–∞–ª—å–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è —Å–∫–∏–¥–∞–Ω–Ω—è, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —ó—ó
                if (typeof window.WinixRaffles.participation.resetState === 'function') {
                    window.WinixRaffles.participation.resetState();
                    return;
                }
            }

            // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –∫–Ω–æ–ø–∫–∏ –≤ —Å—Ç–∞–Ω—ñ –æ–±—Ä–æ–±–∫–∏ —ñ –≤–∏–¥–∞–ª—è—î–º–æ –∞—Ç—Ä–∏–±—É—Ç–∏
            const processingButtons = document.querySelectorAll('.join-button.processing, .mini-raffle-button.processing');
            processingButtons.forEach(button => {
                button.classList.remove('processing');
                button.removeAttribute('data-processing');
                button.disabled = false;

                // –í—ñ–¥–Ω–æ–≤–ª—é—î–º–æ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–∏–π —Ç–µ–∫—Å—Ç
                const originalText = button.getAttribute('data-original-text');
                if (originalText) {
                    button.textContent = originalText;
                } else {
                    // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏–π —Ç–µ–∫—Å—Ç, —è–∫—â–æ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–æ–≥–æ –Ω–µ–º–∞—î
                    if (button.classList.contains('mini-raffle-button')) {
                        button.textContent = '–í–∑—è—Ç–∏ —É—á–∞—Å—Ç—å';
                    } else {
                        const entryFee = button.getAttribute('data-entry-fee') || '1';
                        button.textContent = `–í–∑—è—Ç–∏ —É—á–∞—Å—Ç—å –∑–∞ ${entryFee} –∂–µ—Ç–æ–Ω${parseInt(entryFee) > 1 ? '–∏' : ''}`;
                    }
                }
            });
        },

        /**
         * –ü–æ–∑–Ω–∞—á–µ–Ω–Ω—è —Ä–æ–∑—ñ–≥—Ä–∞—à—É —è–∫ –Ω–µ–¥—ñ–π—Å–Ω–æ–≥–æ
         * @param {string} raffleId - ID —Ä–æ–∑—ñ–≥—Ä–∞—à—É
         */
        markRaffleAsInvalid: function(raffleId) {
            if (!raffleId || !this.isValidUUID(raffleId)) {
                console.warn('‚ö†Ô∏è –°–ø—Ä–æ–±–∞ –ø–æ–∑–Ω–∞—á–∏—Ç–∏ –Ω–µ–≤–∞–ª—ñ–¥–Ω–∏–π ID —è–∫ –Ω–µ–¥—ñ–π—Å–Ω–∏–π —Ä–æ–∑—ñ–≥—Ä–∞—à:', raffleId);
                return;
            }

            // –î–æ–¥–∞—î–º–æ ID –¥–æ –∫–æ–ª–µ–∫—Ü—ñ—ó –Ω–µ–≤–∞–ª—ñ–¥–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
            if (window.WinixRaffles) {
                // –í –≥–ª–æ–±–∞–ª—å–Ω–æ–º—É —Å—Ç–∞–Ω—ñ
                if (window.WinixRaffles.state && window.WinixRaffles.state.invalidRaffleIds) {
                    window.WinixRaffles.state.invalidRaffleIds.add(raffleId);
                }

                // –í –º–æ–¥—É–ª—ñ participation
                if (window.WinixRaffles.participation && window.WinixRaffles.participation.invalidRaffleIds) {
                    window.WinixRaffles.participation.invalidRaffleIds.add(raffleId);

                    // –í–∏–∫–ª–∏–∫–∞—î–º–æ –º–µ—Ç–æ–¥ –¥–æ–¥–∞–≤–∞–Ω–Ω—è –Ω–µ–≤–∞–ª—ñ–¥–Ω–æ–≥–æ ID
                    if (typeof window.WinixRaffles.participation.addInvalidRaffleId === 'function') {
                        window.WinixRaffles.participation.addInvalidRaffleId(raffleId);
                    }
                }
            }

            // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∫–Ω–æ–ø–æ–∫ —É—á–∞—Å—Ç—ñ
            const buttons = document.querySelectorAll(`.join-button[data-raffle-id="${raffleId}"], .mini-raffle-button[data-raffle-id="${raffleId}"]`);
            buttons.forEach(button => {
                button.classList.add('disabled');
                button.disabled = true;
                button.textContent = '–†–æ–∑—ñ–≥—Ä–∞—à –∑–∞–≤–µ—Ä—à–µ–Ω–æ';
            });

            // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –≤ localStorage
            try {
                const invalidRaffles = JSON.parse(localStorage.getItem('winix_invalid_raffles') || '[]');
                if (!invalidRaffles.includes(raffleId)) {
                    invalidRaffles.push(raffleId);
                    localStorage.setItem('winix_invalid_raffles', JSON.stringify(invalidRaffles));
                }
            } catch (e) {
                console.warn('‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–±–µ—Ä–µ–≥—Ç–∏ –Ω–µ–≤–∞–ª—ñ–¥–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ:', e);
            }
        },

        /**
         * –ü–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–æ–¥–∞—Ç–∫—É
         */
        reloadApplication: function() {
            // –û–ø–æ–≤—ñ—â–∞—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            this.showUserFriendlyError('–í–∏–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º–∏. –°—Ç–æ—Ä—ñ–Ω–∫–∞ –±—É–¥–µ –ø–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∞.', 'info');

            // –ó–∞—Ç—Ä–∏–º–∫–∞ –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è–º
            setTimeout(() => {
                if (typeof window.resetAndReloadApplication === 'function') {
                    window.resetAndReloadApplication();
                } else {
                    window.location.reload();
                }
            }, 2000);
        },

        /**
         * –û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏—á–Ω–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó
         * @returns {Object} –î—ñ–∞–≥–Ω–æ—Å—Ç–∏—á–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è
         */
        getDiagnosticInfo: function() {
            return {
                stats: this.stats,
                config: this.config,
                browser: {
                    userAgent: navigator.userAgent,
                    platform: navigator.platform,
                    language: navigator.language,
                    cookiesEnabled: navigator.cookieEnabled,
                    online: navigator.onLine
                },
                page: {
                    url: window.location.href,
                    referrer: document.referrer,
                    title: document.title
                }
            };
        }
    };

    // –î–æ–¥–∞—î–º–æ –º–æ–¥—É–ª—å –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–æ–¥—É–ª—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
    window.WinixRaffles.errorHandler = errorHandler;

    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –º–æ–¥—É–ª—è
    document.addEventListener('DOMContentLoaded', function() {
        if (window.WinixRaffles.state.isInitialized) {
            errorHandler.init();
        } else {
            // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ—ó —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
            document.addEventListener('winix-raffles-initialized', function() {
                errorHandler.init();
            });
        }
    });

    console.log('‚úÖ –ú–æ–¥—É–ª—å –æ–±—Ä–æ–±–∫–∏ –ø–æ–º–∏–ª–æ–∫ —É—Å–ø—ñ—à–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ');
})();