/**
 * WINIX - –°–∏—Å—Ç–µ–º–∞ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ (interface-updater.js)
 * –ú–æ–¥—É–ª—å –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É –ø—ñ—Å–ª—è –¥—ñ–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
 * @version 1.0.0
 */

(function() {
    'use strict';

    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–æ–¥—É–ª—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
    if (typeof window.WinixRaffles === 'undefined') {
        console.error('‚ùå WinixRaffles –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ! –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—è, —â–æ core.js –ø—ñ–¥–∫–ª—é—á–µ–Ω–æ —Ä–∞–Ω—ñ—à–µ interface-updater.js');
        return;
    }

    // –ú–æ–¥—É–ª—å –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É
    const interfaceUpdater = {
        // –õ—ñ—á–∏–ª—å–Ω–∏–∫ –æ–Ω–æ–≤–ª–µ–Ω—å –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è
        updateCounter: 0,

        // –ß–∞—Å –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
        lastUpdateTime: 0,

        // –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–π —ñ–Ω—Ç–µ—Ä–≤–∞–ª –º—ñ–∂ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è–º–∏ (–º—Å)
        minUpdateInterval: 300,

        // –ó–∞–ø–ª–∞–Ω–æ–≤–∞–Ω–∞ –∑–∞—Ç—Ä–∏–º–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
        updateDebounceTimeout: null,

        // –°—Ç–∞–Ω –±–ª–æ–∫—É–≤–∞–Ω–Ω—è —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É
        isUILocked: false,

        /**
         * –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –º–æ–¥—É–ª—è
         */
        init: function() {
            console.log('üîÑ –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –º–æ–¥—É–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É...');

            // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π
            this.setupEventHandlers();

            // –°—Ç–≤–æ—Ä—é—î–º–æ —Å—Ç–∏–ª—ñ –¥–ª—è –∞–Ω—ñ–º–∞—Ü—ñ–π –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
            this.createUpdateAnimationStyles();
        },

        /**
         * –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –ø–æ–¥—ñ–π
         */
        setupEventHandlers: function() {
            // –û–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ—ó —É—Å–ø—ñ—à–Ω–æ—ó —É—á–∞—Å—Ç—ñ –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ
            document.addEventListener('raffle-participation', (event) => {
                if (event.detail && event.detail.successful) {
                    this.handleSuccessfulParticipation(event.detail);
                }
            });

            // –û–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ—ó –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            document.addEventListener('user-data-updated', (event) => {
                if (event.detail && event.detail.userData) {
                    this.updateUserBalanceDisplay(event.detail.userData);
                }
            });

            // –û–±—Ä–æ–±–Ω–∏–∫ –≤–∏–¥–∏–º–æ—Å—Ç—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏ (–¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –ø—Ä–∏ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—ñ)
            document.addEventListener('visibilitychange', () => {
                if (document.visibilityState === 'visible') {
                    // –û–Ω–æ–≤–ª—é—î–º–æ –¥–∞–Ω—ñ –ø—Ä–∏ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—ñ –Ω–∞ –≤–∫–ª–∞–¥–∫—É
                    this.scheduleUIUpdate();
                }
            });

            // –û–±—Ä–æ–±–Ω–∏–∫ –ø—ñ—Å–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
            document.addEventListener('raffles-loaded', () => {
                this.addDetailsButtons();
            });
        },

        /**
         * –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å—Ç–∏–ª—ñ–≤ –¥–ª—è –∞–Ω—ñ–º–∞—Ü—ñ–π –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
         */
        createUpdateAnimationStyles: function() {
            if (document.getElementById('interface-updater-styles')) return;

            const styleElement = document.createElement('style');
            styleElement.id = 'interface-updater-styles';
            styleElement.textContent = `
                /* –ê–Ω—ñ–º–∞—Ü—ñ—è –ø—É–ª—å—Å–∞—Ü—ñ—ó –ø—Ä–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—ñ */
                @keyframes update-pulse {
                    0% { transform: scale(1); }
                    50% { transform: scale(1.05); }
                    100% { transform: scale(1); }
                }
                
                /* –ê–Ω—ñ–º–∞—Ü—ñ—è —Å–≤—ñ—Ç—ñ–Ω–Ω—è –ø—Ä–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—ñ */
                @keyframes update-glow {
                    0% { box-shadow: 0 0 5px rgba(0, 201, 167, 0.3); }
                    50% { box-shadow: 0 0 15px rgba(0, 201, 167, 0.7); }
                    100% { box-shadow: 0 0 5px rgba(0, 201, 167, 0.3); }
                }
                
                /* –ö–ª–∞—Å –¥–ª—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤, —è–∫—ñ –æ–Ω–æ–≤–∏–ª–∏—Å—è */
                .element-updated {
                    animation: update-pulse 0.5s ease-in-out, update-glow 1s ease-in-out;
                }
                
                /* –°—Ç–∏–ª—ñ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –¥–µ—Ç–∞–ª–µ–π */
                .details-button {
                    background: linear-gradient(to right, rgba(78, 181, 247, 0.9), rgba(0, 201, 167, 0.9));
                    color: white;
                    border: none;
                    border-radius: 15px;
                    padding: 5px 15px;
                    font-size: 0.9em;
                    cursor: pointer;
                    margin-top: 10px;
                    transition: all 0.3s ease;
                    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
                }
                
                .details-button:hover {
                    transform: translateY(-2px);
                    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
                }
                
                .details-button:active {
                    transform: translateY(0);
                }
                
                /* –°—Ç–∏–ª—å –¥–ª—è –∫–Ω–æ–ø–∫–∏ —É—á–∞—Å—Ç—ñ, —è–∫—â–æ –≤–∂–µ –±–µ—Ä–µ–º–æ —É—á–∞—Å—Ç—å */
                .participating {
                    background: linear-gradient(to right, #4CAF50, #45a049);
                }
                
                /* –ê–Ω—ñ–º–∞—Ü—ñ—è –¥–ª—è —É—Å–ø—ñ—à–Ω–æ–≥–æ –¥–æ–¥–∞–≤–∞–Ω–Ω—è –±—ñ–ª–µ—Ç–∞ */
                @keyframes ticket-added {
                    0% { opacity: 0; transform: scale(0.8) translateY(10px); }
                    80% { opacity: 1; transform: scale(1.1) translateY(0); }
                    100% { opacity: 1; transform: scale(1) translateY(0); }
                }
                
                .ticket-added {
                    animation: ticket-added 0.5s ease-in-out forwards;
                }
            `;

            document.head.appendChild(styleElement);
        },

        /**
         * –û–±—Ä–æ–±–∫–∞ —É—Å–ø—ñ—à–Ω–æ—ó —É—á–∞—Å—Ç—ñ –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ
         * @param {Object} data - –î–∞–Ω—ñ –ø—Ä–æ —É—á–∞—Å—Ç—å
         */
        handleSuccessfulParticipation: function(data) {
            if (!data || !data.raffleId) return;

            // –û–Ω–æ–≤–ª—é—î–º–æ –≤–∏–≥–ª—è–¥ –∫–Ω–æ–ø–∫–∏
            this.updateParticipationButton(data.raffleId, data.ticketCount || 1);

            // –û–Ω–æ–≤–ª—é—î–º–æ –ª—ñ—á–∏–ª—å–Ω–∏–∫ —É—á–∞—Å–Ω–∏–∫—ñ–≤ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
            this.updateParticipantsCount(data.raffleId);

            // –ê–Ω—ñ–º—É—î–º–æ —É—Å–ø—ñ—à–Ω—É —É—á–∞—Å—Ç—å
            this.animateSuccessfulParticipation(data.raffleId);

            // –î–æ–¥–∞—î–º–æ –∫–Ω–æ–ø–∫—É "–î–µ—Ç–∞–ª—ñ" —è–∫—â–æ —ó—ó —â–µ –Ω–µ–º–∞—î
            this.addDetailsButtonToRaffle(data.raffleId);
        },

        /**
         * –û–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–Ω–æ–ø–∫–∏ —É—á–∞—Å—Ç—ñ –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ
         * @param {string} raffleId - ID —Ä–æ–∑—ñ–≥—Ä–∞—à—É
         * @param {number} ticketCount - –ö—ñ–ª—å–∫—ñ—Å—Ç—å –±—ñ–ª–µ—Ç—ñ–≤
         */
        updateParticipationButton: function(raffleId, ticketCount) {
            const buttons = document.querySelectorAll(`.join-button[data-raffle-id="${raffleId}"], .mini-raffle-button[data-raffle-id="${raffleId}"]`);

            buttons.forEach(button => {
                // –í–∏–¥–∞–ª—è—î–º–æ —Å—Ç–∞–Ω –æ–±—Ä–æ–±–∫–∏
                button.classList.remove('processing');
                button.removeAttribute('data-processing');

                // –î–æ–¥–∞—î–º–æ –∫–ª–∞—Å –¥–ª—è —É—á–∞—Å–Ω–∏–∫—ñ–≤
                button.classList.add('participating');

                // –û–Ω–æ–≤–ª—é—î–º–æ —Ç–µ–∫—Å—Ç
                const isMini = button.classList.contains('mini-raffle-button');
                button.textContent = isMini ?
                    `–î–æ–¥–∞—Ç–∏ —â–µ –±—ñ–ª–µ—Ç (${ticketCount})` :
                    `–î–æ–¥–∞—Ç–∏ —â–µ –±—ñ–ª–µ—Ç (—É –≤–∞—Å: ${ticketCount})`;

                // –†–æ–∑–±–ª–æ–∫–æ–≤—É—î–º–æ –∫–Ω–æ–ø–∫—É
                button.disabled = false;
            });
        },

        /**
         * –û–Ω–æ–≤–ª–µ–Ω–Ω—è –ª—ñ—á–∏–ª—å–Ω–∏–∫–∞ —É—á–∞—Å–Ω–∏–∫—ñ–≤ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
         * @param {string} raffleId - ID —Ä–æ–∑—ñ–≥—Ä–∞—à—É
         */
        updateParticipantsCount: function(raffleId) {
            try {
                // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –µ–ª–µ–º–µ–Ω—Ç –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∫—ñ–ª—å–∫–æ—Å—Ç—ñ —É—á–∞—Å–Ω–∏–∫—ñ–≤
                const participantsElements = document.querySelectorAll(
                    `.raffle-card[data-raffle-id="${raffleId}"] .participants-count .count, ` +
                    `.main-raffle .participants-info .participants-count`
                );

                participantsElements.forEach(element => {
                    // –û—Ç—Ä–∏–º—É—î–º–æ –ø–æ—Ç–æ—á–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è —ñ –∑–±—ñ–ª—å—à—É—î–º–æ –π–æ–≥–æ
                    const currentCount = parseInt(element.textContent.replace(/\s+/g, '')) || 0;
                    element.textContent = (currentCount + 1).toString()
                        .replace(/\B(?=(\d{3})+(?!\d))/g, " "); // –§–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è –∑ –ø—Ä–æ–±—ñ–ª–∞–º–∏ –º—ñ–∂ —Ä–æ–∑—Ä—è–¥–∞–º–∏

                    // –î–æ–¥–∞—î–º–æ –∫–ª–∞—Å –¥–ª—è –∞–Ω—ñ–º–∞—Ü—ñ—ó –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
                    element.classList.add('element-updated');

                    // –í–∏–¥–∞–ª—è—î–º–æ –∫–ª–∞—Å —á–µ—Ä–µ–∑ 1 —Å–µ–∫—É–Ω–¥—É
                    setTimeout(() => {
                        element.classList.remove('element-updated');
                    }, 1000);
                });
            } catch (e) {
                console.warn("‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –æ–Ω–æ–≤–∏—Ç–∏ –ª—ñ—á–∏–ª—å–Ω–∏–∫ —É—á–∞—Å–Ω–∏–∫—ñ–≤:", e);
            }
        },

        /**
         * –ê–Ω—ñ–º–∞—Ü—ñ—è —É—Å–ø—ñ—à–Ω–æ—ó —É—á–∞—Å—Ç—ñ –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ
         * @param {string} raffleId - ID —Ä–æ–∑—ñ–≥—Ä–∞—à—É
         */
        animateSuccessfulParticipation: function(raffleId) {
            // –ê–Ω—ñ–º—É—î–º–æ –∫–∞—Ä—Ç–∫—É —Ä–æ–∑—ñ–≥—Ä–∞—à—É
            const raffleCard = document.querySelector(`.raffle-card[data-raffle-id="${raffleId}"], .main-raffle-content`);
            if (raffleCard) {
                raffleCard.classList.add('element-updated');

                // –í–∏–¥–∞–ª—è—î–º–æ –∫–ª–∞—Å —á–µ—Ä–µ–∑ 1 —Å–µ–∫—É–Ω–¥—É
                setTimeout(() => {
                    raffleCard.classList.remove('element-updated');
                }, 1000);
            }

            // –ü–æ–∫–∞–∑—É—î–º–æ –µ—Ñ–µ–∫—Ç –¥–æ–¥–∞–≤–∞–Ω–Ω—è –±—ñ–ª–µ—Ç–∞
            this.showTicketAddedEffect(raffleId);
        },

        /**
         * –ï—Ñ–µ–∫—Ç –¥–æ–¥–∞–≤–∞–Ω–Ω—è –±—ñ–ª–µ—Ç–∞
         * @param {string} raffleId - ID —Ä–æ–∑—ñ–≥—Ä–∞—à—É
         */
        showTicketAddedEffect: function(raffleId) {
            const button = document.querySelector(`.join-button[data-raffle-id="${raffleId}"], .mini-raffle-button[data-raffle-id="${raffleId}"]`);
            if (!button) return;

            // –°—Ç–≤–æ—Ä—é—î–º–æ –µ–ª–µ–º–µ–Ω—Ç –¥–ª—è –∞–Ω—ñ–º–∞—Ü—ñ—ó
            const ticketEffect = document.createElement('div');
            ticketEffect.className = 'ticket-added-effect';
            ticketEffect.style.cssText = `
                position: absolute;
                top: -20px;
                left: 50%;
                transform: translateX(-50%);
                color: #4CAF50;
                font-weight: bold;
                font-size: 14px;
                pointer-events: none;
                z-index: 100;
            `;
            ticketEffect.textContent = '+1 –±—ñ–ª–µ—Ç';

            // –î–æ–¥–∞—î–º–æ –µ–ª–µ–º–µ–Ω—Ç –¥–æ –∫–Ω–æ–ø–∫–∏
            button.style.position = 'relative';
            button.appendChild(ticketEffect);

            // –ê–Ω—ñ–º–∞—Ü—ñ—è
            ticketEffect.classList.add('ticket-added');

            // –í–∏–¥–∞–ª—è—î–º–æ —á–µ—Ä–µ–∑ 1.5 —Å–µ–∫—É–Ω–¥–∏
            setTimeout(() => {
                if (ticketEffect.parentNode) {
                    ticketEffect.parentNode.removeChild(ticketEffect);
                }
            }, 1500);
        },

        /**
         * –î–æ–¥–∞–≤–∞–Ω–Ω—è –∫–Ω–æ–ø–æ–∫ –¥–µ—Ç–∞–ª–µ–π –¥–æ –≤—Å—ñ—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
         */
        addDetailsButtons: function() {
            // –û—Ç—Ä–∏–º—É—î–º–æ –≤—Å—ñ –∫–∞—Ä—Ç–æ—á–∫–∏ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
            const mainRaffle = document.querySelector('.main-raffle');
            const miniRaffles = document.querySelectorAll('.mini-raffle');

            // –î–æ–¥–∞—î–º–æ –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ —Ä–æ–∑—ñ–≥—Ä–∞—à—É, —è–∫—â–æ –≤—ñ–Ω —ñ—Å–Ω—É—î
            if (mainRaffle) {
                const raffleId = mainRaffle.getAttribute('data-raffle-id');
                if (raffleId) {
                    this.addDetailsButtonToRaffle(raffleId, 'main');
                }
            }

            // –î–æ–¥–∞—î–º–æ –¥–æ –º—ñ–Ω—ñ-—Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
            miniRaffles.forEach(raffle => {
                const raffleId = raffle.getAttribute('data-raffle-id');
                if (raffleId) {
                    this.addDetailsButtonToRaffle(raffleId, 'mini');
                }
            });
        },

        /**
         * –î–æ–¥–∞–≤–∞–Ω–Ω—è –∫–Ω–æ–ø–∫–∏ –¥–µ—Ç–∞–ª–µ–π –¥–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
         * @param {string} raffleId - ID —Ä–æ–∑—ñ–≥—Ä–∞—à—É
         * @param {string} type - –¢–∏–ø —Ä–æ–∑—ñ–≥—Ä–∞—à—É (main/mini)
         */
        addDetailsButtonToRaffle: function(raffleId, type = 'main') {
            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —ñ—Å–Ω—É—î –≤–∂–µ –∫–Ω–æ–ø–∫–∞
            const existingButton = document.querySelector(`.details-button[data-raffle-id="${raffleId}"]`);
            if (existingButton) return;

            // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∫–Ω–æ–ø–∫–∏
            let buttonContainer;

            if (type === 'main') {
                // –î–ª—è –≥–æ–ª–æ–≤–Ω–æ–≥–æ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
                buttonContainer = document.querySelector(`.main-raffle[data-raffle-id="${raffleId}"] .main-raffle-content, .main-raffle .main-raffle-content`);
            } else {
                // –î–ª—è –º—ñ–Ω—ñ-—Ä–æ–∑—ñ–≥—Ä–∞—à—É
                buttonContainer = document.querySelector(`.mini-raffle[data-raffle-id="${raffleId}"] .mini-raffle-info`);
            }

            if (!buttonContainer) return;

            // –°—Ç–≤–æ—Ä—é—î–º–æ –∫–Ω–æ–ø–∫—É –¥–µ—Ç–∞–ª–µ–π
            const detailsButton = document.createElement('button');
            detailsButton.className = 'details-button';
            detailsButton.setAttribute('data-raffle-id', raffleId);
            detailsButton.textContent = '–î–µ—Ç–∞–ª—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—É';

            // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ—ó
            detailsButton.addEventListener('click', (e) => {
                e.preventDefault();
                e.stopPropagation();

                // –í—ñ–¥–∫—Ä–∏–≤–∞—î–º–æ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ –∑ –¥–µ—Ç–∞–ª—è–º–∏ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
                if (window.WinixRaffles.modal && typeof window.WinixRaffles.modal.showRaffleDetails === 'function') {
                    window.WinixRaffles.modal.showRaffleDetails(raffleId);
                } else {
                    // –ó–∞–ø–∞—Å–Ω–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç, —è–∫—â–æ –º–æ–¥—É–ª—å modal –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∏–π
                    this.showFallbackRaffleDetails(raffleId);
                }
            });

            // –î–æ–¥–∞—î–º–æ –∫–Ω–æ–ø–∫—É –¥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
            buttonContainer.appendChild(detailsButton);
        },

        /**
         * –ó–∞–ø–∞—Å–Ω–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç –ø–æ–∫–∞–∑—É –¥–µ—Ç–∞–ª–µ–π —Ä–æ–∑—ñ–≥—Ä–∞—à—É
         * @param {string} raffleId - ID —Ä–æ–∑—ñ–≥—Ä–∞—à—É
         */
        showFallbackRaffleDetails: function(raffleId) {
            // –®—É–∫–∞—î–º–æ –¥–∞–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
            let raffle = null;

            if (window.WinixRaffles.state.activeRaffles) {
                raffle = window.WinixRaffles.state.activeRaffles.find(r => r.id === raffleId);
            }

            if (!raffle) {
                window.showToast('–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–Ω–∞–π—Ç–∏ –¥–µ—Ç–∞–ª—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—É', 'error');
                return;
            }

            // –°—Ç–≤–æ—Ä—é—î–º–æ –ø—Ä–æ—Å—Ç–µ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
            const modalHTML = `
                <div id="simple-modal" class="simple-modal-overlay">
                    <div class="simple-modal-content">
                        <div class="simple-modal-header">
                            <h3>${raffle.title || '–î–µ—Ç–∞–ª—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—É'}</h3>
                            <button class="simple-modal-close">&times;</button>
                        </div>
                        <div class="simple-modal-body">
                            <div class="raffle-details-image">
                                <img src="${raffle.image_url || 'assets/prize-default.png'}" alt="${raffle.title}" 
                                     onerror="this.src='assets/prize-default.png'">
                            </div>
                            <div class="raffle-details-info">
                                <p><strong>–ü—Ä–∏–∑–æ–≤–∏–π —Ñ–æ–Ω–¥:</strong> ${raffle.prize_amount || 0} ${raffle.prize_currency || 'WINIX'}</p>
                                <p><strong>–ö—ñ–ª—å–∫—ñ—Å—Ç—å –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤:</strong> ${raffle.winners_count || 1}</p>
                                <p><strong>–£—á–∞—Å–Ω–∏–∫—ñ–≤:</strong> ${raffle.participants_count || 0}</p>
                                <p><strong>–í–∞—Ä—Ç—ñ—Å—Ç—å —É—á–∞—Å—Ç—ñ:</strong> ${raffle.entry_fee || 1} –∂–µ—Ç–æ–Ω${raffle.entry_fee > 1 ? '–∏' : ''}</p>
                                <p><strong>–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—è:</strong> ${this.formatDateTime(raffle.end_time)}</p>
                            </div>
                            <div class="raffle-details-description">
                                <h4>–û–ø–∏—Å —Ä–æ–∑—ñ–≥—Ä–∞—à—É:</h4>
                                <p>${raffle.description || '–î–µ—Ç–∞–ª—å–Ω–∏–π –æ–ø–∏—Å –≤—ñ–¥—Å—É—Ç–Ω—ñ–π'}</p>
                            </div>
                        </div>
                    </div>
                </div>
            `;

            // –î–æ–¥–∞—î–º–æ —Å—Ç–∏–ª—ñ –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞
            const modalStyle = document.createElement('style');
            modalStyle.textContent = `
                .simple-modal-overlay {
                    position: fixed;
                    top: 0;
                    left: 0;
                    width: 100%;
                    height: 100%;
                    background: rgba(0, 0, 0, 0.7);
                    display: flex;
                    justify-content: center;
                    align-items: center;
                    z-index: 1000;
                }
                
                .simple-modal-content {
                    background: #fff;
                    border-radius: 10px;
                    width: 90%;
                    max-width: 500px;
                    max-height: 80vh;
                    overflow-y: auto;
                    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
                }
                
                .simple-modal-header {
                    padding: 15px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                    border-bottom: 1px solid #eee;
                }
                
                .simple-modal-header h3 {
                    margin: 0;
                    color: #333;
                }
                
                .simple-modal-close {
                    background: none;
                    border: none;
                    font-size: 24px;
                    cursor: pointer;
                    color: #999;
                }
                
                .simple-modal-body {
                    padding: 15px;
                }
                
                .raffle-details-image {
                    text-align: center;
                    margin-bottom: 15px;
                }
                
                .raffle-details-image img {
                    max-width: 100%;
                    max-height: 200px;
                    border-radius: 8px;
                }
                
                .raffle-details-info {
                    margin-bottom: 15px;
                }
                
                .raffle-details-info p {
                    margin: 5px 0;
                }
                
                .raffle-details-description {
                    border-top: 1px solid #eee;
                    padding-top: 15px;
                }
                
                .raffle-details-description h4 {
                    margin-top: 0;
                }
            `;

            // –î–æ–¥–∞—î–º–æ –µ–ª–µ–º–µ–Ω—Ç–∏ –¥–æ DOM
            document.head.appendChild(modalStyle);
            const modalContainer = document.createElement('div');
            modalContainer.innerHTML = modalHTML;
            document.body.appendChild(modalContainer);

            // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –∑–∞–∫—Ä–∏—Ç—Ç—è
            const closeButton = document.querySelector('.simple-modal-close');
            const modalOverlay = document.getElementById('simple-modal');

            if (closeButton) {
                closeButton.addEventListener('click', () => {
                    document.body.removeChild(modalContainer);
                });
            }

            if (modalOverlay) {
                modalOverlay.addEventListener('click', (e) => {
                    if (e.target === modalOverlay) {
                        document.body.removeChild(modalContainer);
                    }
                });
            }
        },

        /**
         * –§–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è –¥–∞—Ç–∏ —ñ —á–∞—Å—É
         * @param {string|Date} dateTime - –î–∞—Ç–∞ —ñ —á–∞—Å
         * @returns {string} –í—ñ–¥—Ñ–æ—Ä–º–∞—Ç–æ–≤–∞–Ω–∞ –¥–∞—Ç–∞ —ñ —á–∞—Å
         */
        formatDateTime: function(dateTime) {
            if (!dateTime) return '–ù–µ–≤—ñ–¥–æ–º–æ';

            try {
                const date = new Date(dateTime);
                return `${date.getDate().toString().padStart(2, '0')}.${(date.getMonth() + 1).toString().padStart(2, '0')}.${date.getFullYear()} ${date.getHours().toString().padStart(2, '0')}:${date.getMinutes().toString().padStart(2, '0')}`;
            } catch (e) {
                return '–ù–µ–≤—ñ–¥–æ–º–æ';
            }
        },

        /**
         * –û–Ω–æ–≤–ª–µ–Ω–Ω—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
         * @param {Object} userData - –î–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
         */
        updateUserBalanceDisplay: function(userData) {
            if (!userData) return;

            // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∂–µ—Ç–æ–Ω—ñ–≤
            const userCoinsElement = document.getElementById('user-coins');
            if (userCoinsElement && userData.coins !== undefined) {
                const currentCoins = parseInt(userCoinsElement.textContent);
                const newCoins = userData.coins;

                // –ê–Ω—ñ–º–∞—Ü—ñ—è –∑–º—ñ–Ω–∏, —è–∫—â–æ –∑–Ω–∞—á–µ–Ω–Ω—è –≤—ñ–¥—Ä—ñ–∑–Ω—è—î—Ç—å—Å—è
                if (currentCoins !== newCoins) {
                    userCoinsElement.textContent = newCoins;
                    userCoinsElement.classList.add('element-updated');

                    // –í–∏–¥–∞–ª—è—î–º–æ –∫–ª–∞—Å —á–µ—Ä–µ–∑ 1 —Å–µ–∫—É–Ω–¥—É
                    setTimeout(() => {
                        userCoinsElement.classList.remove('element-updated');
                    }, 1000);
                }
            }

            // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É
            const userTokensElement = document.getElementById('user-tokens');
            if (userTokensElement && userData.balance !== undefined) {
                const currentBalance = parseFloat(userTokensElement.textContent.replace(/\s+/g, ''));
                const newBalance = userData.balance;

                // –ê–Ω—ñ–º–∞—Ü—ñ—è –∑–º—ñ–Ω–∏, —è–∫—â–æ –∑–Ω–∞—á–µ–Ω–Ω—è –≤—ñ–¥—Ä—ñ–∑–Ω—è—î—Ç—å—Å—è
                if (currentBalance !== newBalance) {
                    userTokensElement.textContent = this.formatNumberWithSpaces(newBalance);
                    userTokensElement.classList.add('element-updated');

                    // –í–∏–¥–∞–ª—è—î–º–æ –∫–ª–∞—Å —á–µ—Ä–µ–∑ 1 —Å–µ–∫—É–Ω–¥—É
                    setTimeout(() => {
                        userTokensElement.classList.remove('element-updated');
                    }, 1000);
                }
            }
        },

        /**
         * –§–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è —á–∏—Å–ª–∞ –∑ –ø—Ä–æ–±—ñ–ª–∞–º–∏
         * @param {number} number - –ß–∏—Å–ª–æ –¥–ª—è —Ñ–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è
         * @returns {string} –í—ñ–¥—Ñ–æ—Ä–º–∞—Ç–æ–≤–∞–Ω–µ —á–∏—Å–ª–æ
         */
        formatNumberWithSpaces: function(number) {
            return number.toString().replace(/\B(?=(\d{3})+(?!\d))/g, " ");
        },

        /**
         * –ü–ª–∞–Ω—É–≤–∞–Ω–Ω—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É –∑ –∑–∞—Ç—Ä–∏–º–∫–æ—é
         */
        scheduleUIUpdate: function() {
            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –º–∏–Ω—É–ª–æ –¥–æ—Å—Ç–∞—Ç–Ω—å–æ —á–∞—Å—É –∑ –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
            const now = Date.now();
            if (now - this.lastUpdateTime < this.minUpdateInterval) {
                // –Ø–∫—â–æ —Ç–∞–π–º–∞—É—Ç –≤–∂–µ —ñ—Å–Ω—É—î, –Ω–µ —Å—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤–∏–π
                if (this.updateDebounceTimeout) return;

                // –ü–ª–∞–Ω—É–≤–∞–Ω–Ω—è –∑ –∑–∞—Ç—Ä–∏–º–∫–æ—é
                this.updateDebounceTimeout = setTimeout(() => {
                    this.performUIUpdate();
                    this.updateDebounceTimeout = null;
                }, this.minUpdateInterval);

                return;
            }

            // –í–∏–∫–æ–Ω—É—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –Ω–µ–≥–∞–π–Ω–æ
            this.performUIUpdate();
        },

        /**
         * –í–∏–∫–æ–Ω–∞–Ω–Ω—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É
         */
        performUIUpdate: function() {
            // –û–Ω–æ–≤–ª—é—î–º–æ —á–∞—Å –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
            this.lastUpdateTime = Date.now();
            this.updateCounter++;

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å –Ω–µ –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–æ
            if (this.isUILocked) return;

            // –û–Ω–æ–≤–ª—é—î–º–æ –∫–Ω–æ–ø–∫–∏ —É—á–∞—Å—Ç—ñ
            if (window.WinixRaffles.participation &&
                typeof window.WinixRaffles.participation.updateParticipationButtons === 'function') {
                window.WinixRaffles.participation.updateParticipationButtons();
            }

            // –î–æ–¥–∞—î–º–æ –∫–Ω–æ–ø–∫–∏ –¥–µ—Ç–∞–ª–µ–π
            this.addDetailsButtons();
        },

        /**
         * –ë–ª–æ–∫—É–≤–∞–Ω–Ω—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É
         */
        lockUI: function() {
            this.isUILocked = true;
        },

        /**
         * –†–æ–∑–±–ª–æ–∫—É–≤–∞–Ω–Ω—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É
         */
        unlockUI: function() {
            this.isUILocked = false;

            // –í—ñ–¥—Ä–∞–∑—É –æ–Ω–æ–≤–ª—é—î–º–æ –ø—ñ—Å–ª—è —Ä–æ–∑–±–ª–æ–∫—É–≤–∞–Ω–Ω—è
            this.scheduleUIUpdate();
        }
    };

    // –î–æ–¥–∞—î–º–æ –º–æ–¥—É–ª—å –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–æ–¥—É–ª—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
    window.WinixRaffles.interfaceUpdater = interfaceUpdater;

    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –º–æ–¥—É–ª—è –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
    document.addEventListener('DOMContentLoaded', function() {
        if (window.WinixRaffles.state.isInitialized) {
            interfaceUpdater.init();
        } else {
            // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ—ó —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
            document.addEventListener('winix-raffles-initialized', function() {
                interfaceUpdater.init();
            });
        }
    });

    console.log('‚úÖ –ú–æ–¥—É–ª—å –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É —É—Å–ø—ñ—à–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ');
})();