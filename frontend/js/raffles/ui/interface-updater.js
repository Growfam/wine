/**
 * WINIX - –°–∏—Å—Ç–µ–º–∞ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ (interface-updater.js)
 * –ú–æ–¥—É–ª—å –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É –ø—ñ—Å–ª—è –¥—ñ–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
 * @version 1.2.0
 */

(function() {
    'use strict';

    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–æ–¥—É–ª—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
    if (typeof window.WinixRaffles === 'undefined') {
        console.error('‚ùå WinixRaffles –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ! –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—è, —â–æ core.js –ø—ñ–¥–∫–ª—é—á–µ–Ω–æ —Ä–∞–Ω—ñ—à–µ interface-updater.js');
        return;
    }

    // –ú–æ–¥—É–ª—å –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É
    const interfaceUpdater = {
        // –õ—ñ—á–∏–ª—å–Ω–∏–∫ –æ–Ω–æ–≤–ª–µ–Ω—å –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è
        updateCounter: 0,

        // –ß–∞—Å –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
        lastUpdateTime: 0,

        // –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–π —ñ–Ω—Ç–µ—Ä–≤–∞–ª –º—ñ–∂ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è–º–∏ (–º—Å)
        minUpdateInterval: 300,

        // –ó–∞–ø–ª–∞–Ω–æ–≤–∞–Ω–∞ –∑–∞—Ç—Ä–∏–º–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
        updateDebounceTimeout: null,

        // –°—Ç–∞–Ω –±–ª–æ–∫—É–≤–∞–Ω–Ω—è —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É
        isUILocked: false,

        // –î–û–î–ê–ù–û: –ö–µ—à –ø–æ—Ç–æ—á–Ω–æ–≥–æ —Å—Ç–∞–Ω—É —É—á–∞—Å–Ω–∏–∫—ñ–≤ –¥–ª—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
        participantsCache: {},

        // –î–û–î–ê–ù–û: –ö–µ—à –ø–æ—Ç–æ—á–Ω–æ—ó –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤ –¥–ª—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
        winnersCache: {},

        // –î–û–î–ê–ù–û: –û—Å—Ç–∞–Ω–Ω—ñ–π —á–∞—Å —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó –∫–µ—à—É
        lastCacheSyncTime: 0,

        // –î–û–î–ê–ù–û: –¢–∞–π–º–µ—Ä –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ–≥–æ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó
        autoSyncTimer: null,

        /**
         * –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –º–æ–¥—É–ª—è
         */
        init: function() {
            console.log('üîÑ –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –º–æ–¥—É–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É...');

            // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ –∫–µ—à –ø—Ä–∏ —Å—Ç–∞—Ä—Ç—ñ
            this.initCache();

            // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π
            this.setupEventHandlers();

            // –°—Ç–≤–æ—Ä—é—î–º–æ —Å—Ç–∏–ª—ñ –¥–ª—è –∞–Ω—ñ–º–∞—Ü—ñ–π –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
            this.createUpdateAnimationStyles();

            // –î–û–î–ê–ù–û: –ó–∞–ø—É—Å–∫–∞—î–º–æ –ø–µ—Ä—ñ–æ–¥–∏—á–Ω—É —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—é
            this.startAutoSync();
        },

        /**
         * –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ –∫–µ—à –ø–æ—Ç–æ—á–Ω–æ–≥–æ —Å—Ç–∞–Ω—É
         */
        initCache: function() {
            try {
                // –°–ø—Ä–æ–±—É—î–º–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ –±–∞–∑–æ–≤–∏–π —Å—Ç–∞–Ω –∑ DOM
                document.querySelectorAll('.raffle-card, .main-raffle').forEach(card => {
                    const raffleId = card.getAttribute('data-raffle-id');
                    if (!raffleId) return;

                    // –®—É–∫–∞—î–º–æ –µ–ª–µ–º–µ–Ω—Ç–∏ –∑ –∫—ñ–ª—å–∫—ñ—Å—Ç—é —É—á–∞—Å–Ω–∏–∫—ñ–≤
                    const participantsEl = card.querySelector('.participants-count .count, .participants-info .participants-count');
                    if (participantsEl) {
                        const count = parseInt(participantsEl.textContent.replace(/\s+/g, '')) || 0;
                        this.participantsCache[raffleId] = count;
                    }

                    // –®—É–∫–∞—î–º–æ –µ–ª–µ–º–µ–Ω—Ç–∏ –∑ –∫—ñ–ª—å–∫—ñ—Å—Ç—é –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤
                    const winnersEl = card.querySelector('.winners-count, .prize-winners-count');
                    if (winnersEl) {
                        const count = parseInt(winnersEl.textContent.replace(/\s+/g, '')) || 0;
                        this.winnersCache[raffleId] = count;
                    }
                });

                console.log('üìä –ö–µ—à —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ:', {
                    participants: this.participantsCache,
                    winners: this.winnersCache
                });

                // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —á–∞—Å —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
                this.lastCacheSyncTime = Date.now();
            } catch (e) {
                console.warn('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó –∫–µ—à—É:', e);
            }
        },

        /**
         * –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ—ó —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó
         */
        startAutoSync: function() {
            // –û—á–∏—â–∞—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ–π —Ç–∞–π–º–µ—Ä, —è–∫—â–æ –≤—ñ–Ω —ñ—Å–Ω—É—î
            if (this.autoSyncTimer) {
                clearInterval(this.autoSyncTimer);
            }

            // –ó–∞–ø—É—Å–∫–∞—î–º–æ –ø–µ—Ä—ñ–æ–¥–∏—á–Ω–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–æ–∂–Ω—ñ 30 —Å–µ–∫—É–Ω–¥
            this.autoSyncTimer = setInterval(() => {
                if (document.visibilityState === 'visible') {
                    this.syncUIWithServer();
                }
            }, 30000); // 30 —Å–µ–∫—É–Ω–¥

            console.log('üîÑ –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∞ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è –∑–∞–ø—É—â–µ–Ω–∞');
        },

        /**
         * –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑—É—î–º–æ UI –∑ —Å–µ—Ä–≤–µ—Ä–æ–º –¥–ª—è –∫–æ—Ä–µ–∫—Ç–Ω–æ–≥–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è
         */
        syncUIWithServer: function() {
            // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∞—Å—É –∑ –æ—Å—Ç–∞–Ω–Ω—å–æ—ó —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó
            const now = Date.now();
            if (now - this.lastCacheSyncTime < 5000) return; // –ù–µ –æ–Ω–æ–≤–ª—é—î–º–æ —á–∞—Å—Ç—ñ—à–µ –Ω—ñ–∂ —Ä–∞–∑ –Ω–∞ 5 —Å–µ–∫—É–Ω–¥

            console.log('üîÑ –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è UI –∑ —Å–µ—Ä–≤–µ—Ä–æ–º...');

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ –≤ —Å–∏—Å—Ç–µ–º—ñ
            if (!window.WinixRaffles || !window.WinixRaffles.state || !Array.isArray(window.WinixRaffles.state.activeRaffles)) {
                console.warn('‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–∞–Ω—ñ –ø—Ä–æ –∞–∫—Ç–∏–≤–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ');
                return;
            }

            // –ü—Ä–æ—Ö–æ–¥–∏–º–æ –ø–æ –≤—Å—ñ—Ö –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à–∞—Ö —ñ –æ–Ω–æ–≤–ª—é—î–º–æ —ó—Ö–Ω—ñ –¥–∞–Ω—ñ
            window.WinixRaffles.state.activeRaffles.forEach(raffle => {
                if (!raffle || !raffle.id) return;

                const raffleId = raffle.id;

                // –û–Ω–æ–≤–ª—é—î–º–æ –∫–µ—à –∫—ñ–ª—å–∫–æ—Å—Ç—ñ —É—á–∞—Å–Ω–∏–∫—ñ–≤
                if (typeof raffle.participants_count === 'number') {
                    const oldCount = this.participantsCache[raffleId] || 0;
                    const newCount = raffle.participants_count;

                    // –Ø–∫—â–æ —î —Ä–æ–∑–±—ñ–∂–Ω—ñ—Å—Ç—å, –æ–Ω–æ–≤–ª—é—î–º–æ
                    if (oldCount !== newCount) {
                        console.log(`üìä –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è: —É—á–∞—Å–Ω–∏–∫–∏ —Ä–æ–∑—ñ–≥—Ä–∞—à—É ${raffleId}: ${oldCount} -> ${newCount}`);
                        this.participantsCache[raffleId] = newCount;
                        this.updateParticipantsCountDisplay(raffleId, newCount);
                    }
                }

                // –û–Ω–æ–≤–ª—é—î–º–æ –∫–µ—à –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤
                if (typeof raffle.winners_count === 'number') {
                    const oldCount = this.winnersCache[raffleId] || 0;
                    const newCount = raffle.winners_count;

                    // –Ø–∫—â–æ —î —Ä–æ–∑–±—ñ–∂–Ω—ñ—Å—Ç—å, –æ–Ω–æ–≤–ª—é—î–º–æ
                    if (oldCount !== newCount) {
                        console.log(`üìä –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è: –ø–µ—Ä–µ–º–æ–∂—Ü—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—É ${raffleId}: ${oldCount} -> ${newCount}`);
                        this.winnersCache[raffleId] = newCount;
                        this.updateWinnersCountDisplay(raffleId, newCount);
                    }
                }
            });

            // –û–Ω–æ–≤–ª—é—î–º–æ —á–∞—Å –æ—Å—Ç–∞–Ω–Ω—å–æ—ó —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó
            this.lastCacheSyncTime = now;
            console.log('‚úÖ UI —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–æ–≤–∞–Ω–æ –∑ —Å–µ—Ä–≤–µ—Ä–æ–º');
        },

        /**
         * –û–Ω–æ–≤–ª–µ–Ω–Ω—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∫—ñ–ª—å–∫–æ—Å—Ç—ñ —É—á–∞—Å–Ω–∏–∫—ñ–≤
         */
        updateParticipantsCountDisplay: function(raffleId, count) {
            // –®—É–∫–∞—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ
            const elements = document.querySelectorAll(
                `.raffle-card[data-raffle-id="${raffleId}"] .participants-count .count, ` +
                `.main-raffle[data-raffle-id="${raffleId}"] .participants-info .participants-count, ` +
                `.main-raffle .participants-info .participants-count`
            );

            if (elements.length === 0) return;

            elements.forEach(element => {
                const formattedCount = count.toString().replace(/\B(?=(\d{3})+(?!\d))/g, " ");
                element.textContent = formattedCount;

                // –î–æ–¥–∞—î–º–æ –∞–Ω—ñ–º–∞—Ü—ñ—é –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
                element.classList.add('element-updated');

                // –í–∏–¥–∞–ª—è—î–º–æ –∫–ª–∞—Å —á–µ—Ä–µ–∑ 1 —Å–µ–∫—É–Ω–¥—É
                setTimeout(() => {
                    element.classList.remove('element-updated');
                }, 1000);
            });
        },

        /**
         * –û–Ω–æ–≤–ª–µ–Ω–Ω—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤
         */
        updateWinnersCountDisplay: function(raffleId, count) {
            // –®—É–∫–∞—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ
            const elements = document.querySelectorAll(
                `.raffle-card[data-raffle-id="${raffleId}"] .winners-count, ` +
                `.main-raffle[data-raffle-id="${raffleId}"] .prize-winners-count, ` +
                `.main-raffle .prize-winners-count`
            );

            if (elements.length === 0) return;

            elements.forEach(element => {
                const formattedCount = count.toString().replace(/\B(?=(\d{3})+(?!\d))/g, " ");
                element.textContent = formattedCount;

                // –î–æ–¥–∞—î–º–æ –∞–Ω—ñ–º–∞—Ü—ñ—é –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
                element.classList.add('element-updated');

                // –í–∏–¥–∞–ª—è—î–º–æ –∫–ª–∞—Å —á–µ—Ä–µ–∑ 1 —Å–µ–∫—É–Ω–¥—É
                setTimeout(() => {
                    element.classList.remove('element-updated');
                }, 1000);
            });
        },

        /**
         * –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –ø–æ–¥—ñ–π
         */
        setupEventHandlers: function() {
            // –û–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ—ó —É—Å–ø—ñ—à–Ω–æ—ó —É—á–∞—Å—Ç—ñ –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ
            document.addEventListener('raffle-participation', (event) => {
                if (event.detail && event.detail.successful) {
                    this.handleSuccessfulParticipation(event.detail);
                }
            });

            // –û–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ—ó –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            document.addEventListener('user-data-updated', (event) => {
                if (event.detail && event.detail.userData) {
                    this.updateUserBalanceDisplay(event.detail.userData);
                }
            });

            // –û–±—Ä–æ–±–Ω–∏–∫ –≤–∏–¥–∏–º–æ—Å—Ç—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏ (–¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –ø—Ä–∏ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—ñ)
            document.addEventListener('visibilitychange', () => {
                if (document.visibilityState === 'visible') {
                    // –û–Ω–æ–≤–ª—é—î–º–æ –¥–∞–Ω—ñ –ø—Ä–∏ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—ñ –Ω–∞ –≤–∫–ª–∞–¥–∫—É
                    this.scheduleUIUpdate();

                    // –ó–∞–ø—É—Å–∫–∞—î–º–æ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—é –∑ —Å–µ—Ä–≤–µ—Ä–æ–º
                    setTimeout(() => {
                        this.syncUIWithServer();
                    }, 1000); // –ó–∞—Ç—Ä–∏–º–∫–∞ –¥–ª—è –¥–æ–∑–≤–æ–ª–µ–Ω–Ω—è —ñ–Ω—à–∏–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É–≤–∞—Ç–∏—Å—è
                }
            });

            // –û–±—Ä–æ–±–Ω–∏–∫ –ø—ñ—Å–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
            document.addEventListener('raffles-loaded', () => {
                this.addDetailsButtons();

                // –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑—É—î–º–æ –∫–µ—à –ø—ñ—Å–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
                setTimeout(() => {
                    this.initCache();
                    this.syncUIWithServer();
                }, 500);
            });
        },

        /**
         * –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å—Ç–∏–ª—ñ–≤ –¥–ª—è –∞–Ω—ñ–º–∞—Ü—ñ–π –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
         */
        createUpdateAnimationStyles: function() {
            if (document.getElementById('interface-updater-styles')) return;

            const styleElement = document.createElement('style');
            styleElement.id = 'interface-updater-styles';
            styleElement.textContent = `
                /* –ê–Ω—ñ–º–∞—Ü—ñ—è –ø—É–ª—å—Å–∞—Ü—ñ—ó –ø—Ä–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—ñ */
                @keyframes update-pulse {
                    0% { transform: scale(1); }
                    50% { transform: scale(1.05); }
                    100% { transform: scale(1); }
                }
                
                /* –ê–Ω—ñ–º–∞—Ü—ñ—è —Å–≤—ñ—Ç—ñ–Ω–Ω—è –ø—Ä–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—ñ */
                @keyframes update-glow {
                    0% { box-shadow: 0 0 5px rgba(0, 201, 167, 0.3); }
                    50% { box-shadow: 0 0 15px rgba(0, 201, 167, 0.7); }
                    100% { box-shadow: 0 0 5px rgba(0, 201, 167, 0.3); }
                }
                
                /* –ö–ª–∞—Å –¥–ª—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤, —è–∫—ñ –æ–Ω–æ–≤–∏–ª–∏—Å—è */
                .element-updated {
                    animation: update-pulse 0.5s ease-in-out, update-glow 1s ease-in-out;
                }
                
                /* –ü—Ä–µ–º—ñ–∞–ª—å–Ω—ñ —Å—Ç–∏–ª—ñ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –¥–µ—Ç–∞–ª–µ–π */
                .premium-details-button {
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    gap: 8px;
                    background: linear-gradient(135deg, rgba(78, 181, 247, 0.8), rgba(0, 201, 167, 0.8));
                    border: none;
                    border-radius: 12px;
                    color: white;
                    font-weight: 500;
                    font-size: 14px;
                    padding: 8px 12px;
                    cursor: pointer;
                    transition: all 0.3s ease;
                    margin-top: 10px;
                    width: auto;
                    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
                    position: relative;
                    overflow: hidden;
                }
                
                .premium-details-button::before {
                    content: '';
                    position: absolute;
                    top: -50%;
                    left: -50%;
                    width: 200%;
                    height: 200%;
                    background: radial-gradient(circle, rgba(255,255,255,0.3) 0%, transparent 70%);
                    transform: scale(0);
                    transition: transform 0.5s cubic-bezier(0.19, 1, 0.22, 1);
                    border-radius: 50%;
                }
                
                .premium-details-button::after {
                    content: '';
                    position: absolute;
                    bottom: 0;
                    left: 0;
                    width: 100%;
                    height: 100%;
                    background: linear-gradient(to bottom, transparent 70%, rgba(0, 0, 0, 0.2));
                    z-index: -1;
                }
                
                .premium-details-button:hover::before {
                    transform: scale(1);
                }
                
                .premium-details-button:hover {
                    transform: translateY(-2px);
                    box-shadow: 0 6px 15px rgba(0, 0, 0, 0.3);
                }
                
                .premium-details-button:active {
                    transform: translateY(0);
                    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
                }
                
                .premium-button-icon {
                    display: flex;
                    align-items: center;
                    justify-content: center;
                }
                
                /* –ê–Ω—ñ–º–∞—Ü—ñ—è –ø—É–ª—å—Å–∞—Ü—ñ—ó –¥–ª—è –ø—Ä–∏–≤–µ—Ä–Ω–µ–Ω–Ω—è —É–≤–∞–≥–∏ */
                @keyframes pulse-glow {
                    0% { box-shadow: 0 0 5px rgba(78, 181, 247, 0.5); }
                    50% { box-shadow: 0 0 15px rgba(0, 201, 167, 0.8); }
                    100% { box-shadow: 0 0 5px rgba(78, 181, 247, 0.5); }
                }
                
                .pulse-animation {
                    animation: pulse-glow 2s infinite;
                }
                
                /* –°—Ç–∏–ª—å –¥–ª—è –∫–Ω–æ–ø–∫–∏ —É—á–∞—Å—Ç—ñ, —è–∫—â–æ –≤–∂–µ –±–µ—Ä–µ–º–æ —É—á–∞—Å—Ç—å */
                .participating {
                    background: linear-gradient(to right, #4CAF50, #45a049);
                }
                
                /* –ê–Ω—ñ–º–∞—Ü—ñ—è –¥–ª—è —É—Å–ø—ñ—à–Ω–æ–≥–æ –¥–æ–¥–∞–≤–∞–Ω–Ω—è –±—ñ–ª–µ—Ç–∞ */
                @keyframes ticket-added {
                    0% { opacity: 0; transform: scale(0.8) translateY(10px); }
                    80% { opacity: 1; transform: scale(1.1) translateY(0); }
                    100% { opacity: 1; transform: scale(1) translateY(0); }
                }
                
                .ticket-added {
                    animation: ticket-added 0.5s ease-in-out forwards;
                }
            `;

            document.head.appendChild(styleElement);
        },

        /**
         * –û–±—Ä–æ–±–∫–∞ —É—Å–ø—ñ—à–Ω–æ—ó —É—á–∞—Å—Ç—ñ –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ
         * @param {Object} data - –î–∞–Ω—ñ –ø—Ä–æ —É—á–∞—Å—Ç—å
         */
        handleSuccessfulParticipation: function(data) {
            if (!data || !data.raffleId) return;

            // –í–ò–ü–†–ê–í–õ–ï–ù–û: –ó–∞—Ç—Ä–∏–º–∫–∞ –ø–µ—Ä–µ–¥ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è–º –¥–ª—è —É–Ω–∏–∫–Ω–µ–Ω–Ω—è –∫–æ–ª—ñ–∑—ñ–π
            setTimeout(() => {
                // –û–Ω–æ–≤–ª—é—î–º–æ –≤–∏–≥–ª—è–¥ –∫–Ω–æ–ø–∫–∏
                this.updateParticipationButton(data.raffleId, data.ticketCount || 1);

                // –û–Ω–æ–≤–ª—é—î–º–æ –ª—ñ—á–∏–ª—å–Ω–∏–∫ —É—á–∞—Å–Ω–∏–∫—ñ–≤ —Ä–æ–∑—ñ–≥—Ä–∞—à—É –∑ —É–Ω–∏–∫–Ω–µ–Ω–Ω—è–º —Ä–µ–π—Å-—É–º–æ–≤
                this.updateParticipantsCount(data.raffleId);

                // –ê–Ω—ñ–º—É—î–º–æ —É—Å–ø—ñ—à–Ω—É —É—á–∞—Å—Ç—å
                this.animateSuccessfulParticipation(data.raffleId);

                // –î–æ–¥–∞—î–º–æ –∫–Ω–æ–ø–∫—É "–î–µ—Ç–∞–ª—ñ" —è–∫—â–æ —ó—ó —â–µ –Ω–µ–º–∞—î
                this.addDetailsButtonToRaffle(data.raffleId);
            }, 300);

            // –ó–∞–ø–ª–∞–Ω–æ–≤–∞–Ω–∞ –ø–æ–≤–Ω–∞ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥–∏ –ø—ñ—Å–ª—è —É—á–∞—Å—Ç—ñ
            // –î–∞—î —Å–µ—Ä–≤–µ—Ä—É —á–∞—Å –æ–±—Ä–æ–±–∏—Ç–∏ –∑–º—ñ–Ω–∏
            setTimeout(() => {
                this.syncUIWithServer();
            }, 3000);
        },

        /**
         * –û–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–Ω–æ–ø–∫–∏ —É—á–∞—Å—Ç—ñ –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ
         * @param {string} raffleId - ID —Ä–æ–∑—ñ–≥—Ä–∞—à—É
         * @param {number} ticketCount - –ö—ñ–ª—å–∫—ñ—Å—Ç—å –±—ñ–ª–µ—Ç—ñ–≤
         */
        updateParticipationButton: function(raffleId, ticketCount) {
            const buttons = document.querySelectorAll(`.join-button[data-raffle-id="${raffleId}"], .mini-raffle-button[data-raffle-id="${raffleId}"]`);

            buttons.forEach(button => {
                // –í–∏–¥–∞–ª—è—î–º–æ —Å—Ç–∞–Ω –æ–±—Ä–æ–±–∫–∏
                button.classList.remove('processing');
                button.removeAttribute('data-processing');

                // –î–æ–¥–∞—î–º–æ –∫–ª–∞—Å –¥–ª—è —É—á–∞—Å–Ω–∏–∫—ñ–≤
                button.classList.add('participating');

                // –û–Ω–æ–≤–ª—é—î–º–æ —Ç–µ–∫—Å—Ç
                const isMini = button.classList.contains('mini-raffle-button');
                button.textContent = isMini ?
                    `–î–æ–¥–∞—Ç–∏ —â–µ –±—ñ–ª–µ—Ç (${ticketCount})` :
                    `–î–æ–¥–∞—Ç–∏ —â–µ –±—ñ–ª–µ—Ç (—É –≤–∞—Å: ${ticketCount})`;

                // –†–æ–∑–±–ª–æ–∫–æ–≤—É—î–º–æ –∫–Ω–æ–ø–∫—É
                button.disabled = false;
            });
        },

        /**
         * –û–Ω–æ–≤–ª–µ–Ω–Ω—è –ª—ñ—á–∏–ª—å–Ω–∏–∫–∞ —É—á–∞—Å–Ω–∏–∫—ñ–≤ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
         * @param {string} raffleId - ID —Ä–æ–∑—ñ–≥—Ä–∞—à—É
         */
        updateParticipantsCount: function(raffleId) {
            try {
                // –í–ò–ü–†–ê–í–õ–ï–ù–û: –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∫–µ—à –¥–ª—è –≥–∞—Ä–∞–Ω—Ç—É–≤–∞–Ω–Ω—è –∞—Ç–æ–º–∞—Ä–Ω–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
                // –°–ø–æ—á–∞—Ç–∫—É –æ—Ç—Ä–∏–º—É—î–º–æ –ø–æ—Ç–æ—á–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è –∑ –∫–µ—à—É
                let currentCount = this.participantsCache[raffleId] || 0;

                // –ó–±—ñ–ª—å—à—É—î–º–æ –Ω–∞ 1
                currentCount += 1;

                // –û–Ω–æ–≤–ª—é—î–º–æ –∫–µ—à
                this.participantsCache[raffleId] = currentCount;

                // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –µ–ª–µ–º–µ–Ω—Ç–∏ –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∫—ñ–ª—å–∫–æ—Å—Ç—ñ —É—á–∞—Å–Ω–∏–∫—ñ–≤
                const participantsElements = document.querySelectorAll(
                    `.raffle-card[data-raffle-id="${raffleId}"] .participants-count .count, ` +
                    `.main-raffle[data-raffle-id="${raffleId}"] .participants-info .participants-count, ` +
                    `.main-raffle .participants-info .participants-count`
                );

                participantsElements.forEach(element => {
                    // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –Ω–æ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è –∑ —Ñ–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è–º
                    element.textContent = currentCount.toString()
                        .replace(/\B(?=(\d{3})+(?!\d))/g, " "); // –§–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è –∑ –ø—Ä–æ–±—ñ–ª–∞–º–∏ –º—ñ–∂ —Ä–æ–∑—Ä—è–¥–∞–º–∏

                    // –î–æ–¥–∞—î–º–æ –∫–ª–∞—Å –¥–ª—è –∞–Ω—ñ–º–∞—Ü—ñ—ó –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
                    element.classList.add('element-updated');

                    // –í–∏–¥–∞–ª—è—î–º–æ –∫–ª–∞—Å —á–µ—Ä–µ–∑ 1 —Å–µ–∫—É–Ω–¥—É
                    setTimeout(() => {
                        element.classList.remove('element-updated');
                    }, 1000);
                });
            } catch (e) {
                console.warn("‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –æ–Ω–æ–≤–∏—Ç–∏ –ª—ñ—á–∏–ª—å–Ω–∏–∫ —É—á–∞—Å–Ω–∏–∫—ñ–≤:", e);
            }
        },

        /**
         * –ê–Ω—ñ–º–∞—Ü—ñ—è —É—Å–ø—ñ—à–Ω–æ—ó —É—á–∞—Å—Ç—ñ –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ
         * @param {string} raffleId - ID —Ä–æ–∑—ñ–≥—Ä–∞—à—É
         */
        animateSuccessfulParticipation: function(raffleId) {
            // –ê–Ω—ñ–º—É—î–º–æ –∫–∞—Ä—Ç–∫—É —Ä–æ–∑—ñ–≥—Ä–∞—à—É
            const raffleCard = document.querySelector(`.raffle-card[data-raffle-id="${raffleId}"], .main-raffle-content`);
            if (raffleCard) {
                raffleCard.classList.add('element-updated');

                // –í–∏–¥–∞–ª—è—î–º–æ –∫–ª–∞—Å —á–µ—Ä–µ–∑ 1 —Å–µ–∫—É–Ω–¥—É
                setTimeout(() => {
                    raffleCard.classList.remove('element-updated');
                }, 1000);
            }

            // –ü–æ–∫–∞–∑—É—î–º–æ –µ—Ñ–µ–∫—Ç –¥–æ–¥–∞–≤–∞–Ω–Ω—è –±—ñ–ª–µ—Ç–∞
            this.showTicketAddedEffect(raffleId);
        },

        /**
         * –ï—Ñ–µ–∫—Ç –¥–æ–¥–∞–≤–∞–Ω–Ω—è –±—ñ–ª–µ—Ç–∞
         * @param {string} raffleId - ID —Ä–æ–∑—ñ–≥—Ä–∞—à—É
         */
        showTicketAddedEffect: function(raffleId) {
            const button = document.querySelector(`.join-button[data-raffle-id="${raffleId}"], .mini-raffle-button[data-raffle-id="${raffleId}"]`);
            if (!button) return;

            // –°—Ç–≤–æ—Ä—é—î–º–æ –µ–ª–µ–º–µ–Ω—Ç –¥–ª—è –∞–Ω—ñ–º–∞—Ü—ñ—ó
            const ticketEffect = document.createElement('div');
            ticketEffect.className = 'ticket-added-effect';
            ticketEffect.style.cssText = `
                position: absolute;
                top: -20px;
                left: 50%;
                transform: translateX(-50%);
                color: #4CAF50;
                font-weight: bold;
                font-size: 14px;
                pointer-events: none;
                z-index: 100;
            `;
            ticketEffect.textContent = '+1 –±—ñ–ª–µ—Ç';

            // –î–æ–¥–∞—î–º–æ –µ–ª–µ–º–µ–Ω—Ç –¥–æ –∫–Ω–æ–ø–∫–∏
            button.style.position = 'relative';
            button.appendChild(ticketEffect);

            // –ê–Ω—ñ–º–∞—Ü—ñ—è
            ticketEffect.classList.add('ticket-added');

            // –í–∏–¥–∞–ª—è—î–º–æ —á–µ—Ä–µ–∑ 1.5 —Å–µ–∫—É–Ω–¥–∏
            setTimeout(() => {
                if (ticketEffect.parentNode) {
                    ticketEffect.parentNode.removeChild(ticketEffect);
                }
            }, 1500);
        },

        /**
         * –î–æ–¥–∞–≤–∞–Ω–Ω—è –∫–Ω–æ–ø–æ–∫ –¥–µ—Ç–∞–ª–µ–π –¥–æ –≤—Å—ñ—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
         */
        addDetailsButtons: function() {
            // –û—Ç—Ä–∏–º—É—î–º–æ –≤—Å—ñ –∫–∞—Ä—Ç–æ—á–∫–∏ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
            const mainRaffle = document.querySelector('.main-raffle');
            const miniRaffles = document.querySelectorAll('.mini-raffle');

            // –î–æ–¥–∞—î–º–æ –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ —Ä–æ–∑—ñ–≥—Ä–∞—à—É, —è–∫—â–æ –≤—ñ–Ω —ñ—Å–Ω—É—î
            if (mainRaffle) {
                const raffleId = mainRaffle.getAttribute('data-raffle-id');
                if (raffleId) {
                    this.addDetailsButtonToRaffle(raffleId, 'main');
                }
            }

            // –î–æ–¥–∞—î–º–æ –¥–æ –º—ñ–Ω—ñ-—Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
            miniRaffles.forEach(raffle => {
                const raffleId = raffle.getAttribute('data-raffle-id');
                if (raffleId) {
                    this.addDetailsButtonToRaffle(raffleId, 'mini');
                }
            });
        },

        /**
         * –î–æ–¥–∞–≤–∞–Ω–Ω—è –∫–Ω–æ–ø–∫–∏ –¥–µ—Ç–∞–ª–µ–π –¥–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
         * –û–Ω–æ–≤–ª–µ–Ω–∞ –≤–µ—Ä—Å—ñ—è –∑ –ø—Ä–µ–º—ñ–∞–ª—å–Ω–∏–º —Å—Ç–∏–ª–µ–º
         * @param {string} raffleId - ID —Ä–æ–∑—ñ–≥—Ä–∞—à—É
         * @param {string} type - –¢–∏–ø —Ä–æ–∑—ñ–≥—Ä–∞—à—É (main/mini)
         */
        addDetailsButtonToRaffle: function(raffleId, type = 'main') {
            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —ñ—Å–Ω—É—î –≤–∂–µ –∫–Ω–æ–ø–∫–∞
            const existingButton = document.querySelector(`.details-button[data-raffle-id="${raffleId}"]`);
            if (existingButton) return;

            // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∫–Ω–æ–ø–∫–∏
            let buttonContainer;

            if (type === 'main') {
                // –î–ª—è –≥–æ–ª–æ–≤–Ω–æ–≥–æ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
                buttonContainer = document.querySelector(`.main-raffle[data-raffle-id="${raffleId}"] .main-raffle-content, .main-raffle .main-raffle-content`);
            } else {
                // –î–ª—è –º—ñ–Ω—ñ-—Ä–æ–∑—ñ–≥—Ä–∞—à—É
                buttonContainer = document.querySelector(`.mini-raffle[data-raffle-id="${raffleId}"] .mini-raffle-info`);
            }

            if (!buttonContainer) return;

            // –°—Ç–≤–æ—Ä—é—î–º–æ –∫–Ω–æ–ø–∫—É –¥–µ—Ç–∞–ª–µ–π —É –ø—Ä–µ–º—ñ–∞–ª—å–Ω–æ–º—É —Å—Ç–∏–ª—ñ
            const detailsButton = document.createElement('button');
            detailsButton.className = 'details-button premium-details-button';
            detailsButton.setAttribute('data-raffle-id', raffleId);

            // –û–Ω–æ–≤–ª–µ–Ω–∏–π HTML –¥–ª—è –∫–Ω–æ–ø–∫–∏ –∑ —ñ–∫–æ–Ω–∫–æ—é —Ç–∞ —Ç–µ–∫—Å—Ç–æ–º
            detailsButton.innerHTML = `
                <span class="premium-button-icon">
                    <svg width="16" height="16" viewBox="0 0 16 16" fill="none" stroke="white" stroke-width="1.5">
                        <circle cx="8" cy="8" r="7" />
                        <line x1="8" y1="4" x2="8" y2="8" />
                        <line x1="8" y1="11" x2="8" y2="12" />
                    </svg>
                </span>
                <span class="premium-button-text">–î–µ—Ç–∞–ª—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—É</span>
            `;

            // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ—ó
            detailsButton.addEventListener('click', (e) => {
                e.preventDefault();
                e.stopPropagation();

                // –î–æ–¥–∞—î–º–æ –µ—Ñ–µ–∫—Ç –ø—É–ª—å—Å–∞—Ü—ñ—ó –ø—Ä–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—ñ
                detailsButton.classList.add('pulse-animation');
                setTimeout(() => {
                    detailsButton.classList.remove('pulse-animation');
                }, 2000);

                // –í—ñ–¥–∫—Ä–∏–≤–∞—î–º–æ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ –∑ –¥–µ—Ç–∞–ª—è–º–∏ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
                if (window.WinixRaffles.active && typeof window.WinixRaffles.active.showRaffleDetails === 'function') {
                    window.WinixRaffles.active.showRaffleDetails(raffleId);
                } else if (window.showRaffleDetailsModal) {
                    // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –¥–∞–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
                    const raffle = window.WinixRaffles.state.activeRaffles?.find(r => r.id === raffleId);
                    if (raffle) {
                        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –±–µ—Ä–µ —É—á–∞—Å—Ç—å
                        const isParticipating = window.WinixRaffles.participation &&
                                             window.WinixRaffles.participation.participatingRaffles &&
                                             window.WinixRaffles.participation.participatingRaffles.has(raffleId);

                        const ticketCount = window.WinixRaffles.participation &&
                                           window.WinixRaffles.participation.userRaffleTickets &&
                                           window.WinixRaffles.participation.userRaffleTickets[raffleId] || 0;

                        window.showRaffleDetailsModal(raffle, isParticipating, ticketCount);
                    } else {
                        window.showToast('–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–Ω–∞–π—Ç–∏ –¥–∞–Ω—ñ –ø—Ä–æ —Ä–æ–∑—ñ–≥—Ä–∞—à', 'error');
                    }
                }
            });

            // –î–æ–¥–∞—î–º–æ –∫–Ω–æ–ø–∫—É –¥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
            buttonContainer.appendChild(detailsButton);
        },

        /**
         * –§–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è –¥–∞—Ç–∏ —ñ —á–∞—Å—É
         * @param {string|Date} dateTime - –î–∞—Ç–∞ —ñ —á–∞—Å
         * @returns {string} –í—ñ–¥—Ñ–æ—Ä–º–∞—Ç–æ–≤–∞–Ω–∞ –¥–∞—Ç–∞ —ñ —á–∞—Å
         */
        formatDateTime: function(dateTime) {
            if (!dateTime) return '–ù–µ–≤—ñ–¥–æ–º–æ';

            try {
                const date = new Date(dateTime);
                return `${date.getDate().toString().padStart(2, '0')}.${(date.getMonth() + 1).toString().padStart(2, '0')}.${date.getFullYear()} ${date.getHours().toString().padStart(2, '0')}:${date.getMinutes().toString().padStart(2, '0')}`;
            } catch (e) {
                return '–ù–µ–≤—ñ–¥–æ–º–æ';
            }
        },

        /**
         * –û–Ω–æ–≤–ª–µ–Ω–Ω—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
         * @param {Object} userData - –î–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
         */
        updateUserBalanceDisplay: function(userData) {
            if (!userData) return;

            // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∂–µ—Ç–æ–Ω—ñ–≤
            const userCoinsElement = document.getElementById('user-coins');
            if (userCoinsElement && userData.coins !== undefined) {
                const currentCoins = parseInt(userCoinsElement.textContent);
                const newCoins = userData.coins;

                // –ê–Ω—ñ–º–∞—Ü—ñ—è –∑–º—ñ–Ω–∏, —è–∫—â–æ –∑–Ω–∞—á–µ–Ω–Ω—è –≤—ñ–¥—Ä—ñ–∑–Ω—è—î—Ç—å—Å—è
                if (currentCoins !== newCoins) {
                    // –î–æ–¥–∞—î–º–æ –∫–ª–∞—Å –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ —Ç–æ–≥–æ, –∑–±—ñ–ª—å—à—É—î—Ç—å—Å—è —á–∏ –∑–º–µ–Ω—à—É—î—Ç—å—Å—è –∑–Ω–∞—á–µ–Ω–Ω—è
                    if (newCoins > currentCoins) {
                        userCoinsElement.classList.add('increasing');
                        setTimeout(() => userCoinsElement.classList.remove('increasing'), 1000);
                    } else if (newCoins < currentCoins) {
                        userCoinsElement.classList.add('decreasing');
                        setTimeout(() => userCoinsElement.classList.remove('decreasing'), 1000);
                    }

                    userCoinsElement.textContent = newCoins;
                    userCoinsElement.classList.add('element-updated');

                    // –í–∏–¥–∞–ª—è—î–º–æ –∫–ª–∞—Å —á–µ—Ä–µ–∑ 1 —Å–µ–∫—É–Ω–¥—É
                    setTimeout(() => {
                        userCoinsElement.classList.remove('element-updated');
                    }, 1000);
                }
            }

            // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É
            const userTokensElement = document.getElementById('user-tokens');
            if (userTokensElement && userData.balance !== undefined) {
                const currentBalance = parseFloat(userTokensElement.textContent.replace(/\s+/g, ''));
                const newBalance = userData.balance;

                // –ê–Ω—ñ–º–∞—Ü—ñ—è –∑–º—ñ–Ω–∏, —è–∫—â–æ –∑–Ω–∞—á–µ–Ω–Ω—è –≤—ñ–¥—Ä—ñ–∑–Ω—è—î—Ç—å—Å—è
                if (currentBalance !== newBalance) {
                    userTokensElement.textContent = this.formatNumberWithSpaces(newBalance);
                    userTokensElement.classList.add('element-updated');

                    // –í–∏–¥–∞–ª—è—î–º–æ –∫–ª–∞—Å —á–µ—Ä–µ–∑ 1 —Å–µ–∫—É–Ω–¥—É
                    setTimeout(() => {
                        userTokensElement.classList.remove('element-updated');
                    }, 1000);
                }
            }
        },

        /**
         * –§–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è —á–∏—Å–ª–∞ –∑ –ø—Ä–æ–±—ñ–ª–∞–º–∏
         * @param {number} number - –ß–∏—Å–ª–æ –¥–ª—è —Ñ–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è
         * @returns {string} –í—ñ–¥—Ñ–æ—Ä–º–∞—Ç–æ–≤–∞–Ω–µ —á–∏—Å–ª–æ
         */
        formatNumberWithSpaces: function(number) {
            return number.toString().replace(/\B(?=(\d{3})+(?!\d))/g, " ");
        },

        /**
         * –ü–ª–∞–Ω—É–≤–∞–Ω–Ω—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É –∑ –∑–∞—Ç—Ä–∏–º–∫–æ—é
         */
        scheduleUIUpdate: function() {
            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –º–∏–Ω—É–ª–æ –¥–æ—Å—Ç–∞—Ç–Ω—å–æ —á–∞—Å—É –∑ –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
            const now = Date.now();
            if (now - this.lastUpdateTime < this.minUpdateInterval) {
                // –Ø–∫—â–æ —Ç–∞–π–º–∞—É—Ç –≤–∂–µ —ñ—Å–Ω—É—î, –Ω–µ —Å—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤–∏–π
                if (this.updateDebounceTimeout) return;

                // –ü–ª–∞–Ω—É–≤–∞–Ω–Ω—è –∑ –∑–∞—Ç—Ä–∏–º–∫–æ—é
                this.updateDebounceTimeout = setTimeout(() => {
                    this.performUIUpdate();
                    this.updateDebounceTimeout = null;
                }, this.minUpdateInterval);

                return;
            }

            // –í–∏–∫–æ–Ω—É—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –Ω–µ–≥–∞–π–Ω–æ
            this.performUIUpdate();
        },

        /**
         * –í–∏–∫–æ–Ω–∞–Ω–Ω—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É
         */
        performUIUpdate: function() {
            // –û–Ω–æ–≤–ª—é—î–º–æ —á–∞—Å –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
            this.lastUpdateTime = Date.now();
            this.updateCounter++;

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å –Ω–µ –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–æ
            if (this.isUILocked) return;

            // –û–Ω–æ–≤–ª—é—î–º–æ –∫–Ω–æ–ø–∫–∏ —É—á–∞—Å—Ç—ñ
            if (window.WinixRaffles.participation &&
                typeof window.WinixRaffles.participation.updateParticipationButtons === 'function') {
                window.WinixRaffles.participation.updateParticipationButtons();
            }

            // –î–æ–¥–∞—î–º–æ –∫–Ω–æ–ø–∫–∏ –¥–µ—Ç–∞–ª–µ–π
            this.addDetailsButtons();

            // –î–û–î–ê–ù–û: –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑—É—î–º–æ –∑ —Å–µ—Ä–≤–µ—Ä–æ–º, –∞–ª–µ –∑ –∑–∞—Ç—Ä–∏–º–∫–æ—é
            setTimeout(() => {
                this.syncUIWithServer();
            }, 500);
        },

        /**
         * –ë–ª–æ–∫—É–≤–∞–Ω–Ω—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É
         */
        lockUI: function() {
            this.isUILocked = true;
        },

        /**
         * –†–æ–∑–±–ª–æ–∫—É–≤–∞–Ω–Ω—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É
         */
        unlockUI: function() {
            this.isUILocked = false;

            // –í—ñ–¥—Ä–∞–∑—É –æ–Ω–æ–≤–ª—é—î–º–æ –ø—ñ—Å–ª—è —Ä–æ–∑–±–ª–æ–∫—É–≤–∞–Ω–Ω—è
            this.scheduleUIUpdate();
        }
    };

    // –î–æ–¥–∞—î–º–æ –º–æ–¥—É–ª—å –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–æ–¥—É–ª—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
    window.WinixRaffles.interfaceUpdater = interfaceUpdater;

    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –º–æ–¥—É–ª—è –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
    document.addEventListener('DOMContentLoaded', function() {
        if (window.WinixRaffles.state.isInitialized) {
            interfaceUpdater.init();
        } else {
            // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ—ó —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
            document.addEventListener('winix-raffles-initialized', function() {
                interfaceUpdater.init();
            });
        }
    });

    console.log('‚úÖ –ú–æ–¥—É–ª—å –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É —É—Å–ø—ñ—à–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ');
})();