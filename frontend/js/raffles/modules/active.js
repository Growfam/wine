/**
 * active.js - –ú–æ–¥—É–ª—å –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ –∞–∫—Ç–∏–≤–Ω–∏–º–∏ —Ä–æ–∑—ñ–≥—Ä–∞—à–∞–º–∏ WINIX
 */

import WinixRaffles from '../globals.js';
import api from '../services/api.js';
import {
    showLoading,
    hideLoading,
    showToast
} from '../utils/ui-helpers.js';
import {
    formatTimeLeft,
    calculateProgressByTime,
    generatePrizeDistributionHTML
} from '../utils/formatters.js';

// –ü—Ä–∏–≤–∞—Ç–Ω—ñ –∑–º—ñ–Ω–Ω—ñ
let _activeRaffles = null;
let _isLoading = false;
let _lastRafflesUpdateTime = 0;
const RAFFLES_CACHE_TTL = 60000; // 1 —Ö–≤–∏–ª–∏–Ω–∞
let _loadingTimeoutId = null;
let _timerIntervals = [];

/**
 * –ú–æ–¥—É–ª—å –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
 */
class ActiveRaffles {
    /**
     * –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –º–æ–¥—É–ª—è
     */
    init() {
        console.log("üéÆ –ê–∫—Ç–∏–≤–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ: –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è...");

        try {
            // –û–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π –¥–ª—è –ø–µ—Ä–µ–º–∏–∫–∞–Ω–Ω—è –≤–∫–ª–∞–¥–æ–∫
            const tabButtons = document.querySelectorAll('.tab-button');
            if (tabButtons.length > 0) {
                console.log(`–ó–Ω–∞–π–¥–µ–Ω–æ ${tabButtons.length} –∫–Ω–æ–ø–æ–∫ –≤–∫–ª–∞–¥–æ–∫`);
                tabButtons.forEach(button => {
                    if (button) {
                        button.addEventListener('click', () => {
                            const tabName = button.getAttribute('data-tab');
                            if (tabName) {
                                this.switchTab(tabName);
                            }
                        });
                    }
                });
            }

            // –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
            this.getActiveRaffles().then(() => {
                // –í—ñ–¥–æ–±—Ä–∞–∂–∞—î–º–æ –∞–∫—Ç–∏–≤–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ
                this.displayRaffles();
            }).catch(error => {
                console.error("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤:", error);
                // –°–∫–∏–¥–∞—î–º–æ –≤—Å—ñ —Å—Ç–∞–Ω–∏ —É –≤–∏–ø–∞–¥–∫—É –ø–æ–º–∏–ª–∫–∏
                this.resetAllStates();
            });

            // –ù–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ –∫–Ω–æ–ø–∫–∏ —É—á–∞—Å—Ç—ñ –¥–ª—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
            this._setupRaffleButtons();

            // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π –¥–ª—è –∫–æ–º—É–Ω—ñ–∫–∞—Ü—ñ—ó –∑ —ñ–Ω—à–∏–º–∏ –º–æ–¥—É–ª—è–º–∏
            this._setupEventListeners();

            console.log("‚úÖ –ê–∫—Ç–∏–≤–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ: –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—é –∑–∞–≤–µ—Ä—à–µ–Ω–æ");
        } catch (error) {
            console.error("‚ùå –ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó –º–æ–¥—É–ª—è –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤:", error);
            this.resetAllStates();
        }
    }

    /**
     * –û—Ç—Ä–∏–º–∞–Ω–Ω—è –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ –∑ API
     * @param {boolean} forceRefresh - –ü—Ä–∏–º—É—Å–æ–≤–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö
     * @returns {Promise<Array>} –°–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
     */
    async getActiveRaffles(forceRefresh = false) {
        try {
            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∫–µ—à
            const now = Date.now();
            if (!forceRefresh && _activeRaffles && (now - _lastRafflesUpdateTime < RAFFLES_CACHE_TTL)) {
                console.log("üìã Raffles: –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –∫–µ—à–æ–≤–∞–Ω–∏—Ö –¥–∞–Ω–∏—Ö –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤");
                return _activeRaffles;
            }

            // –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ —Å–∫–∏–¥–∞–Ω–Ω—è –∑–∞–≤–∏—Å–∞—é—á–∏—Ö –∑–∞–ø–∏—Ç—ñ–≤
            if (_isLoading && (now - _lastRafflesUpdateTime > 30000)) {
                console.warn("‚ö†Ô∏è Raffles: –í–∏—è–≤–ª–µ–Ω–æ –ø–æ—Ç–µ–Ω—Ü—ñ–π–Ω–æ –∑–∞–≤–∏—Å–∞—é—á–∏–π –∑–∞–ø–∏—Ç —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤, —Å–∫–∏–¥–∞—î–º–æ —Å—Ç–∞–Ω");
                _isLoading = false;
                if (_loadingTimeoutId) {
                    clearTimeout(_loadingTimeoutId);
                    _loadingTimeoutId = null;
                }
            }

            if (_isLoading) {
                console.log("‚è≥ Raffles: –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ –≤–∂–µ –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è");
                return _activeRaffles || [];
            }

            _isLoading = true;
            _lastRafflesUpdateTime = now;

            // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Ç–∞–π–º–∞—É—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ–≥–æ —Å–∫–∏–¥–∞–Ω–Ω—è
            if (_loadingTimeoutId) {
                clearTimeout(_loadingTimeoutId);
            }
            _loadingTimeoutId = setTimeout(() => {
                if (_isLoading) {
                    console.warn("‚ö†Ô∏è Raffles: –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ —Ç—Ä–∏–≤–∞—î –∑–∞–Ω–∞–¥—Ç–æ –¥–æ–≤–≥–æ, —Å–∫–∏–¥–∞—î–º–æ —Å—Ç–∞–Ω");
                    _isLoading = false;
                }
            }, 30000); // 30 —Å–µ–∫—É–Ω–¥

            // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Ü–µ–Ω—Ç—Ä–∞–ª—ñ–∑–æ–≤–∞–Ω–µ —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –ª–æ–∞–¥–µ—Ä–æ–º
            showLoading('–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤...', 'active-raffles');

            // –í–∏–∫–æ–Ω—É—î–º–æ –∑–∞–ø–∏—Ç –¥–æ API
            const response = await api.apiRequest('/api/raffles', 'GET', null, {
                timeout: 15000,
                suppressErrors: true,
                forceCleanup: forceRefresh
            });

            // –ó–ê–í–ñ–î–ò –ø—Ä–∏—Ö–æ–≤—É—î–º–æ –ª–æ–∞–¥–µ—Ä —ñ —Å–∫–∏–¥–∞—î–º–æ –ø—Ä–∞–ø–æ—Ä–µ—Ü—å
            hideLoading('active-raffles');
            _isLoading = false;

            // –û—á–∏—â–∞—î–º–æ —Ç–∞–π–º–∞—É—Ç
            if (_loadingTimeoutId) {
                clearTimeout(_loadingTimeoutId);
                _loadingTimeoutId = null;
            }

            if (response && response.status === 'success') {
                _activeRaffles = Array.isArray(response.data) ? response.data : [];
                _lastRafflesUpdateTime = now;

                console.log(`‚úÖ Raffles: –û—Ç—Ä–∏–º–∞–Ω–æ ${_activeRaffles.length} –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤`);

                // –ì–µ–Ω–µ—Ä—É—î–º–æ –ø–æ–¥—ñ—é –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
                if (WinixRaffles && WinixRaffles.events) {
                    WinixRaffles.events.emit('raffles-updated', {
                        count: _activeRaffles.length,
                        data: _activeRaffles
                    });
                }

                return _activeRaffles;
            } else {
                // –ö—Ä–∞—â–∞ –æ–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–æ–∫
                console.error("‚ùå Raffles: –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤:", response?.message || "–ù–µ–≤—ñ–¥–æ–º–∞ –ø–æ–º–∏–ª–∫–∞");

                // –Ø–∫—â–æ —î –∫–µ—à–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —ó—Ö
                if (_activeRaffles) {
                    console.warn("üìã Raffles: –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –∫–µ—à–æ–≤–∞–Ω–∏—Ö –¥–∞–Ω–∏—Ö –ø—ñ—Å–ª—è –ø–æ–º–∏–ª–∫–∏");
                    return _activeRaffles;
                }

                throw new Error((response && response.message) || '–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤');
            }
        } catch (error) {
            console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤:', error);

            // –ó–ê–í–ñ–î–ò —Å–∫–∏–¥–∞—î–º–æ –ø—Ä–∞–ø–æ—Ä—Ü—ñ
            hideLoading('active-raffles');
            _isLoading = false;

            if (_loadingTimeoutId) {
                clearTimeout(_loadingTimeoutId);
                _loadingTimeoutId = null;
            }

            // –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É
            showToast('–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.', 'error');

            // –ì–µ–Ω–µ—Ä—É—î–º–æ –ø–æ–¥—ñ—é –ø—Ä–æ –ø–æ–º–∏–ª–∫—É
            if (WinixRaffles && WinixRaffles.events) {
                WinixRaffles.events.emit('raffles-error', {
                    message: error.message || '–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤',
                    error
                });
            }

            // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –∫–µ—à–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ —É –≤–∏–ø–∞–¥–∫—É –ø–æ–º–∏–ª–∫–∏
            return _activeRaffles || [];
        }
    }

    /**
     * –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
     */
    async displayRaffles() {
        console.log("üéÆ Raffles: –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤");

        // –û—Ç—Ä–∏–º—É—î–º–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏ –¥–ª—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
        const mainRaffleContainer = document.querySelector('.main-raffle');
        const miniRafflesContainer = document.querySelector('.mini-raffles-container');

        if (!mainRaffleContainer && !miniRafflesContainer) {
            console.error("‚ùå Raffles: –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏ –¥–ª—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤");
            return;
        }

        // –ü–æ–∫–∞–∑—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
        showLoading('–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤...', 'active-raffles-display');

        try {
            // –û—Ç—Ä–∏–º—É—î–º–æ –∞–∫—Ç–∏–≤–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ
            const raffles = await this.getActiveRaffles(true);

            // –ü—Ä–∏—Ö–æ–≤—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
            hideLoading('active-raffles-display');

            if (!raffles || raffles.length === 0) {
                console.log("‚ÑπÔ∏è Raffles: –ê–∫—Ç–∏–≤–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ");

                // –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –≤—ñ–¥—Å—É—Ç–Ω—ñ—Å—Ç—å —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
                if (mainRaffleContainer) {
                    mainRaffleContainer.innerHTML = `
                        <div class="empty-raffles">
                            <div class="empty-raffles-icon">üéÆ</div>
                            <h3>–ù–µ–º–∞—î –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤</h3>
                            <p>–ù–∞ –¥–∞–Ω–∏–π –º–æ–º–µ–Ω—Ç –Ω–µ–º–∞—î –¥–æ—Å—Ç—É–ø–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ!</p>
                        </div>
                    `;
                }

                // –û—á–∏—â–∞—î–º–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –º—ñ–Ω—ñ-—Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
                if (miniRafflesContainer) {
                    miniRafflesContainer.innerHTML = '';
                    // –î–æ–¥–∞—î–º–æ –µ–ª–µ–º–µ–Ω—Ç –¥–ª—è –±–æ–Ω—É—Å—É –Ω–æ–≤–∞—á–∫–∞
                    this._addNewbieBonusElement(miniRafflesContainer);
                }

                return;
            }

            // –°—Ç–≤–æ—Ä—é—î–º–æ —Å–ø–∏—Å–æ–∫ –æ—Å–Ω–æ–≤–Ω–∏—Ö —ñ –º—ñ–Ω—ñ-—Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
            const mainRaffles = Array.isArray(raffles) ?
                raffles.filter(raffle => raffle && raffle.is_daily === false) : [];
            const miniRaffles = Array.isArray(raffles) ?
                raffles.filter(raffle => raffle && raffle.is_daily === true) : [];

            // –í—ñ–¥–æ–±—Ä–∞–∂–∞—î–º–æ –æ—Å–Ω–æ–≤–Ω–∏–π —Ä–æ–∑—ñ–≥—Ä–∞—à
            if (mainRaffleContainer && mainRaffles.length > 0) {
                this._displayMainRaffle(mainRaffleContainer, mainRaffles[0]);
            } else if (mainRaffleContainer) {
                // –Ø–∫—â–æ –Ω–µ–º–∞—î –æ—Å–Ω–æ–≤–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤, –ø–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
                mainRaffleContainer.innerHTML = `
                    <div class="empty-main-raffle">
                        <div class="empty-raffles-icon">üéÆ</div>
                        <h3>–ù–µ–º–∞—î –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤</h3>
                        <p>–°–∫–æ—Ä–æ –±—É–¥—É—Ç—å –Ω–æ–≤—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ. –°–ª—ñ–¥–∫—É–π—Ç–µ –∑–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è–º–∏!</p>
                    </div>
                `;
            }

            // –í—ñ–¥–æ–±—Ä–∞–∂–∞—î–º–æ –º—ñ–Ω—ñ-—Ä–æ–∑—ñ–≥—Ä–∞—à—ñ
            if (miniRafflesContainer) {
                // –û—á–∏—â–∞—î–º–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
                miniRafflesContainer.innerHTML = '';

                if (miniRaffles.length > 0) {
                    // –î–æ–¥–∞—î–º–æ –∫–æ–∂–µ–Ω –º—ñ–Ω—ñ-—Ä–æ–∑—ñ–≥—Ä–∞—à
                    miniRaffles.forEach(raffle => {
                        if (raffle) {
                            const miniRaffleElement = this._createMiniRaffleElement(raffle);
                            if (miniRaffleElement) {
                                miniRafflesContainer.appendChild(miniRaffleElement);
                            }
                        }
                    });
                } else {
                    // –î–æ–¥–∞—î–º–æ –µ–ª–µ–º–µ–Ω—Ç –¥–ª—è –±–æ–Ω—É—Å—É –Ω–æ–≤–∞—á–∫–∞, —è–∫—â–æ –º—ñ–Ω—ñ-—Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ –Ω–µ–º–∞—î
                    this._addNewbieBonusElement(miniRafflesContainer);
                }
            }

            // –ê–∫—Ç–∏–≤—É—î–º–æ —Ç–∞–π–º–µ—Ä–∏
            this._startRaffleTimers();

            // –ì–µ–Ω–µ—Ä—É—î–º–æ –ø–æ–¥—ñ—é –ø—Ä–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è
            if (WinixRaffles && WinixRaffles.events) {
                WinixRaffles.events.emit('raffles-displayed', {
                    mainCount: mainRaffles.length,
                    miniCount: miniRaffles.length
                });
            }
        } catch (error) {
            console.error("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤:", error);
            hideLoading('active-raffles-display');

            // –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É
            showToast('–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.', 'error');

            if (mainRaffleContainer) {
                mainRaffleContainer.innerHTML = `
                    <div class="empty-raffles">
                        <div class="empty-raffles-icon">‚ùå</div>
                        <h3>–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è</h3>
                        <p>–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Å–ø—Ä–æ–±—ñ –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ. –°–ø—Ä–æ–±—É–π—Ç–µ –æ–Ω–æ–≤–∏—Ç–∏ —Å—Ç–æ—Ä—ñ–Ω–∫—É.</p>
                        <button class="join-raffle-btn" onclick="location.reload()">–û–Ω–æ–≤–∏—Ç–∏ —Å—Ç–æ—Ä—ñ–Ω–∫—É</button>
                    </div>
                `;
            }
        }
    }

    /**
     * –§—É–Ω–∫—Ü—ñ—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–Ω—è –≤–∫–ª–∞–¥–æ–∫
     * @param {string} tabName - –ù–∞–∑–≤–∞ –≤–∫–ª–∞–¥–∫–∏ –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü—ñ—ó
     */
    switchTab(tabName) {
        if (!tabName) {
            console.error("–ù–∞–∑–≤–∞ –≤–∫–ª–∞–¥–∫–∏ –Ω–µ –≤–∫–∞–∑–∞–Ω–∞");
            return;
        }

        console.log(`üéÆ Raffles: –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–Ω—è –Ω–∞ –≤–∫–ª–∞–¥–∫—É ${tabName}`);

        try {
            // –û–Ω–æ–≤–ª—é—î–º–æ –∞–∫—Ç–∏–≤–Ω—É –≤–∫–ª–∞–¥–∫—É
            const tabButtons = document.querySelectorAll('.tab-button');
            const tabSections = document.querySelectorAll('.tab-content');

            // –ó–Ω—ñ–º–∞—î–º–æ –∞–∫—Ç–∏–≤–Ω–∏–π —Å—Ç–∞–Ω –∑ —É—Å—ñ—Ö –≤–∫–ª–∞–¥–æ–∫ —ñ —Å–µ–∫—Ü—ñ–π
            if (tabButtons && tabButtons.length > 0) {
                tabButtons.forEach(btn => {
                    if (btn) btn.classList.remove('active');
                });
            }

            if (tabSections && tabSections.length > 0) {
                tabSections.forEach(section => {
                    if (section) section.classList.remove('active');
                });
            }

            // –î–æ–¥–∞—î–º–æ –∞–∫—Ç–∏–≤–Ω–∏–π —Å—Ç–∞–Ω –¥–æ –≤–∏–±—Ä–∞–Ω–æ—ó –≤–∫–ª–∞–¥–∫–∏ —ñ —Å–µ–∫—Ü—ñ—ó
            const activeTabButton = document.querySelector(`.tab-button[data-tab="${tabName}"]`);
            const activeTabSection = document.getElementById(`${tabName}-raffles`);

            if (activeTabButton) activeTabButton.classList.add('active');
            if (activeTabSection) activeTabSection.classList.add('active');

            // –ì–µ–Ω–µ—Ä—É—î–º–æ –ø–æ–¥—ñ—é –ø—Ä–æ –∑–º—ñ–Ω—É –≤–∫–ª–∞–¥–∫–∏
            if (WinixRaffles && WinixRaffles.events) {
                WinixRaffles.events.emit('tab-switched', { tab: tabName });
            }

            // –Ø–∫—â–æ —Ü–µ –≤–∫–ª–∞–¥–∫–∞ –∑ —ñ—Å—Ç–æ—Ä—ñ—î—é, –ø–æ–≤—ñ–¥–æ–º–ª—è—î–º–æ —á–µ—Ä–µ–∑ –ø–æ–¥—ñ—é
            if (tabName === 'past' || tabName === 'history') {
                if (WinixRaffles && WinixRaffles.events) {
                    WinixRaffles.events.emit('history-tab-requested', {});
                }
            } else if (tabName === 'active') {
                // –û–Ω–æ–≤–ª—é—î–º–æ –∞–∫—Ç–∏–≤–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ
                this.displayRaffles();
            }
        } catch (error) {
            console.error("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–Ω—ñ –≤–∫–ª–∞–¥–æ–∫:", error);
        }
    }

    /**
     * –û—á–∏—â–µ–Ω–Ω—è –≤—Å—ñ—Ö —Å—Ç–∞–Ω—ñ–≤ –º–æ–¥—É–ª—è
     */
    resetAllStates() {
        // –°–∫–∏–¥–∞—î–º–æ –ø—Ä–∞–ø–æ—Ä—Ü—ñ
        _isLoading = false;

        // –û—á–∏—â–∞—î–º–æ —Ç–∞–π–º–∞—É—Ç–∏
        if (_loadingTimeoutId) {
            clearTimeout(_loadingTimeoutId);
            _loadingTimeoutId = null;
        }

        // –û—á–∏—â–∞—î–º–æ —ñ–Ω—Ç–µ—Ä–≤–∞–ª–∏ —Ç–∞–π–º–µ—Ä—ñ–≤
        this._stopRaffleTimers();

        // –ü—Ä–∏—Ö–æ–≤—É—î–º–æ –ª–æ–∞–¥–µ—Ä–∏
        hideLoading('active-raffles');
        hideLoading('active-raffles-display');

        // –û—á–∏—â–∞—î–º–æ –∞–∫—Ç–∏–≤–Ω—ñ –∑–∞–ø–∏—Ç–∏ —á–µ—Ä–µ–∑ API
        if (api && typeof api.forceCleanupRequests === 'function') {
            api.forceCleanupRequests();
        }

        console.log("üîÑ Raffles: –ü—Ä–∏–º—É—Å–æ–≤–µ —Å–∫–∏–¥–∞–Ω–Ω—è –≤—Å—ñ—Ö —Å—Ç–∞–Ω—ñ–≤");
        return true;
    }

    /**
     * –ó–Ω–∏—â–µ–Ω–Ω—è –º–æ–¥—É–ª—è –ø—Ä–∏ –≤–∏–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
     */
    destroy() {
        try {
            // –ó—É–ø–∏–Ω—è—î–º–æ —Ç–∞–π–º–µ—Ä–∏
            this._stopRaffleTimers();

            // –°–∫–∏–¥–∞—î–º–æ —Å—Ç–∞–Ω–∏
            this.resetAllStates();

            // –í–∏–¥–∞–ª—è—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π
            this._removeEventListeners();

            console.log("üö´ Raffles: –ú–æ–¥—É–ª—å –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ –∑–Ω–∏—â–µ–Ω–æ");
        } catch (error) {
            console.error("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–Ω–∏—â–µ–Ω–Ω—ñ –º–æ–¥—É–ª—è –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤:", error);
        }
    }

    /**
     * –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –ø–æ–¥—ñ–π –¥–ª—è –∫–æ–º—É–Ω—ñ–∫–∞—Ü—ñ—ó –º—ñ–∂ –º–æ–¥—É–ª—è–º–∏
     * @private
     */
    _setupEventListeners() {
        try {
            // –û–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ—ó —É—Å–ø—ñ—à–Ω–æ—ó —É—á–∞—Å—Ç—ñ –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ
            if (WinixRaffles && WinixRaffles.events) {
                WinixRaffles.events.on('raffle-participated', (data) => {
                    console.log('–û—Ç—Ä–∏–º–∞–Ω–æ –ø–æ–¥—ñ—é —É—á–∞—Å—Ç—ñ –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ:', data);
                    // –û–Ω–æ–≤–ª—é—î–º–æ –¥–∞–Ω—ñ –ø—ñ—Å–ª—è —É—Å–ø—ñ—à–Ω–æ—ó —É—á–∞—Å—Ç—ñ
                    this.getActiveRaffles(true).then(() => {
                        this.displayRaffles();
                    }).catch(error => {
                        console.error("–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –ø—ñ—Å–ª—è —É—á–∞—Å—Ç—ñ:", error);
                    });
                });
            }
        } catch (error) {
            console.error("–ü–æ–º–∏–ª–∫–∞ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –ø–æ–¥—ñ–π:", error);
        }
    }

    /**
     * –í–∏–¥–∞–ª–µ–Ω–Ω—è –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –ø–æ–¥—ñ–π
     * @private
     */
    _removeEventListeners() {
        // –¢—É—Ç –º–æ–∂–Ω–∞ –≤—ñ–¥–ø–∏—Å–∞—Ç–∏—Å—è –≤—ñ–¥ –ø–æ–¥—ñ–π, —è–∫—â–æ —Ü–µ –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ
        // –ù–∞—Ä–∞–∑—ñ —Ü–µ–π –º–µ—Ç–æ–¥ —î –∑–∞–≥–ª—É—à–∫–æ—é –¥–ª—è –º–∞–π–±—É—Ç–Ω—å–æ—ó —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—ó
    }

    /**
     * –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
     * @param {HTMLElement} container - –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è
     * @param {Object} raffle - –î–∞–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
     * @private
     */
    _displayMainRaffle(container, raffle) {
        if (!container || !raffle) {
            console.error("–ù–µ –≤–∫–∞–∑–∞–Ω–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∞–±–æ –¥–∞–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—É");
            return;
        }

        try {
            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –Ω–µ–æ–±—Ö—ñ–¥–Ω–∏—Ö –ø–æ–ª—ñ–≤
            const title = raffle.title || '–†–æ–∑—ñ–≥—Ä–∞—à';
            const entryFee = raffle.entry_fee || 0;
            const prizeAmount = raffle.prize_amount || 0;
            const prizeCurrency = raffle.prize_currency || 'WINIX';
            const winnersCount = raffle.winners_count || 1;
            const participantsCount = raffle.participants_count || 0;
            const raffleId = raffle.id || 'unknown';

            // –†–æ–∑—Ä–∞—Ö–æ–≤—É—î–º–æ –±–µ–∑–ø–µ—á–Ω–æ –ø—Ä–æ–≥—Ä–µ—Å
            let progressWidth = 0;
            if (raffle.start_time && raffle.end_time) {
                try {
                    progressWidth = calculateProgressByTime(raffle.start_time, raffle.end_time);
                } catch (e) {
                    console.error("–ü–æ–º–∏–ª–∫–∞ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É –ø—Ä–æ–≥—Ä–µ—Å—É:", e);
                }
            }

            // –§–æ—Ä–º—É—î–º–æ HTML –¥–ª—è —Ä–æ–∑–ø–æ–¥—ñ–ª—É –ø—Ä–∏–∑—ñ–≤
            let prizeDistributionHTML = '';
            if (raffle.prize_distribution && typeof raffle.prize_distribution === 'object') {
                try {
                    prizeDistributionHTML = generatePrizeDistributionHTML(raffle.prize_distribution);
                } catch (e) {
                    console.error("–ü–æ–º–∏–ª–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó —Ä–æ–∑–ø–æ–¥—ñ–ª—É –ø—Ä–∏–∑—ñ–≤:", e);
                    prizeDistributionHTML = '<div class="prize-item"><span class="prize-place">–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞</span></div>';
                }
            } else {
                prizeDistributionHTML = '<div class="prize-item"><span class="prize-place">–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –≤—ñ–¥—Å—É—Ç–Ω—è</span></div>';
            }

            // –°—Ç–≤–æ—Ä—é—î–º–æ HTML –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
            container.innerHTML = `
                <img class="main-raffle-image" src="${raffle.image_url || '/assets/prize-poster.gif'}" alt="${title}">
                <div class="main-raffle-content">
                    <div class="main-raffle-header">
                        <h3 class="main-raffle-title">${title}</h3>
                        <div class="main-raffle-cost">
                            <img class="token-icon" src="/assets/token-icon.png" alt="–ñ–µ—Ç–æ–Ω">
                            <span>${entryFee} –∂–µ—Ç–æ–Ω${entryFee !== 1 ? '–∏' : ''}</span>
                        </div>
                    </div>

                    <span class="main-raffle-prize">${prizeAmount} ${prizeCurrency}</span>

                    <div class="timer-container">
                        <div class="timer-block">
                            <span class="timer-value" id="days">00</span>
                            <span class="timer-label">–¥–Ω—ñ–≤</span>
                        </div>
                        <div class="timer-block">
                            <span class="timer-value" id="hours">00</span>
                            <span class="timer-label">–≥–æ–¥</span>
                        </div>
                        <div class="timer-block">
                            <span class="timer-value" id="minutes">00</span>
                            <span class="timer-label">—Ö–≤</span>
                        </div>
                    </div>

                    <div class="prize-distribution">
                        <div class="prize-distribution-title">–†–æ–∑–ø–æ–¥—ñ–ª –ø—Ä–∏–∑—ñ–≤ (${winnersCount} –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤):</div>
                        <div class="prize-list">
                            ${prizeDistributionHTML}
                        </div>
                    </div>

                    <div class="main-raffle-participants">
                        <div class="participants-info">–£—á–∞—Å–Ω–∏–∫—ñ–≤: <span class="participants-count">${participantsCount}</span></div>
                        <div class="share-container">
                            <button class="share-button" id="share-raffle-btn" data-raffle-id="${raffleId}">–ü–æ–¥—ñ–ª–∏—Ç–∏—Å—è</button>
                        </div>
                    </div>

                    <div class="progress-bar">
                        <div class="progress" style="width: ${progressWidth}%"></div>
                    </div>

                    <button class="join-button" data-raffle-id="${raffleId}" data-raffle-type="main">–í–∑—è—Ç–∏ —É—á–∞—Å—Ç—å</button>
                </div>
            `;

            // –û–Ω–æ–≤–ª—é—î–º–æ —Ç–∞–π–º–µ—Ä
            this._updateRaffleTimers();

            // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π
            const joinButton = container.querySelector('.join-button');
            if (joinButton) {
                joinButton.addEventListener('click', () => {
                    const raffleId = joinButton.getAttribute('data-raffle-id');
                    if (!raffleId) {
                        console.error("ID —Ä–æ–∑—ñ–≥—Ä–∞—à—É –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ");
                        return;
                    }

                    const raffleType = joinButton.getAttribute('data-raffle-type') || 'main';

                    // –ì–µ–Ω–µ—Ä—É—î–º–æ –ø–æ–¥—ñ—é –¥–ª—è –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è –¥–µ—Ç–∞–ª–µ–π —Ä–æ–∑—ñ–≥—Ä–∞—à—É
                    if (WinixRaffles && WinixRaffles.events) {
                        WinixRaffles.events.emit('open-raffle-details', {
                            raffleId,
                            raffleType
                        });
                    }
                });
            }

            // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ü–æ–¥—ñ–ª–∏—Ç–∏—Å—è"
            const shareButton = container.querySelector('#share-raffle-btn');
            if (shareButton) {
                shareButton.addEventListener('click', () => {
                    const raffleId = shareButton.getAttribute('data-raffle-id');
                    if (!raffleId) {
                        console.error("ID —Ä–æ–∑—ñ–≥—Ä–∞—à—É –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ");
                        return;
                    }

                    // –ì–µ–Ω–µ—Ä—É—î–º–æ –ø–æ–¥—ñ—é –¥–ª—è –ø–æ—à–∏—Ä–µ–Ω–Ω—è —Ä–æ–∑—ñ–≥—Ä–∞—à—É
                    if (WinixRaffles && WinixRaffles.events) {
                        WinixRaffles.events.emit('share-raffle', { raffleId });
                    }
                });
            }
        } catch (error) {
            console.error("–ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ä–æ–∑—ñ–≥—Ä–∞—à—É:", error);
            // –í–∏–≤–æ–¥–∏–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É —É –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
            container.innerHTML = `
                <div class="raffle-error">
                    <div class="error-icon">‚ö†Ô∏è</div>
                    <h3>–ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Ä–æ–∑—ñ–≥—Ä–∞—à—É</h3>
                    <p>–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—ñ –¥–∞–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—É.</p>
                </div>
            `;
        }
    }

    /**
     * –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç—É –º—ñ–Ω—ñ-—Ä–æ–∑—ñ–≥—Ä–∞—à—É
     * @param {Object} raffle - –î–∞–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
     * @returns {HTMLElement} –ï–ª–µ–º–µ–Ω—Ç –º—ñ–Ω—ñ-—Ä–æ–∑—ñ–≥—Ä–∞—à—É
     * @private
     */
    _createMiniRaffleElement(raffle) {
        if (!raffle) return null;

        try {
            // –°—Ç–≤–æ—Ä—é—î–º–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
            const miniRaffle = document.createElement('div');
            miniRaffle.className = 'mini-raffle';
            miniRaffle.setAttribute('data-raffle-id', raffle.id || 'unknown');

            // –†–æ–∑—Ä–∞—Ö–æ–≤—É—î–º–æ —á–∞—Å, —â–æ –∑–∞–ª–∏—à–∏–≤—Å—è
            let timeLeftText = '';
            try {
                // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å —Ç–∞ –≤–∞–ª—ñ–¥–Ω—ñ—Å—Ç—å –¥–∞—Ç–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è
                if (raffle.end_time) {
                    const now = new Date();
                    const endTime = new Date(raffle.end_time);

                    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –≤–∞–ª—ñ–¥–Ω–∞ –¥–∞—Ç–∞
                    if (!isNaN(endTime.getTime())) {
                        const timeLeft = endTime - now;

                        if (timeLeft > 0) {
                            const timeLeftData = formatTimeLeft(timeLeft, 'short');
                            timeLeftText = `–ó–∞–ª–∏—à–∏–ª–æ—Å—å: ${timeLeftData.text}`;
                        } else {
                            timeLeftText = '–ó–∞–≤–µ—Ä—à—É—î—Ç—å—Å—è';
                        }
                    } else {
                        timeLeftText = '–ß–∞—Å –Ω–µ –≤–∏–∑–Ω–∞—á–µ–Ω–æ';
                    }
                } else {
                    timeLeftText = '–ß–∞—Å –Ω–µ –≤–∏–∑–Ω–∞—á–µ–Ω–æ';
                }
            } catch (error) {
                console.error("–ü–æ–º–∏–ª–∫–∞ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É —á–∞—Å—É –º—ñ–Ω—ñ-—Ä–æ–∑—ñ–≥—Ä–∞—à—É:", error);
                timeLeftText = '–ß–∞—Å –Ω–µ –≤–∏–∑–Ω–∞—á–µ–Ω–æ';
            }

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –Ω–µ–æ–±—Ö—ñ–¥–Ω–∏—Ö –ø–æ–ª—ñ–≤
            const title = raffle.title || '–†–æ–∑—ñ–≥—Ä–∞—à';
            const entryFee = raffle.entry_fee || 0;
            const prizeAmount = raffle.prize_amount || 0;
            const prizeCurrency = raffle.prize_currency || 'WINIX';
            const winnersCount = raffle.winners_count || 1;
            const raffleId = raffle.id || 'unknown';

            // –§–æ—Ä–º–∞—Ç—É—î–º–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤
            const winnersText = `${prizeAmount} ${prizeCurrency} (${winnersCount} –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤)`;

            // –§–æ—Ä–º—É—î–º–æ HTML
            miniRaffle.innerHTML = `
                <div class="mini-raffle-info">
                    <div class="mini-raffle-title">${title}</div>
                    <div class="mini-raffle-cost">
                        <img class="token-icon" src="/assets/token-icon.png" alt="–ñ–µ—Ç–æ–Ω">
                        <span>${entryFee} –∂–µ—Ç–æ–Ω${entryFee !== 1 ? '–∏' : ''}</span>
                    </div>
                    <div class="mini-raffle-prize">${winnersText}</div>
                    <div class="mini-raffle-time">${timeLeftText}</div>
                </div>
                <button class="mini-raffle-button" data-raffle-id="${raffleId}" data-raffle-type="daily">–£—á–∞—Å—Ç—å</button>
            `;

            // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è
            const button = miniRaffle.querySelector('.mini-raffle-button');
            if (button) {
                button.addEventListener('click', (event) => {
                    if (event) {
                        event.preventDefault();
                        event.stopPropagation();
                    }

                    const raffleId = button.getAttribute('data-raffle-id');
                    if (!raffleId) {
                        console.error("ID —Ä–æ–∑—ñ–≥—Ä–∞—à—É –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ");
                        return;
                    }

                    const raffleType = button.getAttribute('data-raffle-type') || 'daily';

                    // –ì–µ–Ω–µ—Ä—É—î–º–æ –ø–æ–¥—ñ—é –¥–ª—è –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è –¥–µ—Ç–∞–ª–µ–π —Ä–æ–∑—ñ–≥—Ä–∞—à—É
                    if (WinixRaffles && WinixRaffles.events) {
                        WinixRaffles.events.emit('open-raffle-details', {
                            raffleId,
                            raffleType
                        });
                    }
                });
            }

            return miniRaffle;
        } catch (error) {
            console.error("–ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç—É –º—ñ–Ω—ñ-—Ä–æ–∑—ñ–≥—Ä–∞—à—É:", error);
            return null;
        }
    }

    /**
     * –î–æ–¥–∞–≤–∞–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç—É –±–æ–Ω—É—Å—É –Ω–æ–≤–∞—á–∫–∞
     * @param {HTMLElement} container - –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è
     * @private
     */
    _addNewbieBonusElement(container) {
        if (!container) return;

        try {
            const newbieBonus = document.createElement('div');
            newbieBonus.className = 'mini-raffle';
            newbieBonus.setAttribute('data-raffle-id', 'newbie');

            newbieBonus.innerHTML = `
                <div class="mini-raffle-info">
                    <div class="mini-raffle-title">–ë–æ–Ω—É—Å –Ω–æ–≤–∞—á–∫–∞</div>
                    <div class="mini-raffle-cost">
                        <img class="token-icon" src="/assets/token-icon.png" alt="–ñ–µ—Ç–æ–Ω">
                        <span>0 –∂–µ—Ç–æ–Ω—ñ–≤</span>
                    </div>
                    <div class="mini-raffle-prize">500 WINIX + 1 –∂–µ—Ç–æ–Ω</div>
                    <div class="mini-raffle-time">–î–æ—Å—Ç—É–ø–Ω–æ —Ç—ñ–ª—å–∫–∏ –Ω–æ–≤–∏–º –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞–º</div>
                </div>
                <button class="mini-raffle-button" data-raffle-id="newbie">–û—Ç—Ä–∏–º–∞—Ç–∏</button>
            `;

            const button = newbieBonus.querySelector('.mini-raffle-button');
            if (button) {
                button.addEventListener('click', async (event) => {
                    if (event) {
                        event.preventDefault();
                        event.stopPropagation();
                    }

                    // –ì–µ–Ω–µ—Ä—É—î–º–æ –ø–æ–¥—ñ—é –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –±–æ–Ω—É—Å—É –Ω–æ–≤–∞—á–∫–∞
                    if (WinixRaffles && WinixRaffles.events) {
                        WinixRaffles.events.emit('claim-newbie-bonus', {
                            element: button,
                            container: newbieBonus
                        });
                    }
                });
            }

            container.appendChild(newbieBonus);

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –≤–∂–µ –æ—Ç—Ä–∏–º–∞–Ω–æ –±–æ–Ω—É—Å
            try {
                if (api && typeof api.getUserData === 'function') {
                    api.getUserData()
                        .then(userData => {
                            if (userData && userData.data && userData.data.newbie_bonus_claimed) {
                                // –î–µ–∞–∫—Ç–∏–≤—É—î–º–æ –∫–Ω–æ–ø–∫—É
                                if (button) {
                                    button.textContent = '–û—Ç—Ä–∏–º–∞–Ω–æ';
                                    button.disabled = true;
                                    button.style.opacity = '0.6';
                                    button.style.cursor = 'default';
                                }

                                // –î–æ–¥–∞—î–º–æ –≤–æ–¥—è–Ω–∏–π –∑–Ω–∞–∫
                                if (WinixRaffles && WinixRaffles.utils && typeof WinixRaffles.utils.markElement === 'function') {
                                    WinixRaffles.utils.markElement(newbieBonus);
                                }
                            }
                        })
                        .catch(err => {
                            console.error("–ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å—É –±–æ–Ω—É—Å—É:", err);
                        });
                }
            } catch (error) {
                console.error("–ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å—É –±–æ–Ω—É—Å—É:", error);
            }
        } catch (error) {
            console.error("–ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç—É –±–æ–Ω—É—Å—É –Ω–æ–≤–∞—á–∫–∞:", error);
        }
    }

    /**
     * –ó–∞–ø—É—Å–∫ —Ç–∞–π–º–µ—Ä—ñ–≤ –¥–ª—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
     * @private
     */
    _startRaffleTimers() {
        // –û—á–∏—â–∞—î–º–æ —ñ—Å–Ω—É—é—á—ñ —Ç–∞–π–º–µ—Ä–∏
        this._stopRaffleTimers();

        // –ó–∞–ø—É—Å–∫–∞—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–∞–π–º–µ—Ä—ñ–≤ –∫–æ–∂–Ω—É —Ö–≤–∏–ª–∏–Ω—É
        const interval = setInterval(() => this._updateRaffleTimers(), 60000);
        _timerIntervals.push(interval);

        // –í—ñ–¥—Ä–∞–∑—É –∑–∞–ø—É—Å–∫–∞—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
        this._updateRaffleTimers();
    }

    /**
     * –ó—É–ø–∏–Ω–∫–∞ —Ç–∞–π–º–µ—Ä—ñ–≤
     * @private
     */
    _stopRaffleTimers() {
        if (_timerIntervals && _timerIntervals.length > 0) {
            _timerIntervals.forEach(interval => {
                if (interval) {
                    clearInterval(interval);
                }
            });
            _timerIntervals = [];
        }
    }

    /**
     * –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–∞–π–º–µ—Ä—ñ–≤ –¥–ª—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
     * @private
     */
    _updateRaffleTimers() {
        try {
            // –û–Ω–æ–≤–ª—é—î–º–æ —Ç–∞–π–º–µ—Ä –≥–æ–ª–æ–≤–Ω–æ–≥–æ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
            const daysElement = document.querySelector('#days');
            const hoursElement = document.querySelector('#hours');
            const minutesElement = document.querySelector('#minutes');

            if (daysElement && hoursElement && minutesElement &&
                _activeRaffles && Array.isArray(_activeRaffles) && _activeRaffles.length > 0) {

                // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –æ—Å–Ω–æ–≤–Ω–∏–π —Ä–æ–∑—ñ–≥—Ä–∞—à
                const mainRaffle = _activeRaffles.find(raffle => raffle && raffle.is_daily === false);

                if (mainRaffle && mainRaffle.end_time) {
                    try {
                        const now = new Date();
                        const endTime = new Date(mainRaffle.end_time);

                        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –≤–∞–ª—ñ–¥–Ω–∞ –¥–∞—Ç–∞
                        if (!isNaN(endTime.getTime())) {
                            const timeLeft = endTime - now;

                            if (timeLeft > 0) {
                                const timeLeftData = formatTimeLeft(timeLeft);
                                daysElement.textContent = timeLeftData.days;
                                hoursElement.textContent = timeLeftData.hours;
                                minutesElement.textContent = timeLeftData.minutes;
                            } else {
                                daysElement.textContent = '00';
                                hoursElement.textContent = '00';
                                minutesElement.textContent = '00';

                                // –†–æ–∑—ñ–≥—Ä–∞—à –∑–∞–≤–µ—Ä—à–µ–Ω–æ, –æ–Ω–æ–≤–ª—é—î–º–æ –¥–∞–Ω—ñ
                                this.getActiveRaffles(true).then(() => {
                                    this.displayRaffles();
                                }).catch(err => {
                                    console.error("–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –ø—ñ—Å–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è —Ç–∞–π–º–µ—Ä–∞:", err);
                                });
                            }
                        } else {
                            daysElement.textContent = '00';
                            hoursElement.textContent = '00';
                            minutesElement.textContent = '00';
                        }
                    } catch (error) {
                        console.error("–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–∞–π–º–µ—Ä–∞ –≥–æ–ª–æ–≤–Ω–æ–≥–æ —Ä–æ–∑—ñ–≥—Ä–∞—à—É:", error);
                        daysElement.textContent = '00';
                        hoursElement.textContent = '00';
                        minutesElement.textContent = '00';
                    }
                }
            }

            // –û–Ω–æ–≤–ª—é—î–º–æ —Ç–∞–π–º–µ—Ä–∏ –º—ñ–Ω—ñ-—Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
            const miniRaffleTimeElements = document.querySelectorAll('.mini-raffle-time');

            if (miniRaffleTimeElements && miniRaffleTimeElements.length > 0 &&
                _activeRaffles && Array.isArray(_activeRaffles) && _activeRaffles.length > 0) {

                // –ó–Ω–∞—Ö–æ–¥–∏–º–æ —â–æ–¥–µ–Ω–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ
                const dailyRaffles = _activeRaffles.filter(raffle => raffle && raffle.is_daily === true);

                if (dailyRaffles.length > 0) {
                    const miniRaffles = document.querySelectorAll('.mini-raffle');

                    if (miniRaffles && miniRaffles.length > 0) {
                        miniRaffles.forEach(raffleElement => {
                            if (!raffleElement) return;

                            const raffleId = raffleElement.getAttribute('data-raffle-id');
                            const timeElement = raffleElement.querySelector('.mini-raffle-time');

                            if (!timeElement || !raffleId || raffleId === 'newbie') return;

                            const raffle = dailyRaffles.find(r => r && r.id === raffleId);
                            if (!raffle || !raffle.end_time) return;

                            try {
                                const now = new Date();
                                const endTime = new Date(raffle.end_time);

                                // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –≤–∞–ª—ñ–¥–Ω–∞ –¥–∞—Ç–∞
                                if (!isNaN(endTime.getTime())) {
                                    const timeLeft = endTime - now;

                                    if (timeLeft > 0) {
                                        const timeLeftData = formatTimeLeft(timeLeft, 'short');
                                        timeElement.textContent = `–ó–∞–ª–∏—à–∏–ª–æ—Å—å: ${timeLeftData.text}`;
                                    } else {
                                        timeElement.textContent = '–ó–∞–≤–µ—Ä—à—É—î—Ç—å—Å—è';

                                        // –†–æ–∑—ñ–≥—Ä–∞—à –∑–∞–≤–µ—Ä—à–µ–Ω–æ, –æ–Ω–æ–≤–ª—é—î–º–æ –¥–∞–Ω—ñ
                                        this.getActiveRaffles(true).then(() => {
                                            this.displayRaffles();
                                        }).catch(err => {
                                            console.error("–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –ø—ñ—Å–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è —Ç–∞–π–º–µ—Ä–∞ –º—ñ–Ω—ñ-—Ä–æ–∑—ñ–≥—Ä–∞—à—É:", err);
                                        });
                                    }
                                } else {
                                    timeElement.textContent = '–ß–∞—Å –Ω–µ –≤–∏–∑–Ω–∞—á–µ–Ω–æ';
                                }
                            } catch (error) {
                                console.error("–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–∞–π–º–µ—Ä–∞ –º—ñ–Ω—ñ-—Ä–æ–∑—ñ–≥—Ä–∞—à—É:", error);
                                timeElement.textContent = '–ß–∞—Å –Ω–µ –≤–∏–∑–Ω–∞—á–µ–Ω–æ';
                            }
                        });
                    }
                }
            }
        } catch (error) {
            console.error("–ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–∞–π–º–µ—Ä—ñ–≤:", error);
        }
    }

    /**
     * –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∫–Ω–æ–ø–æ–∫ —É—á–∞—Å—Ç—ñ —É —Ä–æ–∑—ñ–≥—Ä–∞—à–∞—Ö
     * @private
     */
    _setupRaffleButtons() {
        // –ö–Ω–æ–ø–∫–∏ –æ–±—Ä–æ–±–ª—è—é—Ç—å—Å—è —á–µ—Ä–µ–∑ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π, —â–æ –≤—ñ–¥–ø—Ä–∞–≤–ª—è—é—Ç—å –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–æ —ñ–Ω—à–∏—Ö –º–æ–¥—É–ª—ñ–≤
        // –¶–µ–π –º–µ—Ç–æ–¥ —î –∑–∞–≥–ª—É—à–∫–æ—é –¥–ª—è –º–∞–π–±—É—Ç–Ω—å–æ—ó —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—ó
    }
}

// –°—Ç–≤–æ—Ä—é—î–º–æ –µ–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—É
const activeRafflesModule = new ActiveRaffles();

// –î–æ–¥–∞—î–º–æ –≤ –≥–ª–æ–±–∞–ª—å–Ω–∏–π –æ–±'—î–∫—Ç –¥–ª—è –∑–≤–æ—Ä–æ—Ç–Ω–æ—ó —Å—É–º—ñ—Å–Ω–æ—Å—Ç—ñ
if (WinixRaffles) {
    WinixRaffles.active = activeRafflesModule;
}

console.log("üéÆ WINIX Raffles: –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –º–æ–¥—É–ª—è –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤");

// –ï–∫—Å–ø–æ—Ä—Ç—É—î–º–æ –º–æ–¥—É–ª—å –¥–ª—è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –≤ —ñ–Ω—à–∏—Ö —Ñ–∞–π–ª–∞—Ö
export default activeRafflesModule;