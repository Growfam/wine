/**
 * active.js - –ú–æ–¥—É–ª—å –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ –∞–∫—Ç–∏–≤–Ω–∏–º–∏ —Ä–æ–∑—ñ–≥—Ä–∞—à–∞–º–∏ WINIX
 */

import WinixRaffles from '../globals.js';
import api from '../services/api.js';
import { showLoading, hideLoading, showToast } from '../utils/ui-helpers.js';
import { padZero } from '../utils/formatters.js';

// –ü—Ä–∏–≤–∞—Ç–Ω—ñ –∑–º—ñ–Ω–Ω—ñ
let _activeRaffles = null;
let _isLoading = false;
let _lastRafflesUpdateTime = 0;
const RAFFLES_CACHE_TTL = 60000; // 1 —Ö–≤–∏–ª–∏–Ω–∞
let _loadingTimeoutId = null;

/**
 * –ú–æ–¥—É–ª—å –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
 */
class ActiveRaffles {
    /**
     * –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –º–æ–¥—É–ª—è
     */
    init() {
        console.log("üéÆ –ê–∫—Ç–∏–≤–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ: –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è...");

        // –û–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π –¥–ª—è –ø–µ—Ä–µ–º–∏–∫–∞–Ω–Ω—è –≤–∫–ª–∞–¥–æ–∫
        const tabButtons = document.querySelectorAll('.tab-button');
        if (tabButtons.length > 0) {
            console.log(`–ó–Ω–∞–π–¥–µ–Ω–æ ${tabButtons.length} –∫–Ω–æ–ø–æ–∫ –≤–∫–ª–∞–¥–æ–∫`);
            tabButtons.forEach(button => {
                button.addEventListener('click', () => {
                    const tabName = button.getAttribute('data-tab');
                    this.switchTab(tabName);
                });
            });
        }

        // –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
        this.getActiveRaffles().then(() => {
            // –í—ñ–¥–æ–±—Ä–∞–∂–∞—î–º–æ –∞–∫—Ç–∏–≤–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ
            this.displayRaffles();
        }).catch(error => {
            console.error("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤:", error);
            // –°–∫–∏–¥–∞—î–º–æ –≤—Å—ñ —Å—Ç–∞–Ω–∏ —É –≤–∏–ø–∞–¥–∫—É –ø–æ–º–∏–ª–∫–∏
            this.resetAllStates();
        });

        // –ù–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ –∫–Ω–æ–ø–∫–∏ —É—á–∞—Å—Ç—ñ –¥–ª—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
        this._setupRaffleButtons();

        console.log("‚úÖ –ê–∫—Ç–∏–≤–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ: –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—é –∑–∞–≤–µ—Ä—à–µ–Ω–æ");
    }

    /**
     * –û—Ç—Ä–∏–º–∞–Ω–Ω—è –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ –∑ API
     * @param {boolean} forceRefresh - –ü—Ä–∏–º—É—Å–æ–≤–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö
     * @returns {Promise<Array>} –°–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
     */
    async getActiveRaffles(forceRefresh = false) {
        try {
            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∫–µ—à
            const now = Date.now();
            if (!forceRefresh && _activeRaffles && (now - _lastRafflesUpdateTime < RAFFLES_CACHE_TTL)) {
                console.log("üìã Raffles: –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –∫–µ—à–æ–≤–∞–Ω–∏—Ö –¥–∞–Ω–∏—Ö –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤");
                return _activeRaffles;
            }

            // –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ —Å–∫–∏–¥–∞–Ω–Ω—è –∑–∞–≤–∏—Å–∞—é—á–∏—Ö –∑–∞–ø–∏—Ç—ñ–≤
            if (_isLoading && (now - _lastRafflesUpdateTime > 30000)) {
                console.warn("‚ö†Ô∏è Raffles: –í–∏—è–≤–ª–µ–Ω–æ –∑–∞–≤–∏—Å–∞—é—á–∏–π –∑–∞–ø–∏—Ç —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤, —Å–∫–∏–¥–∞—î–º–æ —Å—Ç–∞–Ω");
                _isLoading = false;
                if (_loadingTimeoutId) {
                    clearTimeout(_loadingTimeoutId);
                    _loadingTimeoutId = null;
                }
            }

            if (_isLoading) {
                console.log("‚è≥ Raffles: –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ –≤–∂–µ –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è");
                return _activeRaffles || [];
            }

            _isLoading = true;
            _lastRafflesUpdateTime = now;

            // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Ç–∞–π–º–∞—É—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ–≥–æ —Å–∫–∏–¥–∞–Ω–Ω—è
            if (_loadingTimeoutId) {
                clearTimeout(_loadingTimeoutId);
            }
            _loadingTimeoutId = setTimeout(() => {
                if (_isLoading) {
                    console.warn("‚ö†Ô∏è Raffles: –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ —Ç—Ä–∏–≤–∞—î –∑–∞–Ω–∞–¥—Ç–æ –¥–æ–≤–≥–æ, —Å–∫–∏–¥–∞—î–º–æ —Å—Ç–∞–Ω");
                    _isLoading = false;
                }
            }, 30000); // 30 —Å–µ–∫—É–Ω–¥

            showLoading('–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤...');

            // –í–∏–∫–æ–Ω—É—î–º–æ –∑–∞–ø–∏—Ç –¥–æ API
            const response = await api.apiRequest('/api/raffles', 'GET', null, {
                timeout: 15000,
                suppressErrors: true,
                forceCleanup: forceRefresh
            });

            // –ó–ê–í–ñ–î–ò –ø—Ä–∏—Ö–æ–≤—É—î–º–æ –ª–æ–∞–¥–µ—Ä —ñ —Å–∫–∏–¥–∞—î–º–æ –ø—Ä–∞–ø–æ—Ä–µ—Ü—å
            hideLoading();
            _isLoading = false;

            // –û—á–∏—â–∞—î–º–æ —Ç–∞–π–º–∞—É—Ç
            if (_loadingTimeoutId) {
                clearTimeout(_loadingTimeoutId);
                _loadingTimeoutId = null;
            }

            if (response && response.status === 'success') {
                _activeRaffles = response.data || [];
                _lastRafflesUpdateTime = now;

                console.log(`‚úÖ Raffles: –û—Ç—Ä–∏–º–∞–Ω–æ ${_activeRaffles.length} –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤`);

                // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
                this._updateStatistics();

                return _activeRaffles;
            } else {
                // –ö—Ä–∞—â–∞ –æ–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–æ–∫
                console.error("‚ùå Raffles: –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤:", response?.message || "–ù–µ–≤—ñ–¥–æ–º–∞ –ø–æ–º–∏–ª–∫–∞");

                // –Ø–∫—â–æ —î –∫–µ—à–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —ó—Ö
                if (_activeRaffles) {
                    console.warn("üìã Raffles: –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –∫–µ—à–æ–≤–∞–Ω–∏—Ö –¥–∞–Ω–∏—Ö –ø—ñ—Å–ª—è –ø–æ–º–∏–ª–∫–∏");
                    return _activeRaffles;
                }

                throw new Error((response && response.message) || '–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤');
            }
        } catch (error) {
            console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤:', error);

            // –ó–ê–í–ñ–î–ò —Å–∫–∏–¥–∞—î–º–æ –ø—Ä–∞–ø–æ—Ä—Ü—ñ
            hideLoading();
            _isLoading = false;

            if (_loadingTimeoutId) {
                clearTimeout(_loadingTimeoutId);
                _loadingTimeoutId = null;
            }

            // –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É
            showToast('–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.');

            // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –∫–µ—à–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ —É –≤–∏–ø–∞–¥–∫—É –ø–æ–º–∏–ª–∫–∏
            return _activeRaffles || [];
        }
    }

    /**
     * –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
     */
    async displayRaffles() {
        console.log("üéÆ Raffles: –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤");

        // –û—Ç—Ä–∏–º—É—î–º–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏ –¥–ª—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
        const mainRaffleContainer = document.querySelector('.main-raffle');
        const miniRafflesContainer = document.querySelector('.mini-raffles-container');

        if (!mainRaffleContainer && !miniRafflesContainer) {
            console.error("‚ùå Raffles: –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏ –¥–ª—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤");
            return;
        }

        // –ü–æ–∫–∞–∑—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
        showLoading('–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤...');

        try {
            // –û—Ç—Ä–∏–º—É—î–º–æ –∞–∫—Ç–∏–≤–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ
            const raffles = await this.getActiveRaffles(true);

            // –ü—Ä–∏—Ö–æ–≤—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
            hideLoading();

            if (!raffles || raffles.length === 0) {
                console.log("‚ÑπÔ∏è Raffles: –ê–∫—Ç–∏–≤–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ");

                // –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –≤—ñ–¥—Å—É—Ç–Ω—ñ—Å—Ç—å —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
                if (mainRaffleContainer) {
                    mainRaffleContainer.innerHTML = `
                        <div class="empty-raffles">
                            <div class="empty-raffles-icon">üéÆ</div>
                            <h3>–ù–µ–º–∞—î –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤</h3>
                            <p>–ù–∞ –¥–∞–Ω–∏–π –º–æ–º–µ–Ω—Ç –Ω–µ–º–∞—î –¥–æ—Å—Ç—É–ø–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ!</p>
                        </div>
                    `;
                }

                return;
            }

            // –°—Ç–≤–æ—Ä—é—î–º–æ —Å–ø–∏—Å–æ–∫ –æ—Å–Ω–æ–≤–Ω–∏—Ö —ñ –º—ñ–Ω—ñ-—Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
            const mainRaffles = raffles.filter(raffle => !raffle.is_daily);
            const miniRaffles = raffles.filter(raffle => raffle.is_daily);

            // –í—ñ–¥–æ–±—Ä–∞–∂–∞—î–º–æ –æ—Å–Ω–æ–≤–Ω–∏–π —Ä–æ–∑—ñ–≥—Ä–∞—à
            if (mainRaffleContainer && mainRaffles.length > 0) {
                this._displayMainRaffle(mainRaffleContainer, mainRaffles[0]);
            } else if (mainRaffleContainer) {
                // –Ø–∫—â–æ –Ω–µ–º–∞—î –æ—Å–Ω–æ–≤–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤, –ø–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
                mainRaffleContainer.innerHTML = `
                    <div class="empty-main-raffle">
                        <div class="empty-raffles-icon">üéÆ</div>
                        <h3>–ù–µ–º–∞—î –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤</h3>
                        <p>–°–∫–æ—Ä–æ –±—É–¥—É—Ç—å –Ω–æ–≤—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ. –°–ª—ñ–¥–∫—É–π—Ç–µ –∑–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è–º–∏!</p>
                    </div>
                `;
            }

            // –í—ñ–¥–æ–±—Ä–∞–∂–∞—î–º–æ –º—ñ–Ω—ñ-—Ä–æ–∑—ñ–≥—Ä–∞—à—ñ
            if (miniRafflesContainer) {
                // –û—á–∏—â–∞—î–º–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
                miniRafflesContainer.innerHTML = '';

                if (miniRaffles.length > 0) {
                    // –î–æ–¥–∞—î–º–æ –∫–æ–∂–µ–Ω –º—ñ–Ω—ñ-—Ä–æ–∑—ñ–≥—Ä–∞—à
                    miniRaffles.forEach(raffle => {
                        const miniRaffleElement = this._createMiniRaffleElement(raffle);
                        miniRafflesContainer.appendChild(miniRaffleElement);
                    });
                } else {
                    // –î–æ–¥–∞—î–º–æ –µ–ª–µ–º–µ–Ω—Ç –¥–ª—è –±–æ–Ω—É—Å—É –Ω–æ–≤–∞—á–∫–∞, —è–∫—â–æ –º—ñ–Ω—ñ-—Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ –Ω–µ–º–∞—î
                    this._addNewbieBonusElement(miniRafflesContainer);
                }
            }

            // –ê–∫—Ç–∏–≤—É—î–º–æ —Ç–∞–π–º–µ—Ä–∏
            this._startRaffleTimers();

            // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            this._updateStatistics();
        } catch (error) {
            console.error("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤:", error);
            hideLoading();

            // –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É
            showToast('–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.');

            if (mainRaffleContainer) {
                mainRaffleContainer.innerHTML = `
                    <div class="empty-raffles">
                        <div class="empty-raffles-icon">‚ùå</div>
                        <h3>–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è</h3>
                        <p>–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Å–ø—Ä–æ–±—ñ –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ. –°–ø—Ä–æ–±—É–π—Ç–µ –æ–Ω–æ–≤–∏—Ç–∏ —Å—Ç–æ—Ä—ñ–Ω–∫—É.</p>
                        <button class="join-raffle-btn" onclick="location.reload()">–û–Ω–æ–≤–∏—Ç–∏ —Å—Ç–æ—Ä—ñ–Ω–∫—É</button>
                    </div>
                `;
            }
        }
    }

    /**
     * –§—É–Ω–∫—Ü—ñ—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–Ω—è –≤–∫–ª–∞–¥–æ–∫
     * @param {string} tabName - –ù–∞–∑–≤–∞ –≤–∫–ª–∞–¥–∫–∏ –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü—ñ—ó
     */
    switchTab(tabName) {
        console.log(`üéÆ Raffles: –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–Ω—è –Ω–∞ –≤–∫–ª–∞–¥–∫—É ${tabName}`);

        // –û–Ω–æ–≤–ª—é—î–º–æ –∞–∫—Ç–∏–≤–Ω—É –≤–∫–ª–∞–¥–∫—É
        const tabButtons = document.querySelectorAll('.tab-button');
        const tabSections = document.querySelectorAll('.tab-content');

        // –ó–Ω—ñ–º–∞—î–º–æ –∞–∫—Ç–∏–≤–Ω–∏–π —Å—Ç–∞–Ω –∑ —É—Å—ñ—Ö –≤–∫–ª–∞–¥–æ–∫ —ñ —Å–µ–∫—Ü—ñ–π
        tabButtons.forEach(btn => btn.classList.remove('active'));
        tabSections.forEach(section => section.classList.remove('active'));

        // –î–æ–¥–∞—î–º–æ –∞–∫—Ç–∏–≤–Ω–∏–π —Å—Ç–∞–Ω –¥–æ –≤–∏–±—Ä–∞–Ω–æ—ó –≤–∫–ª–∞–¥–∫–∏ —ñ —Å–µ–∫—Ü—ñ—ó
        const activeTabButton = document.querySelector(`.tab-button[data-tab="${tabName}"]`);
        const activeTabSection = document.getElementById(`${tabName}-raffles`);

        if (activeTabButton) activeTabButton.classList.add('active');
        if (activeTabSection) activeTabSection.classList.add('active');

        // –Ø–∫—â–æ —Ü–µ –≤–∫–ª–∞–¥–∫–∞ –∑ —ñ—Å—Ç–æ—Ä—ñ—î—é, –æ–Ω–æ–≤–ª—é—î–º–æ —ó—ó
        if (tabName === 'past' || tabName === 'history') {
            if (WinixRaffles.history && typeof WinixRaffles.history.displayHistory === 'function') {
                WinixRaffles.history.displayHistory('history-container');
            }
        } else if (tabName === 'active') {
            // –û–Ω–æ–≤–ª—é—î–º–æ –∞–∫—Ç–∏–≤–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ
            this.displayRaffles();
        }
    }

    /**
     * –í—ñ–¥–∫—Ä–∏—Ç—Ç—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞ –∑ –¥–µ—Ç–∞–ª—è–º–∏ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
     * @param {string} raffleId - ID —Ä–æ–∑—ñ–≥—Ä–∞—à—É
     * @param {string} raffleType - –¢–∏–ø —Ä–æ–∑—ñ–≥—Ä–∞—à—É
     */
    openRaffleDetails(raffleId, raffleType) {
        if (WinixRaffles.participation && typeof WinixRaffles.participation.openRaffleDetails === 'function') {
            WinixRaffles.participation.openRaffleDetails(raffleId, raffleType);
        }
    }

    /**
     * –û—á–∏—â–µ–Ω–Ω—è –≤—Å—ñ—Ö —Å—Ç–∞–Ω—ñ–≤ –º–æ–¥—É–ª—è
     */
    resetAllStates() {
        // –°–∫–∏–¥–∞—î–º–æ –ø—Ä–∞–ø–æ—Ä—Ü—ñ
        _isLoading = false;

        // –û—á–∏—â–∞—î–º–æ —Ç–∞–π–º–∞—É—Ç–∏
        if (_loadingTimeoutId) {
            clearTimeout(_loadingTimeoutId);
            _loadingTimeoutId = null;
        }

        // –ü—Ä–∏—Ö–æ–≤—É—î–º–æ –ª–æ–∞–¥–µ—Ä–∏
        hideLoading();

        // –û—á–∏—â–∞—î–º–æ –∞–∫—Ç–∏–≤–Ω—ñ –∑–∞–ø–∏—Ç–∏ —á–µ—Ä–µ–∑ API
        api.forceCleanupRequests();

        console.log("üîÑ Raffles: –ü—Ä–∏–º—É—Å–æ–≤–µ —Å–∫–∏–¥–∞–Ω–Ω—è –≤—Å—ñ—Ö —Å—Ç–∞–Ω—ñ–≤");
        return true;
    }

    /**
     * –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
     * @param {HTMLElement} container - –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è
     * @param {Object} raffle - –î–∞–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
     * @private
     */
    _displayMainRaffle(container, raffle) {
        if (!container || !raffle) return;

        // –°—Ç–≤–æ—Ä—é—î–º–æ HTML –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
        container.innerHTML = `
            <img class="main-raffle-image" src="${raffle.image_url || '/assets/prize-poster.gif'}" alt="${raffle.title}">
            <div class="main-raffle-content">
                <div class="main-raffle-header">
                    <h3 class="main-raffle-title">${raffle.title}</h3>
                    <div class="main-raffle-cost">
                        <img class="token-icon" src="/assets/token-icon.png" alt="–ñ–µ—Ç–æ–Ω">
                        <span>${raffle.entry_fee} –∂–µ—Ç–æ–Ω${raffle.entry_fee !== 1 ? '–∏' : ''}</span>
                    </div>
                </div>

                <span class="main-raffle-prize">${raffle.prize_amount} ${raffle.prize_currency}</span>

                <div class="timer-container">
                    <div class="timer-block">
                        <span class="timer-value" id="days">00</span>
                        <span class="timer-label">–¥–Ω—ñ–≤</span>
                    </div>
                    <div class="timer-block">
                        <span class="timer-value" id="hours">00</span>
                        <span class="timer-label">–≥–æ–¥</span>
                    </div>
                    <div class="timer-block">
                        <span class="timer-value" id="minutes">00</span>
                        <span class="timer-label">—Ö–≤</span>
                    </div>
                </div>

                <div class="prize-distribution">
                    <div class="prize-distribution-title">–†–æ–∑–ø–æ–¥—ñ–ª –ø—Ä–∏–∑—ñ–≤ (${raffle.winners_count} –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤):</div>
                    <div class="prize-list">
                        ${this._generatePrizeDistributionHTML(raffle.prize_distribution)}
                    </div>
                </div>

                <div class="main-raffle-participants">
                    <div class="participants-info">–£—á–∞—Å–Ω–∏–∫—ñ–≤: <span class="participants-count">${raffle.participants_count || 0}</span></div>
                    <div class="share-container">
                        <button class="share-button" id="share-raffle-btn" data-raffle-id="${raffle.id}">–ü–æ–¥—ñ–ª–∏—Ç–∏—Å—è</button>
                    </div>
                </div>

                <div class="progress-bar">
                    <div class="progress" style="width: ${this._calculateProgressWidth(raffle)}%"></div>
                </div>

                <button class="join-button" data-raffle-id="${raffle.id}" data-raffle-type="main">–í–∑—è—Ç–∏ —É—á–∞—Å—Ç—å</button>
            </div>
        `;

        // –û–Ω–æ–≤–ª—é—î–º–æ —Ç–∞–π–º–µ—Ä
        this._updateRaffleTimers();

        // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π
        const joinButton = container.querySelector('.join-button');
        if (joinButton) {
            joinButton.addEventListener('click', () => {
                const raffleId = joinButton.getAttribute('data-raffle-id');
                const raffleType = joinButton.getAttribute('data-raffle-type');
                this.openRaffleDetails(raffleId, raffleType);
            });
        }

        // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ü–æ–¥—ñ–ª–∏—Ç–∏—Å—è"
        const shareButton = container.querySelector('#share-raffle-btn');
        if (shareButton) {
            shareButton.addEventListener('click', () => {
                const raffleId = shareButton.getAttribute('data-raffle-id');
                if (WinixRaffles.participation && typeof WinixRaffles.participation.shareRaffle === 'function') {
                    WinixRaffles.participation.shareRaffle(raffleId);
                }
            });
        }
    }

    /**
     * –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç—É –º—ñ–Ω—ñ-—Ä–æ–∑—ñ–≥—Ä–∞—à—É
     * @param {Object} raffle - –î–∞–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
     * @returns {HTMLElement} –ï–ª–µ–º–µ–Ω—Ç –º—ñ–Ω—ñ-—Ä–æ–∑—ñ–≥—Ä–∞—à—É
     * @private
     */
    _createMiniRaffleElement(raffle) {
        if (!raffle) return null;

        // –°—Ç–≤–æ—Ä—é—î–º–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        const miniRaffle = document.createElement('div');
        miniRaffle.className = 'mini-raffle';
        miniRaffle.setAttribute('data-raffle-id', raffle.id);

        // –†–æ–∑—Ä–∞—Ö–æ–≤—É—î–º–æ —á–∞—Å, —â–æ –∑–∞–ª–∏—à–∏–≤—Å—è
        let timeLeftText = '';
        try {
            const now = new Date();
            const endTime = new Date(raffle.end_time);
            const timeLeft = endTime - now;

            if (timeLeft > 0) {
                const hours = Math.floor((timeLeft % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
                const minutes = Math.floor((timeLeft % (1000 * 60 * 60)) / (1000 * 60));
                timeLeftText = `–ó–∞–ª–∏—à–∏–ª–æ—Å—å: ${hours} –≥–æ–¥ ${minutes} —Ö–≤`;
            } else {
                timeLeftText = '–ó–∞–≤–µ—Ä—à—É—î—Ç—å—Å—è';
            }
        } catch (error) {
            console.error("–ü–æ–º–∏–ª–∫–∞ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É —á–∞—Å—É –º—ñ–Ω—ñ-—Ä–æ–∑—ñ–≥—Ä–∞—à—É:", error);
            timeLeftText = '–ß–∞—Å –Ω–µ –≤–∏–∑–Ω–∞—á–µ–Ω–æ';
        }

        // –§–æ—Ä–º–∞—Ç—É—î–º–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤
        const winnersCount = raffle.winners_count || 1;
        const winnersText = `${raffle.prize_amount} ${raffle.prize_currency} (${winnersCount} –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤)`;

        // –§–æ—Ä–º—É—î–º–æ HTML
        miniRaffle.innerHTML = `
            <div class="mini-raffle-info">
                <div class="mini-raffle-title">${raffle.title}</div>
                <div class="mini-raffle-cost">
                    <img class="token-icon" src="/assets/token-icon.png" alt="–ñ–µ—Ç–æ–Ω">
                    <span>${raffle.entry_fee} –∂–µ—Ç–æ–Ω${raffle.entry_fee !== 1 ? '–∏' : ''}</span>
                </div>
                <div class="mini-raffle-prize">${winnersText}</div>
                <div class="mini-raffle-time">${timeLeftText}</div>
            </div>
            <button class="mini-raffle-button" data-raffle-id="${raffle.id}" data-raffle-type="daily">–£—á–∞—Å—Ç—å</button>
        `;

        // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è
        const button = miniRaffle.querySelector('.mini-raffle-button');
        if (button) {
            button.addEventListener('click', (event) => {
                event.preventDefault();
                event.stopPropagation();

                const raffleId = button.getAttribute('data-raffle-id');
                const raffleType = button.getAttribute('data-raffle-type');
                this.openRaffleDetails(raffleId, raffleType);
            });
        }

        return miniRaffle;
    }

    /**
     * –î–æ–¥–∞–≤–∞–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç—É –±–æ–Ω—É—Å—É –Ω–æ–≤–∞—á–∫–∞
     * @param {HTMLElement} container - –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è
     * @private
     */
    _addNewbieBonusElement(container) {
        if (!container) return;

        const newbieBonus = document.createElement('div');
        newbieBonus.className = 'mini-raffle';
        newbieBonus.setAttribute('data-raffle-id', 'newbie');

        newbieBonus.innerHTML = `
            <div class="mini-raffle-info">
                <div class="mini-raffle-title">–ë–æ–Ω—É—Å –Ω–æ–≤–∞—á–∫–∞</div>
                <div class="mini-raffle-cost">
                    <img class="token-icon" src="/assets/token-icon.png" alt="–ñ–µ—Ç–æ–Ω">
                    <span>0 –∂–µ—Ç–æ–Ω—ñ–≤</span>
                </div>
                <div class="mini-raffle-prize">500 WINIX + 1 –∂–µ—Ç–æ–Ω</div>
                <div class="mini-raffle-time">–î–æ—Å—Ç—É–ø–Ω–æ —Ç—ñ–ª—å–∫–∏ –Ω–æ–≤–∏–º –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞–º</div>
            </div>
            <button class="mini-raffle-button" data-raffle-id="newbie">–û—Ç—Ä–∏–º–∞—Ç–∏</button>
        `;

        const button = newbieBonus.querySelector('.mini-raffle-button');
        if (button) {
            button.addEventListener('click', async (event) => {
                event.preventDefault();
                event.stopPropagation();

                if (WinixRaffles.participation && typeof WinixRaffles.participation.claimNewbieBonus === 'function') {
                    const result = await WinixRaffles.participation.claimNewbieBonus();

                    if (result.status === 'success') {
                        showToast(`–í–∏ –æ—Ç—Ä–∏–º–∞–ª–∏ ${result.data.amount} WINIX —è–∫ –±–æ–Ω—É—Å –Ω–æ–≤–∞—á–∫–∞!`);

                        // –î–µ–∞–∫—Ç–∏–≤—É—î–º–æ –∫–Ω–æ–ø–∫—É
                        button.textContent = '–û—Ç—Ä–∏–º–∞–Ω–æ';
                        button.disabled = true;
                        button.style.opacity = '0.6';
                        button.style.cursor = 'default';

                        // –î–æ–¥–∞—î–º–æ –≤–æ–¥—è–Ω–∏–π –∑–Ω–∞–∫
                        WinixRaffles.utils.markElement(newbieBonus);

                        // –û–Ω–æ–≤–ª—é—î–º–æ –±–∞–ª–∞–Ω—Å
                        WinixRaffles.participation.updateUserBalance();
                    } else if (result.status === 'already_claimed') {
                        showToast('–í–∏ –≤–∂–µ –æ—Ç—Ä–∏–º–∞–ª–∏ –±–æ–Ω—É—Å –Ω–æ–≤–∞—á–∫–∞');

                        // –î–µ–∞–∫—Ç–∏–≤—É—î–º–æ –∫–Ω–æ–ø–∫—É
                        button.textContent = '–û—Ç—Ä–∏–º–∞–Ω–æ';
                        button.disabled = true;
                        button.style.opacity = '0.6';
                        button.style.cursor = 'default';

                        // –î–æ–¥–∞—î–º–æ –≤–æ–¥—è–Ω–∏–π –∑–Ω–∞–∫
                        WinixRaffles.utils.markElement(newbieBonus);
                    } else {
                        showToast(result.message || '–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –±–æ–Ω—É—Å—É');
                    }
                }
            });
        }

        container.appendChild(newbieBonus);

        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –≤–∂–µ –æ—Ç—Ä–∏–º–∞–Ω–æ –±–æ–Ω—É—Å
        api.getUserData().then(userData => {
            if (userData && userData.data && userData.data.newbie_bonus_claimed) {
                // –î–µ–∞–∫—Ç–∏–≤—É—î–º–æ –∫–Ω–æ–ø–∫—É
                if (button) {
                    button.textContent = '–û—Ç—Ä–∏–º–∞–Ω–æ';
                    button.disabled = true;
                    button.style.opacity = '0.6';
                    button.style.cursor = 'default';
                }

                // –î–æ–¥–∞—î–º–æ –≤–æ–¥—è–Ω–∏–π –∑–Ω–∞–∫
                WinixRaffles.utils.markElement(newbieBonus);
            }
        }).catch(err => {
            console.error("–ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å—É –±–æ–Ω—É—Å—É:", err);
        });
    }

    /**
     * –ó–∞–ø—É—Å–∫ —Ç–∞–π–º–µ—Ä—ñ–≤ –¥–ª—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
     * @private
     */
    _startRaffleTimers() {
        // –û—á–∏—â–∞—î–º–æ —ñ—Å–Ω—É—é—á—ñ —Ç–∞–π–º–µ—Ä–∏
        if (window._raffleTimerIntervals) {
            window._raffleTimerIntervals.forEach(interval => clearInterval(interval));
            window._raffleTimerIntervals = [];
        }

        // –ó–∞–ø—É—Å–∫–∞—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–∞–π–º–µ—Ä—ñ–≤ –∫–æ–∂–Ω—É —Ö–≤–∏–ª–∏–Ω—É
        const interval = setInterval(this._updateRaffleTimers.bind(this), 60000);
        window._raffleTimerIntervals = [interval];

        // –í—ñ–¥—Ä–∞–∑—É –∑–∞–ø—É—Å–∫–∞—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
        this._updateRaffleTimers();
    }

    /**
     * –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–∞–π–º–µ—Ä—ñ–≤ –¥–ª—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
     * @private
     */
    _updateRaffleTimers() {
        try {
            // –û–Ω–æ–≤–ª—é—î–º–æ —Ç–∞–π–º–µ—Ä –≥–æ–ª–æ–≤–Ω–æ–≥–æ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
            const daysElement = document.querySelector('#days');
            const hoursElement = document.querySelector('#hours');
            const minutesElement = document.querySelector('#minutes');

            if (daysElement && hoursElement && minutesElement && _activeRaffles && Array.isArray(_activeRaffles) && _activeRaffles.length > 0) {
                // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –æ—Å–Ω–æ–≤–Ω–∏–π —Ä–æ–∑—ñ–≥—Ä–∞—à
                const mainRaffle = _activeRaffles.find(raffle => !raffle.is_daily);

                if (mainRaffle && mainRaffle.end_time) {
                    const now = new Date();
                    const endTime = new Date(mainRaffle.end_time);
                    const timeLeft = endTime - now;

                    if (timeLeft > 0) {
                        const days = Math.floor(timeLeft / (1000 * 60 * 60 * 24));
                        const hours = Math.floor((timeLeft % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
                        const minutes = Math.floor((timeLeft % (1000 * 60 * 60)) / (1000 * 60));

                        daysElement.textContent = padZero(days);
                        hoursElement.textContent = padZero(hours);
                        minutesElement.textContent = padZero(minutes);
                    } else {
                        daysElement.textContent = '00';
                        hoursElement.textContent = '00';
                        minutesElement.textContent = '00';

                        // –†–æ–∑—ñ–≥—Ä–∞—à –∑–∞–≤–µ—Ä—à–µ–Ω–æ, –æ–Ω–æ–≤–ª—é—î–º–æ –¥–∞–Ω—ñ
                        this.getActiveRaffles(true).then(() => {
                            this.displayRaffles();
                        }).catch(err => {
                            console.error("–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –ø—ñ—Å–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è —Ç–∞–π–º–µ—Ä–∞:", err);
                        });
                    }
                }
            }

            // –û–Ω–æ–≤–ª—é—î–º–æ —Ç–∞–π–º–µ—Ä–∏ –º—ñ–Ω—ñ-—Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
            const miniRaffleTimeElements = document.querySelectorAll('.mini-raffle-time');

            if (miniRaffleTimeElements.length > 0 && _activeRaffles && Array.isArray(_activeRaffles) && _activeRaffles.length > 0) {
                // –ó–Ω–∞—Ö–æ–¥–∏–º–æ —â–æ–¥–µ–Ω–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ
                const dailyRaffles = _activeRaffles.filter(raffle => raffle && raffle.is_daily);

                if (dailyRaffles.length > 0) {
                    const miniRaffles = document.querySelectorAll('.mini-raffle');

                    miniRaffles.forEach(raffleElement => {
                        const raffleId = raffleElement.getAttribute('data-raffle-id');
                        const timeElement = raffleElement.querySelector('.mini-raffle-time');

                        if (!timeElement || raffleId === 'newbie') return;

                        const raffle = dailyRaffles.find(r => r.id === raffleId);
                        if (!raffle || !raffle.end_time) return;

                        const now = new Date();
                        const endTime = new Date(raffle.end_time);
                        const timeLeft = endTime - now;

                        if (timeLeft > 0) {
                            const hours = Math.floor((timeLeft % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
                            const minutes = Math.floor((timeLeft % (1000 * 60 * 60)) / (1000 * 60));
                            timeElement.textContent = `–ó–∞–ª–∏—à–∏–ª–æ—Å—å: ${hours} –≥–æ–¥ ${minutes} —Ö–≤`;
                        } else {
                            timeElement.textContent = '–ó–∞–≤–µ—Ä—à—É—î—Ç—å—Å—è';

                            // –†–æ–∑—ñ–≥—Ä–∞—à –∑–∞–≤–µ—Ä—à–µ–Ω–æ, –æ–Ω–æ–≤–ª—é—î–º–æ –¥–∞–Ω—ñ
                            this.getActiveRaffles(true).then(() => {
                                this.displayRaffles();
                            }).catch(err => {
                                console.error("–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –ø—ñ—Å–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è —Ç–∞–π–º–µ—Ä–∞ –º—ñ–Ω—ñ-—Ä–æ–∑—ñ–≥—Ä–∞—à—É:", err);
                            });
                        }
                    });
                }
            }
        } catch (error) {
            console.error("–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–∞–π–º–µ—Ä—ñ–≤:", error);
        }
    }

    /**
     * –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
     * @private
     */
    _updateStatistics() {
        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        const statsGrid = document.querySelector('.stats-grid');
        if (!statsGrid) return;

        // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –º–æ–¥—É–ª—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        if (WinixRaffles.stats && typeof WinixRaffles.stats.updateStatistics === 'function') {
            WinixRaffles.stats.updateStatistics();
        }
    }

    /**
     * –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∫–Ω–æ–ø–æ–∫ —É—á–∞—Å—Ç—ñ —É —Ä–æ–∑—ñ–≥—Ä–∞—à–∞—Ö
     * @private
     */
    _setupRaffleButtons() {
        // –ù–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ –∫–Ω–æ–ø–∫–∏ —É—á–∞—Å—Ç—ñ –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
        const mainJoinBtn = document.getElementById('main-join-btn');
        if (mainJoinBtn) {
            mainJoinBtn.addEventListener('click', function() {
                const raffleId = this.getAttribute('data-raffle-id');
                const raffleType = this.getAttribute('data-raffle-type');
                const inputId = 'main-token-amount';

                if (WinixRaffles.participation && typeof WinixRaffles.participation.participateInRaffleUI === 'function') {
                    WinixRaffles.participation.participateInRaffleUI(raffleId, raffleType, inputId);
                }
            });
        }

        // –ù–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ –∫–Ω–æ–ø–∫–∏ —É—á–∞—Å—Ç—ñ –¥–ª—è —â–æ–¥–µ–Ω–Ω–æ–≥–æ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
        const dailyJoinBtn = document.getElementById('daily-join-btn');
        if (dailyJoinBtn) {
            dailyJoinBtn.addEventListener('click', function() {
                const raffleId = this.getAttribute('data-raffle-id');
                const raffleType = this.getAttribute('data-raffle-type');
                const inputId = 'daily-token-amount';

                if (WinixRaffles.participation && typeof WinixRaffles.participation.participateInRaffleUI === 'function') {
                    WinixRaffles.participation.participateInRaffleUI(raffleId, raffleType, inputId);
                }
            });
        }

        // –ù–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ –∫–Ω–æ–ø–∫–∏ "–í—Å—ñ" –¥–ª—è –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ—ó –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –∂–µ—Ç–æ–Ω—ñ–≤
        const mainAllBtn = document.getElementById('main-all-tokens-btn');
        if (mainAllBtn) {
            mainAllBtn.addEventListener('click', function() {
                const input = document.getElementById('main-token-amount');
                if (input) {
                    input.value = input.max || 1;
                }
            });
        }

        const dailyAllBtn = document.getElementById('daily-all-tokens-btn');
        if (dailyAllBtn) {
            dailyAllBtn.addEventListener('click', function() {
                const input = document.getElementById('daily-token-amount');
                if (input) {
                    input.value = input.max || 1;
                }
            });
        }
    }

    /**
     * –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è HTML –¥–ª—è —Ä–æ–∑–ø–æ–¥—ñ–ª—É –ø—Ä–∏–∑—ñ–≤
     * @param {Object} prizeDistribution - –û–±'—î–∫—Ç –∑ —Ä–æ–∑–ø–æ–¥—ñ–ª–æ–º –ø—Ä–∏–∑—ñ–≤
     * @returns {string} - HTML-—Ä–æ–∑–º—ñ—Ç–∫–∞
     * @private
     */
    _generatePrizeDistributionHTML(prizeDistribution) {
        if (!prizeDistribution || typeof prizeDistribution !== 'object' || Object.keys(prizeDistribution).length === 0) {
            return '<div class="prize-item"><span class="prize-place">–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –≤—ñ–¥—Å—É—Ç–Ω—è</span></div>';
        }

        let html = '';
        const places = Object.keys(prizeDistribution).sort((a, b) => parseInt(a) - parseInt(b));

        // –ì—Ä—É–ø—É—î–º–æ –º—ñ—Å—Ü—è –∑ –æ–¥–Ω–∞–∫–æ–≤–∏–º–∏ –ø—Ä–∏–∑–∞–º–∏
        const groupedPrizes = {};

        places.forEach(place => {
            const prize = prizeDistribution[place];
            if (!prize) return;

            const key = `${prize.amount}-${prize.currency}`;

            if (!groupedPrizes[key]) {
                groupedPrizes[key] = {
                    amount: prize.amount,
                    currency: prize.currency,
                    places: []
                };
            }

            groupedPrizes[key].places.push(parseInt(place));
        });

        // –°—Ç–≤–æ—Ä—é—î–º–æ HTML –¥–ª—è –∫–æ–∂–Ω–æ—ó –≥—Ä—É–ø–∏ –ø—Ä–∏–∑—ñ–≤
        for (const key in groupedPrizes) {
            const group = groupedPrizes[key];
            const placesText = this._formatPlaces(group.places);

            html += `
                <div class="prize-item">
                    <span class="prize-place">${placesText}:</span>
                    <span class="prize-value">${group.amount} ${group.currency}</span>
                </div>
            `;
        }

        return html;
    }

    /**
     * –§–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è —Å–ø–∏—Å–∫—É –º—ñ—Å—Ü—å
     * @param {Array<number>} places - –°–ø–∏—Å–æ–∫ –º—ñ—Å—Ü—å
     * @returns {string} - –í—ñ–¥—Ñ–æ—Ä–º–∞—Ç–æ–≤–∞–Ω–∏–π —Ç–µ–∫—Å—Ç –º—ñ—Å—Ü—å
     * @private
     */
    _formatPlaces(places) {
        if (!places || !Array.isArray(places) || places.length === 0) {
            return "–ù–µ–≤—ñ–¥–æ–º–æ";
        }

        if (places.length === 1) {
            return `${places[0]} –º—ñ—Å—Ü–µ`;
        }

        // –®—É–∫–∞—î–º–æ –ø–æ—Å–ª—ñ–¥–æ–≤–Ω—ñ –º—ñ—Å—Ü—è
        places.sort((a, b) => a - b);

        const ranges = [];
        let start = places[0];
        let end = places[0];

        for (let i = 1; i < places.length; i++) {
            if (places[i] === end + 1) {
                end = places[i];
            } else {
                if (start === end) {
                    ranges.push(`${start}`);
                } else {
                    ranges.push(`${start}-${end}`);
                }
                start = end = places[i];
            }
        }

        if (start === end) {
            ranges.push(`${start}`);
        } else {
            ranges.push(`${start}-${end}`);
        }

        return ranges.join(', ') + ' –º—ñ—Å—Ü—è';
    }

    /**
     * –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ —à–∏—Ä–∏–Ω–∏ –ø—Ä–æ–≥—Ä–µ—Å-–±–∞—Ä—É
     * @param {Object} raffle - –î–∞–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
     * @returns {number} - –®–∏—Ä–∏–Ω–∞ –ø—Ä–æ–≥—Ä–µ—Å-–±–∞—Ä—É —É –≤—ñ–¥—Å–æ—Ç–∫–∞—Ö
     * @private
     */
    _calculateProgressWidth(raffle) {
        if (!raffle || !raffle.start_time || !raffle.end_time) {
            return 0;
        }

        try {
            const now = Date.now();
            const startTime = new Date(raffle.start_time).getTime();
            const endTime = new Date(raffle.end_time).getTime();

            if (isNaN(startTime) || isNaN(endTime)) {
                return 0;
            }

            const totalDuration = endTime - startTime;
            if (totalDuration <= 0) {
                return 0;
            }

            const elapsed = now - startTime;
            return Math.min(100, Math.max(0, (elapsed / totalDuration) * 100));
        } catch (error) {
            console.error("–ü–æ–º–∏–ª–∫–∞ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É –ø—Ä–æ–≥—Ä–µ—Å—É:", error);
            return 0;
        }
    }
}

// –°—Ç–≤–æ—Ä—é—î–º–æ –µ–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—É
const activeRafflesModule = new ActiveRaffles();

// –î–æ–¥–∞—î–º–æ –≤ –≥–ª–æ–±–∞–ª—å–Ω–∏–π –æ–±'—î–∫—Ç –¥–ª—è –∑–≤–æ—Ä–æ—Ç–Ω–æ—ó —Å—É–º—ñ—Å–Ω–æ—Å—Ç—ñ
WinixRaffles.active = activeRafflesModule;

console.log("üéÆ WINIX Raffles: –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –º–æ–¥—É–ª—è –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤");

// –ï–∫—Å–ø–æ—Ä—Ç—É—î–º–æ –º–æ–¥—É–ª—å –¥–ª—è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –≤ —ñ–Ω—à–∏—Ö —Ñ–∞–π–ª–∞—Ö
export default activeRafflesModule;