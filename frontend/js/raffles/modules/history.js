/**
 * –ú–æ–¥—É–ª—å –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ —ñ—Å—Ç–æ—Ä—ñ—î—é —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ WINIX
 */

import WinixRaffles from '../globals.js';
import { showLoading, hideLoading, showToast } from '../utils/ui-helpers.js';
import api from '../services/api.js';

/**
 * –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—ñ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ API
 * @returns {boolean} –î–æ—Å—Ç—É–ø–Ω—ñ—Å—Ç—å API
 */
function hasMainApi() {
    try {
        return window.WinixAPI &&
               typeof window.WinixAPI.apiRequest === 'function' &&
               typeof window.WinixAPI.getUserId === 'function';
    } catch (e) {
        console.error("üîå –Ü—Å—Ç–æ—Ä—ñ—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤: –ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –≥–æ–ª–æ–≤–Ω–æ–≥–æ API:", e);
        return false;
    }
}

// –ü—Ä–∏–≤–∞—Ç–Ω—ñ –∑–º—ñ–Ω–Ω—ñ - —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ –∑ –¥–µ—Ñ–æ–ª—Ç–Ω–∏–º–∏ –∑–Ω–∞—á–µ–Ω–Ω—è–º–∏
let _historyData = [];
let _isLoading = false;
let _failedAttempts = 0;
let _lastRequestTime = Date.now(); // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –∑–Ω–∞—á–µ–Ω–Ω—è–º —á–∞—Å—É
let _requestInProgress = false;
let _requestTimeoutId = null;
let _historyCache = {
    data: null,
    timestamp: 0,
    ttl: 300000 // 5 —Ö–≤–∏–ª–∏–Ω
};
let _raffleDetailsCache = {};
let _requestId = 0; // –£–Ω—ñ–∫–∞–ª—å–Ω–∏–π —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –∑–∞–ø–∏—Ç—É

// –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∏
const RETRY_DELAYS = [2000, 5000, 10000]; // –ó–º–µ–Ω—à–µ–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω–∏—Ö —Å–ø—Ä–æ–±
const MIN_REQUEST_INTERVAL = 15000; // –ó–±—ñ–ª—å—à–µ–Ω–æ —ñ–Ω—Ç–µ—Ä–≤–∞–ª –º—ñ–∂ –∑–∞–ø–∏—Ç–∞–º–∏
const MAX_RETRIES = 2; // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω–∏—Ö —Å–ø—Ä–æ–±

/**
 * –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ –ø—Ä–∏—Å—Ç—Ä—ñ–π –æ–Ω–ª–∞–π–Ω
 * @returns {boolean} –°—Ç–∞–Ω –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è
 */
function isOnline() {
    return typeof navigator.onLine === 'undefined' || navigator.onLine;
}

/**
 * –ö–ª–∞—Å –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ —ñ—Å—Ç–æ—Ä—ñ—î—é —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
 */
class HistoryModule {
    /**
     * –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –º–æ–¥—É–ª—è —ñ—Å—Ç–æ—Ä—ñ—ó —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
     */
    init() {
        console.log("üìã –Ü—Å—Ç–æ—Ä—ñ—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤: –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è...");

        // –ü—ñ–¥–ø–∏—Å—É—î–º–æ—Å—è –Ω–∞ –ø–æ–¥—ñ—ó
        this._setupEventListeners();



        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –¥–ª—è —ñ—Å—Ç–æ—Ä—ñ—ó
        const historyContainer = document.getElementById('history-container');
        if (historyContainer) {
            // –î–æ–¥–∞—î–º–æ –∫–Ω–æ–ø–∫—É –µ–∫—Å–ø–æ—Ä—Ç—É
            const exportButton = document.createElement('button');
            exportButton.className = 'export-history-btn';
            exportButton.innerHTML = '<span>üìä</span> –ï–∫—Å–ø–æ—Ä—Ç —ñ—Å—Ç–æ—Ä—ñ—ó';
            exportButton.addEventListener('click', this.exportHistoryToCSV.bind(this));

            // –î–æ–¥–∞—î–º–æ –∫–Ω–æ–ø–∫—É –ø–µ—Ä–µ–¥ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–º
            historyContainer.parentNode.insertBefore(exportButton, historyContainer);
        }

        // –í—ñ–¥–Ω–æ–≤–ª—é—î–º–æ –∫–µ—à–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ, —è–∫—â–æ –≤–æ–Ω–∏ —î
        this._loadCachedHistory();

        console.log("‚úÖ –Ü—Å—Ç–æ—Ä—ñ—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤: –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—é –∑–∞–≤–µ—Ä—à–µ–Ω–æ");
    }

    /**
     * –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–µ—à–æ–≤–∞–Ω–∏—Ö –¥–∞–Ω–∏—Ö —ñ—Å—Ç–æ—Ä—ñ—ó –∑ localStorage
     * @private
     */
    _loadCachedHistory() {
        try {
            const cachedHistory = localStorage.getItem('winix_raffles_history');
            if (cachedHistory) {
                const parsedHistory = JSON.parse(cachedHistory);
                if (Array.isArray(parsedHistory) && parsedHistory.length > 0) {
                    _historyData = parsedHistory;
                    _historyCache.data = parsedHistory;
                    _historyCache.timestamp = Date.now();
                    console.log(`üìã –Ü—Å—Ç–æ—Ä—ñ—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤: –í—ñ–¥–Ω–æ–≤–ª–µ–Ω–æ ${parsedHistory.length} –∑–∞–ø–∏—Å—ñ–≤ –∑ localStorage`);
                }
            }
        } catch (e) {
            console.warn("‚ö†Ô∏è –Ü—Å—Ç–æ—Ä—ñ—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤: –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–µ—à—É:", e);
        }
    }

    /**
 * –î–æ–¥–∞–≤–∞–Ω–Ω—è —Å—ñ—Ç–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
 * @param {HTMLElement} container - –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è —Å—ñ—Ç–∫–∏
 * @private
 */
_addStatsGrid(container) {
    // –î–æ–¥–∞—î–º–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É, —è–∫—â–æ —ó—ó —â–µ –Ω–µ–º–∞—î –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ
    if (!document.querySelector('.stats-grid') && container) {
        const statsGrid = document.createElement('div');
        statsGrid.className = 'stats-grid';
        statsGrid.innerHTML = `
            <div class="stats-card">
                <div class="stats-card-title">–í—Å—å–æ–≥–æ —É—á–∞—Å—Ç–µ–π</div>
                <div class="stats-card-value" id="total-participated">-</div>
            </div>
            <div class="stats-card">
                <div class="stats-card-title">–ü–µ—Ä–µ–º–æ–≥–∏</div>
                <div class="stats-card-value" id="total-wins">-</div>
            </div>
            <div class="stats-card">
                <div class="stats-card-title">–í–∏–≥—Ä–∞–Ω–æ WINIX</div>
                <div class="stats-card-value" id="total-winix-won">-</div>
            </div>
            <div class="stats-card">
                <div class="stats-card-title">–í–∏—Ç—Ä–∞—á–µ–Ω–æ –∂–µ—Ç–æ–Ω—ñ–≤</div>
                <div class="stats-card-value" id="total-tokens-spent">-</div>
            </div>
        `;

        // –î–æ–¥–∞—î–º–æ —Å—ñ—Ç–∫—É –ø–µ—Ä–µ–¥ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–º —ñ—Å—Ç–æ—Ä—ñ—ó
        if (container.parentNode) {
            container.parentNode.insertBefore(statsGrid, container);
        }
    }
}

/**
 * –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
 * @param {number} total - –ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
 * @param {number} wins - –ö—ñ–ª—å–∫—ñ—Å—Ç—å –ø–µ—Ä–µ–º–æ–≥
 * @param {number} winixWon - –ö—ñ–ª—å–∫—ñ—Å—Ç—å –≤–∏–≥—Ä–∞–Ω–∏—Ö WINIX
 * @param {number} tokensSpent - –í–∏—Ç—Ä–∞—á–µ–Ω–æ –∂–µ—Ç–æ–Ω—ñ–≤
 * @private
 */
_updateStatistics(total, wins, winixWon, tokensSpent) {
    try {
        // –û–Ω–æ–≤–ª—é—î–º–æ –µ–ª–µ–º–µ–Ω—Ç–∏ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É
        const totalParticipated = document.getElementById('total-participated');
        const totalWins = document.getElementById('total-wins');
        const totalWinixWon = document.getElementById('total-winix-won');
        const totalTokensSpent = document.getElementById('total-tokens-spent');

        if (totalParticipated) totalParticipated.textContent = total || 0;
        if (totalWins) totalWins.textContent = wins || 0;
        if (totalWinixWon) totalWinixWon.textContent = winixWon || 0;
        if (totalTokensSpent) totalTokensSpent.textContent = tokensSpent || 0;
    } catch (error) {
        console.error("–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:", error);
    }
}

    /**
     * –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö —ñ—Å—Ç–æ—Ä—ñ—ó –≤ localStorage
     * @param {Array} data - –î–∞–Ω—ñ –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è
     * @private
     */
    _saveHistoryToCache(data) {
        if (!Array.isArray(data)) return;

        try {
            localStorage.setItem('winix_raffles_history', JSON.stringify(data));
            console.log(`üìã –Ü—Å—Ç–æ—Ä—ñ—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤: –ó–±–µ—Ä–µ–∂–µ–Ω–æ ${data.length} –∑–∞–ø–∏—Å—ñ–≤ –≤ localStorage`);
        } catch (e) {
            console.warn("‚ö†Ô∏è –Ü—Å—Ç–æ—Ä—ñ—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤: –ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –≤ localStorage:", e);
        }
    }

    /**
     * –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –ø–æ–¥—ñ–π
     * @private
     */
    _setupEventListeners() {
        // –ü—ñ–¥–ø–∏—Å—É—î–º–æ—Å—è –Ω–∞ –ø–æ–¥—ñ—é –∑–∞–ø–∏—Ç—É –Ω–∞ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –≤–∫–ª–∞–¥–∫–∏ —ñ—Å—Ç–æ—Ä—ñ—ó
        WinixRaffles.events.on('history-tab-requested', () => {
            this.displayHistory('history-container');
        });

        // –ü—ñ–¥–ø–∏—Å—É—î–º–æ—Å—è –Ω–∞ –ø–æ–¥—ñ—é –∑–∞–ø–∏—Ç—É –Ω–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —ñ—Å—Ç–æ—Ä—ñ—ó
        WinixRaffles.events.on('refresh-history', (data) => {
            const containerId = data && data.containerId ? data.containerId : 'history-container';
            this.displayHistory(containerId, true);
        });

        // –û–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π –º–µ—Ä–µ–∂—ñ
        window.addEventListener('online', () => {
            console.log("üîÑ –Ü—Å—Ç–æ—Ä—ñ—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤: –ó'—î–¥–Ω–∞–Ω–Ω—è –∑ –º–µ—Ä–µ–∂–µ—é –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–æ");
            // –û—á–∏—â—É—î–º–æ —Å—Ç–∞–Ω –∑–∞–ø–∏—Ç—ñ–≤ –Ω–∞ –≤–∏–ø–∞–¥–æ–∫, —è–∫—â–æ –∑–∞–ø–∏—Ç –±—É–≤ –∞–∫—Ç–∏–≤–Ω–∏–π –ø—Ä–∏ –≤—ñ–¥–∫–ª—é—á–µ–Ω–Ω—ñ
            this.resetRequestState();
        });

        window.addEventListener('offline', () => {
            console.warn("‚ö†Ô∏è –Ü—Å—Ç–æ—Ä—ñ—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤: –ó'—î–¥–Ω–∞–Ω–Ω—è –∑ –º–µ—Ä–µ–∂–µ—é –≤—Ç—Ä–∞—á–µ–Ω–æ");
            // –ü—Ä–∏ –≤—Ç—Ä–∞—Ç—ñ –∑'—î–¥–Ω–∞–Ω–Ω—è –ø–µ—Ä–µ—Ä–∏–≤–∞—Ç–∏ –ø–æ—Ç–æ—á–Ω—ñ –∑–∞–ø–∏—Ç–∏
            this.resetRequestState();
        });
    }

    /**
     * –û—Ç—Ä–∏–º–∞–Ω–Ω—è —ñ—Å—Ç–æ—Ä—ñ—ó —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
     * @param {Object} filters - –§—ñ–ª—å—Ç—Ä–∏ –¥–ª—è –∑–∞–ø–∏—Ç—É
     * @param {boolean} forceRefresh - –ü—Ä–∏–º—É—Å–æ–≤–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
     * @returns {Promise<Array>} –°–ø–∏—Å–æ–∫ —ñ—Å—Ç–æ—Ä—ñ—ó —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
     */
    async getRafflesHistory(filters = {}, forceRefresh = false) {
        try {
            const now = Date.now();

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –ø—Ä–∏—Å—Ç—Ä—ñ–π –æ–Ω–ª–∞–π–Ω
            if (!isOnline() && !forceRefresh) {
                console.warn("üìã –Ü—Å—Ç–æ—Ä—ñ—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤: –ü—Ä–∏—Å—Ç—Ä—ñ–π –æ—Ñ–ª–∞–π–Ω, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∫–µ—à–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ");

                // –Ø–∫—â–æ —î –∫–µ—à–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ, –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ —ó—Ö
                if (_historyCache.data && Array.isArray(_historyCache.data)) {
                    return _historyCache.data;
                }

                // –Ø–∫—â–æ —î –¥–∞–Ω—ñ, —è–∫—ñ –∑–±–µ—Ä–µ–≥–ª–∏ —Ä–∞–Ω—ñ—à–µ
                if (_historyData && _historyData.length > 0) {
                    return _historyData;
                }

                // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –ø–æ—Ä–æ–∂–Ω—ñ–π –º–∞—Å–∏–≤, —è–∫—â–æ –Ω–µ–º–∞—î –¥–∞–Ω–∏—Ö
                return [];
            }

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∫–µ—à, —è–∫—â–æ –Ω–µ –≤–∏–º–∞–≥–∞—î—Ç—å—Å—è –ø—Ä–∏–º—É—Å–æ–≤–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
            if (!forceRefresh && _historyCache.data && now - _historyCache.timestamp < _historyCache.ttl) {
                console.log("üìã –Ü—Å—Ç–æ—Ä—ñ—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤: –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∫–µ—à–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ");
                return Promise.resolve(_historyCache.data);
            }

            // –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –æ—á–∏—â–µ–Ω–Ω—è –ø—Ä–∞–ø–æ—Ä—Ü—è, —è–∫—â–æ –∑–∞–ø–∏—Ç —Ç—Ä–∏–≤–∞–≤ –∑–∞–Ω–∞–¥—Ç–æ –¥–æ–≤–≥–æ
            if (_requestInProgress && now - _lastRequestTime > 30000) {
                console.warn("‚ö†Ô∏è –Ü—Å—Ç–æ—Ä—ñ—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤: –í–∏—è–≤–ª–µ–Ω–æ –∑–∞–≤–∏—Å–∞—é—á–∏–π –∑–∞–ø–∏—Ç, –æ—á–∏—â–∞—î–º–æ —Å—Ç–∞–Ω");
                _requestInProgress = false;
                if (_requestTimeoutId) {
                    clearTimeout(_requestTimeoutId);
                    _requestTimeoutId = null;
                }
            }

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –∑–∞–ø–∏—Ç –≤–∂–µ –≤ –ø—Ä–æ—Ü–µ—Å—ñ
            if (_requestInProgress) {
                console.log("‚è≥ –Ü—Å—Ç–æ—Ä—ñ—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤: –ó–∞–ø–∏—Ç —É–∂–µ –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∫–µ—à");
                // –Ø–∫—â–æ –∫–µ—à —î - –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ –π–æ–≥–æ
                if (_historyCache.data) {
                    return Promise.resolve(_historyCache.data);
                }
                // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –ø–æ—Ç–æ—á–Ω—ñ –¥–∞–Ω—ñ
                return Promise.resolve(_historyData);
            }

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —ñ–Ω—Ç–µ—Ä–≤–∞–ª –º—ñ–∂ –∑–∞–ø–∏—Ç–∞–º–∏
            const timeSinceLastRequest = now - _lastRequestTime;
            if (timeSinceLastRequest < MIN_REQUEST_INTERVAL && _historyData.length > 0 && !forceRefresh) {
                console.log(`‚è≥ –Ü—Å—Ç–æ—Ä—ñ—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤: –ó–∞–Ω–∞–¥—Ç–æ —á–∞—Å—Ç–∏–π –∑–∞–ø–∏—Ç, –º–∏–Ω—É–ª–æ ${Math.floor(timeSinceLastRequest/1000)}—Å`);
                return Promise.resolve(_historyData);
            }

            _isLoading = true;
            _requestInProgress = true;
            _lastRequestTime = now;
            const currentRequestId = ++_requestId;

            // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Ç–∞–π–º–∞—É—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ–≥–æ —Å–∫–∏–¥–∞–Ω–Ω—è –ø—Ä–∞–ø–æ—Ä—Ü—è
            if (_requestTimeoutId) {
                clearTimeout(_requestTimeoutId);
            }
            _requestTimeoutId = setTimeout(() => {
                if (_requestInProgress) {
                    console.warn("‚ö†Ô∏è –Ü—Å—Ç–æ—Ä—ñ—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤: –ó–∞–ø–∏—Ç –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è –∑–∞–Ω–∞–¥—Ç–æ –¥–æ–≤–≥–æ, —Å–∫–∏–¥–∞—î–º–æ –ø—Ä–∞–ø–æ—Ä–µ—Ü—å");
                    _requestInProgress = false;
                    _isLoading = false;
                }
            }, 20000); // 20 —Å–µ–∫—É–Ω–¥ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∏–π —á–∞—Å –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –∑–∞–ø–∏—Ç—É

            // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Ü–µ–Ω—Ç—Ä–∞–ª—ñ–∑–æ–≤–∞–Ω–∏–π –ª–æ–∞–¥–µ—Ä
            showLoading('–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —ñ—Å—Ç–æ—Ä—ñ—ó —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤...', 'history-request');

            // –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ –∑ API
            const userId = api.getUserId();
            if (!userId) {
                _isLoading = false;
                _requestInProgress = false;
                hideLoading('history-request');
                throw new Error('ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
            }

            // –§–æ—Ä–º—É—î–º–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ –∑–∞–ø–∏—Ç—É
            let queryParams = '';
            if (filters.type && filters.type !== 'all') {
                queryParams += `&type=${filters.type}`;
            }
            if (filters.status && filters.status !== 'all') {
                queryParams += `&status=${filters.status}`;
            }
            if (filters.period && filters.period !== 'all') {
                queryParams += `&period=${filters.period}`;
            }

            // –î–æ–¥–∞—î–º–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ –¥–æ URL, —è–∫—â–æ –≤–æ–Ω–∏ —î
            let url = '';
            if (queryParams) {
                url = `user/${userId}/raffles-history?${queryParams.substring(1)}`;
            } else {
                url = `user/${userId}/raffles-history`;
            }

            // –î–æ–¥–∞—Ç–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω—É –ø–µ—Ä–µ–¥ –∑–∞–ø–∏—Ç–æ–º –¥–æ API
            if (hasMainApi() && typeof window.WinixAPI.refreshToken === 'function') {
                try {
                    await window.WinixAPI.refreshToken();
                } catch (e) {
                    console.warn("üîå –Ü—Å—Ç–æ—Ä—ñ—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤: –ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω—É:", e);
                }
            }

            try {
                // –ü–æ–∫—Ä–∞—â–µ–Ω—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ –∑–∞–ø–∏—Ç—É
                const response = await api.apiRequest(url, 'GET', null, {
                    timeout: 15000,
                    allowParallel: false,
                    suppressErrors: true,
                    hideLoader: true, // –í–∂–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –≤–ª–∞—Å–Ω–∏–π –ª–æ–∞–¥–µ—Ä
                    forceCleanup: _failedAttempts > 0
                });

                // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —Ü–µ –∞–∫—Ç—É–∞–ª—å–Ω–∏–π –∑–∞–ø–∏—Ç
                if (currentRequestId !== _requestId) {
                    console.warn("‚ö†Ô∏è –Ü—Å—Ç–æ—Ä—ñ—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤: –û—Ç—Ä–∏–º–∞–Ω–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –¥–ª—è –∑–∞—Å—Ç–∞—Ä—ñ–ª–æ–≥–æ –∑–∞–ø–∏—Ç—É, —ñ–≥–Ω–æ—Ä—É—î–º–æ");
                    hideLoading('history-request');
                    return _historyData || [];
                }

                // –ó–ê–í–ñ–î–ò —Å–∫–∏–¥–∞—î–º–æ –ø—Ä–∞–ø–æ—Ä—Ü—ñ –ø—ñ—Å–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –∑–∞–ø–∏—Ç—É
                hideLoading('history-request');
                _isLoading = false;
                _requestInProgress = false;
                _failedAttempts = 0; // –°–∫–∏–¥–∞—î–º–æ –ª—ñ—á–∏–ª—å–Ω–∏–∫ –ø—Ä–∏ —É—Å–ø—ñ—Ö—É

                // –û—á–∏—â–∞—î–º–æ —Ç–∞–π–º–∞—É—Ç
                if (_requestTimeoutId) {
                    clearTimeout(_requestTimeoutId);
                    _requestTimeoutId = null;
                }

                if (response && response.status === 'success') {
                    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –æ—Ç—Ä–∏–º–∞–Ω—ñ –¥–∞–Ω—ñ - —Ü–µ –º–∞—Å–∏–≤
                    if (!Array.isArray(response.data)) {
                        // –Ø–∫—â–æ –¥–∞–Ω—ñ –Ω–µ –º–∞—Å–∏–≤, –∞–ª–µ —É—Å–ø—ñ—à–Ω–∏–π —Å—Ç–∞—Ç—É—Å - –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ –ø–æ—Ä–æ–∂–Ω—ñ–π –º–∞—Å–∏–≤
                        console.warn("–û—Ç—Ä–∏–º–∞–Ω–æ –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω—ñ –¥–∞–Ω—ñ —ñ—Å—Ç–æ—Ä—ñ—ó (–Ω–µ –º–∞—Å–∏–≤):", response.data);
                        _historyData = [];
                        // –û–Ω–æ–≤–ª—é—î–º–æ –∫–µ—à –ø—É—Å—Ç–∏–º–∏ –¥–∞–Ω–∏–º–∏
                        _historyCache = {
                            data: [],
                            timestamp: now,
                            ttl: _historyCache.ttl
                        };
                        return _historyData;
                    }

                    _historyData = response.data;
                    console.log(`‚úÖ –Ü—Å—Ç–æ—Ä—ñ—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤: –û—Ç—Ä–∏–º–∞–Ω–æ ${_historyData.length} –∑–∞–ø–∏—Å—ñ–≤ —ñ—Å—Ç–æ—Ä—ñ—ó`);

                    // –û–Ω–æ–≤–ª—é—î–º–æ –∫–µ—à
                    _historyCache = {
                        data: _historyData,
                        timestamp: now,
                        ttl: _historyCache.ttl
                    };

                    // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –≤ localStorage –¥–ª—è –æ—Ñ–ª–∞–π–Ω –¥–æ—Å—Ç—É–ø—É
                    this._saveHistoryToCache(_historyData);

                    // –ï–º—ñ—Ç—É—î–º–æ –ø–æ–¥—ñ—é –ø—Ä–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —ñ—Å—Ç–æ—Ä—ñ—ó
                    WinixRaffles.events.emit('history-updated', {
                        count: _historyData.length,
                        data: _historyData
                    });

                    return _historyData;
                } else {
                    // –Ø–∫—â–æ —Å—Ç–∞—Ç—É—Å –Ω–µ —É—Å–ø—ñ—Ö, –∞–ª–µ —î –¥–∞–Ω—ñ - –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –¥–∂–µ—Ä–µ–ª–æ
                    if (response && response.source && response.source.includes('fallback')) {
                        // –¶–µ —Å–ø–µ—Ü—ñ–∞–ª—å–Ω–∏–π –≤–∏–ø–∞–¥–æ–∫ —Ñ–æ–ª–±–µ–∫–∞ –≤ API
                        console.warn(`–Ü—Å—Ç–æ—Ä—ñ—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤: –û—Ç—Ä–∏–º–∞–Ω–æ —Ñ–æ–ª–±–µ–∫-–≤—ñ–¥–ø–æ–≤—ñ–¥—å: ${response.source}`);

                        if (Array.isArray(response.data)) {
                            _historyData = response.data;
                            // –û–Ω–æ–≤–ª—é—î–º–æ –∫–µ—à
                            _historyCache = {
                                data: _historyData,
                                timestamp: now,
                                ttl: 60000 // –ö–æ—Ä–æ—Ç—à–∏–π TTL –¥–ª—è —Ñ–æ–ª–±–µ–∫—É
                            };

                            // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –≤ localStorage –¥–ª—è –æ—Ñ–ª–∞–π–Ω –¥–æ—Å—Ç—É–ø—É
                            this._saveHistoryToCache(_historyData);

                            return _historyData;
                        }
                    }

                    throw new Error((response && response.message) || '–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —ñ—Å—Ç–æ—Ä—ñ—ó —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤');
                }
            } catch (apiError) {
                // –ü–µ—Ä–µ–æ–±—Ä–æ–±–ª—è—î–º–æ –ø–æ–º–∏–ª–∫—É API
                throw apiError;
            }
        } catch (error) {
            console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —ñ—Å—Ç–æ—Ä—ñ—ó —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤:', error);

            // –ó–±—ñ–ª—å—à—É—î–º–æ –ª—ñ—á–∏–ª—å–Ω–∏–∫ –Ω–µ–≤–¥–∞–ª–∏—Ö —Å–ø—Ä–æ–±
            _failedAttempts++;

            // –û–ë–û–í'–Ø–ó–ö–û–í–û —Å–∫–∏–¥–∞—î–º–æ –ø—Ä–∞–ø–æ—Ä—Ü—ñ
            hideLoading('history-request');
            _isLoading = false;
            _requestInProgress = false;

            // –û—á–∏—â–∞—î–º–æ —Ç–∞–π–º–∞—É—Ç
            if (_requestTimeoutId) {
                clearTimeout(_requestTimeoutId);
                _requestTimeoutId = null;
            }

            // –ù–µ –ø–æ–∫–∞–∑—É—î–º–æ –ø–æ–º–∏–ª–∫—É –ø—Ä–∏ –ø–µ—Ä—à—ñ–π —Å–ø—Ä–æ–±—ñ
            if (_failedAttempts > 1) {
                showToast('–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —ñ—Å—Ç–æ—Ä—ñ—é —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.', 'error');
            }

            // –î–ª—è —Å–µ—Ä–≤–µ—Ä–Ω–æ—ó –ø–æ–º–∏–ª–∫–∏ –∞–±–æ –ø–æ–º–∏–ª–∫–∏ –ø–∞—Ä–∞–ª–µ–ª—å–Ω–æ–≥–æ –∑–∞–ø–∏—Ç—É, –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ –∫–µ—à–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ
            if (_historyData.length > 0) {
                return _historyData;
            }

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∫–µ—à
            if (_historyCache.data) {
                console.log("üìã –Ü—Å—Ç–æ—Ä—ñ—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤: –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∫–µ—à–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ –ø—ñ—Å–ª—è –ø–æ–º–∏–ª–∫–∏");
                return _historyCache.data;
            }

            // –Ø–∫—â–æ –Ω–µ–º–∞—î –¥–∞–Ω–∏—Ö –Ω–∞–≤—ñ—Ç—å —É –∫–µ—à—ñ, —Ç–æ–¥—ñ –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —Å–ª—ñ–¥ –ø–æ–≤—Ç–æ—Ä–∏—Ç–∏ —Å–ø—Ä–æ–±—É
            if (_failedAttempts <= MAX_RETRIES) {
                const retryIndex = Math.min(_failedAttempts - 1, RETRY_DELAYS.length - 1);
                const retryDelay = RETRY_DELAYS[retryIndex];
                console.log(`üîÑ –Ü—Å—Ç–æ—Ä—ñ—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤: –°–ø—Ä–æ–±–∞ –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –∑–∞–ø–∏—Ç—É —á–µ—Ä–µ–∑ ${retryDelay/1000}—Å`);

                // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –ø—Ä–æ–º—ñ—Å –∑ —Ç–∞–π–º–∞—É—Ç–æ–º —ñ –ø–æ–≤—Ç–æ—Ä–Ω–∏–º –∑–∞–ø–∏—Ç–æ–º
                return new Promise(resolve => {
                    setTimeout(() => {
                        this.getRafflesHistory(filters)
                            .then(resolve)
                            .catch(err => {
                                // –£ –≤–∏–ø–∞–¥–∫—É –ø–æ–º–∏–ª–∫–∏ –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω—ñ–π —Å–ø—Ä–æ–±—ñ –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ –ø–æ—Ä–æ–∂–Ω—ñ–π –º–∞—Å–∏–≤
                                console.error("–ü–æ–º–∏–ª–∫–∞ –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –∑–∞–ø–∏—Ç—É:", err);
                                resolve([]);
                            });
                    }, retryDelay);
                });
            }

            // –Ø–∫—â–æ –≤—Å—ñ —Å–ø—Ä–æ–±–∏ –Ω–µ–≤–¥–∞–ª—ñ, –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ –ø–æ—Ä–æ–∂–Ω—ñ–π –º–∞—Å–∏–≤
            return [];
        }
    }

    // –Ü–Ω—à—ñ –º–µ—Ç–æ–¥–∏ –∫–ª–∞—Å—É HistoryModule –∑–∞–ª–∏—à–∞—é—Ç—å—Å—è –±–µ–∑ –∑–º—ñ–Ω...

    /**
     * –û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–µ—Ç–∞–ª—å–Ω–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ —Ä–æ–∑—ñ–≥—Ä–∞—à –∑ —ñ—Å—Ç–æ—Ä—ñ—ó
     * @param {string} raffleId - ID —Ä–æ–∑—ñ–≥—Ä–∞—à—É
     * @returns {Promise<Object>} - –î–µ—Ç–∞–ª—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
     */
    async getRaffleHistoryDetails(raffleId) {
        try {
            if (!raffleId) {
                throw new Error('ID —Ä–æ–∑—ñ–≥—Ä–∞—à—É –Ω–µ –≤–∫–∞–∑–∞–Ω–æ');
            }

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –ø—Ä–∏—Å—Ç—Ä—ñ–π –æ–Ω–ª–∞–π–Ω
            if (!isOnline()) {
                console.warn("üìã –Ü—Å—Ç–æ—Ä—ñ—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤: –ü—Ä–∏—Å—Ç—Ä—ñ–π –æ—Ñ–ª–∞–π–Ω, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∫–µ—à–æ–≤–∞–Ω—ñ –¥–µ—Ç–∞–ª—ñ");

                // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∫–µ—à –¥–µ—Ç–∞–ª–µ–π
                if (_raffleDetailsCache[raffleId]) {
                    return _raffleDetailsCache[raffleId];
                }

                // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Å–ø–æ—á–∞—Ç–∫—É –ª–æ–∫–∞–ª—å–Ω—ñ –¥–∞–Ω—ñ
                const localRaffleData = _historyData.find(item => item && item.raffle_id === raffleId);
                if (localRaffleData) {
                    return localRaffleData;
                }

                // –Ø–∫—â–æ –¥–∞–Ω–∏—Ö –Ω–µ–º–∞—î, –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ –±–∞–∑–æ–≤—É —Å—Ç—Ä—É–∫—Ç—É—Ä—É
                return {
                    raffle_id: raffleId,
                    title: "–î–∞–Ω—ñ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ñ",
                    winners: [],
                    status: "unknown",
                    source: "offline_fallback"
                };
            }

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∫–µ—à –¥–µ—Ç–∞–ª–µ–π
            if (_raffleDetailsCache[raffleId]) {
                console.log(`üìã –Ü—Å—Ç–æ—Ä—ñ—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤: –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –∫–µ—à–æ–≤–∞–Ω–∏—Ö –¥–µ—Ç–∞–ª–µ–π –¥–ª—è —Ä–æ–∑—ñ–≥—Ä–∞—à—É ${raffleId}`);
                return _raffleDetailsCache[raffleId];
            }

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Å–ø–æ—á–∞—Ç–∫—É –ª–æ–∫–∞–ª—å–Ω—ñ –¥–∞–Ω—ñ
            const localRaffleData = _historyData.find(item => item && item.raffle_id === raffleId);
            if (localRaffleData && localRaffleData.winners) {
                console.log("üìã –Ü—Å—Ç–æ—Ä—ñ—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤: –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –ª–æ–∫–∞–ª—å–Ω–∏—Ö –¥–∞–Ω–∏—Ö –¥–ª—è –¥–µ—Ç–∞–ª–µ–π —Ä–æ–∑—ñ–≥—Ä–∞—à—É");

                // –ö–µ—à—É—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                _raffleDetailsCache[raffleId] = localRaffleData;

                return localRaffleData;
            }

            const userId = api.getUserId();
            if (!userId) {
                throw new Error('ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
            }

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –Ω–µ –Ω–∞–¥—Ç–æ —á–∞—Å—Ç–∏–π –∑–∞–ø–∏—Ç
            const now = Date.now();
            const timeSinceLastRequest = now - _lastRequestTime;
            if (timeSinceLastRequest < 3000) { // 3 —Å–µ–∫—É–Ω–¥–∏ –º—ñ–∂ –∑–∞–ø–∏—Ç–∞–º–∏
                await new Promise(resolve => setTimeout(resolve, 3000 - timeSinceLastRequest));
            }

            // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Ü–µ–Ω—Ç—Ä–∞–ª—ñ–∑–æ–≤–∞–Ω–µ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –ª–æ–∞–¥–µ—Ä–∞
            showLoading('–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–µ—Ç–∞–ª–µ–π —Ä–æ–∑—ñ–≥—Ä–∞—à—É...', `history-details-${raffleId}`);

            // –î–æ–¥–∞—Ç–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω—É –ø–µ—Ä–µ–¥ –∑–∞–ø–∏—Ç–æ–º –¥–æ API
            if (hasMainApi() && typeof window.WinixAPI.refreshToken === 'function') {
                try {
                    await window.WinixAPI.refreshToken();
                } catch (e) {
                    console.warn("üîå –Ü—Å—Ç–æ—Ä—ñ—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤: –ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω—É:", e);
                }
            }

            try {
                // –í–∏–ø—Ä–∞–≤–ª–µ–Ω–∏–π URL —à–ª—è—Ö
                const response = await api.apiRequest(
                    `user/${userId}/raffles-history/${raffleId}`,
                    'GET',
                    null,
                    {
                        timeout: 8000,
                        suppressErrors: true,
                        hideLoader: true, // –í–∂–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –≤–ª–∞—Å–Ω–∏–π –ª–æ–∞–¥–µ—Ä
                        forceCleanup: true
                    }
                );

                hideLoading(`history-details-${raffleId}`);
                _lastRequestTime = Date.now();

                if (response && response.status === 'success') {
                    // –ö–µ—à—É—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                    if (response.data) {
                        _raffleDetailsCache[raffleId] = response.data;
                    }

                    // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –æ—Ç—Ä–∏–º–∞–Ω—ñ –¥–∞–Ω—ñ –ª–æ–∫–∞–ª—å–Ω–æ
                    if (response.data && localRaffleData) {
                        // –û–Ω–æ–≤–ª—é—î–º–æ –ª–æ–∫–∞–ª—å–Ω—ñ –¥–∞–Ω—ñ –∑ —Å–µ—Ä–≤–µ—Ä–∞
                        const updatedHistoryData = _historyData.map(item => {
                            if (item && item.raffle_id === raffleId) {
                                return { ...item, ...response.data };
                            }
                            return item;
                        });
                        _historyData = updatedHistoryData;

                        // –û–Ω–æ–≤–ª—é—î–º–æ —Ç–∞–∫–æ–∂ —É –∫–µ—à—ñ
                        if (_historyCache.data) {
                            _historyCache.data = updatedHistoryData;
                        }

                        // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –≤ localStorage
                        this._saveHistoryToCache(_historyData);
                    }

                    // –ï–º—ñ—Ç—É—î–º–æ –ø–æ–¥—ñ—é –ø—Ä–æ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–µ—Ç–∞–ª–µ–π —Ä–æ–∑—ñ–≥—Ä–∞—à—É
                    WinixRaffles.events.emit('raffle-details-loaded', {
                        raffleId,
                        data: response.data
                    });

                    return response.data;
                } else {
                    throw new Error((response && response.message) || '–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–µ—Ç–∞–ª–µ–π —Ä–æ–∑—ñ–≥—Ä–∞—à—É');
                }
            } catch (apiError) {
                console.error(`‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø–∏—Ç—É API –¥–ª—è —Ä–æ–∑—ñ–≥—Ä–∞—à—É ${raffleId}:`, apiError);

                // –Ø–∫—â–æ —î –ª–æ–∫–∞–ª—å–Ω—ñ –¥–∞–Ω—ñ - –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ —ó—Ö
                if (localRaffleData) {
                    console.log("üìã –Ü—Å—Ç–æ—Ä—ñ—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤: –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –ª–æ–∫–∞–ª—å–Ω—ñ –¥–∞–Ω—ñ –ø—ñ—Å–ª—è –ø–æ–º–∏–ª–∫–∏ API");

                    // –ö–µ—à—É—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                    _raffleDetailsCache[raffleId] = localRaffleData;

                    return localRaffleData;
                }

                throw apiError;
            }
        } catch (error) {
            console.error(`‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–µ—Ç–∞–ª–µ–π —Ä–æ–∑—ñ–≥—Ä–∞—à—É ${raffleId}:`, error);
            hideLoading(`history-details-${raffleId}`);

            // –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–º–∏–ª–∫—É —Ç—ñ–ª—å–∫–∏ —è–∫—â–æ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –Ω—ñ—è–∫–∏—Ö –¥–∞–Ω–∏—Ö
            if (!_historyData.find(item => item && item.raffle_id === raffleId)) {
                showToast('–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –¥–µ—Ç–∞–ª—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—É', 'error');
            }

            // –°—Ç–≤–æ—Ä—é—î–º–æ –±–∞–∑–æ–≤—ñ –¥–∞–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—É —è–∫—â–æ –Ω—ñ—á–æ–≥–æ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ
            const fallbackData = {
                raffle_id: raffleId,
                title: "–î–∞–Ω—ñ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ñ",
                winners: [],
                status: "unknown",
                source: "fallback_after_error"
            };

            // –ö–µ—à—É—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            _raffleDetailsCache[raffleId] = fallbackData;

            return fallbackData;
        }
    }
/**
     * –°—Ç–≤–æ—Ä–µ–Ω–Ω—è HTML –¥–ª—è –ø–æ—Ä–æ–∂–Ω—å–æ—ó —ñ—Å—Ç–æ—Ä—ñ—ó
     * @param {string} message - –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è
     * @returns {string} HTML –¥–ª—è –ø–æ—Ä–æ–∂–Ω—å–æ—ó —ñ—Å—Ç–æ—Ä—ñ—ó
     * @private
     */
/**
 * –°—Ç–≤–æ—Ä–µ–Ω–Ω—è HTML –¥–ª—è –ø–æ—Ä–æ–∂–Ω—å–æ—ó —ñ—Å—Ç–æ—Ä—ñ—ó
 * @param {string} errorMessage - –û–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É
 * @returns {string} HTML –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è
 * @private
 */
_createEmptyHistoryHTML(errorMessage = '–£ –≤–∞—Å —â–µ –Ω–µ–º–∞—î —ñ—Å—Ç–æ—Ä—ñ—ó —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤') {
    return `
        <div class="empty-history">
            <div class="empty-history-icon">üìã</div>
            <h3>–Ü—Å—Ç–æ—Ä—ñ—è –ø–æ—Ä–æ–∂–Ω—è</h3>
            <p>${errorMessage}</p>
            <button class="refresh-history-btn" onclick="WinixRaffles.history.displayHistory('history-container', true)">
                <span class="refresh-icon">üîÑ</span> –û–Ω–æ–≤–∏—Ç–∏
            </button>
        </div>
    `;
}

/**
 * –û—Ç—Ä–∏–º–∞–Ω–Ω—è –∑–∞–≥–∞–ª—å–Ω–æ—ó –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –ø—Ä–∏–∑—ñ–≤ –∑ —É—Å—ñ—Ö –≤–∏–≥—Ä–∞—à—ñ–≤
 * @param {Array} raffles - –ú–∞—Å–∏–≤ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
 * @returns {string} –ó–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–∞ –∑ –≤–∞–ª—é—Ç–æ—é
 * @private
 */
_getTotalPrizeAmount(raffles) {
    if (!Array.isArray(raffles) || raffles.length === 0) return '0 WINIX';

    let total = 0;
    let currency = 'WINIX';

    try {
        raffles.forEach(raffle => {
            if (raffle && raffle.prize) {
                // –í–∏–¥–æ–±—É–≤–∞—î–º–æ —á–∏—Å–ª–æ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è –ø—Ä–∏–∑—É
                const prizeMatch = raffle.prize.match(/(\d+(?:\.\d+)?)/);
                if (prizeMatch && prizeMatch[1]) {
                    total += parseFloat(prizeMatch[1]);
                }

                // –í–∏–¥–æ–±—É–≤–∞—î–º–æ –≤–∞–ª—é—Ç—É
                const currencyMatch = raffle.prize.match(/[^\d\s.,]+/);
                if (currencyMatch && currencyMatch[0]) {
                    currency = currencyMatch[0];
                }
            }
        });
    } catch (error) {
        console.error("–ü–æ–º–∏–ª–∫–∞ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É –∑–∞–≥–∞–ª—å–Ω–æ—ó —Å—É–º–∏ –ø—Ä–∏–∑—ñ–≤:", error);
        return '0 WINIX';
    }

    return `${total.toFixed(2)} ${currency}`;
}

/**
 * –û—Ç—Ä–∏–º–∞–Ω–Ω—è –∑–∞–≥–∞–ª—å–Ω–æ—ó –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –ø—Ä–∏–∑—ñ–≤ —è–∫ —á–∏—Å–ª–æ
 * @param {Array} raffles - –ú–∞—Å–∏–≤ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
 * @returns {number} –ó–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–∞
 * @private
 */
_getTotalPrizeAmountNumber(raffles) {
    if (!Array.isArray(raffles) || raffles.length === 0) return 0;

    let total = 0;

    try {
        raffles.forEach(raffle => {
            if (raffle && raffle.prize) {
                // –í–∏–¥–æ–±—É–≤–∞—î–º–æ —á–∏—Å–ª–æ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è –ø—Ä–∏–∑—É
                const prizeMatch = raffle.prize.match(/(\d+(?:\.\d+)?)/);
                if (prizeMatch && prizeMatch[1]) {
                    total += parseFloat(prizeMatch[1]);
                }
            }
        });
    } catch (error) {
        console.error("–ü–æ–º–∏–ª–∫–∞ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É –∑–∞–≥–∞–ª—å–Ω–æ—ó —Å—É–º–∏ –ø—Ä–∏–∑—ñ–≤:", error);
        return 0;
    }

    return total;
}

/**
 * –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –∑–∞–≥–∞–ª—å–Ω–æ—ó –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –≤–∏—Ç—Ä–∞—á–µ–Ω–∏—Ö –∂–µ—Ç–æ–Ω—ñ–≤
 * @param {Array} history - –Ü—Å—Ç–æ—Ä—ñ—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
 * @returns {number} –ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∂–µ—Ç–æ–Ω—ñ–≤
 * @private
 */
_calculateTotalTokensSpent(history) {
    if (!Array.isArray(history) || history.length === 0) return 0;

    let total = 0;

    try {
        history.forEach(entry => {
            if (entry && entry.entry_count) {
                total += parseInt(entry.entry_count);
            }
        });
    } catch (error) {
        console.error("–ü–æ–º–∏–ª–∫–∞ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É –≤–∏—Ç—Ä–∞—á–µ–Ω–∏—Ö –∂–µ—Ç–æ–Ω—ñ–≤:", error);
        return 0;
    }

    return total;
}
    /**
     * –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —ñ—Å—Ç–æ—Ä—ñ—ó —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
     * @param {string} containerId - ID –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è
     * @param {boolean} forceRefresh - –ü—Ä–∏–º—É—Å–æ–≤–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö
     */
    async displayHistory(containerId = 'history-container', forceRefresh = false) {
        const container = document.getElementById(containerId);
        if (!container) {
            console.error(`–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑ ID '${containerId}' –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ`);
            return;
        }

        // –î–æ–¥–∞—î–º–æ —Å—ñ—Ç–∫—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        this._addStatsGrid(container);

        // –ü–µ—Ä—à –Ω—ñ–∂ —Ä–æ–±–∏—Ç–∏ –∑–∞–ø–∏—Ç, –≤—ñ–¥–æ–±—Ä–∞–∑–∏–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
        if (!_historyData.length || forceRefresh) {
            container.innerHTML = `
                <div class="loading-placeholder">
                    <div class="loading-spinner"></div>
                    <div class="loading-text">–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —ñ—Å—Ç–æ—Ä—ñ—ó...</div>
                    <div class="loading-subtext">–ó–∞—á–µ–∫–∞–π—Ç–µ, –±—É–¥—å –ª–∞—Å–∫–∞</div>
                </div>
            `;
        }

        try {
            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –ø—Ä–∏—Å—Ç—Ä—ñ–π –æ–Ω–ª–∞–π–Ω
            if (!isOnline() && !forceRefresh) {
                // –Ø–∫—â–æ –æ—Ñ–ª–∞–π–Ω, –ø–æ–∫–∞–∑—É—î–º–æ –∫–µ—à–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ, —è–∫—â–æ —î
                if (_historyData.length === 0) {
                    container.innerHTML = this._createEmptyHistoryHTML("–ù–µ–º–∞—î –∑'—î–¥–Ω–∞–Ω–Ω—è –∑ –Ü–Ω—Ç–µ—Ä–Ω–µ—Ç–æ–º. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è —Ç–∞ —Å–ø—Ä–æ–±—É–π—Ç–µ –∑–Ω–æ–≤—É.");
                    return;
                }
            }

            // –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ —ñ—Å—Ç–æ—Ä—ñ—ó
            const history = await this.getRafflesHistory({}, forceRefresh);

            // –Ø–∫—â–æ –¥–∞–Ω—ñ –≤—ñ–¥—Å—É—Ç–Ω—ñ –∞–±–æ –ø–æ—Ä–æ–∂–Ω—ñ
            if (!history || !Array.isArray(history) || history.length === 0) {
                container.innerHTML = this._createEmptyHistoryHTML();

                // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∑ –Ω—É–ª—è–º–∏
                this._updateStatistics(0, 0, 0, 0);
                return;
            }

            // –†–æ–∑–¥—ñ–ª—è—î–º–æ —ñ—Å—Ç–æ—Ä—ñ—é –Ω–∞ –≤–∏–≥—Ä–∞—à–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ —Ç–∞ –∑–≤–∏—á–∞–π–Ω—ñ —É—á–∞—Å—Ç—ñ
            let wonRaffles = [];
            let participatedRaffles = [];

            try {
                wonRaffles = history.filter(item => item && item.status === 'won');
                participatedRaffles = history.filter(item => item && item.status !== 'won');
            } catch (error) {
                console.error("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—ó —ñ—Å—Ç–æ—Ä—ñ—ó:", error);
                container.innerHTML = this._createEmptyHistoryHTML('–ü–æ–º–∏–ª–∫–∞ –æ–±—Ä–æ–±–∫–∏ –¥–∞–Ω–∏—Ö. –°–ø—Ä–æ–±—É–π—Ç–µ –æ–Ω–æ–≤–∏—Ç–∏ —Å—Ç–æ—Ä—ñ–Ω–∫—É.');
                return;
            }

            // –°—Ç–≤–æ—Ä—é—î–º–æ HTML –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è
            let historyHTML = `
                <div class="history-filters">
                    <div class="filter-group">
                        <label>–¢–∏–ø:</label>
                        <select id="history-type-filter">
                            <option value="all" selected>–£—Å—ñ —Ç–∏–ø–∏</option>
                            <option value="daily">–©–æ–¥–µ–Ω–Ω—ñ</option>
                            <option value="main">–î–∂–µ–∫–ø–æ—Ç–∏</option>
                        </select>
                    </div>
                    <div class="filter-group">
                        <label>–°—Ç–∞—Ç—É—Å:</label>
                        <select id="history-status-filter">
                            <option value="all" selected>–£—Å—ñ —Å—Ç–∞—Ç—É—Å–∏</option>
                            <option value="won">–ü–µ—Ä–µ–º–æ–≥–∏</option>
                            <option value="participated">–£—á–∞—Å—Ç—å</option>
                        </select>
                    </div>
                    <div class="filter-group">
                        <label>–ü–µ—Ä—ñ–æ–¥:</label>
                        <select id="history-period-filter">
                            <option value="all" selected>–í–µ—Å—å —á–∞—Å</option>
                            <option value="week">–¢–∏–∂–¥–µ–Ω—å</option>
                            <option value="month">–ú—ñ—Å—è—Ü—å</option>
                            <option value="year">–†—ñ–∫</option>
                        </select>
                    </div>
                    <button id="refresh-history-btn" class="refresh-btn">
                        <span class="refresh-icon">üîÑ</span>
                    </button>
                </div>

                <div class="history-stats">
                    <div class="stats-item">
                        <div class="stats-value">${history.length}</div>
                        <div class="stats-label">–í—Å—å–æ–≥–æ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤</div>
                    </div>
                    <div class="stats-item">
                        <div class="stats-value">${wonRaffles.length}</div>
                        <div class="stats-label">–ü–µ—Ä–µ–º–æ–≥</div>
                    </div>
                    <div class="stats-item">
                        <div class="stats-value">${this._getTotalPrizeAmount(wonRaffles)}</div>
                        <div class="stats-label">WINIX –≤–∏–≥—Ä–∞–Ω–æ</div>
                    </div>
                </div>
            `;

            // –î–æ–¥–∞—î–º–æ —Å–µ–∫—Ü—ñ—é "–ú–æ—ó –ø–µ—Ä–µ–º–æ–≥–∏" —è–∫—â–æ —î –≤–∏–≥—Ä–∞—à—ñ
            if (wonRaffles.length > 0) {
                historyHTML += `
                    <div class="history-section">
                        <h3 class="section-title">–ú–æ—ó –ø–µ—Ä–µ–º–æ–≥–∏</h3>
                        <div class="history-cards">
                            ${wonRaffles.map(raffle => this._createHistoryCardHTML(raffle)).join('')}
                        </div>
                    </div>
                `;
            }

            // –î–æ–¥–∞—î–º–æ —Å–µ–∫—Ü—ñ—é —É—á–∞—Å—Ç—ñ
            historyHTML += `
                <div class="history-section">
                    <h3 class="section-title">–Ü—Å—Ç–æ—Ä—ñ—è —É—á–∞—Å—Ç—ñ</h3>
                    <div class="history-cards">
                        ${participatedRaffles.length > 0 
                            ? participatedRaffles.map(raffle => this._createHistoryCardHTML(raffle)).join('')
                            : '<div class="empty-history-section">–£ –≤–∞—Å –ø–æ–∫–∏ –Ω–µ–º–∞—î —É—á–∞—Å—Ç—ñ –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à–∞—Ö</div>'}
                    </div>
                </div>
            `;

            // –í—Å—Ç–∞–≤–ª—è—î–º–æ HTML –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
            container.innerHTML = historyHTML;

            // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π –¥–ª—è —Ñ—ñ–ª—å—Ç—Ä—ñ–≤
            document.getElementById('history-type-filter')?.addEventListener('change', () => {
                this._applyHistoryFilters(containerId);
            });

            document.getElementById('history-status-filter')?.addEventListener('change', () => {
                this._applyHistoryFilters(containerId);
            });

            document.getElementById('history-period-filter')?.addEventListener('change', () => {
                this._applyHistoryFilters(containerId);
            });

            // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
            document.getElementById('refresh-history-btn')?.addEventListener('click', () => {
                // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –ø—Ä–∏—Å—Ç—Ä—ñ–π –æ–Ω–ª–∞–π–Ω
                if (!isOnline()) {
                    showToast("–ù–µ–º–∞—î –∑'—î–¥–Ω–∞–Ω–Ω—è –∑ –Ü–Ω—Ç–µ—Ä–Ω–µ—Ç–æ–º. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è —Ç–∞ —Å–ø—Ä–æ–±—É–π—Ç–µ –∑–Ω–æ–≤—É.", "error");
                    return;
                }
                this.displayHistory(containerId, true);
            });

            // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π –¥–ª—è –∫–∞—Ä—Ç–æ–∫ —ñ—Å—Ç–æ—Ä—ñ—ó
            this._addHistoryCardEventListeners();

            // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            const totalSpent = this._calculateTotalTokensSpent(history);
            this._updateStatistics(history.length, wonRaffles.length, this._getTotalPrizeAmountNumber(wonRaffles), totalSpent);

            // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–¥—ñ—é –ø—Ä–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —ñ—Å—Ç–æ—Ä—ñ—ó
            WinixRaffles.events.emit('history-displayed', {
                total: history.length,
                wins: wonRaffles.length,
                participated: participatedRaffles.length
            });
        } catch (error) {
            console.error("–ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —ñ—Å—Ç–æ—Ä—ñ—ó:", error);
            let errorMessage = !isOnline()
                ? "–ù–µ–º–∞—î –∑'—î–¥–Ω–∞–Ω–Ω—è –∑ –Ü–Ω—Ç–µ—Ä–Ω–µ—Ç–æ–º. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è —Ç–∞ —Å–ø—Ä–æ–±—É–π—Ç–µ –∑–Ω–æ–≤—É."
                : "–©–æ—Å—å –ø—ñ—à–ª–æ –Ω–µ —Ç–∞–∫. –°–ø—Ä–æ–±—É–π—Ç–µ –æ–Ω–æ–≤–∏—Ç–∏ —Å—Ç–æ—Ä—ñ–Ω–∫—É.";

            container.innerHTML = this._createEmptyHistoryHTML(errorMessage);
        }
    }

    /**
     * –ï–∫—Å–ø–æ—Ä—Ç —ñ—Å—Ç–æ—Ä—ñ—ó —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ —É CSV
     */
    async exportHistoryToCSV() {
        try {
            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –ø—Ä–∏—Å—Ç—Ä—ñ–π –æ–Ω–ª–∞–π–Ω
            if (!isOnline()) {
                const offlineHistory = _historyData.length > 0 ? _historyData : (_historyCache.data || []);
                if (offlineHistory.length === 0) {
                    showToast("–ù–µ–º–∞—î –¥–∞–Ω–∏—Ö –¥–ª—è –µ–∫—Å–ø–æ—Ä—Ç—É. –ü—ñ–¥–∫–ª—é—á—ñ—Ç—å—Å—è –¥–æ –Ü–Ω—Ç–µ—Ä–Ω–µ—Ç—É, —â–æ–± –æ–Ω–æ–≤–∏—Ç–∏ —ñ—Å—Ç–æ—Ä—ñ—é.", "error");
                    return;
                }
                // –Ø–∫—â–æ —î –∫–µ—à–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —ó—Ö
                return this._generateAndDownloadCSV(offlineHistory);
            }

            // –û—Ç—Ä–∏–º—É—î–º–æ –∞–∫—Ç—É–∞–ª—å–Ω—ñ –¥–∞–Ω—ñ
            const history = await this.getRafflesHistory();

            if (!history || !Array.isArray(history) || history.length === 0) {
                showToast('–ù–µ–º–∞—î –¥–∞–Ω–∏—Ö –¥–ª—è –µ–∫—Å–ø–æ—Ä—Ç—É', 'warning');
                return;
            }

            this._generateAndDownloadCSV(history);
        } catch (error) {
            console.error('–ü–æ–º–∏–ª–∫–∞ –µ–∫—Å–ø–æ—Ä—Ç—É —ñ—Å—Ç–æ—Ä—ñ—ó:', error);
            showToast('–ù–µ –≤–¥–∞–ª–æ—Å—è –µ–∫—Å–ø–æ—Ä—Ç—É–≤–∞—Ç–∏ —ñ—Å—Ç–æ—Ä—ñ—é', 'error');
        }
    }

    /**
     * –î–æ–¥–∞—Ç–∫–æ–≤—ñ –º–µ—Ç–æ–¥–∏ –∫–ª–∞—Å—É...
     */

    // –î–æ–¥–∞—Ç–∫–æ–≤—ñ –ø—Ä–∏–≤–∞—Ç–Ω—ñ –º–µ—Ç–æ–¥–∏ –Ω–µ –≤–∫–ª—é—á–µ–Ω—ñ –≤ —Ü–µ–π —Ñ—Ä–∞–≥–º–µ–Ω—Ç –∫–æ–¥—É –¥–ª—è —Å—Ç–∏—Å–ª–æ—Å—Ç—ñ.
    // –í–æ–Ω–∏ –∑–∞–ª–∏—à–∞—é—Ç—å—Å—è –±–µ–∑ –∑–º—ñ–Ω.

    /**
     * –°–∫–∏–¥–∞–Ω–Ω—è —Å—Ç–∞–Ω—É –∑–∞–ø–∏—Ç—ñ–≤
     * @returns {boolean} –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–ø–µ—Ä–∞—Ü—ñ—ó
     */
    resetRequestState() {
        _requestInProgress = false;
        _isLoading = false;

        // –û—á–∏—â–∞—î–º–æ —Ç–∞–π–º–∞—É—Ç–∏
        if (_requestTimeoutId) {
            clearTimeout(_requestTimeoutId);
            _requestTimeoutId = null;
        }

        // –ü—Ä–∏—Ö–æ–≤—É—î–º–æ –ª–æ–∞–¥–µ—Ä
        hideLoading('history-request');

        console.log("üîÑ –Ü—Å—Ç–æ—Ä—ñ—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤: –ü—Ä–∏–º—É—Å–æ–≤–µ —Å–∫–∏–¥–∞–Ω–Ω—è —Å—Ç–∞–Ω—É –∑–∞–ø–∏—Ç—ñ–≤");
        return true;
    }

    /**
     * –û—á–∏—â–µ–Ω–Ω—è –∫–µ—à—É
     */
    clearCache() {
        _historyCache = {
            data: null,
            timestamp: 0,
            ttl: _historyCache.ttl
        };
        _historyData = [];
        _isLoading = false;
        _requestInProgress = false;
        _failedAttempts = 0;
        _raffleDetailsCache = {};

        // –û—á–∏—â–∞—î–º–æ —Ç–∞–π–º–∞—É—Ç–∏
        if (_requestTimeoutId) {
            clearTimeout(_requestTimeoutId);
            _requestTimeoutId = null;
        }

        console.log("üßπ –Ü—Å—Ç–æ—Ä—ñ—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤: –ö–µ—à –æ—á–∏—â–µ–Ω–æ");
    }

    /**
     * –û—á–∏—â–µ–Ω–Ω—è —Ä–µ—Å—É—Ä—Å—ñ–≤ —ñ –∑–∞–∫—Ä–∏—Ç—Ç—è –º–æ–¥—É–ª—è
     */
    destroy() {
        this.resetRequestState();
        this.clearCache();

        // –í–∏–¥–∞–ª—è—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π –º–µ—Ä–µ–∂—ñ
        window.removeEventListener('online', () => {});
        window.removeEventListener('offline', () => {});

        console.log("üö´ –Ü—Å—Ç–æ—Ä—ñ—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤: –ú–æ–¥—É–ª—å —ñ—Å—Ç–æ—Ä—ñ—ó —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ –∑–∞–∫—Ä–∏—Ç–æ");
    }

    // –Ü–Ω—à—ñ –º–µ—Ç–æ–¥–∏ –∫–ª–∞—Å—É HistoryModule...
}

// –°—Ç–≤–æ—Ä—é—î–º–æ –µ–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—É
const historyModule = new HistoryModule();

// –î–æ–¥–∞—î–º–æ –≤ –≥–ª–æ–±–∞–ª—å–Ω–∏–π –æ–±'—î–∫—Ç –¥–ª—è –∑–≤–æ—Ä–æ—Ç–Ω–æ—ó —Å—É–º—ñ—Å–Ω–æ—Å—Ç—ñ
WinixRaffles.history = historyModule;

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ
if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', () => historyModule.init());
} else {
    setTimeout(() => historyModule.init(), 100);
}

export default historyModule;