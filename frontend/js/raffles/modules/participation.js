/**
 * –ú–æ–¥—É–ª—å –¥–ª—è —É—á–∞—Å—Ç—ñ –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à–∞—Ö WINIX
 */

import WinixRaffles from '../globals.js';
import { showLoading, hideLoading, showToast } from '../utils/ui-helpers.js';
import api from '../services/api.js';
import { formatDate } from '../utils/formatters.js';

// –ü—Ä–∏–≤–∞—Ç–Ω—ñ –∑–º—ñ–Ω–Ω—ñ
let _isParticipating = false;
let _participationTimeoutId = null;
let _raffleDetailsCache = {};

/**
 * –ö–ª–∞—Å –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ —É—á–∞—Å—Ç—é –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à–∞—Ö
 */
class ParticipationModule {
    /**
     * –û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–µ—Ç–∞–ª—å–Ω–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ —Ä–æ–∑—ñ–≥—Ä–∞—à
     * @param {string} raffleId - ID —Ä–æ–∑—ñ–≥—Ä–∞—à—É
     * @returns {Promise<Object>} –î–∞–Ω—ñ –ø—Ä–æ —Ä–æ–∑—ñ–≥—Ä–∞—à
     */
    async getRaffleDetails(raffleId) {
        try {
            if (!raffleId) {
                throw new Error('ID —Ä–æ–∑—ñ–≥—Ä–∞—à—É –Ω–µ –≤–∫–∞–∑–∞–Ω–æ');
            }

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∫–µ—à
            if (_raffleDetailsCache[raffleId]) {
                console.log(`üìã Raffles: –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –∫–µ—à–æ–≤–∞–Ω–∏—Ö –¥–∞–Ω–∏—Ö –¥–ª—è —Ä–æ–∑—ñ–≥—Ä–∞—à—É ${raffleId}`);
                return _raffleDetailsCache[raffleId];
            }

            showLoading('–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–µ—Ç–∞–ª–µ–π —Ä–æ–∑—ñ–≥—Ä–∞—à—É...');

            // –ü–æ–∫—Ä–∞—â–µ–Ω—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ –∑–∞–ø–∏—Ç—É
            const response = await api.apiRequest(`/api/raffles/${raffleId}`, 'GET', null, {
                timeout: 10000,
                suppressErrors: true,
                forceCleanup: true
            });

            hideLoading();

            if (response && response.status === 'success') {
                // –ö–µ—à—É—î–º–æ –æ—Ç—Ä–∏–º–∞–Ω—ñ –¥–∞–Ω—ñ
                if (response.data) {
                    _raffleDetailsCache[raffleId] = response.data;
                }
                return response.data;
            } else {
                throw new Error((response && response.message) || '–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–µ—Ç–∞–ª–µ–π —Ä–æ–∑—ñ–≥—Ä–∞—à—É');
            }
        } catch (error) {
            console.error(`‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–µ—Ç–∞–ª–µ–π —Ä–æ–∑—ñ–≥—Ä–∞—à—É ${raffleId}:`, error);
            hideLoading();
            showToast('–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –¥–µ—Ç–∞–ª—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—É. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.');
            return null;
        }
    }

    /**
     * –£—á–∞—Å—Ç—å —É —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ
     * @param {string} raffleId - ID —Ä–æ–∑—ñ–≥—Ä–∞—à—É
     * @param {number} entryCount - –ö—ñ–ª—å–∫—ñ—Å—Ç—å –∂–µ—Ç–æ–Ω—ñ–≤ –¥–ª—è —É—á–∞—Å—Ç—ñ
     * @returns {Promise<Object>} –†–µ–∑—É–ª—å—Ç–∞—Ç —É—á–∞—Å—Ç—ñ
     */
    async participateInRaffle(raffleId, entryCount = 1) {
        try {
            // –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ —Å–∫–∏–¥–∞–Ω–Ω—è –∑–∞–≤–∏—Å–∞—é—á–∏—Ö –∑–∞–ø–∏—Ç—ñ–≤
            const now = Date.now();
            if (_isParticipating && !_participationTimeoutId) {
                console.warn("‚ö†Ô∏è Raffles: –í–∏—è–≤–ª–µ–Ω–æ –ø–æ—Ç–µ–Ω—Ü—ñ–π–Ω–æ –∑–∞–≤–∏—Å–∞—é—á–∏–π –∑–∞–ø–∏—Ç —É—á–∞—Å—Ç—ñ, —Å–∫–∏–¥–∞—î–º–æ");
                _isParticipating = false;
            }

            if (_isParticipating) {
                console.log("‚è≥ Raffles: –£—á–∞—Å—Ç—å —É —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ –≤–∂–µ –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è");
                return { status: 'error', message: '–£—á–∞—Å—Ç—å —É —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ –≤–∂–µ –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è' };
            }

            _isParticipating = true;

            // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Ç–∞–π–º–∞—É—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ–≥–æ —Å–∫–∏–¥–∞–Ω–Ω—è
            if (_participationTimeoutId) {
                clearTimeout(_participationTimeoutId);
            }
            _participationTimeoutId = setTimeout(() => {
                if (_isParticipating) {
                    console.warn("‚ö†Ô∏è Raffles: –£—á–∞—Å—Ç—å —É —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ —Ç—Ä–∏–≤–∞—î –∑–∞–Ω–∞–¥—Ç–æ –¥–æ–≤–≥–æ, —Å–∫–∏–¥–∞—î–º–æ —Å—Ç–∞–Ω");
                    _isParticipating = false;
                }
            }, 30000); // 30 —Å–µ–∫—É–Ω–¥

            showLoading('–ë–µ—Ä–µ–º–æ —É—á–∞—Å—Ç—å —É —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ...');

            const userId = api.getUserId();
            if (!userId) {
                throw new Error('ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
            }

            // –ü–æ–∫—Ä–∞—â–µ–Ω—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ –∑–∞–ø–∏—Ç—É
            const response = await api.apiRequest(`/api/user/${userId}/participate-raffle`, 'POST', {
                raffle_id: raffleId,
                entry_count: entryCount
            }, {
                timeout: 15000,
                suppressErrors: true,
                forceCleanup: true
            });

            // –ó–ê–í–ñ–î–ò –ø—Ä–∏—Ö–æ–≤—É—î–º–æ –ª–æ–∞–¥–µ—Ä —ñ —Å–∫–∏–¥–∞—î–º–æ –ø—Ä–∞–ø–æ—Ä—Ü—ñ
            hideLoading();
            _isParticipating = false;

            // –û—á–∏—â–∞—î–º–æ —Ç–∞–π–º–∞—É—Ç
            if (_participationTimeoutId) {
                clearTimeout(_participationTimeoutId);
                _participationTimeoutId = null;
            }

            if (response && response.status === 'success') {
                // –û–Ω–æ–≤–ª—é—î–º–æ –∫–µ—à –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
                if (WinixRaffles.active && typeof WinixRaffles.active.getActiveRaffles === 'function') {
                    await WinixRaffles.active.getActiveRaffles(true);
                }

                // –û–Ω–æ–≤–ª—é—î–º–æ –±–∞–ª–∞–Ω—Å –º–æ–Ω–µ—Ç —É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
                await this.updateUserBalance();

                // –û–ø–æ–≤—ñ—â–∞—î–º–æ –ø—Ä–æ —É—Å–ø—ñ—à–Ω—É —É—á–∞—Å—Ç—å
                document.dispatchEvent(new CustomEvent('winix:raffle-participated', {
                    detail: {
                        raffleId: raffleId,
                        entryCount: entryCount
                    }
                }));

                return {
                    status: 'success',
                    message: response.data?.message || '–í–∏ —É—Å–ø—ñ—à–Ω–æ –≤–∑—è–ª–∏ —É—á–∞—Å—Ç—å —É —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ',
                    data: response.data
                };
            } else {
                throw new Error((response && response.message) || '–ü–æ–º–∏–ª–∫–∞ —É—á–∞—Å—Ç—ñ –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ');
            }
        } catch (error) {
            console.error(`‚ùå –ü–æ–º–∏–ª–∫–∞ —É—á–∞—Å—Ç—ñ –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ ${raffleId}:`, error);

            // –ó–ê–í–ñ–î–ò —Å–∫–∏–¥–∞—î–º–æ –ø—Ä–∞–ø–æ—Ä—Ü—ñ —Ç–∞ –ø—Ä–∏—Ö–æ–≤—É—î–º–æ –ª–æ–∞–¥–µ—Ä
            hideLoading();
            _isParticipating = false;

            if (_participationTimeoutId) {
                clearTimeout(_participationTimeoutId);
                _participationTimeoutId = null;
            }

            return { status: 'error', message: error.message || '–ü–æ–º–∏–ª–∫–∞ —É—á–∞—Å—Ç—ñ –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ' };
        }
    }

    /**
     * –í—ñ–¥–∫—Ä–∏—Ç—Ç—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞ –∑ –¥–µ—Ç–∞–ª—è–º–∏ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
     * @param {string} raffleId - ID —Ä–æ–∑—ñ–≥—Ä–∞—à—É
     * @param {string} raffleType - –¢–∏–ø —Ä–æ–∑—ñ–≥—Ä–∞—à—É
     */
    openRaffleDetails(raffleId, raffleType) {
        if (!raffleId) {
            showToast('ID —Ä–æ–∑—ñ–≥—Ä–∞—à—É –Ω–µ –≤–∫–∞–∑–∞–Ω–æ');
            return;
        }

        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –∂–µ—Ç–æ–Ω—ñ–≤
        if (api && typeof api.getUserData === 'function') {
            api.getUserData().then(userData => {
                const coinsBalance = userData.data?.coins || 0;

                if (coinsBalance < 1) {
                    showToast('–î–ª—è —É—á–∞—Å—Ç—ñ –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ –ø–æ—Ç—Ä—ñ–±–µ–Ω —â–æ–Ω–∞–π–º–µ–Ω—à–µ 1 –∂–µ—Ç–æ–Ω');
                    return;
                }

                // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∫–µ—à
                if (_raffleDetailsCache[raffleId]) {
                    console.log(`üìã Raffles: –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –∫–µ—à–æ–≤–∞–Ω–∏—Ö –¥–∞–Ω–∏—Ö –¥–ª—è —Ä–æ–∑—ñ–≥—Ä–∞—à—É ${raffleId}`);
                    this.processRaffleDetails(_raffleDetailsCache[raffleId], raffleType);
                    return;
                }

                // –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
                this.getRaffleDetails(raffleId).then(raffleData => {
                    if (!raffleData) {
                        showToast('–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—É');
                        return;
                    }

                    // –û–±—Ä–æ–±–ª—è—î–º–æ –¥–µ—Ç–∞–ª—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
                    this.processRaffleDetails(raffleData, raffleType);
                }).catch(error => {
                    console.error('–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–µ—Ç–∞–ª–µ–π —Ä–æ–∑—ñ–≥—Ä–∞—à—É:', error);
                    showToast('–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –¥–µ—Ç–∞–ª—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—É. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.');
                });
            }).catch(error => {
                console.error('–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:', error);
                showToast('–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.');
            });
        } else {
            showToast('API –Ω–µ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ –∫–æ—Ä–µ–∫—Ç–Ω–æ. –û–Ω–æ–≤—ñ—Ç—å —Å—Ç–æ—Ä—ñ–Ω–∫—É.');
        }
    }

    /**
     * –û–±—Ä–æ–±–∫–∞ –¥–µ—Ç–∞–ª–µ–π —Ä–æ–∑—ñ–≥—Ä–∞—à—É
     * @param {Object} raffleData - –î–∞–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
     * @param {string} raffleType - –¢–∏–ø —Ä–æ–∑—ñ–≥—Ä–∞—à—É
     */
    processRaffleDetails(raffleData, raffleType) {
        if (!raffleData) {
            showToast('–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—É');
            return;
        }

        // –í—ñ–¥–∫—Ä–∏–≤–∞—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–µ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
        const modalId = raffleType === 'daily' ? 'daily-raffle-modal' : 'main-raffle-modal';
        const modal = document.getElementById(modalId);

        if (!modal) {
            console.error(`–ú–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ –∑ id ${modalId} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ`);
            showToast('–ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –¥–µ—Ç–∞–ª–µ–π —Ä–æ–∑—ñ–≥—Ä–∞—à—É');
            return;
        }

        // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –∑–Ω–∞—á–µ–Ω–Ω—è –ø–æ–ª—ñ–≤ —É –º–æ–¥–∞–ª—å–Ω–æ–º—É –≤—ñ–∫–Ω—ñ
        const inputId = raffleType === 'daily' ? 'daily-token-amount' : 'main-token-amount';
        const input = document.getElementById(inputId);
        if (input) {
            input.value = '1';

            // –û—Ç—Ä–∏–º—É—î–º–æ –±–∞–ª–∞–Ω—Å –∂–µ—Ç–æ–Ω—ñ–≤
            api.getUserData().then(userData => {
                const coinsBalance = userData.data?.coins || 0;

                // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è —Ä—ñ–≤–Ω–µ –±–∞–ª–∞–Ω—Å—É –∂–µ—Ç–æ–Ω—ñ–≤
                const tokenCost = raffleType === 'daily' ? 1 : 3;
                const maxTickets = Math.floor(coinsBalance / tokenCost);
                input.max = maxTickets;

                // –ü–æ–∫–∞–∑—É—î–º–æ –∫–Ω–æ–ø–∫—É "–í–°–Ü", —è–∫—â–æ –±–∞–ª–∞–Ω—Å –±—ñ–ª—å—à–µ 1
                const allButtonId = raffleType === 'daily' ? 'daily-all-tokens-btn' : 'main-all-tokens-btn';
                const allButton = document.getElementById(allButtonId);

                if (allButton) {
                    if (coinsBalance > tokenCost) {
                        allButton.style.display = 'block';

                        // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–í–°–Ü"
                        allButton.onclick = function() {
                            input.value = maxTickets;
                        };
                    } else {
                        allButton.style.display = 'none';
                    }
                }
            }).catch(error => {
                console.error("–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É:", error);
                // –ó–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º, –≤—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –º–∞–∫—Å–∏–º—É–º 10
                input.max = 10;
            });
        }

        const btnId = raffleType === 'daily' ? 'daily-join-btn' : 'main-join-btn';
        const joinBtn = document.getElementById(btnId);

        if (joinBtn) {
            joinBtn.setAttribute('data-raffle-id', raffleData.id);
            joinBtn.setAttribute('data-raffle-type', raffleType);

            // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è
            joinBtn.onclick = () => {
                const raffleId = joinBtn.getAttribute('data-raffle-id');
                const raffleType = joinBtn.getAttribute('data-raffle-type');
                const inputId = raffleType === 'daily' ? 'daily-token-amount' : 'main-token-amount';

                this.participateInRaffleUI(raffleId, raffleType, inputId);
            };
        }

        // –û–Ω–æ–≤–ª—é—î–º–æ –¥–∞–Ω—ñ –≤ –º–æ–¥–∞–ª—å–Ω–æ–º—É –≤—ñ–∫–Ω—ñ
        if (raffleType === 'daily') {
            const titleElement = document.getElementById('daily-modal-title');
            if (titleElement) titleElement.textContent = raffleData.title || '–©–æ–¥–µ–Ω–Ω–∏–π —Ä–æ–∑—ñ–≥—Ä–∞—à';

            const prizeElement = document.getElementById('daily-prize-value');
            if (prizeElement) prizeElement.textContent = `${raffleData.prize_amount} ${raffleData.prize_currency} (${raffleData.winners_count} –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤)`;

            const participantsElement = document.getElementById('daily-participants');
            if (participantsElement) participantsElement.textContent = raffleData.participants_count || '0';

            const endDateElement = document.getElementById('daily-end-time');
            if (endDateElement) endDateElement.textContent = formatDate(raffleData.end_time);

            const descriptionElement = document.getElementById('daily-description');
            if (descriptionElement) descriptionElement.textContent = raffleData.description || '–©–æ–¥–µ–Ω–Ω–∏–π —Ä–æ–∑—ñ–≥—Ä–∞—à –∑ –ø—Ä–∏–∑–∞–º–∏ –¥–ª—è –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤! –í–∏–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ –∂–µ—Ç–æ–Ω–∏ –¥–ª—è —É—á–∞—Å—Ç—ñ.';

            // –û–Ω–æ–≤–ª—é—î–º–æ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è, —è–∫—â–æ –≤–æ–Ω–æ —î
            const imageElement = document.getElementById('daily-prize-image');
            if (imageElement && raffleData.image_url) {
                imageElement.src = raffleData.image_url;
            }
        } else {
            const titleElement = document.getElementById('main-modal-title');
            if (titleElement) titleElement.textContent = raffleData.title || '–ì—Ä–∞–Ω–¥ –†–æ–∑—ñ–≥—Ä–∞—à';

            const prizeElement = document.getElementById('main-prize-value');
            if (prizeElement) prizeElement.textContent = `${raffleData.prize_amount} ${raffleData.prize_currency} (${raffleData.winners_count} –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤)`;

            const participantsElement = document.getElementById('main-participants');
            if (participantsElement) participantsElement.textContent = raffleData.participants_count || '0';

            const endDateElement = document.getElementById('main-end-time');
            if (endDateElement) endDateElement.textContent = formatDate(raffleData.end_time);

            const descriptionElement = document.getElementById('main-description');
            if (descriptionElement) descriptionElement.textContent = raffleData.description || '–ì—Ä–∞–Ω–¥—ñ–æ–∑–Ω–∏–π —Ä–æ–∑—ñ–≥—Ä–∞—à –∑ —á—É–¥–æ–≤–∏–º–∏ –ø—Ä–∏–∑–∞–º–∏! –í–∏–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ –∂–µ—Ç–æ–Ω–∏ –¥–ª—è —É—á–∞—Å—Ç—ñ —Ç–∞ –∑–±—ñ–ª—å—à—ñ—Ç—å —Å–≤–æ—ó —à–∞–Ω—Å–∏ –Ω–∞ –ø–µ—Ä–µ–º–æ–≥—É.';

            // –û–Ω–æ–≤–ª—é—î–º–æ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è, —è–∫—â–æ –≤–æ–Ω–æ —î
            const imageElement = document.getElementById('main-prize-image');
            if (imageElement && raffleData.image_url) {
                imageElement.src = raffleData.image_url;
            }
        }

        // –í—ñ–¥–∫—Ä–∏–≤–∞—î–º–æ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
        modal.classList.add('open');

        // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –∑–∞–∫—Ä–∏—Ç—Ç—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞
        const closeButtons = modal.querySelectorAll('.modal-close, .cancel-btn');
        closeButtons.forEach(btn => {
            btn.addEventListener('click', function() {
                modal.classList.remove('open');
            });
        });
    }

    /**
     * –§—É–Ω–∫—Ü—ñ—è –æ–±—Ä–æ–±–∫–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –Ω–∞ –∫–Ω–æ–ø–∫—É —É—á–∞—Å—Ç—ñ –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ
     * @param {string} raffleId - ID —Ä–æ–∑—ñ–≥—Ä–∞—à—É
     * @param {string} raffleType - –¢–∏–ø —Ä–æ–∑—ñ–≥—Ä–∞—à—É
     * @param {string} inputId - ID –ø–æ–ª—è –≤–≤–µ–¥–µ–Ω–Ω—è –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –∂–µ—Ç–æ–Ω—ñ–≤
     */
    async participateInRaffleUI(raffleId, raffleType, inputId) {
        if (!raffleId) {
            showToast('ID —Ä–æ–∑—ñ–≥—Ä–∞—à—É –Ω–µ –≤–∫–∞–∑–∞–Ω–æ');
            return;
        }

        // –û—Ç—Ä–∏–º—É—î–º–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∂–µ—Ç–æ–Ω—ñ–≤
        const input = document.getElementById(inputId);
        const entryCount = parseInt(input?.value || '1') || 1;

        // –û—Ç—Ä–∏–º—É—î–º–æ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
        const modalId = raffleType === 'daily' ? 'daily-raffle-modal' : 'main-raffle-modal';
        const modal = document.getElementById(modalId);

        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∫–æ—Ä–µ–∫—Ç–Ω—ñ—Å—Ç—å –≤–≤–µ–¥–µ–Ω–Ω—è
        if (entryCount <= 0) {
            showToast('–ö—ñ–ª—å–∫—ñ—Å—Ç—å –∂–µ—Ç–æ–Ω—ñ–≤ –º–∞—î –±—É—Ç–∏ –±—ñ–ª—å—à–µ –Ω—É–ª—è');
            return;
        }

        try {
            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –¥–æ—Å—Ç–∞—Ç–Ω—å–æ –∂–µ—Ç–æ–Ω—ñ–≤
            const userData = await api.getUserData();
            const coinsBalance = userData.data?.coins || 0;
            const tokenCost = raffleType === 'daily' ? 1 : 3;
            const totalCost = entryCount * tokenCost;

            if (coinsBalance < totalCost) {
                showToast(`–ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –∂–µ—Ç–æ–Ω—ñ–≤. –ü–æ—Ç—Ä—ñ–±–Ω–æ ${totalCost}, —É –≤–∞—Å ${coinsBalance}`);
                return;
            }

            // –ë–µ—Ä–µ–º–æ —É—á–∞—Å—Ç—å —É —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ
            const result = await this.participateInRaffle(raffleId, entryCount);

            if (result.status === 'success') {
                // –ó–∞–∫—Ä–∏–≤–∞—î–º–æ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
                if (modal) modal.classList.remove('open');

                // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
                if (WinixRaffles.active && typeof WinixRaffles.active.displayRaffles === 'function') {
                    await WinixRaffles.active.displayRaffles();
                }

                // –û–Ω–æ–≤–ª—é—î–º–æ –±–∞–ª–∞–Ω—Å
                await this.updateUserBalance();

                // –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ —É—Å–ø—ñ—Ö
                showToast(result.message);

                // –Ø–∫—â–æ —î –±–æ–Ω—É—Å, –ø–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –Ω—å–æ–≥–æ
                if (result.data && result.data.bonus_amount) {
                    setTimeout(() => {
                        showToast(`–í—ñ—Ç–∞—î–º–æ! –í–∏ –æ—Ç—Ä–∏–º–∞–ª–∏ ${result.data.bonus_amount} WINIX —è–∫ –±–æ–Ω—É—Å!`);
                    }, 3000);
                }
            } else {
                // –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É
                showToast(result.message);
            }
        } catch (error) {
            console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —É—á–∞—Å—Ç—ñ –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ:', error);
            showToast('–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —É—á–∞—Å—Ç—ñ –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.');
        }
    }

    /**
     * –û—Ç—Ä–∏–º–∞–Ω–Ω—è –±–æ–Ω—É—Å—É –Ω–æ–≤–∞—á–∫–∞
     * @returns {Promise<Object>} –†–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –±–æ–Ω—É—Å—É
     */
    async claimNewbieBonus() {
        try {
            showLoading('–û—Ç—Ä–∏–º—É—î–º–æ –±–æ–Ω—É—Å –Ω–æ–≤–∞—á–∫–∞...');

            const userId = api.getUserId();
            if (!userId) {
                throw new Error('ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
            }

            // –ü–æ–∫—Ä–∞—â–µ–Ω—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ –∑–∞–ø–∏—Ç—É
            const response = await api.apiRequest(`/api/user/${userId}/claim-newbie-bonus`, 'POST', null, {
                timeout: 10000,
                suppressErrors: true
            });

            hideLoading();

            if (response && (response.status === 'success' || response.status === 'already_claimed')) {
                // –û–Ω–æ–≤–ª—é—î–º–æ –±–∞–ª–∞–Ω—Å WINIX —É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
                await this.updateUserBalance();

                return {
                    status: response.status,
                    message: response.message || '–ë–æ–Ω—É—Å –Ω–æ–≤–∞—á–∫–∞ —É—Å–ø—ñ—à–Ω–æ –æ—Ç—Ä–∏–º–∞–Ω–æ',
                    data: response.data
                };
            } else {
                throw new Error((response && response.message) || '–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –±–æ–Ω—É—Å—É –Ω–æ–≤–∞—á–∫–∞');
            }
        } catch (error) {
            console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –±–æ–Ω—É—Å—É –Ω–æ–≤–∞—á–∫–∞:', error);
            hideLoading();
            return { status: 'error', message: error.message || '–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –±–æ–Ω—É—Å—É –Ω–æ–≤–∞—á–∫–∞' };
        }
    }

    /**
     * –û–Ω–æ–≤–ª–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
     * @returns {Promise<boolean>} –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
     */
    async updateUserBalance() {
        try {
            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –≥–ª–æ–±–∞–ª—å–Ω–æ—ó —Ñ—É–Ω–∫—Ü—ñ—ó
            if (api && api.getBalance) {
                await api.getBalance();
            } else {
                // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∏–π –º–µ—Ç–æ–¥ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
                await api.getUserData(true);

                // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É
                const userData = await api.getUserData();

                if (userData && userData.data) {
                    // –û–Ω–æ–≤–ª—é—î–º–æ –µ–ª–µ–º–µ–Ω—Ç–∏ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É
                    const coinsElement = document.getElementById('user-coins');
                    const tokensElement = document.getElementById('user-tokens');

                    if (coinsElement) {
                        coinsElement.textContent = userData.data.coins || 0;
                    }

                    if (tokensElement) {
                        tokensElement.textContent = userData.data.balance || 0;
                    }
                }
            }

            return true;
        } catch (error) {
            console.error('–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É:', error);
            return false;
        }
    }

    /**
     * –ü–æ–¥—ñ–ª–∏—Ç–∏—Å—è —Ä–æ–∑—ñ–≥—Ä–∞—à–µ–º
     * @param {string} raffleId - ID —Ä–æ–∑—ñ–≥—Ä–∞—à—É
     */
    shareRaffle(raffleId) {
        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å Telegram WebApp
        if (window.Telegram && window.Telegram.WebApp) {
            // –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
            this.getRaffleDetails(raffleId).then(raffleData => {
                if (!raffleData) {
                    showToast('–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–∞–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—É');
                    return;
                }

                // –§–æ—Ä–º—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–ª—è –ø–æ—à–∏—Ä–µ–Ω–Ω—è
                const shareText = `üéÆ –†–æ–∑—ñ–≥—Ä–∞—à WINIX: ${raffleData.title}\n\n` +
                                 `üí∞ –ü—Ä–∏–∑–æ–≤–∏–π —Ñ–æ–Ω–¥: ${raffleData.prize_amount} ${raffleData.prize_currency}\n` +
                                 `üèÜ –ö—ñ–ª—å–∫—ñ—Å—Ç—å –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤: ${raffleData.winners_count}\n\n` +
                                 `–ë–µ—Ä–∏ —É—á–∞—Å—Ç—å —ñ –≤–∏–≥—Ä–∞–≤–∞–π –ø—Ä–∏–∑–∏! üöÄ`;

                // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –º–µ—Ç–æ–¥ Telegram –¥–ª—è –ø–æ—à–∏—Ä–µ–Ω–Ω—è
                if (window.Telegram.WebApp.switchInlineQuery) {
                    window.Telegram.WebApp.switchInlineQuery(shareText, ['users', 'groups']);
                    return;
                }

                if (navigator.share) {
                    navigator.share({
                        title: `–†–æ–∑—ñ–≥—Ä–∞—à WINIX: ${raffleData.title}`,
                        text: shareText
                    })
                    .then(() => {
                        showToast('–†–æ–∑—ñ–≥—Ä–∞—à —É—Å–ø—ñ—à–Ω–æ –ø–æ—à–∏—Ä–µ–Ω–æ');
                    })
                    .catch(error => {
                        console.error('–ü–æ–º–∏–ª–∫–∞ –ø–æ—à–∏—Ä–µ–Ω–Ω—è:', error);
                        showToast('–ù–µ –≤–¥–∞–ª–æ—Å—è –ø–æ—à–∏—Ä–∏—Ç–∏ —Ä–æ–∑—ñ–≥—Ä–∞—à');
                    });
                } else {
                    // –ö–æ–ø—ñ—é—î–º–æ –≤ –±—É—Ñ–µ—Ä –æ–±–º—ñ–Ω—É
                    navigator.clipboard.writeText(shareText)
                        .then(() => {
                            showToast('–¢–µ–∫—Å—Ç —Ä–æ–∑—ñ–≥—Ä–∞—à—É —Å–∫–æ–ø—ñ–π–æ–≤–∞–Ω–æ –≤ –±—É—Ñ–µ—Ä –æ–±–º—ñ–Ω—É');
                        })
                        .catch(error => {
                            console.error('–ü–æ–º–∏–ª–∫–∞ –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è:', error);
                            showToast('–ù–µ –≤–¥–∞–ª–æ—Å—è —Å–∫–æ–ø—ñ—é–≤–∞—Ç–∏ —Ç–µ–∫—Å—Ç —Ä–æ–∑—ñ–≥—Ä–∞—à—É');
                        });
                }
            }).catch(error => {
                console.error('–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—É –¥–ª—è –ø–æ—à–∏—Ä–µ–Ω–Ω—è:', error);
                showToast('–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–∞–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—É –¥–ª—è –ø–æ—à–∏—Ä–µ–Ω–Ω—è');
            });
        } else {
            showToast('–¶—è —Ñ—É–Ω–∫—Ü—ñ—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç—ñ–ª—å–∫–∏ –≤ Telegram');
        }
    }
}

// –°—Ç–≤–æ—Ä—é—î–º–æ –µ–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—É
const participationModule = new ParticipationModule();

// –î–æ–¥–∞—î–º–æ –≤ –≥–ª–æ–±–∞–ª—å–Ω–∏–π –æ–±'—î–∫—Ç –¥–ª—è –∑–≤–æ—Ä–æ—Ç–Ω–æ—ó —Å—É–º—ñ—Å–Ω–æ—Å—Ç—ñ
WinixRaffles.participation = participationModule;

export default participationModule;