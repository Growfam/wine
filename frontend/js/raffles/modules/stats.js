/**
 * stats.js - –ú–æ–¥—É–ª—å –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑—ñ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ—é —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ WINIX
 * –í—ñ–¥–ø–æ–≤—ñ–¥–∞—î –∑–∞ –∑–±—ñ—Ä, —Ä–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ —Ç–∞ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤.
 */

import WinixRaffles from '../globals.js';
import api from '../services/api.js';
import { showToast } from '../utils/ui-helpers.js';
import { formatCurrency, formatNumber } from '../utils/formatters.js';

// –ö–ª—é—á—ñ –¥–ª—è –∫–µ—à—É–≤–∞–Ω–Ω—è
const CACHE_KEYS = {
    USER_STATS: 'user_statistics',
    GLOBAL_STATS: 'global_statistics',
    LAST_UPDATE: 'stats_last_update'
};

// –í–∏–∑–Ω–∞—á–µ–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ UI –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
const UI_ELEMENTS = {
    totalParticipated: 'total-participated',
    totalWins: 'total-wins',
    totalWinixWon: 'total-winix-won',
    totalTokensSpent: 'total-tokens-spent'
};

// –Ü–Ω—Ç–µ—Ä–≤–∞–ª –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ (–º—ñ–ª—ñ—Å–µ–∫—É–Ω–¥–∏)
const STATS_UPDATE_INTERVAL = 5 * 60 * 1000; // 5 —Ö–≤–∏–ª–∏–Ω

/**
 * –ö–ª–∞—Å –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑—ñ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ—é —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
 */
class StatisticsModule {
    /**
     * –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –∫–ª–∞—Å—É
     */
    constructor() {
        // –ü—Ä–∞–ø–æ—Ä–µ—Ü—å —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
        this._initialized = false;

        // –ü–æ—Ç–æ—á–Ω—ñ –¥–∞–Ω—ñ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        this._currentStats = null;

        // –ü—Ä–∞–ø–æ—Ä–µ—Ü—å –¥–ª—è —ñ–Ω–¥–∏–∫–∞—Ü—ñ—ó –ø—Ä–æ—Ü–µ—Å—É –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
        this._isUpdating = false;

        // –ß–∞—Å –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
        this._lastUpdateTime = 0;
    }

    /**
     * –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –º–æ–¥—É–ª—è
     */
    init() {
        if (this._initialized) {
            return;
        }

        console.log("üìä Stats: –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –º–æ–¥—É–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏");

        try {
            // –°–ø–æ—á–∞—Ç–∫—É –æ—Ç—Ä–∏–º—É—î–º–æ –∫–µ—à–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ
            this._currentStats = this._getStatsFromCache();

            // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∑ –∫–µ—à–æ–≤–∞–Ω–∏–º–∏ –¥–∞–Ω–∏–º–∏
            if (this._currentStats) {
                this.updateStatisticsDisplay(this._currentStats);
            }

            // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —Å–≤—ñ–∂—ñ –¥–∞–Ω—ñ –∑ —Å–µ—Ä–≤–µ—Ä–∞
            this.fetchStatistics().then(stats => {
                // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
                this._currentStats = stats;
                this.updateStatisticsDisplay(stats);
            });

            // –û–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ–π –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —ñ—Å—Ç–æ—Ä—ñ—ó —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
            document.addEventListener('raffle-history-loaded', (event) => {
                if (event.detail && Array.isArray(event.detail.history)) {
                    this.updateStatsFromHistory(event.detail.history);
                }
            });

            // –û–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ–π –¥–ª—è —É—á–∞—Å—Ç—ñ –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à–∞—Ö
            document.addEventListener('raffle-participated', (event) => {
                if (event.detail) {
                    this.updateParticipationStats(event.detail.tokensSpent || 0);
                }
            });

            // –û–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ–π –¥–ª—è –≤–∏–≥—Ä–∞—à—ñ–≤
            document.addEventListener('raffle-win', (event) => {
                if (event.detail) {
                    this.updateWinStats(
                        event.detail.winixAmount || 0,
                        event.detail.raffleId,
                        event.detail.details
                    );
                }
            });

            this._initialized = true;
            console.log("‚úÖ Stats: –ú–æ–¥—É–ª—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —É—Å–ø—ñ—à–Ω–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ");
        } catch (error) {
            console.error("‚ùå Stats: –ü–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó –º–æ–¥—É–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:", error);
        }
    }

    /**
     * –û—Ç—Ä–∏–º–∞–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç–∞ DOM
     * @param {string} id - ID –µ–ª–µ–º–µ–Ω—Ç–∞
     * @returns {HTMLElement|null} - –ï–ª–µ–º–µ–Ω—Ç DOM –∞–±–æ null, —è–∫—â–æ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ
     * @private
     */
    _getElement(id) {
        return document.getElementById(id);
    }

    /**
     * –ë–µ–∑–ø–µ—á–Ω–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –≤–º—ñ—Å—Ç—É –µ–ª–µ–º–µ–Ω—Ç–∞
     * @param {string} id - ID –µ–ª–µ–º–µ–Ω—Ç–∞
     * @param {string|number} value - –ù–æ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è
     * @param {Function} formatter - –§—É–Ω–∫—Ü—ñ—è —Ñ–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è (–Ω–µ–æ–±–æ–≤'—è–∑–∫–æ–≤–æ)
     * @private
     */
    _updateElementText(id, value, formatter = null) {
        const element = this._getElement(id);
        if (element) {
            const formattedValue = formatter ? formatter(value) : value;
            element.textContent = formattedValue;
        }
    }

    /**
     * –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∑ –∫–µ—à—É
     * @returns {Object|null} –û–±'—î–∫—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∞–±–æ null
     * @private
     */
    _getStatsFromCache() {
        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å WinixCache
        if (window.WinixCache && typeof window.WinixCache.get === 'function') {
            return window.WinixCache.get('STATS', CACHE_KEYS.USER_STATS);
        } else {
            // –†–µ–∑–µ—Ä–≤–Ω–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç - –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è localStorage –Ω–∞–ø—Ä—è–º—É
            try {
                const cachedData = localStorage.getItem('winix_stats');
                return cachedData ? JSON.parse(cachedData) : null;
            } catch (e) {
                console.warn("‚ö†Ô∏è Stats: –ü–æ–º–∏–ª–∫–∞ —á–∏—Ç–∞–Ω–Ω—è –∫–µ—à—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:", e);
                return null;
            }
        }
    }

    /**
     * –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –≤ –∫–µ—à
     * @param {Object} stats - –û–±'—î–∫—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
     * @private
     */
    _saveStatsToCache(stats) {
        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å WinixCache
        if (window.WinixCache && typeof window.WinixCache.set === 'function') {
            window.WinixCache.set('STATS', CACHE_KEYS.USER_STATS, stats);
            window.WinixCache.set('STATS', CACHE_KEYS.LAST_UPDATE, Date.now());
        } else {
            // –†–µ–∑–µ—Ä–≤–Ω–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç - –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è localStorage –Ω–∞–ø—Ä—è–º—É
            try {
                localStorage.setItem('winix_stats', JSON.stringify(stats));
                localStorage.setItem('winix_stats_updated', Date.now().toString());
            } catch (e) {
                console.warn("‚ö†Ô∏è Stats: –ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –∫–µ—à—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:", e);
            }
        }
    }

    /**
     * –û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∑ API
     * @param {boolean} forceRefresh - –ü—Ä–∏–º—É—Å–æ–≤–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
     * @returns {Promise<Object>} –ü—Ä–æ–º—ñ—Å –∑ –¥–∞–Ω–∏–º–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
     */
    async fetchStatistics(forceRefresh = false) {
        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –Ω–µ –≤—ñ–¥–±—É–≤–∞—î—Ç—å—Å—è –≤–∂–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
        if (this._isUpdating) {
            console.log("‚è≥ Stats: –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –≤–∂–µ –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è");
            return this._currentStats || this._getStatsFromCache() || this.getDefaultStats();
        }

        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –ø–æ—Ç—Ä—ñ–±–Ω–æ –æ–Ω–æ–≤–ª—é–≤–∞—Ç–∏ –¥–∞–Ω—ñ
        const now = Date.now();
        if (!forceRefresh && this._lastUpdateTime > 0 && (now - this._lastUpdateTime) < STATS_UPDATE_INTERVAL) {
            console.log("‚è≥ Stats: –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –∫–µ—à–æ–≤–∞–Ω–æ—ó —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏");
            return this._currentStats || this._getStatsFromCache() || this.getDefaultStats();
        }

        this._isUpdating = true;

        try {
            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å API
            if (!api || typeof api.apiRequest !== 'function') {
                throw new Error("API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–µ");
            }

            // –û—Ç—Ä–∏–º—É—î–º–æ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            const userId = api.getUserId();
            if (!userId) {
                throw new Error("ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ");
            }

            // –í–∏–∫–æ–Ω—É—î–º–æ –∑–∞–ø–∏—Ç –¥–æ API
            const response = await api.apiRequest(`/api/user/${userId}/statistics`, 'GET', null, {
                timeout: 10000,
                suppressErrors: true
            });

            if (response.status === 'success' && response.data) {
                // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
                this._currentStats = response.data;
                this._lastUpdateTime = now;

                // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –≤ –∫–µ—à
                this._saveStatsToCache(this._currentStats);

                return this._currentStats;
            } else {
                throw new Error(response.message || "–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏");
            }
        } catch (error) {
            console.warn("‚ö†Ô∏è Stats: –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:", error.message);

            // –Ø–∫—â–æ —î –∫–µ—à–æ–≤–∞–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ - –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —ó—ó
            const cachedStats = this._getStatsFromCache();
            if (cachedStats) {
                console.log("üìã Stats: –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –∫–µ—à–æ–≤–∞–Ω–æ—ó —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø—ñ—Å–ª—è –ø–æ–º–∏–ª–∫–∏");
                return cachedStats;
            }

            // –Ø–∫—â–æ –Ω–µ–º–∞—î –∫–µ—à—É - –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ñ –∑–Ω–∞—á–µ–Ω–Ω—è
            return this.getDefaultStats();
        } finally {
            this._isUpdating = false;
        }
    }

    /**
     * –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
     * @returns {Object} –û–±'—î–∫—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∑ –Ω—É–ª—å–æ–≤–∏–º–∏ –∑–Ω–∞—á–µ–Ω–Ω—è–º–∏
     */
    getDefaultStats() {
        return {
            totalParticipated: 0,
            totalWins: 0,
            totalWinixWon: 0,
            totalTokensSpent: 0,
            winRate: 0,
            lastRaffle: null,
            lastWin: null
        };
    }

    /**
     * –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –¥–æ–¥–∞—Ç–∫–æ–≤–æ—ó —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
     * @param {Object} basicStats - –ë–∞–∑–æ–≤–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
     * @returns {Object} –†–æ–∑—à–∏—Ä–µ–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
     */
    calculateExtendedStats(basicStats) {
        const stats = { ...basicStats };

        // –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –≤—ñ–¥—Å–æ—Ç–∫–∞ –≤–∏–≥—Ä–∞—à—ñ–≤
        if (stats.totalParticipated > 0) {
            stats.winRate = (stats.totalWins / stats.totalParticipated) * 100;
        } else {
            stats.winRate = 0;
        }

        // –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ —Å–µ—Ä–µ–¥–Ω—å–æ–≥–æ –≤–∏–≥—Ä–∞—à—É
        if (stats.totalWins > 0) {
            stats.averageWin = stats.totalWinixWon / stats.totalWins;
        } else {
            stats.averageWin = 0;
        }

        // –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –µ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ –≤–∏—Ç—Ä–∞—Ç –∂–µ—Ç–æ–Ω—ñ–≤
        if (stats.totalTokensSpent > 0) {
            stats.tokenEfficiency = stats.totalWinixWon / stats.totalTokensSpent;
        } else {
            stats.tokenEfficiency = 0;
        }

        return stats;
    }

    /**
     * –û–Ω–æ–≤–ª–µ–Ω–Ω—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
     * @param {Object} stats - –û–±'—î–∫—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
     */
    updateStatisticsDisplay(stats) {
        // –Ø–∫—â–æ –Ω–µ–º–∞—î —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –ø–æ—Ä–æ–∂–Ω—ñ –∑–Ω–∞—á–µ–Ω–Ω—è
        const data = stats || this.getDefaultStats();

        // –û–Ω–æ–≤–ª—é—î–º–æ –µ–ª–µ–º–µ–Ω—Ç–∏ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É
        this._updateElementText(UI_ELEMENTS.totalParticipated, data.totalParticipated, formatNumber);
        this._updateElementText(UI_ELEMENTS.totalWins, data.totalWins, formatNumber);
        this._updateElementText(UI_ELEMENTS.totalWinixWon, data.totalWinixWon, formatCurrency);
        this._updateElementText(UI_ELEMENTS.totalTokensSpent, data.totalTokensSpent, formatNumber);

        // –ì–µ–Ω–µ—Ä—É—î–º–æ –ø–æ–¥—ñ—é –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        document.dispatchEvent(new CustomEvent('statistics-updated', {
            detail: data
        }));
    }

    /**
     * –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –Ω–∞ –æ—Å–Ω–æ–≤—ñ —É—á–∞—Å—Ç—ñ –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ
     * @param {number} tokensSpent - –ö—ñ–ª—å–∫—ñ—Å—Ç—å –≤–∏—Ç—Ä–∞—á–µ–Ω–∏—Ö –∂–µ—Ç–æ–Ω—ñ–≤
     */
    updateParticipationStats(tokensSpent) {
        // –û—Ç—Ä–∏–º—É—î–º–æ –ø–æ—Ç–æ—á–Ω—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        const stats = this._currentStats || this._getStatsFromCache() || this.getDefaultStats();

        // –û–Ω–æ–≤–ª—é—î–º–æ –ª—ñ—á–∏–ª—å–Ω–∏–∫–∏
        stats.totalParticipated = (stats.totalParticipated || 0) + 1;
        stats.totalTokensSpent = (stats.totalTokensSpent || 0) + tokensSpent;

        // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        this._currentStats = stats;
        this._saveStatsToCache(stats);

        // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è
        this.updateStatisticsDisplay(stats);
    }

    /**
     * –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –Ω–∞ –æ—Å–Ω–æ–≤—ñ –≤–∏–≥—Ä–∞—à—É –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ
     * @param {number} winixAmount - –ö—ñ–ª—å–∫—ñ—Å—Ç—å –≤–∏–≥—Ä–∞–Ω–∏—Ö WINIX
     * @param {string} raffleId - ID —Ä–æ–∑—ñ–≥—Ä–∞—à—É
     * @param {Object} raffleDetails - –î–µ—Ç–∞–ª—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
     */
    updateWinStats(winixAmount, raffleId, raffleDetails = {}) {
        // –û—Ç—Ä–∏–º—É—î–º–æ –ø–æ—Ç–æ—á–Ω—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        const stats = this._currentStats || this._getStatsFromCache() || this.getDefaultStats();

        // –û–Ω–æ–≤–ª—é—î–º–æ –ª—ñ—á–∏–ª—å–Ω–∏–∫–∏
        stats.totalWins = (stats.totalWins || 0) + 1;
        stats.totalWinixWon = (stats.totalWinixWon || 0) + winixAmount;
        stats.lastWin = {
            date: new Date().toISOString(),
            amount: winixAmount,
            raffleId: raffleId,
            details: raffleDetails
        };

        // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        this._currentStats = stats;
        this._saveStatsToCache(stats);

        // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è
        this.updateStatisticsDisplay(stats);
    }

    /**
     * –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –Ω–∞ –æ—Å–Ω–æ–≤—ñ —ñ—Å—Ç–æ—Ä—ñ—ó —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
     * @param {Array} history - –ú–∞—Å–∏–≤ —ñ—Å—Ç–æ—Ä—ñ—ó —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
     */
    updateStatsFromHistory(history) {
        if (!Array.isArray(history) || history.length === 0) {
            return;
        }

        // –û—Ç—Ä–∏–º—É—î–º–æ –ø–æ—Ç–æ—á–Ω—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        const stats = this._currentStats || this._getStatsFromCache() || this.getDefaultStats();

        // –ü—ñ–¥—Ä–∞—Ö—É–Ω–æ–∫ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∑ —ñ—Å—Ç–æ—Ä—ñ—ó
        let participated = 0;
        let wins = 0;
        let winixWon = 0;
        let tokensSpent = 0;

        history.forEach(item => {
            // –†–∞—Ö—É—î–º–æ —É—á–∞—Å—Ç—å
            participated++;

            // –î–æ–¥–∞—î–º–æ –≤–∏—Ç—Ä–∞—á–µ–Ω—ñ –∂–µ—Ç–æ–Ω–∏
            if (item.tokensSpent) {
                tokensSpent += parseInt(item.tokensSpent);
            }

            // –†–∞—Ö—É—î–º–æ –≤–∏–≥—Ä–∞—à—ñ
            if (item.won || item.result === 'win' || (item.prize && parseInt(item.prize) > 0)) {
                wins++;

                // –î–æ–¥–∞—î–º–æ –≤–∏–≥—Ä–∞–Ω—ñ WINIX
                if (item.prize) {
                    winixWon += parseInt(item.prize);
                }
            }
        });

        // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É, —è–∫—â–æ –≤–æ–Ω–∞ –±—ñ–ª—å—à–∞ –∑–∞ –ø–æ—Ç–æ—á–Ω—É
        stats.totalParticipated = Math.max(stats.totalParticipated || 0, participated);
        stats.totalWins = Math.max(stats.totalWins || 0, wins);
        stats.totalWinixWon = Math.max(stats.totalWinixWon || 0, winixWon);
        stats.totalTokensSpent = Math.max(stats.totalTokensSpent || 0, tokensSpent);

        // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        this._currentStats = stats;
        this._saveStatsToCache(stats);

        // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è
        this.updateStatisticsDisplay(stats);
    }

    /**
     * –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è –ª–æ–∫–∞–ª—å–Ω–æ—ó —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∑ —Å–µ—Ä–≤–µ—Ä–æ–º
     * @returns {Promise<Object>} –û–±'—î–∫—Ç —ñ–∑ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–æ–≤–∞–Ω–æ—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ—é
     */
    async syncStatisticsWithServer() {
        try {
            // –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ –∑ —Å–µ—Ä–≤–µ—Ä–∞
            const serverStats = await this.fetchStatistics(true);

            // –û—Ç—Ä–∏–º—É—î–º–æ –ª–æ–∫–∞–ª—å–Ω—ñ –¥–∞–Ω—ñ
            const localStats = this._currentStats || this._getStatsFromCache() || this.getDefaultStats();

            // –û–±'—î–¥–Ω—É—î–º–æ –¥–∞–Ω—ñ (–≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –≤–∏—â—ñ –∑–Ω–∞—á–µ–Ω–Ω—è)
            const mergedStats = {
                totalParticipated: Math.max(serverStats.totalParticipated || 0, localStats.totalParticipated || 0),
                totalWins: Math.max(serverStats.totalWins || 0, localStats.totalWins || 0),
                totalWinixWon: Math.max(serverStats.totalWinixWon || 0, localStats.totalWinixWon || 0),
                totalTokensSpent: Math.max(serverStats.totalTokensSpent || 0, localStats.totalTokensSpent || 0),
                lastWin: serverStats.lastWin || localStats.lastWin,
                lastRaffle: serverStats.lastRaffle || localStats.lastRaffle
            };

            // –†–æ–∑—Ä–∞—Ö–æ–≤—É—î–º–æ —Ä–æ–∑—à–∏—Ä–µ–Ω—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            const extendedStats = this.calculateExtendedStats(mergedStats);

            // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            this._currentStats = extendedStats;
            this._saveStatsToCache(extendedStats);

            // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è
            this.updateStatisticsDisplay(extendedStats);

            console.log("‚úÖ Stats: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —É—Å–ø—ñ—à–Ω–æ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–æ–≤–∞–Ω–æ –∑ —Å–µ—Ä–≤–µ—Ä–æ–º");

            return extendedStats;
        } catch (error) {
            console.warn("‚ö†Ô∏è Stats: –ü–æ–º–∏–ª–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:", error);
            return this._currentStats;
        }
    }
}

// –°—Ç–≤–æ—Ä—é—î–º–æ –µ–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—É
const statisticsModule = new StatisticsModule();

// –î–æ–¥–∞—î–º–æ –≤ –≥–ª–æ–±–∞–ª—å–Ω–∏–π –æ–±'—î–∫—Ç –¥–ª—è –∑–≤–æ—Ä–æ—Ç–Ω–æ—ó —Å—É–º—ñ—Å–Ω–æ—Å—Ç—ñ
WinixRaffles.stats = statisticsModule;

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è
if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', () => statisticsModule.init());
} else {
    setTimeout(() => statisticsModule.init(), 100);
}

// –ü—ñ–¥–ø–∏—Å—É—î–º–æ—Å—è –Ω–∞ –ø–æ–¥—ñ—ó WinixCore
document.addEventListener('winix-initialized', function() {
    console.log("üîÑ Stats: WinixCore —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ, –æ–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É");
    setTimeout(() => {
        if (!statisticsModule._initialized) {
            statisticsModule.init();
        } else {
            // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            statisticsModule.fetchStatistics().then(stats => statisticsModule.updateStatisticsDisplay(stats));
        }
    }, 500);
});

export default statisticsModule;