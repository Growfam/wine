/**
 * WINIX - –°–∏—Å—Ç–µ–º–∞ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ (core.js)
 * –û—Å–Ω–æ–≤–Ω–∏–π –º–æ–¥—É–ª—å –¥–ª—è –∫–µ—Ä—É–≤–∞–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª–æ–º —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ WINIX
 * –í–∑–∞—î–º–æ–¥—ñ—î –∑ API –±–µ–∫–µ–Ω–¥–∞ —Ç–∞ –≤—ñ–¥–æ–±—Ä–∞–∂–∞—î –¥–∞–Ω—ñ —É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ü—å–∫–æ–º—É —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ñ
 */

const WinixRaffles = {
    // –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
    config: {
        autoRefreshInterval: 120000, // –Ü–Ω—Ç–µ—Ä–≤–∞–ª –∞–≤—Ç–æ–æ–Ω–æ–≤–ª–µ–Ω–Ω—è (2 —Ö–≤–∏–ª–∏–Ω–∏)
        activeRafflesEndpoint: '/api/raffles',
        historyEndpoint: '/api/user/{userId}/raffles-history',
        participateEndpoint: '/api/user/{userId}/participate-raffle',
        userRafflesEndpoint: '/api/user/{userId}/raffles',
        statisticsEndpoint: '/api/user/{userId}/balance'
    },

    // –°—Ç–∞–Ω —Å–∏—Å—Ç–µ–º–∏
    state: {
        activeTab: 'active',
        telegramId: null,
        activeRaffles: [],
        pastRaffles: [],
        userRaffles: [],
        userStats: null,
        refreshTimers: {},
        isInitialized: false,
        isLoading: false
    },

    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Å–∏—Å—Ç–µ–º–∏
    init: function() {
        // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ —Å–∏—Å—Ç–µ–º–∞ –≤–∂–µ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–∞
        if (this.state.isInitialized) return;

        console.log('üé≤ –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Å–∏—Å—Ç–µ–º–∏ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ WINIX...');

        // –û—Ç—Ä–∏–º–∞–Ω–Ω—è ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        this.state.telegramId = WinixAPI.getUserId();
        if (!this.state.telegramId) {
            console.warn('‚ö†Ô∏è ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ! –î–µ—è–∫—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –±—É–¥—É—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ñ.');
        }

        // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –ø—ñ–¥—Å–∏—Å—Ç–µ–º
        this.initTabs();
        this.initTimers();
        this.initEventListeners();

        // –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö
        this.loadInitialData();

        this.state.isInitialized = true;
        console.log('‚úÖ –°–∏—Å—Ç–µ–º–∞ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ WINIX —É—Å–ø—ñ—à–Ω–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–∞');
    },

    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –≤–∫–ª–∞–¥–æ–∫
    initTabs: function() {
        const tabButtons = document.querySelectorAll('.tab-button');

        // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –¥–ª—è –≤–∫–ª–∞–¥–æ–∫
        tabButtons.forEach(button => {
            button.addEventListener('click', () => {
                const tabName = button.getAttribute('data-tab');
                this.activateTab(tabName);
            });
        });

        // –ê–∫—Ç–∏–≤—É—î–º–æ –ø–æ—Ç–æ—á–Ω—É –≤–∫–ª–∞–¥–∫—É (–∞–±–æ –≤–∫–ª–∞–¥–∫—É –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º)
        const urlParams = new URLSearchParams(window.location.search);
        const tabParam = urlParams.get('tab');

        if (tabParam && ['active', 'past', 'stats'].includes(tabParam)) {
            this.activateTab(tabParam);
        } else {
            this.activateTab('active'); // –í–∫–ª–∞–¥–∫–∞ –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
        }
    },

    // –ê–∫—Ç–∏–≤–∞—Ü—ñ—è –≤–∫–ª–∞–¥–∫–∏
    activateTab: function(tabName) {
        // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω
        this.state.activeTab = tabName;

        // –û–Ω–æ–≤–ª—é—î–º–æ –∫–Ω–æ–ø–∫–∏ –≤–∫–ª–∞–¥–æ–∫
        document.querySelectorAll('.tab-button').forEach(button => {
            if (button.getAttribute('data-tab') === tabName) {
                button.classList.add('active');
            } else {
                button.classList.remove('active');
            }
        });

        // –û–Ω–æ–≤–ª—é—î–º–æ –≤–º—ñ—Å—Ç –≤–∫–ª–∞–¥–æ–∫
        document.querySelectorAll('.tab-content').forEach(content => {
            if (content.id === `${tabName}-raffles`) {
                content.classList.add('active');
            } else {
                content.classList.remove('active');
            }
        });

        // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –¥–∞–Ω—ñ –¥–ª—è –≤–∫–ª–∞–¥–∫–∏
        switch(tabName) {
            case 'active':
                this.loadActiveRaffles();
                break;
            case 'past':
                this.loadRafflesHistory();
                break;
            case 'stats':
                this.loadRafflesStatistics();
                break;
        }
    },

    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Ç–∞–π–º–µ—Ä—ñ–≤
    initTimers: function() {
        // –û—á–∏—â–µ–Ω–Ω—è —ñ—Å–Ω—É—é—á–∏—Ö —Ç–∞–π–º–µ—Ä—ñ–≤
        Object.values(this.state.refreshTimers).forEach(timer => {
            clearInterval(timer);
        });

        this.state.refreshTimers = {};

        // –¢–∞–π–º–µ—Ä –¥–ª—è –∞–≤—Ç–æ–æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
        this.state.refreshTimers.activeRaffles = setInterval(() => {
            if (this.state.activeTab === 'active') {
                this.loadActiveRaffles(true);
            }
        }, this.config.autoRefreshInterval);
    },

    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –ø–æ–¥—ñ–π
    initEventListeners: function() {
        // –û–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –∫–Ω–æ–ø–æ–∫ —É—á–∞—Å—Ç—ñ –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à–∞—Ö
        document.addEventListener('click', (e) => {
            // –ì–æ–ª–æ–≤–Ω–∞ –∫–Ω–æ–ø–∫–∞ —É—á–∞—Å—Ç—ñ
            if (e.target.classList.contains('join-button')) {
                const raffleId = e.target.getAttribute('data-raffle-id');
                const raffleType = e.target.getAttribute('data-raffle-type');

                if (raffleId) {
                    e.preventDefault();
                    this.participateInRaffle(raffleId, raffleType);
                }
            }

            // –ú—ñ–Ω—ñ-–∫–Ω–æ–ø–∫–∏ —É—á–∞—Å—Ç—ñ
            if (e.target.classList.contains('mini-raffle-button')) {
                const raffleId = e.target.getAttribute('data-raffle-id');
                const raffleType = e.target.getAttribute('data-raffle-type');

                if (raffleId) {
                    e.preventDefault();
                    this.participateInRaffle(raffleId, raffleType);
                }
            }

            // –ö–∞—Ä—Ç–∫–∞ —ñ—Å—Ç–æ—Ä—ñ—ó
            if (e.target.closest('.history-card')) {
                const historyCard = e.target.closest('.history-card');
                const raffleId = historyCard.getAttribute('data-raffle-id');

                if (raffleId) {
                    e.preventDefault();
                    this.showRaffleDetails(raffleId);
                }
            }
        });

        // –û–±—Ä–æ–±–Ω–∏–∫ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        document.addEventListener('user-data-updated', (e) => {
            // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É
            this.updateUserBalance(e.detail);

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –ø–æ—Ç—Ä—ñ–±–Ω–æ –æ–Ω–æ–≤–∏—Ç–∏ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ
            if (this.state.activeTab === 'active') {
                this.updateParticipationButtons();
            }
        });
    },

    // –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø–æ—á–∞—Ç–∫–æ–≤–∏—Ö –¥–∞–Ω–∏—Ö
    loadInitialData: function() {
        // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –±–∞–ª–∞–Ω—Å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        this.loadUserBalance();

        // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ, —É —è–∫–∏—Ö –±–µ—Ä–µ —É—á–∞—Å—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á
        this.loadUserRaffles();
    },

    // –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    loadUserBalance: async function() {
        if (!this.state.telegramId) return;

        try {
            const response = await WinixAPI.getBalance();

            if (response.status === 'success' && response.data) {
                this.updateUserBalance(response.data);
            }
        } catch (error) {
            console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É:', error);
        }
    },

    // –û–Ω–æ–≤–ª–µ–Ω–Ω—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    updateUserBalance: function(userData) {
        // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∂–µ—Ç–æ–Ω—ñ–≤
        if (userData.coins !== undefined) {
            const coinsElements = document.querySelectorAll('.user-coins');
            coinsElements.forEach(element => {
                element.textContent = userData.coins;
            });
        }

        // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É
        if (userData.balance !== undefined) {
            const balanceElements = document.querySelectorAll('.user-balance');
            balanceElements.forEach(element => {
                element.textContent = userData.balance;
            });
        }
    },

    // –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤, —É —è–∫–∏—Ö –±–µ—Ä–µ —É—á–∞—Å—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á
    loadUserRaffles: async function() {
        if (!this.state.telegramId) return;

        try {
            const endpoint = this.config.userRafflesEndpoint.replace('{userId}', this.state.telegramId);
            const response = await WinixAPI.apiRequest(endpoint);

            if (response.status === 'success' && Array.isArray(response.data)) {
                this.state.userRaffles = response.data;
                this.updateParticipationButtons();
            }
        } catch (error) {
            console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:', error);
        }
    },

    // –û–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–Ω–æ–ø–æ–∫ —É—á–∞—Å—Ç—ñ –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à–∞—Ö
    updateParticipationButtons: function() {
        // –°—Ç–≤–æ—Ä—é—î–º–æ –Ω–∞–±—ñ—Ä ID —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤, —É —è–∫–∏—Ö –±–µ—Ä–µ —É—á–∞—Å—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á
        const participatingRaffles = new Set();
        this.state.userRaffles.forEach(raffle => {
            participatingRaffles.add(raffle.raffle_id);
        });

        // –û–Ω–æ–≤–ª—é—î–º–æ –≥–æ–ª–æ–≤–Ω—É –∫–Ω–æ–ø–∫—É —É—á–∞—Å—Ç—ñ
        const mainJoinButton = document.querySelector('.join-button');
        if (mainJoinButton) {
            const raffleId = mainJoinButton.getAttribute('data-raffle-id');

            if (raffleId && participatingRaffles.has(raffleId)) {
                mainJoinButton.textContent = '–í–∏ –≤–∂–µ –±–µ—Ä–µ—Ç–µ —É—á–∞—Å—Ç—å';
                mainJoinButton.classList.add('participating');
                mainJoinButton.disabled = true;
            }
        }

        // –û–Ω–æ–≤–ª—é—î–º–æ –∫–Ω–æ–ø–∫–∏ –º—ñ–Ω—ñ-—Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
        const miniButtons = document.querySelectorAll('.mini-raffle-button');
        miniButtons.forEach(button => {
            const raffleId = button.getAttribute('data-raffle-id');

            if (raffleId && participatingRaffles.has(raffleId)) {
                button.textContent = '–í–∏ –≤–∂–µ –±–µ—Ä–µ—Ç–µ —É—á–∞—Å—Ç—å';
                button.classList.add('participating');
                button.disabled = true;
            }
        });
    },

    // –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
    loadActiveRaffles: async function(quiet = false) {
        if (this.state.isLoading) return;
        this.state.isLoading = true;

        if (!quiet) {
            this.showLoading();
        }

        try {
            const response = await WinixAPI.apiRequest(this.config.activeRafflesEndpoint);

            if (response.status === 'success' && Array.isArray(response.data)) {
                this.state.activeRaffles = response.data;
                this.renderActiveRaffles(response.data);
            } else {
                console.error('‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ:', response);
                this.renderEmptyActiveRaffles();
            }
        } catch (error) {
            console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤:', error);
            this.renderEmptyActiveRaffles();
        } finally {
            this.state.isLoading = false;
            if (!quiet) {
                this.hideLoading();
            }
        }
    },

    // –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
    renderActiveRaffles: function(raffles) {
        // –û—á–∏—â–∞—î–º–æ –≤—Å—ñ —Ç–∞–π–º–µ—Ä–∏ –∑–≤–æ—Ä–æ—Ç–Ω–æ–≥–æ –≤—ñ–¥–ª—ñ–∫—É
        Object.keys(this.state.refreshTimers).forEach(key => {
            if (key.startsWith('countdown_')) {
                clearInterval(this.state.refreshTimers[key]);
                delete this.state.refreshTimers[key];
            }
        });

        // –†–æ–∑–¥—ñ–ª—è—î–º–æ –Ω–∞ –≥–æ–ª–æ–≤–Ω–∏–π —Ç–∞ –º—ñ–Ω—ñ-—Ä–æ–∑—ñ–≥—Ä–∞—à—ñ
        const mainRaffles = raffles.filter(raffle => !raffle.is_daily);
        const miniRaffles = raffles.filter(raffle => raffle.is_daily);

        // –í—ñ–¥–æ–±—Ä–∞–∂–∞—î–º–æ –≥–æ–ª–æ–≤–Ω–∏–π —Ä–æ–∑—ñ–≥—Ä–∞—à
        const mainRaffleContainer = document.querySelector('.main-raffle');
        if (mainRaffleContainer) {
            if (mainRaffles.length > 0) {
                const mainRaffle = mainRaffles[0];
                this.renderMainRaffle(mainRaffleContainer, mainRaffle);
            } else {
                mainRaffleContainer.innerHTML = `
                    <div class="main-raffle-content">
                        <h3 class="main-raffle-title">–ù–∞ –¥–∞–Ω–∏–π –º–æ–º–µ–Ω—Ç –Ω–µ–º–∞—î –∞–∫—Ç–∏–≤–Ω–∏—Ö –≥–æ–ª–æ–≤–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤</h3>
                        <div class="main-raffle-prize">–ù–µ–∑–∞–±–∞—Ä–æ–º –±—É–¥–µ –æ–ø—É–±–ª—ñ–∫–æ–≤–∞–Ω–æ –Ω–æ–≤–∏–π —Ä–æ–∑—ñ–≥—Ä–∞—à</div>
                    </div>
                `;
            }
        }

        // –í—ñ–¥–æ–±—Ä–∞–∂–∞—î–º–æ –º—ñ–Ω—ñ-—Ä–æ–∑—ñ–≥—Ä–∞—à—ñ
        const miniRafflesContainer = document.querySelector('.mini-raffles-container');
        if (miniRafflesContainer) {
            if (miniRaffles.length > 0) {
                miniRafflesContainer.innerHTML = '';
                miniRaffles.forEach(raffle => {
                    miniRafflesContainer.appendChild(this.createMiniRaffleElement(raffle));
                });
            } else {
                miniRafflesContainer.innerHTML = `
                    <div class="mini-raffle">
                        <div class="mini-raffle-info">
                            <h3 class="mini-raffle-title">–©–æ–¥–µ–Ω–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ</h3>
                            <div class="mini-raffle-prize">–ù–∞ –¥–∞–Ω–∏–π –º–æ–º–µ–Ω—Ç –Ω–µ–º–∞—î –∞–∫—Ç–∏–≤–Ω–∏—Ö —â–æ–¥–µ–Ω–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤</div>
                            <div class="mini-raffle-time">–ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ</div>
                        </div>
                    </div>
                `;
            }
        }

        // –û–Ω–æ–≤–ª—é—î–º–æ –∫–Ω–æ–ø–∫–∏ —É—á–∞—Å—Ç—ñ
        this.updateParticipationButtons();
    },

    // –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –ø—É—Å—Ç–æ–≥–æ —Å—Ç–∞–Ω—É –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
    renderEmptyActiveRaffles: function() {
        const mainRaffleContainer = document.querySelector('.main-raffle');
        if (mainRaffleContainer) {
            mainRaffleContainer.innerHTML = `
                <div class="main-raffle-content">
                    <h3 class="main-raffle-title">–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ</h3>
                    <div class="main-raffle-prize">–°–ø—Ä–æ–±—É–π—Ç–µ –æ–Ω–æ–≤–∏—Ç–∏ —Å—Ç–æ—Ä—ñ–Ω–∫—É</div>
                </div>
            `;
        }

        const miniRafflesContainer = document.querySelector('.mini-raffles-container');
        if (miniRafflesContainer) {
            miniRafflesContainer.innerHTML = `
                <div class="mini-raffle">
                    <div class="mini-raffle-info">
                        <h3 class="mini-raffle-title">–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è</h3>
                        <div class="mini-raffle-prize">–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —â–æ–¥–µ–Ω–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ</div>
                    </div>
                </div>
            `;
        }
    },

    // –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –≥–æ–ª–æ–≤–Ω–æ–≥–æ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
    renderMainRaffle: function(container, raffle) {
        const endTime = new Date(raffle.end_time);
        const formattedEndTime = this.formatDateTime(endTime);

        // –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –ø—Ä–æ–≥—Ä–µ—Å—É –∑–∞–ø–æ–≤–Ω–µ–Ω–Ω—è
        const progress = Math.min(Math.round((raffle.participants_count / 1000) * 100), 100);

        container.innerHTML = `
            <img src="${raffle.image_url || 'assets/prize-poster.gif'}" alt="${raffle.title}" class="main-raffle-image">
            <div class="main-raffle-content">
                <div class="main-raffle-header">
                    <h3 class="main-raffle-title">${raffle.title}</h3>
                    <div class="main-raffle-cost">
                        <img src="assets/token-icon.png" alt="–ñ–µ—Ç–æ–Ω–∏" class="token-icon">
                        <span>${raffle.entry_fee}</span>
                    </div>
                </div>

                <div class="main-raffle-prize">–ü—Ä–∏–∑–æ–≤–∏–π —Ñ–æ–Ω–¥: ${raffle.prize_amount} ${raffle.prize_currency}</div>

                <div class="timer-container" id="timer-container-${raffle.id}">
                    <div class="timer-block">
                        <div class="timer-value" id="days-${raffle.id}">00</div>
                        <div class="timer-label">–î–Ω—ñ</div>
                    </div>
                    <div class="timer-block">
                        <div class="timer-value" id="hours-${raffle.id}">00</div>
                        <div class="timer-label">–ì–æ–¥–∏–Ω–∏</div>
                    </div>
                    <div class="timer-block">
                        <div class="timer-value" id="minutes-${raffle.id}">00</div>
                        <div class="timer-label">–•–≤–∏–ª–∏–Ω–∏</div>
                    </div>
                    <div class="timer-block">
                        <div class="timer-value" id="seconds-${raffle.id}">00</div>
                        <div class="timer-label">–°–µ–∫—É–Ω–¥–∏</div>
                    </div>
                </div>

                <div class="main-raffle-participants">
                    <div class="participants-info">
                        –£—á–∞—Å–Ω–∏–∫—ñ–≤: <span class="participants-count">${raffle.participants_count}</span>
                    </div>
                    <div class="participants-info">
                        –ü–µ—Ä–µ–º–æ–∂—Ü—ñ–≤: <span class="participants-count">${raffle.winners_count}</span>
                    </div>
                </div>

                <div class="progress-bar">
                    <div class="progress" style="width: ${progress}%"></div>
                </div>

                <button class="join-button" data-raffle-id="${raffle.id}" data-raffle-type="main">
                    –í–∑—è—Ç–∏ —É—á–∞—Å—Ç—å –∑–∞ ${raffle.entry_fee} –∂–µ—Ç–æ–Ω–∏
                </button>
            </div>
        `;

        // –ó–∞–ø—É—Å–∫–∞—î–º–æ —Ç–∞–π–º–µ—Ä –∑–≤–æ—Ä–æ—Ç–Ω–æ–≥–æ –≤—ñ–¥–ª—ñ–∫—É
        this.startCountdown(raffle.id, endTime);
    },

    // –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç–∞ –º—ñ–Ω—ñ-—Ä–æ–∑—ñ–≥—Ä–∞—à—É
    createMiniRaffleElement: function(raffle) {
        const miniRaffle = document.createElement('div');
        miniRaffle.className = 'mini-raffle';

        // –§–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è —á–∞—Å—É –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è
        const endTime = new Date(raffle.end_time);
        const now = new Date();
        const isToday = endTime.getDate() === now.getDate() &&
                        endTime.getMonth() === now.getMonth() &&
                        endTime.getFullYear() === now.getFullYear();

        const endTimeText = isToday
            ? `—Å—å–æ–≥–æ–¥–Ω—ñ –æ ${this.formatTime(endTime)}`
            : `${this.formatDate(endTime)} –æ ${this.formatTime(endTime)}`;

        miniRaffle.innerHTML = `
            <div class="mini-raffle-info">
                <h3 class="mini-raffle-title">${raffle.title}</h3>
                <div class="mini-raffle-cost">
                    <img src="assets/token-icon.png" alt="–ñ–µ—Ç–æ–Ω–∏" class="token-icon">
                    <span>${raffle.entry_fee}</span>
                </div>
                <div class="mini-raffle-prize">–ü—Ä–∏–∑: ${raffle.prize_amount} ${raffle.prize_currency}</div>
                <div class="mini-raffle-time">–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—è: ${endTimeText}</div>
            </div>
            <button class="mini-raffle-button" data-raffle-id="${raffle.id}" data-raffle-type="daily">–í–∑—è—Ç–∏ —É—á–∞—Å—Ç—å</button>
        `;

        return miniRaffle;
    },

    // –ó–∞–ø—É—Å–∫ —Ç–∞–π–º–µ—Ä–∞ –∑–≤–æ—Ä–æ—Ç–Ω–æ–≥–æ –≤—ñ–¥–ª—ñ–∫—É
    startCountdown: function(raffleId, endTime) {
        // –û—á–∏—â–∞—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ–π —Ç–∞–π–º–µ—Ä, —è–∫—â–æ —î
        if (this.state.refreshTimers[`countdown_${raffleId}`]) {
            clearInterval(this.state.refreshTimers[`countdown_${raffleId}`]);
        }

        const updateTimer = () => {
            const now = new Date().getTime();
            const timeLeft = endTime.getTime() - now;

            // –Ø–∫—â–æ —á–∞—Å –≤–∏–π—à–æ–≤, –æ–Ω–æ–≤–ª—é—î–º–æ —Å–ø–∏—Å–æ–∫ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
            if (timeLeft <= 0) {
                clearInterval(this.state.refreshTimers[`countdown_${raffleId}`]);

                document.getElementById(`days-${raffleId}`).textContent = '00';
                document.getElementById(`hours-${raffleId}`).textContent = '00';
                document.getElementById(`minutes-${raffleId}`).textContent = '00';
                document.getElementById(`seconds-${raffleId}`).textContent = '00';

                // –û–Ω–æ–≤–ª—é—î–º–æ —Å–ø–∏—Å–æ–∫ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥–∏
                setTimeout(() => this.loadActiveRaffles(), 2000);
                return;
            }

            // –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –¥–Ω—ñ–≤, –≥–æ–¥–∏–Ω, —Ö–≤–∏–ª–∏–Ω, —Å–µ–∫—É–Ω–¥
            const days = Math.floor(timeLeft / (1000 * 60 * 60 * 24));
            const hours = Math.floor((timeLeft % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
            const minutes = Math.floor((timeLeft % (1000 * 60 * 60)) / (1000 * 60));
            const seconds = Math.floor((timeLeft % (1000 * 60)) / 1000);

            // –û–Ω–æ–≤–ª–µ–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ —Ç–∞–π–º–µ—Ä–∞
            document.getElementById(`days-${raffleId}`).textContent = days.toString().padStart(2, '0');
            document.getElementById(`hours-${raffleId}`).textContent = hours.toString().padStart(2, '0');
            document.getElementById(`minutes-${raffleId}`).textContent = minutes.toString().padStart(2, '0');
            document.getElementById(`seconds-${raffleId}`).textContent = seconds.toString().padStart(2, '0');
        };

        // –ó–∞–ø—É—Å–∫–∞—î–º–æ –ø–µ—Ä—à–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–∞–π–º–µ—Ä–∞
        updateTimer();

        // –ó–∞–ø—É—Å–∫–∞—î–º–æ —ñ–Ω—Ç–µ—Ä–≤–∞–ª –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–∞–π–º–µ—Ä–∞ (—â–æ—Å–µ–∫—É–Ω–¥–∏)
        this.state.refreshTimers[`countdown_${raffleId}`] = setInterval(updateTimer, 1000);
    },

    // –£—á–∞—Å—Ç—å —É —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ
    participateInRaffle: async function(raffleId, raffleType) {
        if (!this.state.telegramId) {
            this.showErrorToast('–ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–∑–Ω–∞—á–∏—Ç–∏ –≤–∞—à ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞');
            return;
        }

        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–∂–µ –±–µ—Ä–µ —É—á–∞—Å—Ç—å —É —Ü—å–æ–º—É —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ
        if (this.state.userRaffles.some(raffle => raffle.raffle_id === raffleId)) {
            this.showToast('–í–∏ –≤–∂–µ –±–µ—Ä–µ—Ç–µ —É—á–∞—Å—Ç—å —É —Ü—å–æ–º—É —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ', 'info');
            return;
        }

        this.showLoading();

        try {
            const endpoint = this.config.participateEndpoint.replace('{userId}', this.state.telegramId);

            const response = await WinixAPI.apiRequest(endpoint, 'POST', {
                raffle_id: raffleId,
                entry_count: 1
            });

            if (response.status === 'success') {
                // –î–æ–¥–∞—î–º–æ —Ä–æ–∑—ñ–≥—Ä–∞—à –¥–æ —Å–ø–∏—Å–∫—É —É—á–∞—Å—Ç—ñ
                this.state.userRaffles.push({
                    raffle_id: raffleId,
                    entry_count: 1
                });

                // –û–Ω–æ–≤–ª—é—î–º–æ –∫–Ω–æ–ø–∫–∏ —É—á–∞—Å—Ç—ñ
                this.updateParticipationButtons();

                // –Ø–∫—â–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –º—ñ—Å—Ç–∏—Ç—å –æ–Ω–æ–≤–ª–µ–Ω–∏–π –±–∞–ª–∞–Ω—Å –∂–µ—Ç–æ–Ω—ñ–≤
                if (response.data && response.data.new_coins_balance !== undefined) {
                    // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∂–µ—Ç–æ–Ω—ñ–≤
                    const coinsElements = document.querySelectorAll('.user-coins');
                    coinsElements.forEach(element => {
                        element.textContent = response.data.new_coins_balance;
                    });

                    // –ì–µ–Ω–µ—Ä—É—î–º–æ –ø–æ–¥—ñ—é –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
                    document.dispatchEvent(new CustomEvent('user-data-updated', {
                        detail: {
                            coins: response.data.new_coins_balance
                        }
                    }));
                }

                // –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ —É—Å–ø—ñ—Ö
                this.showSuccessToast('–í–∏ —É—Å–ø—ñ—à–Ω–æ –≤–∑—è–ª–∏ —É—á–∞—Å—Ç—å —É —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ');
            } else {
                if (response.code === 'insufficient_tokens') {
                    this.showErrorToast('–ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –∂–µ—Ç–æ–Ω—ñ–≤ –¥–ª—è —É—á–∞—Å—Ç—ñ –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ');
                } else {
                    this.showErrorToast(response.message || '–ü–æ–º–∏–ª–∫–∞ —É—á–∞—Å—Ç—ñ –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ');
                }
            }
        } catch (error) {
            console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ —É—á–∞—Å—Ç—ñ –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ:', error);
            this.showErrorToast('–ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∑—è—Ç–∏ —É—á–∞—Å—Ç—å —É —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ');
        } finally {
            this.hideLoading();
        }
    },

    // –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —ñ—Å—Ç–æ—Ä—ñ—ó —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
    loadRafflesHistory: async function() {
        if (!this.state.telegramId) {
            this.renderEmptyHistory();
            return;
        }

        if (this.state.isLoading) return;
        this.state.isLoading = true;

        this.showLoading();

        try {
            const endpoint = this.config.historyEndpoint.replace('{userId}', this.state.telegramId);
            const response = await WinixAPI.apiRequest(endpoint);

            if (response.status === 'success' && Array.isArray(response.data)) {
                this.state.pastRaffles = response.data;
                this.renderRafflesHistory(response.data);
            } else {
                console.error('‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ:', response);
                this.renderEmptyHistory();
            }
        } catch (error) {
            console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —ñ—Å—Ç–æ—Ä—ñ—ó —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤:', error);
            this.renderEmptyHistory();
        } finally {
            this.state.isLoading = false;
            this.hideLoading();
        }
    },

    // –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —ñ—Å—Ç–æ—Ä—ñ—ó —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
    renderRafflesHistory: function(history) {
        const historyContainer = document.getElementById('history-container');

        if (!historyContainer) {
            console.error('‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —ñ—Å—Ç–æ—Ä—ñ—ó –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
            return;
        }

        if (!history || history.length === 0) {
            this.renderEmptyHistory();
            return;
        }

        historyContainer.innerHTML = '';

        // –°–æ—Ä—Ç—É—î–º–æ –∑–∞ –¥–∞—Ç–æ—é (–≤—ñ–¥ –Ω–∞–π–Ω–æ–≤—ñ—à–∏—Ö –¥–æ –Ω–∞–π—Å—Ç–∞—Ä—ñ—à–∏—Ö)
        const sortedHistory = [...history].sort((a, b) => {
            const dateA = new Date(a.date.split('.').reverse().join('-'));
            const dateB = new Date(b.date.split('.').reverse().join('-'));
            return dateB - dateA;
        });

        // –î–æ–¥–∞—î–º–æ –∫–∞—Ä—Ç–∫–∏ —ñ—Å—Ç–æ—Ä—ñ—ó
        sortedHistory.forEach(raffle => {
            const historyCard = document.createElement('div');
            historyCard.className = `history-card ${raffle.status}`;
            historyCard.setAttribute('data-raffle-id', raffle.raffle_id);

            let statusText = '–ó–∞–≤–µ—Ä—à–µ–Ω–æ';
            if (raffle.status === 'won') {
                statusText = '–í–∏ –≤–∏–≥—Ä–∞–ª–∏!';
            } else if (raffle.status === 'participated') {
                statusText = '–í–∏ –±—Ä–∞–ª–∏ —É—á–∞—Å—Ç—å';
            }

            historyCard.innerHTML = `
                <div class="history-date">${raffle.date}</div>
                <div class="history-prize">${raffle.title}: ${raffle.prize}</div>
                <div class="history-winners">${raffle.result || '–ü–µ—Ä–µ–º–æ–∂—Ü—ñ –≤–∏–∑–Ω–∞—á–µ–Ω—ñ'}</div>
                <div class="history-status ${raffle.status}">${statusText}</div>
                <div class="view-details-hint">–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –¥–ª—è –¥–µ—Ç–∞–ª–µ–π</div>
            `;

            historyContainer.appendChild(historyCard);
        });
    },

    // –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –ø–æ—Ä–æ–∂–Ω—å–æ—ó —ñ—Å—Ç–æ—Ä—ñ—ó
    renderEmptyHistory: function() {
        const historyContainer = document.getElementById('history-container');

        if (!historyContainer) {
            console.error('‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —ñ—Å—Ç–æ—Ä—ñ—ó –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
            return;
        }

        historyContainer.innerHTML = `
            <div class="history-card">
                <div class="history-date">–Ü—Å—Ç–æ—Ä—ñ—è –≤—ñ–¥—Å—É—Ç–Ω—è</div>
                <div class="history-prize">–£ –≤–∞—Å —â–µ –Ω–µ–º–∞—î —ñ—Å—Ç–æ—Ä—ñ—ó —É—á–∞—Å—Ç—ñ –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à–∞—Ö</div>
                <div class="history-winners">–í—ñ–∑—å–º—ñ—Ç—å —É—á–∞—Å—Ç—å —É —Ä–æ–∑—ñ–≥—Ä–∞—à–∞—Ö, —â–æ–± –ø–æ–±–∞—á–∏—Ç–∏ —ó—Ö —Ç—É—Ç</div>
            </div>
        `;
    },

    // –ü–æ–∫–∞–∑ –¥–µ—Ç–∞–ª–µ–π —Ä–æ–∑—ñ–≥—Ä–∞—à—É
    showRaffleDetails: function(raffleId) {
        const raffle = this.state.pastRaffles.find(r => r.raffle_id === raffleId);

        if (!raffle) {
            this.showErrorToast('–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–Ω–∞–π—Ç–∏ –¥–µ—Ç–∞–ª—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—É');
            return;
        }

        // –§–æ—Ä–º—É—î–º–æ HTML –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞
        let winnersHtml = '';
        if (raffle.winners && raffle.winners.length > 0) {
            winnersHtml = `
                <div class="winners-list">
                    <h4>–ü–µ—Ä–µ–º–æ–∂—Ü—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—É:</h4>
                    <ul>
                        ${raffle.winners.map(winner => `
                            <li class="${winner.isCurrentUser ? 'current-user' : ''}">
                                ${winner.place}. ${winner.username} - ${winner.prize}
                            </li>
                        `).join('')}
                    </ul>
                </div>
            `;
        }

        const modalContent = `
            <div class="raffle-details-modal">
                <h3>${raffle.title}</h3>
                <div class="raffle-info">
                    <p><strong>–î–∞—Ç–∞:</strong> ${raffle.date}</p>
                    <p><strong>–ü—Ä–∏–∑–æ–≤–∏–π —Ñ–æ–Ω–¥:</strong> ${raffle.prize}</p>
                    <p><strong>–í–∞—à–∞ —É—á–∞—Å—Ç—å:</strong> ${raffle.entry_count} –∂–µ—Ç–æ–Ω—ñ–≤</p>
                    <p><strong>–†–µ–∑—É–ª—å—Ç–∞—Ç:</strong> ${raffle.result}</p>
                </div>
                ${winnersHtml}
            </div>
        `;

        // –ü–æ–∫–∞–∑—É—î–º–æ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
        if (typeof window.showModal === 'function') {
            window.showModal('–î–µ—Ç–∞–ª—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—É', modalContent);
        } else {
            // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç, —è–∫—â–æ –Ω–µ–º–∞—î —Ñ—É–Ω–∫—Ü—ñ—ó showModal
            alert(`${raffle.title}\n\n–î–∞—Ç–∞: ${raffle.date}\n–ü—Ä–∏–∑–æ–≤–∏–π —Ñ–æ–Ω–¥: ${raffle.prize}\n–†–µ–∑—É–ª—å—Ç–∞—Ç: ${raffle.result}`);
        }
    },

    // –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
    loadRafflesStatistics: async function() {
        if (!this.state.telegramId) {
            this.renderEmptyStatistics();
            return;
        }

        if (this.state.isLoading) return;
        this.state.isLoading = true;

        this.showLoading();

        try {
            // –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ —Ä–æ–∑—à–∏—Ä–µ–Ω–æ—é —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é
            const response = await WinixAPI.getUserData(true);

            if (response.status === 'success' && response.data) {
                this.state.userStats = response.data;
                this.renderRafflesStatistics(response.data);
            } else {
                console.error('‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ:', response);
                this.renderEmptyStatistics();
            }
        } catch (error) {
            console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤:', error);
            this.renderEmptyStatistics();
        } finally {
            this.state.isLoading = false;
            this.hideLoading();
        }
    },

    // –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
    renderRafflesStatistics: function(userData) {
        // –û–Ω–æ–≤–ª—é—î–º–æ –µ–ª–µ–º–µ–Ω—Ç–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        this.updateStatElement('total-participated', userData.participations_count || 0);
        this.updateStatElement('total-wins', userData.wins_count || 0);
        this.updateStatElement('total-winix-won', userData.total_winnings || userData.wins_count * 15000 || 0);
        this.updateStatElement('total-tokens-spent', userData.tokens_spent || userData.participations_count * 2 || 0);

        // –û–Ω–æ–≤–ª—é—î–º–æ –±–µ–π–¥–∂—ñ
        this.updateBadges(userData.badges || {});
    },

    // –û–Ω–æ–≤–ª–µ–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    updateStatElement: function(id, value) {
        const element = document.getElementById(id);
        if (element) {
            element.textContent = value.toLocaleString();
        }
    },

    // –û–Ω–æ–≤–ª–µ–Ω–Ω—è –±–µ–π–¥–∂—ñ–≤
    updateBadges: function(badges) {
        // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–∑—É–∞–ª—å–Ω–µ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –±–µ–π–¥–∂—ñ–≤
    },

    // –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –ø–æ—Ä–æ–∂–Ω—å–æ—ó —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    renderEmptyStatistics: function() {
        // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –∑–Ω–∞—á–µ–Ω–Ω—è –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
        this.updateStatElement('total-participated', 0);
        this.updateStatElement('total-wins', 0);
        this.updateStatElement('total-winix-won', 0);
        this.updateStatElement('total-tokens-spent', 0);
    },

    // –î–æ–ø–æ–º—ñ–∂–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó
    formatDate: function(date) {
        if (!(date instanceof Date)) {
            date = new Date(date);
        }

        // –§–æ—Ä–º–∞—Ç—É—î–º–æ –¥–∞—Ç—É —É –≤–∏–≥–ª—è–¥—ñ DD.MM.YYYY
        return `${String(date.getDate()).padStart(2, '0')}.${String(date.getMonth() + 1).padStart(2, '0')}.${date.getFullYear()}`;
    },

    formatTime: function(date) {
        if (!(date instanceof Date)) {
            date = new Date(date);
        }

        // –§–æ—Ä–º–∞—Ç—É—î–º–æ —á–∞—Å —É –≤–∏–≥–ª—è–¥—ñ HH:MM
        return `${String(date.getHours()).padStart(2, '0')}:${String(date.getMinutes()).padStart(2, '0')}`;
    },

    formatDateTime: function(date) {
        // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –∫–æ–º–±—ñ–Ω–∞—Ü—ñ—é –¥–∞—Ç–∏ —Ç–∞ —á–∞—Å—É
        return `${this.formatDate(date)} ${this.formatTime(date)}`;
    },

    // –§—É–Ω–∫—Ü—ñ—ó –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–º –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
    showLoading: function() {
        if (typeof window.showLoading === 'function') {
            window.showLoading();
        }
    },

    hideLoading: function() {
        if (typeof window.hideLoading === 'function') {
            window.hideLoading();
        }
    },

    // –§—É–Ω–∫—Ü—ñ—ó –¥–ª—è –ø–æ–∫–∞–∑—É —Å–ø–æ–≤—ñ—â–µ–Ω—å
    showToast: function(message, type = 'info') {
        if (typeof window.showToast === 'function') {
            window.showToast(message, type);
        } else {
            console.log(`[${type}] ${message}`);
        }
    },

    showSuccessToast: function(message) {
        this.showToast(message, 'success');
    },

    showErrorToast: function(message) {
        this.showToast(message, 'error');
    }
};

// –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Å–∏—Å—Ç–µ–º–∏ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ –ø—ñ—Å–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏
document.addEventListener('DOMContentLoaded', function() {
    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ API –º–æ–¥—É–ª—è
    if (typeof WinixAPI === 'undefined') {
        console.error('‚ùå WinixAPI –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ! –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—è, —â–æ api.js –ø—ñ–¥–∫–ª—é—á–µ–Ω–æ —Ä–∞–Ω—ñ—à–µ raffles/core.js');
        return;
    }

    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Å–∏—Å—Ç–µ–º–∏ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
    WinixRaffles.init();
});

// –ì–ª–æ–±–∞–ª—å–Ω–∏–π –¥–æ—Å—Ç—É–ø –¥–æ —Å–∏—Å—Ç–µ–º–∏ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
window.WinixRaffles = WinixRaffles;