/**
 * api.js - –°–µ—Ä–≤—ñ—Å –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ API —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
 * –Ü–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—è –∑ –æ—Å–Ω–æ–≤–Ω–∏–º API —Å–∏—Å—Ç–µ–º–∏
 * @version 1.2.0
 */

import WinixRaffles from '../globals.js';

// –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—ñ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ API
const hasMainApi = () => {
    try {
        return window.WinixAPI &&
               typeof window.WinixAPI.apiRequest === 'function' &&
               typeof window.WinixAPI.getUserId === 'function';
    } catch (e) {
        console.error("üîå Raffles API: –ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –≥–æ–ª–æ–≤–Ω–æ–≥–æ API:", e);
        return false;
    }
};

// –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ —É –≥–æ–ª–æ–≤–Ω–æ–≥–æ API —î –≤—Å—ñ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ –º–µ—Ç–æ–¥–∏
const hasFullMainApi = () => {
    try {
        return hasMainApi() &&
            typeof window.WinixAPI.refreshToken === 'function' &&
            typeof window.WinixAPI.getAuthToken === 'function';
    } catch (e) {
        return false;
    }
};

// –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∏ –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –∑–∞–ø–∏—Ç—ñ–≤ (–∑–±—ñ–ª—å—à–µ–Ω—ñ —ñ–Ω—Ç–µ—Ä–≤–∞–ª–∏)
const REQUEST_THROTTLE = {
    '/raffles-history': 120000,     // 2 —Ö–≤–∏–ª–∏–Ω–∏ –¥–ª—è —ñ—Å—Ç–æ—Ä—ñ—ó —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
    '/participate-raffle': 15000,   // 15 —Å–µ–∫—É–Ω–¥ –¥–ª—è —É—á–∞—Å—Ç—ñ –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à–∞—Ö
    '/raffles': 30000,              // 30 —Å–µ–∫—É–Ω–¥ –¥–ª—è —Å–ø–∏—Å–∫—É —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
    '/balance': 20000,              // 20 —Å–µ–∫—É–Ω–¥ –¥–ª—è –±–∞–ª–∞–Ω—Å—É
    '/refresh-token': 60000,        // 1 —Ö–≤–∏–ª–∏–Ω–∞ –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω—É
    'default': 15000                // 15 —Å–µ–∫—É–Ω–¥ –¥–ª—è –≤—Å—ñ—Ö —ñ–Ω—à–∏—Ö
};

// –í—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è —á–∞—Å—É –æ—Å—Ç–∞–Ω–Ω—ñ—Ö –∑–∞–ø–∏—Ç—ñ–≤
const _lastRequestTimes = {};

// –ì–ª–æ–±–∞–ª—å–Ω–∞ –∑–º—ñ–Ω–Ω–∞ –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è —á–∞—Å—É –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ –∑–∞–ø–∏—Ç—É
let _lastRequestTime = Date.now(); // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ –ø–æ—Ç–æ—á–Ω–∏–º —á–∞—Å–æ–º

// –ê–∫—Ç–∏–≤–Ω—ñ –∑–∞–ø–∏—Ç–∏
const _activeRequests = {};

// –ö–µ—à –¥–∞–Ω–∏—Ö
const _cache = {
    activeRaffles: {data: null, timestamp: 0, ttl: 60000}, // 1 —Ö–≤–∏–ª–∏–Ω–∞
    history: {data: null, timestamp: 0, ttl: 300000}, // 5 —Ö–≤–∏–ª–∏–Ω
    userData: {data: null, timestamp: 0, ttl: 120000} // 2 —Ö–≤–∏–ª–∏–Ω–∏
};

// –¢–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó
let _authToken = null;
let _authTokenExpiry = 0;

/**
 * –û—Ç—Ä–∏–º–∞—Ç–∏ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
 * @returns {string|null} ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∞–±–æ null
 */
export function getUserId() {
    // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –æ—Å–Ω–æ–≤–Ω–∏–π API, —è–∫—â–æ –¥–æ—Å—Ç—É–ø–Ω–∏–π
    if (hasMainApi()) {
        try {
            const id = window.WinixAPI.getUserId();
            if (id) return id;
        } catch (e) {
            console.warn("üîå Raffles API: –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è ID –∑ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ API:", e);
        }
    }

    // –†–µ–∑–µ—Ä–≤–Ω–∞ —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—è
    try {
        if (window.Telegram && window.Telegram.WebApp) {
            try {
                if (window.Telegram.WebApp.initDataUnsafe &&
                    window.Telegram.WebApp.initDataUnsafe.user &&
                    window.Telegram.WebApp.initDataUnsafe.user.id) {

                    const telegramId = String(window.Telegram.WebApp.initDataUnsafe.user.id);
                    return telegramId;
                }
            } catch (e) {
                console.warn("üîå Raffles API: –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è ID –∑ Telegram WebApp:", e);
            }
        }

        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ localStorage
        try {
            const localId = localStorage.getItem('telegram_user_id');
            if (localId && localId !== 'undefined' && localId !== 'null') return localId;
        } catch (e) {
            console.warn("üîå Raffles API: –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è ID –∑ localStorage:", e);
        }

        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ DOM –µ–ª–µ–º–µ–Ω—Ç
        try {
            const userIdElement = document.getElementById('user-id');
            if (userIdElement && userIdElement.textContent) {
                const domId = userIdElement.textContent.trim();
                if (domId && domId !== 'undefined' && domId !== 'null') {
                    return domId;
                }
            }
        } catch (e) {
            console.warn("üîå Raffles API: –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è ID –∑ DOM:", e);
        }

        return null;
    } catch (error) {
        console.error("üîå Raffles API: –ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:", error);
        return null;
    }
}

/**
 * –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç–æ–∫–µ–Ω—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó
 * @returns {string|null} –¢–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó –∞–±–æ null
 */
export function getAuthToken() {
    // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –æ—Å–Ω–æ–≤–Ω–∏–π API, —è–∫—â–æ –¥–æ—Å—Ç—É–ø–Ω–∏–π
    if (hasMainApi()) {
        try {
            const token = window.WinixAPI.getAuthToken();
            if (token) {
                // –ö–µ—à—É—î–º–æ —Ç–æ–∫–µ–Ω –ª–æ–∫–∞–ª—å–Ω–æ –¥–ª—è —à–≤–∏–¥—à–æ–≥–æ –¥–æ—Å—Ç—É–ø—É
                _authToken = token;
                return token;
            }
        } catch (e) {
            console.warn("üîå Raffles API: –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç–æ–∫–µ–Ω—É –∑ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ API:", e);
        }
    }

    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –ª–æ–∫–∞–ª—å–Ω—É –∑–º—ñ–Ω–Ω—É –¥–ª—è —à–≤–∏–¥—à–æ–≥–æ –¥–æ—Å—Ç—É–ø—É
    if (_authToken && _authTokenExpiry > Date.now()) {
        return _authToken;
    }

    // –†–µ–∑–µ—Ä–≤–Ω–∞ —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—è - localStorage
    try {
        // –û—Å–Ω–æ–≤–Ω–∏–π –∫–ª—é—á, —è–∫–∏–π –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î –≥–æ–ª–æ–≤–Ω–∏–π API
        const token = localStorage.getItem('auth_token');
        if (token && typeof token === 'string' && token.length > 5) {
            _authToken = token;

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ç–µ—Ä–º—ñ–Ω –¥—ñ—ó
            const expiryStr = localStorage.getItem('auth_token_expiry');
            if (expiryStr) {
                _authTokenExpiry = parseInt(expiryStr);
            } else {
                _authTokenExpiry = Date.now() + (24 * 60 * 60 * 1000); // 24 –≥–æ–¥–∏–Ω–∏
            }

            return token;
        }

        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ñ –∫–ª—é—á—ñ, —è–∫—ñ –º–æ–∂—É—Ç—å –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏—Å—è
        const possibleKeys = ['access_token', 'token', 'bearer_token', 'winix_auth_token'];
        for (const key of possibleKeys) {
            const altToken = localStorage.getItem(key);
            if (altToken && typeof altToken === 'string' && altToken.length > 5) {
                _authToken = altToken;
                _authTokenExpiry = Date.now() + (24 * 60 * 60 * 1000); // 24 –≥–æ–¥–∏–Ω–∏
                return altToken;
            }
        }
    } catch (e) {
        console.warn("üîå Raffles API: –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç–æ–∫–µ–Ω—É –∑ localStorage:", e);
    }

    return null;
}

/**
 * –û—Ç—Ä–∏–º–∞–Ω–Ω—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –±–∞–∑–æ–≤–æ–≥–æ URL API
 * @returns {string} –ë–∞–∑–æ–≤–∏–π URL API
 */
function getApiBaseUrl() {
    // –°–ø–æ—á–∞—Ç–∫—É –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —É –ª–æ–∫–∞–ª—å–Ω–æ–º—É –∫–æ–Ω—Ñ—ñ–≥—É
    if (WinixRaffles && WinixRaffles.config && WinixRaffles.config.apiBaseUrl) {
        return WinixRaffles.config.apiBaseUrl;
    }

    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –≥–ª–æ–±–∞–ª—å–Ω–∏–π –∫–æ–Ω—Ñ—ñ–≥
    if (window.WinixConfig && window.WinixConfig.apiBaseUrl) {
        // –ü–µ—Ä–µ–∫–æ–Ω—É—î–º–æ—Å—è, —â–æ URL –Ω–µ –∑–∞–∫—ñ–Ω—á—É—î—Ç—å—Å—è –Ω–∞ /api
        const url = window.WinixConfig.apiBaseUrl;
        return url.endsWith('/api') ? url : url + '/api';
    }

    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –æ—Å–Ω–æ–≤–Ω–∏–π API
    if (hasMainApi() && window.WinixAPI.config && window.WinixAPI.config.baseUrl) {
        const baseUrl = window.WinixAPI.config.baseUrl;
        return baseUrl.endsWith('/api') ? baseUrl : baseUrl + '/api';
    }

    // –í–∏–∑–Ω–∞—á–∞—î–º–æ URL –Ω–∞ –æ—Å–Ω–æ–≤—ñ –ø–æ—Ç–æ—á–Ω–æ–≥–æ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
    const hostname = window.location.hostname;
    if (hostname === 'localhost' || hostname === '127.0.0.1') {
        // –õ–æ–∫–∞–ª—å–Ω–µ —Å–µ—Ä–µ–¥–æ–≤–∏—â–µ - –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –ø–æ—Ä—Ç 8080
        return `http://${hostname}:8080/api`;
    } else if (hostname.includes('testenv') || hostname.includes('staging')) {
        // –¢–µ—Å—Ç–æ–≤—ñ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
        return `https://${hostname}/api`;
    } else {
        // –ü—Ä–æ–¥–∞–∫—à–Ω —Å–µ—Ä–µ–¥–æ–≤–∏—â–µ
        return 'https://winixbot.com/api';
    }
}

/**
 * –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —ñ —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –æ–±–º–µ–∂–µ–Ω–Ω—è–º —á–∞—Å—Ç–æ—Ç–∏ –∑–∞–ø–∏—Ç—ñ–≤
 * @param {string} endpoint - Endpoint API
 * @returns {boolean} –î–æ–∑–≤–æ–ª–µ–Ω–æ –≤–∏–∫–æ–Ω–∞—Ç–∏ –∑–∞–ø–∏—Ç
 */
function canMakeRequest(endpoint) {
    const now = Date.now();

    // –í–∏–∑–Ω–∞—á–∞—î–º–æ –º—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–π —ñ–Ω—Ç–µ—Ä–≤–∞–ª –¥–ª—è –µ–Ω–¥–ø–æ—ñ–Ω—Ç—É
    let throttleTime = REQUEST_THROTTLE.default;
    for (const key in REQUEST_THROTTLE) {
        if (endpoint.includes(key)) {
            throttleTime = REQUEST_THROTTLE[key];
            break;
        }
    }

    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, –∫–æ–ª–∏ –±—É–≤ –æ—Å—Ç–∞–Ω–Ω—ñ–π –∑–∞–ø–∏—Ç
    const lastRequestTime = _lastRequestTimes[endpoint] || 0;
    if (now - lastRequestTime < throttleTime) {
        console.warn(`üîå Raffles API: –ó–∞–Ω–∞–¥—Ç–æ —á–∞—Å—Ç–∏–π –∑–∞–ø–∏—Ç –¥–æ ${endpoint}, –∑–∞–ª–∏—à–∏–ª–æ—Å—å ${Math.ceil((throttleTime - (now - lastRequestTime))/1000)}—Å`);
        return false;
    }

    // –û–Ω–æ–≤–ª—é—î–º–æ —á–∞—Å –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ –∑–∞–ø–∏—Ç—É
    _lastRequestTimes[endpoint] = now;
    _lastRequestTime = now; // –û–Ω–æ–≤–ª—é—î–º–æ –≥–ª–æ–±–∞–ª—å–Ω—É –∑–º—ñ–Ω–Ω—É
    return true;
}

/**
 * –û—á–∏—â–µ–Ω–Ω—è –∑–∞–≤–∏—Å–∞—é—á–∏—Ö –∑–∞–ø–∏—Ç—ñ–≤
 */
function cleanupHangingRequests() {
    const now = Date.now();
    for (const endpoint in _activeRequests) {
        if (now - _activeRequests[endpoint] > 30000) { // 30 —Å–µ–∫—É–Ω–¥
            console.warn(`üîå Raffles API: –í–∏—è–≤–ª–µ–Ω–æ –∑–∞–≤–∏—Å–∞—é—á–∏–π –∑–∞–ø–∏—Ç –¥–æ ${endpoint}, –æ—á–∏—â–∞—î–º–æ`);
            delete _activeRequests[endpoint];
        }
    }
}

/**
 * –ü—Ä–∏–º—É—Å–æ–≤–µ –æ—á–∏—â–µ–Ω–Ω—è –≤—Å—ñ—Ö –∞–∫—Ç–∏–≤–Ω–∏—Ö –∑–∞–ø–∏—Ç—ñ–≤
 */
export function forceCleanupRequests() {
    for (const endpoint in _activeRequests) {
        delete _activeRequests[endpoint];
    }
    console.log("üîå Raffles API: –ü—Ä–∏–º—É—Å–æ–≤–æ –æ—á–∏—â–µ–Ω–æ –≤—Å—ñ –∞–∫—Ç–∏–≤–Ω—ñ –∑–∞–ø–∏—Ç–∏");
    return true;
}

/**
 * –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó
 * @returns {Promise<boolean>} –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
 */
export async function refreshToken() {
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –Ω–µ –±—É–ª–æ –Ω–µ—â–æ–¥–∞–≤–Ω—å–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω—É
    const now = Date.now();
    if (_lastRequestTimes['refresh-token'] && now - _lastRequestTimes['refresh-token'] < REQUEST_THROTTLE['/refresh-token']) {
        console.log("üîÑ –ó–∞–Ω–∞–¥—Ç–æ —á–∞—Å—Ç–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω–∞, –ø—Ä–æ–ø—É—Å–∫–∞—î–º–æ");
        return false;
    }

    _lastRequestTimes['refresh-token'] = now;
    _lastRequestTime = now; // –û–Ω–æ–≤–ª—é—î–º–æ –≥–ª–æ–±–∞–ª—å–Ω—É –∑–º—ñ–Ω–Ω—É

    // –û–Ω–æ–≤–ª—é—î–º–æ —Ç–æ–∫–µ–Ω —á–µ—Ä–µ–∑ –æ—Å–Ω–æ–≤–Ω–∏–π API, —è–∫—â–æ –≤—ñ–Ω –¥–æ—Å—Ç—É–ø–Ω–∏–π
    if (hasFullMainApi()) {
        try {
            const result = await window.WinixAPI.refreshToken();
            console.log("‚úÖ Raffles API: –¢–æ–∫–µ–Ω —É—Å–ø—ñ—à–Ω–æ –æ–Ω–æ–≤–ª–µ–Ω–æ —á–µ—Ä–µ–∑ –æ—Å–Ω–æ–≤–Ω–∏–π API");

            // –û–Ω–æ–≤–ª—é—î–º–æ –ª–æ–∫–∞–ª—å–Ω–∏–π –∫–µ—à —Ç–æ–∫–µ–Ω—É
            _authToken = window.WinixAPI.getAuthToken();
            try {
                const expiryStr = localStorage.getItem('auth_token_expiry');
                if (expiryStr) {
                    _authTokenExpiry = parseInt(expiryStr);
                }
            } catch (e) {}

            return true;
        } catch (e) {
            console.warn("üîå Raffles API: –ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω—É —á–µ—Ä–µ–∑ –æ—Å–Ω–æ–≤–Ω–∏–π API:", e);
            // –ü—Ä–æ–¥–æ–≤–∂—É—î–º–æ –∑ –≤–ª–∞—Å–Ω–æ—é —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—î—é
        }
    }

    // –í–ª–∞—Å–Ω–∞ —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω—É
    try {
        // –û—Ç—Ä–∏–º—É—î–º–æ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        const userId = getUserId();
        if (!userId) {
            throw new Error("ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ");
        }

        console.log("üîÑ Raffles API: –ü–æ—á–∞—Ç–æ–∫ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω—É");

        // –§–æ—Ä–º—É—î–º–æ URL
        const baseUrl = getApiBaseUrl();
        const refreshUrl = baseUrl.endsWith('/api')
            ? `${baseUrl}/auth/refresh-token`
            : `${baseUrl}/api/auth/refresh-token`;

        // –û—Ç—Ä–∏–º—É—î–º–æ –ø–æ—Ç–æ—á–Ω–∏–π —Ç–æ–∫–µ–Ω
        const currentToken = getAuthToken() || '';

        // –í–∏–∫–æ–Ω—É—î–º–æ –∑–∞–ø–∏—Ç –Ω–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω—É
        const response = await fetch(refreshUrl, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'X-Telegram-User-Id': userId
            },
            body: JSON.stringify({
                telegram_id: userId,
                token: currentToken
            })
        });

        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å
        if (!response.ok) {
            throw new Error(`–ü–æ–º–∏–ª–∫–∞ HTTP: ${response.status}`);
        }

        const result = await response.json();

        if (result && result.status === 'success' && result.token) {
            // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –Ω–æ–≤–∏–π —Ç–æ–∫–µ–Ω
            _authToken = result.token;

            // –í–∏–∑–Ω–∞—á–∞—î–º–æ —á–∞—Å –∑–∞–∫—ñ–Ω—á–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω—É
            if (result.expires_at) {
                _authTokenExpiry = new Date(result.expires_at).getTime();
            } else if (result.expires_in) {
                _authTokenExpiry = Date.now() + (result.expires_in * 1000);
            } else {
                // –ó–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º 24 –≥–æ–¥–∏–Ω–∏
                _authTokenExpiry = Date.now() + (24 * 60 * 60 * 1000);
            }

            // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –≤ localStorage
            try {
                localStorage.setItem('auth_token', _authToken);
                localStorage.setItem('auth_token_expiry', _authTokenExpiry.toString());
            } catch (e) {
                console.warn("üîå Raffles API: –ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω—É –≤ localStorage:", e);
            }

            console.log("‚úÖ Raffles API: –¢–æ–∫–µ–Ω —É—Å–ø—ñ—à–Ω–æ –æ–Ω–æ–≤–ª–µ–Ω–æ");

            // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–¥—ñ—é –ø—Ä–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω—É
            document.dispatchEvent(new CustomEvent('token-refreshed', {
                detail: { token: _authToken, expires_at: _authTokenExpiry }
            }));

            return true;
        } else {
            throw new Error(result.message || "–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω—É");
        }
    } catch (error) {
        console.error("‚ùå Raffles API: –ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω—É:", error);
        return false;
    }
}

/**
 * –£–Ω—ñ–≤–µ—Ä—Å–∞–ª—å–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤–∏–∫–æ–Ω–∞–Ω–Ω—è API-–∑–∞–ø–∏—Ç—ñ–≤ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
 * @param {string} endpoint - URL –µ–Ω–¥–ø–æ—ñ–Ω—Ç—É
 * @param {string} method - HTTP –º–µ—Ç–æ–¥ (GET, POST, PUT, DELETE)
 * @param {Object} data - –î–∞–Ω—ñ –¥–ª—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏
 * @param {Object} options - –î–æ–¥–∞—Ç–∫–æ–≤—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏
 * @returns {Promise<Object>} –†–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–ø–∏—Ç—É
 */
export async function apiRequest(endpoint, method = 'GET', data = null, options = {}) {
    // –Ø–∫—â–æ –¥–æ—Å—Ç—É–ø–Ω–∏–π –æ—Å–Ω–æ–≤–Ω–∏–π API, –¥–µ–ª–µ–≥—É—î–º–æ –π–æ–º—É –∑–∞–ø–∏—Ç
    if (hasFullMainApi() && !options.skipMainApi) {
        try {
            return await window.WinixAPI.apiRequest(endpoint, method, data, options);
        } catch (mainApiError) {
            console.warn("üîå Raffles API: –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—ñ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ API, –ø–µ—Ä–µ–∫–ª—é—á–∞—î–º–æ—Å—å –Ω–∞ —Ä–µ–∑–µ—Ä–≤–Ω—É —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—é:", mainApiError);
            // –ü—Ä–æ–¥–æ–≤–∂—É—î–º–æ –∑ –≤–ª–∞—Å–Ω–æ—é —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—î—é
        }
    }

    // –Ø–∫—â–æ –ø—Ä–∏—Å—Ç—Ä—ñ–π –æ—Ñ–ª–∞–π–Ω, –æ–¥—Ä–∞–∑—É –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ –ø–æ–º–∏–ª–∫—É
    if (typeof navigator.onLine !== 'undefined' && !navigator.onLine && !options.bypassOfflineCheck) {
        console.warn("üîå Raffles API: –ü—Ä–∏—Å—Ç—Ä—ñ–π –æ—Ñ–ª–∞–π–Ω, –∑–∞–ø–∏—Ç –Ω–µ –≤–∏–∫–æ–Ω–∞–Ω–æ");

        // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –∫–µ—à–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ, —è–∫—â–æ —Ç–∞–∫—ñ —î
        const cacheKey = getCacheKeyFromEndpoint(endpoint);
        if (cacheKey && _cache[cacheKey] && _cache[cacheKey].data) {
            console.log(`üîå Raffles API: –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –∫–µ—à–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ –¥–ª—è ${endpoint} –≤ –æ—Ñ–ª–∞–π–Ω —Ä–µ–∂–∏–º—ñ`);
            return {
                status: 'success',
                data: _cache[cacheKey].data,
                source: 'cache_offline'
            };
        }

        return {
            status: 'error',
            message: '–ü—Ä–∏—Å—Ç—Ä—ñ–π –æ—Ñ–ª–∞–π–Ω',
            source: 'offline'
        };
    }

    // –Ø–∫—â–æ endpoint –ø–æ—á–∏–Ω–∞—î—Ç—å—Å—è –∑ "/", –≤–∏–¥–∞–ª—è—î–º–æ —Ü–µ–π —Å–∏–º–≤–æ–ª
    const cleanEndpoint = endpoint.startsWith('/') ? endpoint.substring(1) : endpoint;

    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –º–æ–∂–Ω–∞ –≤–∏–∫–æ–Ω–∞—Ç–∏ –∑–∞–ø–∏—Ç (–æ–±–º–µ–∂–µ–Ω–Ω—è —á–∞—Å—Ç–æ—Ç–∏)
    if (!options.bypassThrottle && !canMakeRequest(cleanEndpoint)) {
        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —î –∫–µ—à–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ
        const cacheKey = getCacheKeyFromEndpoint(cleanEndpoint);
        if (cacheKey && _cache[cacheKey] && _cache[cacheKey].data) {
            console.log(`üîå Raffles API: –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –∫–µ—à–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ –¥–ª—è ${cleanEndpoint} —á–µ—Ä–µ–∑ –æ–±–º–µ–∂–µ–Ω–Ω—è —á–∞—Å—Ç–æ—Ç–∏`);
            return {
                status: 'success',
                data: _cache[cacheKey].data,
                source: 'cache_throttled'
            };
        }

        return {
            status: 'error',
            message: '–ó–∞–Ω–∞–¥—Ç–æ —á–∞—Å—Ç–∏–π –∑–∞–ø–∏—Ç',
            source: 'throttled'
        };
    }

    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –∑–∞–ø–∏—Ç –≤–∂–µ –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è
    if (_activeRequests[cleanEndpoint] && !options.allowParallel) {
        console.warn(`üîå Raffles API: –ó–∞–ø–∏—Ç –¥–æ ${cleanEndpoint} –≤–∂–µ –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è`);

        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —î –∫–µ—à–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ
        const cacheKey = getCacheKeyFromEndpoint(cleanEndpoint);
        if (cacheKey && _cache[cacheKey] && _cache[cacheKey].data) {
            console.log(`üîå Raffles API: –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –∫–µ—à–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ –¥–ª—è ${cleanEndpoint} —á–µ—Ä–µ–∑ –ø–∞—Ä–∞–ª–µ–ª—å–Ω–∏–π –∑–∞–ø–∏—Ç`);
            return {
                status: 'success',
                data: _cache[cacheKey].data,
                source: 'cache_parallel'
            };
        }

        return {
            status: 'error',
            message: '–ó–∞–ø–∏—Ç –≤–∂–µ –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è',
            source: 'parallel'
        };
    }

    // –û—á–∏—â–∞—î–º–æ –∑–∞–≤–∏—Å–∞—é—á—ñ –∑–∞–ø–∏—Ç–∏
    cleanupHangingRequests();

    // –ü–æ–∑–Ω–∞—á–∞—î–º–æ –∑–∞–ø–∏—Ç —è–∫ –∞–∫—Ç–∏–≤–Ω–∏–π
    _activeRequests[cleanEndpoint] = Date.now();
    _lastRequestTime = Date.now(); // –û–Ω–æ–≤–ª—é—î–º–æ –≥–ª–æ–±–∞–ª—å–Ω—É –∑–º—ñ–Ω–Ω—É

    // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Ü–µ–Ω—Ç—Ä–∞–ª—ñ–∑–æ–≤–∞–Ω–µ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –ª–æ–∞–¥–µ—Ä–∞
    if (!options.hideLoader && WinixRaffles && WinixRaffles.loader) {
        WinixRaffles.loader.show(options.loaderMessage || '–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...', `raffles-api-${cleanEndpoint}`);
    }

    try {
        // –û–Ω–æ–≤–ª—é—î–º–æ —Ç–æ–∫–µ–Ω –ø–µ—Ä–µ–¥ –≤–∞–∂–ª–∏–≤–∏–º–∏ –∑–∞–ø–∏—Ç–∞–º–∏
        if (!options.skipTokenRefresh && !options.retryAfter401) {
            try {
                // –Ø–≤–Ω–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω—É –ø–µ—Ä–µ–¥ –≤–∞–∂–ª–∏–≤–∏–º–∏ –∑–∞–ø–∏—Ç–∞–º–∏
                if (cleanEndpoint.includes('history') || cleanEndpoint.includes('participate')) {
                    await refreshToken();
                }
                // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ç–µ—Ä–º—ñ–Ω –¥—ñ—ó —Ç–æ–∫–µ–Ω—É
                else if (_authTokenExpiry && _authTokenExpiry < Date.now() + 600000) {
                    await refreshToken();
                }
            } catch (tokenError) {
                console.warn("üîå Raffles API: –ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω—É –ø–µ—Ä–µ–¥ –∑–∞–ø–∏—Ç–æ–º:", tokenError);
            }
        }

        // –§–æ—Ä–º—É—î–º–æ –±–∞–∑–æ–≤–∏–π URL API
        const apiBaseUrl = getApiBaseUrl();

        // –î–æ–¥–∞—î–º–æ –º—ñ—Ç–∫—É —á–∞—Å—É –¥–ª—è –∑–∞–ø–æ–±—ñ–≥–∞–Ω–Ω—è –∫–µ—à—É–≤–∞–Ω–Ω—é
        const timestamp = Date.now();
        const hasQuery = cleanEndpoint.includes('?');

        // –§–æ—Ä–º—É—î–º–æ URL
        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ endpoint –≤–∂–µ –º—ñ—Å—Ç–∏—Ç—å 'api/'
        let urlEndpoint = cleanEndpoint;
        if (urlEndpoint.startsWith('api/')) {
            urlEndpoint = urlEndpoint.substring(4);
        }

        // –§–æ—Ä–º—É—î–º–æ –ø–æ–≤–Ω–∏–π URL
        let apiUrlBase = apiBaseUrl;
        // –í–∏–¥–∞–ª—è—î–º–æ –¥—É–±–ª—ñ–∫–∞—Ç /api —è–∫—â–æ –≤—ñ–Ω —î
        if (apiUrlBase.endsWith('/api') && urlEndpoint.startsWith('api/')) {
            urlEndpoint = urlEndpoint.substring(4);
        } else if (apiUrlBase.endsWith('/api') && urlEndpoint.startsWith('/api/')) {
            urlEndpoint = urlEndpoint.substring(5);
        }

        // –ü–µ—Ä–µ–∫–æ–Ω—É—î–º–æ—Å—è, —â–æ URL –Ω–µ –º–∞—î –ø–æ–¥–≤—ñ–π–Ω–∏—Ö —Å–ª–µ—à—ñ–≤
        if (apiUrlBase.endsWith('/') && urlEndpoint.startsWith('/')) {
            urlEndpoint = urlEndpoint.substring(1);
        } else if (!apiUrlBase.endsWith('/') && !urlEndpoint.startsWith('/')) {
            apiUrlBase += '/';
        }

        const url = `${apiUrlBase}${urlEndpoint}${hasQuery ? '&' : '?'}t=${timestamp}`;

        // –û—Ç—Ä–∏–º—É—î–º–æ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        const userId = getUserId();

        // –û—Ç—Ä–∏–º—É—î–º–æ —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó
        const authToken = getAuthToken();

        // –ì–æ—Ç—É—î–º–æ –∑–∞–≥–æ–ª–æ–≤–∫–∏
        const headers = {
            'Content-Type': 'application/json',
            ...(options.headers || {})
        };

        // –î–æ–¥–∞—î–º–æ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —ñ —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó, —è–∫—â–æ –≤–æ–Ω–∏ —î
        if (userId) {
            headers['X-Telegram-User-Id'] = userId;
        }

        if (authToken) {
            headers['Authorization'] = authToken.startsWith('Bearer ') ?
                authToken : `Bearer ${authToken}`;
        }

        // –ì–æ—Ç—É—î–º–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ –∑–∞–ø–∏—Ç—É
        const requestOptions = {
            method: method,
            headers: headers,
            mode: 'cors',
            cache: 'no-cache',
            credentials: 'same-origin',
            redirect: 'follow',
            referrerPolicy: 'no-referrer'
        };

        // –î–æ–¥–∞—î–º–æ —Ç—ñ–ª–æ –∑–∞–ø–∏—Ç—É –¥–ª—è POST, PUT, PATCH
        if (data && ['POST', 'PUT', 'PATCH'].includes(method)) {
            requestOptions.body = JSON.stringify(data);
        }

        // –°—Ç–≤–æ—Ä—é—î–º–æ –∫–æ–Ω—Ç—Ä–æ–ª–µ—Ä –¥–ª—è —Ç–∞–π–º–∞—É—Ç—É
        const controller = new AbortController();
        requestOptions.signal = controller.signal;

        // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Ç–∞–π–º–∞—É—Ç
        const timeout = options.timeout || 10000;
        const timeoutId = setTimeout(() => controller.abort(), timeout);

        try {
            // –í–∏–∫–æ–Ω—É—î–º–æ –∑–∞–ø–∏—Ç
            const response = await fetch(url, requestOptions);

            // –û—á–∏—â–∞—î–º–æ —Ç–∞–π–º–∞—É—Ç
            clearTimeout(timeoutId);

            // –ü—Ä–∏—Ö–æ–≤—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
            if (!options.hideLoader && WinixRaffles && WinixRaffles.loader) {
                WinixRaffles.loader.hide(`raffles-api-${cleanEndpoint}`);
            }

            // –Ø–∫—â–æ –æ—Ç—Ä–∏–º–∞–ª–∏ 401 - –ø–æ—Ç—Ä—ñ–±–Ω–æ –æ–Ω–æ–≤–∏—Ç–∏ —Ç–æ–∫–µ–Ω —ñ –ø–æ–≤—Ç–æ—Ä–∏—Ç–∏ –∑–∞–ø–∏—Ç
            if (response.status === 401 && !options.retryAfter401) {
                console.warn(`üîå Raffles API: –û—Ç—Ä–∏–º–∞–Ω–æ 401 –¥–ª—è ${cleanEndpoint}, —Å–ø—Ä–æ–±–∞ –æ–Ω–æ–≤–∏—Ç–∏ —Ç–æ–∫–µ–Ω`);

                // –û–Ω–æ–≤–ª—é—î–º–æ —Ç–æ–∫–µ–Ω
                const tokenRefreshed = await refreshToken();

                if (tokenRefreshed) {
                    console.log(`üîå Raffles API: –¢–æ–∫–µ–Ω —É—Å–ø—ñ—à–Ω–æ –æ–Ω–æ–≤–ª–µ–Ω–æ, –ø–æ–≤—Ç–æ—Ä—é—î–º–æ –∑–∞–ø–∏—Ç –¥–æ ${cleanEndpoint}`);

                    // –í–∏–¥–∞–ª—è—î–º–æ –∑–∞–ø–∏—Ç –∑—ñ —Å–ø–∏—Å–∫—É –∞–∫—Ç–∏–≤–Ω–∏—Ö
                    delete _activeRequests[cleanEndpoint];

                    // –ü–æ–≤—Ç–æ—Ä—é—î–º–æ –∑–∞–ø–∏—Ç –∑ –Ω–æ–≤–∏–º —Ç–æ–∫–µ–Ω–æ–º
                    return await apiRequest(endpoint, method, data, {
                        ...options,
                        retryAfter401: true // –ü—Ä–∞–ø–æ—Ä–µ—Ü—å –¥–ª—è –∑–∞–ø–æ–±—ñ–≥–∞–Ω–Ω—è –Ω–µ—Å–∫—ñ–Ω—á–µ–Ω–Ω–æ–≥–æ —Ü–∏–∫–ª—É
                    });
                } else {
                    console.error(`üîå Raffles API: –ù–µ –≤–¥–∞–ª–æ—Å—è –æ–Ω–æ–≤–∏—Ç–∏ —Ç–æ–∫–µ–Ω –¥–ª—è –∑–∞–ø–∏—Ç—É ${cleanEndpoint}`);
                    throw new Error(`–ü–æ–º–∏–ª–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó: ${response.status}`);
                }
            }

            // –û–±—Ä–æ–±–ª—è—î–º–æ —ñ–Ω—à—ñ –ø–æ–º–∏–ª–∫–∏
            if (!response.ok) {
                throw new Error(`–ü–æ–º–∏–ª–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: ${response.status}`);
            }

            // –ü–∞—Ä—Å–∏–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å
            const jsonData = await response.json();

            // –ö–µ—à—É—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç, —è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ
            cacheResponse(cleanEndpoint, jsonData);

            // –í–∏–¥–∞–ª—è—î–º–æ –∑–∞–ø–∏—Ç –∑ –∞–∫—Ç–∏–≤–Ω–∏—Ö
            delete _activeRequests[cleanEndpoint];

            return jsonData;
        } catch (error) {
            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –∑–∞–ø–∏—Ç –±—É–≤ —Å–∫–∞—Å–æ–≤–∞–Ω–∏–π —á–µ—Ä–µ–∑ —Ç–∞–π–º–∞—É—Ç
            if (error.name === 'AbortError') {
                throw new Error('–ß–∞—Å –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è –∑–∞–ø–∏—Ç—É –≤–∏—á–µ—Ä–ø–∞–Ω–æ');
            }

            throw error;
        }
    } catch (error) {
        console.error(`üîå Raffles API: –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø–∏—Ç—É ${endpoint}:`, error);

        // –ü—Ä–∏—Ö–æ–≤—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
        if (!options.hideLoader && WinixRaffles && WinixRaffles.loader) {
            WinixRaffles.loader.hide(`raffles-api-${cleanEndpoint}`);
        }

        // –ì–µ–Ω–µ—Ä—É—î–º–æ –ø–æ–¥—ñ—é –ø—Ä–æ –ø–æ–º–∏–ª–∫—É API
        if (WinixRaffles && WinixRaffles.events) {
            WinixRaffles.events.emit('api-error', {
                error: error,
                endpoint: endpoint,
                method: method
            });
        }

        // –°–ø–µ—Ü—ñ–∞–ª—å–Ω–∞ –æ–±—Ä–æ–±–∫–∞ –¥–ª—è 401 –ø–æ–º–∏–ª–∫–∏
        if (error.message && error.message.includes('401') && !options.retryAfter401) {
            console.warn(`üîå Raffles API: –í–∏—è–≤–ª–µ–Ω–æ –ø–æ–º–∏–ª–∫—É 401 —É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—ñ –¥–ª—è ${cleanEndpoint}`);

            try {
                // –û–Ω–æ–≤–ª—é—î–º–æ —Ç–æ–∫–µ–Ω
                const tokenRefreshed = await refreshToken();

                if (tokenRefreshed) {
                    console.log(`üîå Raffles API: –¢–æ–∫–µ–Ω —É—Å–ø—ñ—à–Ω–æ –æ–Ω–æ–≤–ª–µ–Ω–æ, –ø–æ–≤—Ç–æ—Ä—é—î–º–æ –∑–∞–ø–∏—Ç –¥–æ ${cleanEndpoint}`);

                    // –í–∏–¥–∞–ª—è—î–º–æ –∑–∞–ø–∏—Ç –∑—ñ —Å–ø–∏—Å–∫—É –∞–∫—Ç–∏–≤–Ω–∏—Ö
                    delete _activeRequests[cleanEndpoint];

                    // –ü–æ–≤—Ç–æ—Ä—é—î–º–æ –∑–∞–ø–∏—Ç –∑ –Ω–æ–≤–∏–º —Ç–æ–∫–µ–Ω–æ–º
                    return await apiRequest(endpoint, method, data, {
                        ...options,
                        retryAfter401: true // –ü—Ä–∞–ø–æ—Ä–µ—Ü—å –¥–ª—è –∑–∞–ø–æ–±—ñ–≥–∞–Ω–Ω—è –Ω–µ—Å–∫—ñ–Ω—á–µ–Ω–Ω–æ–≥–æ —Ü–∏–∫–ª—É
                    });
                }
            } catch (refreshError) {
                console.error(`üîå Raffles API: –ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω—É –ø—ñ—Å–ª—è –≤–∏—è–≤–ª–µ–Ω–Ω—è 401:`, refreshError);
            }
        }

        // –û—Ç—Ä–∏–º—É—î–º–æ –∫–µ—à–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ —É –≤–∏–ø–∞–¥–∫—É –ø–æ–º–∏–ª–∫–∏
        const cacheKey = getCacheKeyFromEndpoint(cleanEndpoint);
        if (cacheKey && _cache[cacheKey] && _cache[cacheKey].data) {
            console.log(`üîå Raffles API: –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –∫–µ—à–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ –¥–ª—è ${cleanEndpoint} –ø—ñ—Å–ª—è –ø–æ–º–∏–ª–∫–∏ –∑–∞–ø–∏—Ç—É`);
            return {
                status: 'success',
                data: _cache[cacheKey].data,
                source: 'cache_after_error'
            };
        }

        // –í–∏–¥–∞–ª—è—î–º–æ –∑–∞–ø–∏—Ç –∑ –∞–∫—Ç–∏–≤–Ω–∏—Ö
        delete _activeRequests[cleanEndpoint];

        // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –æ–±'—î–∫—Ç –∑ –ø–æ–º–∏–ª–∫–æ—é
        return {
            status: 'error',
            message: error.message || '–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏–∫–æ–Ω–∞–Ω–Ω—ñ –∑–∞–ø–∏—Ç—É',
            source: 'raffles_api',
            error: error
        };
    }
}

/**
 * –í–∏–∑–Ω–∞—á–µ–Ω–Ω—è –∫–ª—é—á–∞ –∫–µ—à—É –Ω–∞ –æ—Å–Ω–æ–≤—ñ endpoint
 * @param {string} endpoint - Endpoint –∑–∞–ø–∏—Ç—É
 * @returns {string|null} –ö–ª—é—á –∫–µ—à—É –∞–±–æ null
 */
function getCacheKeyFromEndpoint(endpoint) {
    if (endpoint.includes('raffles') && !endpoint.includes('history')) {
        return 'activeRaffles';
    } else if (endpoint.includes('history')) {
        return 'history';
    } else if (endpoint.includes('user')) {
        return 'userData';
    }
    return null;
}

/**
 * –ö–µ—à—É–≤–∞–Ω–Ω—è –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ API
 * @param {string} endpoint - Endpoint –∑–∞–ø–∏—Ç—É
 * @param {Object} response - –í—ñ–¥–ø–æ–≤—ñ–¥—å API
 */
function cacheResponse(endpoint, response) {
    if (!response || response.status !== 'success' || !response.data) return;

    const cacheKey = getCacheKeyFromEndpoint(endpoint);
    if (!cacheKey) return;

    _cache[cacheKey] = {
        data: response.data,
        timestamp: Date.now(),
        ttl: _cache[cacheKey]?.ttl || 60000
    };
}

/**
 * –û—á–∏—â–µ–Ω–Ω—è –∫–µ—à—É
 * @param {string} [cacheKey] - –ö–ª—é—á –∫–µ—à—É –¥–ª—è –æ—á–∏—â–µ–Ω–Ω—è (—è–∫—â–æ –Ω–µ –≤–∫–∞–∑–∞–Ω–æ, –æ—á–∏—â—É—î—Ç—å—Å—è –≤–µ—Å—å –∫–µ—à)
 */
export function clearCache(cacheKey) {
    if (cacheKey && _cache[cacheKey]) {
        _cache[cacheKey].data = null;
        _cache[cacheKey].timestamp = 0;
        console.log(`üîå Raffles API: –ö–µ—à ${cacheKey} –æ—á–∏—â–µ–Ω–æ`);
    } else {
        for (const key in _cache) {
            _cache[key].data = null;
            _cache[key].timestamp = 0;
        }
        console.log("üîå Raffles API: –í–µ—Å—å –∫–µ—à –æ—á–∏—â–µ–Ω–æ");
    }
}

/**
 * –û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
 * @param {boolean} forceRefresh - –ü—Ä–∏–º—É—Å–æ–≤–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö
 * @returns {Promise<Object>} –î–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
 */
export async function getUserData(forceRefresh = false) {
    // –Ø–∫—â–æ –¥–æ—Å—Ç—É–ø–Ω–∏–π –æ—Å–Ω–æ–≤–Ω–∏–π API, –¥–µ–ª–µ–≥—É—î–º–æ –π–æ–º—É –∑–∞–ø–∏—Ç
    if (hasMainApi()) {
        try {
            return await window.WinixAPI.getUserData(forceRefresh);
        } catch (e) {
            console.warn("üîå Raffles API: –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ API:", e);
            // –ü—Ä–æ–¥–æ–≤–∂—É—î–º–æ –∑ –≤–ª–∞—Å–Ω–æ—é —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—î—é
        }
    }

    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ –ø—Ä–∏—Å—Ç—Ä—ñ–π –æ–Ω–ª–∞–π–Ω
    if (typeof navigator.onLine !== 'undefined' && !navigator.onLine && !forceRefresh) {
        console.warn("üîå Raffles API: –ü—Ä–∏—Å—Ç—Ä—ñ–π –æ—Ñ–ª–∞–π–Ω, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∫–µ—à–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞");

        // –Ø–∫—â–æ —î –∫–µ—à–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ, –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ —ó—Ö
        if (_cache.userData && _cache.userData.data) {
            return {
                status: 'success',
                data: _cache.userData.data,
                source: 'cache_offline'
            };
        }

        // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –±–∞–∑–æ–≤—ñ –¥–∞–Ω—ñ –∑ localStorage
        return {
            status: 'success',
            data: {
                telegram_id: getUserId() || 'unknown',
                balance: parseFloat(localStorage.getItem('userTokens') || '0'),
                coins: parseInt(localStorage.getItem('userCoins') || '0')
            },
            source: 'localStorage_offline'
        };
    }

    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∫–µ—à, —è–∫—â–æ –Ω–µ –ø–æ—Ç—Ä—ñ–±–Ω–µ –ø—Ä–∏–º—É—Å–æ–≤–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
    if (!forceRefresh && _cache.userData && _cache.userData.data &&
        (Date.now() - _cache.userData.timestamp) < _cache.userData.ttl) {
        return {
            status: 'success',
            data: _cache.userData.data,
            source: 'cache'
        };
    }

    try {
        // –û—Ç—Ä–∏–º—É—î–º–æ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        const userId = getUserId();
        if (!userId) {
            throw new Error("ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ");
        }

        // –í–∏–∫–æ–Ω—É—î–º–æ –∑–∞–ø–∏—Ç –¥–æ API
        const response = await apiRequest(`user/${userId}`, 'GET', null, {
            timeout: 5000, // –ö–æ—Ä–æ—Ç—à–∏–π —Ç–∞–π–º–∞—É—Ç
            bypassMainApi: true // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –≤–ª–∞—Å–Ω—É —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—é
        });

        if (response.status === 'success' && response.data) {
            // –û–Ω–æ–≤–ª—é—î–º–æ –∫–µ—à
            _cache.userData = {
                data: response.data,
                timestamp: Date.now(),
                ttl: _cache.userData?.ttl || 120000
            };

            // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –¥–∞–Ω—ñ –≤ localStorage
            try {
                if (response.data.balance !== undefined) {
                    localStorage.setItem('userTokens', response.data.balance.toString());
                    localStorage.setItem('winix_balance', response.data.balance.toString());
                }

                if (response.data.coins !== undefined) {
                    localStorage.setItem('userCoins', response.data.coins.toString());
                    localStorage.setItem('winix_coins', response.data.coins.toString());
                }

                // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
                if (response.data.notifications_enabled !== undefined) {
                    localStorage.setItem('notifications_enabled', response.data.notifications_enabled.toString());
                }

                // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–¥—ñ—é –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
                document.dispatchEvent(new CustomEvent('user-data-updated', {
                    detail: response.data
                }));
            } catch (e) {
                console.warn("üîå Raffles API: –ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –≤ localStorage:", e);
            }
        }

        return response;
    } catch (error) {
        console.error("üîå Raffles API: –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:", error);

        // –Ø–∫—â–æ —î –∫–µ—à–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ, –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ —ó—Ö
        if (_cache.userData && _cache.userData.data) {
            return {
                status: 'success',
                data: _cache.userData.data,
                source: 'cache_after_error'
            };
        }

        // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –±–∞–∑–æ–≤—ñ –¥–∞–Ω—ñ –∑ localStorage
        return {
            status: 'success',
            data: {
                telegram_id: getUserId() || 'unknown',
                balance: parseFloat(localStorage.getItem('userTokens') || '0'),
                coins: parseInt(localStorage.getItem('userCoins') || '0')
            },
            source: 'localStorage_fallback',
            message: '–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞: ' + error.message
        };
    }
}

/**
 * –û—Ç—Ä–∏–º–∞–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
 * @param {boolean} forceRefresh - –ü—Ä–∏–º—É—Å–æ–≤–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö
 * @returns {Promise<Object>} –ë–∞–ª–∞–Ω—Å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
 */
export async function getBalance(forceRefresh = false) {
    // –Ø–∫—â–æ –¥–æ—Å—Ç—É–ø–Ω–∏–π –æ—Å–Ω–æ–≤–Ω–∏–π API, –¥–µ–ª–µ–≥—É—î–º–æ –π–æ–º—É –∑–∞–ø–∏—Ç
    if (hasMainApi()) {
        try {
            return await window.WinixAPI.getBalance(forceRefresh);
        } catch (e) {
            console.warn("üîå Raffles API: –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É –∑ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ API:", e);
            // –ü—Ä–æ–¥–æ–≤–∂—É—î–º–æ –∑ –≤–ª–∞—Å–Ω–æ—é —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—î—é
        }
    }

    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ –ø—Ä–∏—Å—Ç—Ä—ñ–π –æ–Ω–ª–∞–π–Ω
    if (typeof navigator.onLine !== 'undefined' && !navigator.onLine && !forceRefresh) {
        console.warn("üîå Raffles API: –ü—Ä–∏—Å—Ç—Ä—ñ–π –æ—Ñ–ª–∞–π–Ω, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∫–µ—à–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ –±–∞–ª–∞–Ω—Å—É");

        // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –¥–∞–Ω—ñ –∑ localStorage
        return {
            status: 'success',
            data: {
                balance: parseFloat(localStorage.getItem('userTokens') || '0'),
                coins: parseInt(localStorage.getItem('userCoins') || '0')
            },
            source: 'localStorage_offline'
        };
    }

    try {
        const userId = getUserId();
        if (!userId) {
            throw new Error('ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
        }

        return await apiRequest(`user/${userId}/balance`, 'GET', null, {
            bypassMainApi: true // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –≤–ª–∞—Å–Ω—É —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—é
        });
    } catch (error) {
        console.error("üîå Raffles API: –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:", error);

        // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –¥–∞–Ω—ñ –∑ localStorage –ø—Ä–∏ –ø–æ–º–∏–ª—Ü—ñ
        return {
            status: 'success',
            data: {
                balance: parseFloat(localStorage.getItem('userTokens') || '0'),
                coins: parseInt(localStorage.getItem('userCoins') || '0')
            },
            source: 'localStorage_fallback'
        };
    }
}

/**
 * –û—Ç—Ä–∏–º–∞–Ω–Ω—è –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
 * @param {boolean} forceRefresh - –ü—Ä–∏–º—É—Å–æ–≤–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
 * @returns {Promise<Array>} –°–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
 */
export async function getActiveRaffles(forceRefresh = false) {
    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ –ø—Ä–∏—Å—Ç—Ä—ñ–π –æ–Ω–ª–∞–π–Ω
    if (typeof navigator.onLine !== 'undefined' && !navigator.onLine && !forceRefresh) {
        console.warn("üîå Raffles API: –ü—Ä–∏—Å—Ç—Ä—ñ–π –æ—Ñ–ª–∞–π–Ω, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∫–µ—à–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤");

        // –Ø–∫—â–æ —î –∫–µ—à–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ, –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ —ó—Ö
        if (_cache.activeRaffles && _cache.activeRaffles.data) {
            return _cache.activeRaffles.data;
        }

        // –Ø–∫—â–æ –∫–µ—à—É –Ω–µ–º–∞—î, —Å–ø—Ä–æ–±—É—î–º–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–∞–Ω—ñ –∑ localStorage
        try {
            const cachedRaffles = localStorage.getItem('winix_active_raffles');
            if (cachedRaffles) {
                const parsedRaffles = JSON.parse(cachedRaffles);
                if (Array.isArray(parsedRaffles)) {
                    return parsedRaffles;
                }
            }
        } catch (e) {
            console.warn("üîå Raffles API: –ü–æ–º–∏–ª–∫–∞ —á–∏—Ç–∞–Ω–Ω—è –∫–µ—à—É —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ –∑ localStorage:", e);
        }

        // –Ø–∫—â–æ –Ω—ñ—á–æ–≥–æ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ, –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ –ø–æ—Ä–æ–∂–Ω—ñ–π –º–∞—Å–∏–≤
        return [];
    }

    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∫–µ—à, —è–∫—â–æ –Ω–µ –ø–æ—Ç—Ä—ñ–±–Ω–µ –ø—Ä–∏–º—É—Å–æ–≤–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
    if (!forceRefresh && _cache.activeRaffles && _cache.activeRaffles.data &&
        (Date.now() - _cache.activeRaffles.timestamp) < _cache.activeRaffles.ttl) {
        return _cache.activeRaffles.data;
    }

    try {
        // –û–Ω–æ–≤–ª—é—î–º–æ —Ç–æ–∫–µ–Ω –ø–µ—Ä–µ–¥ –∑–∞–ø–∏—Ç–æ–º
        await refreshToken();

        const response = await apiRequest('raffles', 'GET', null, {
            timeout: 10000, // –ó–º–µ–Ω—à—É—î–º–æ —Ç–∞–π–º–∞—É—Ç –¥–ª—è –ø—Ä–∏—Å–∫–æ—Ä–µ–Ω–Ω—è
            loaderMessage: '–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤...',
            bypassThrottle: forceRefresh
        });

        if (response && response.status === 'success') {
            const resultData = Array.isArray(response.data) ? response.data : [];

            // –û–Ω–æ–≤–ª—é—î–º–æ –∫–µ—à
            _cache.activeRaffles = {
                data: resultData,
                timestamp: Date.now(),
                ttl: _cache.activeRaffles?.ttl || 60000
            };

            // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –¥–∞–Ω—ñ –≤ localStorage
            try {
                localStorage.setItem('winix_active_raffles', JSON.stringify(resultData));
            } catch (e) {
                console.warn("üîå Raffles API: –ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ –≤ localStorage:", e);
            }

            return resultData;
        }

        // –Ø–∫—â–æ —î –ø–æ–º–∏–ª–∫–∞, –∞–ª–µ —î –∫–µ—à–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ, –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ —ó—Ö
        if (_cache.activeRaffles && _cache.activeRaffles.data) {
            console.warn("üîå Raffles API: –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∫–µ—à–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ –ø—ñ—Å–ª—è –ø–æ–º–∏–ª–∫–∏");
            return _cache.activeRaffles.data;
        }

        // –Ü–Ω–∞–∫—à–µ –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ –ø–æ—Ä–æ–∂–Ω—ñ–π –º–∞—Å–∏–≤
        return [];
    } catch (error) {
        console.error('–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤:', error);

        // –Ø–∫—â–æ —î –∫–µ—à–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ, –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ —ó—Ö
        if (_cache.activeRaffles && _cache.activeRaffles.data) {
            console.warn("üîå Raffles API: –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∫–µ—à–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ –ø—ñ—Å–ª—è –ø–æ–º–∏–ª–∫–∏");
            return _cache.activeRaffles.data;
        }

        // –°–ø—Ä–æ–±—É—î–º–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–∞–Ω—ñ –∑ localStorage
        try {
            const cachedRaffles = localStorage.getItem('winix_active_raffles');
            if (cachedRaffles) {
                const parsedRaffles = JSON.parse(cachedRaffles);
                if (Array.isArray(parsedRaffles)) {
                    return parsedRaffles;
                }
            }
        } catch (e) {
            console.warn("üîå Raffles API: –ü–æ–º–∏–ª–∫–∞ —á–∏—Ç–∞–Ω–Ω—è –∫–µ—à—É —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ –∑ localStorage:", e);
        }

        return [];
    }
}

/**
 * –û—Ç—Ä–∏–º–∞–Ω–Ω—è —ñ—Å—Ç–æ—Ä—ñ—ó —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
 * @param {Object} filters - –§—ñ–ª—å—Ç—Ä–∏ –¥–ª—è –∑–∞–ø–∏—Ç—É
 * @param {boolean} forceRefresh - –ü—Ä–∏–º—É—Å–æ–≤–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
 * @returns {Promise<Array>} –°–ø–∏—Å–æ–∫ —ñ—Å—Ç–æ—Ä—ñ—ó —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
 */
export async function getRafflesHistory(filters = {}, forceRefresh = false) {
    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ –ø—Ä–∏—Å—Ç—Ä—ñ–π –æ–Ω–ª–∞–π–Ω
    if (typeof navigator.onLine !== 'undefined' && !navigator.onLine && !forceRefresh) {
        console.warn("üîå Raffles API: –ü—Ä–∏—Å—Ç—Ä—ñ–π –æ—Ñ–ª–∞–π–Ω, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∫–µ—à–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ —ñ—Å—Ç–æ—Ä—ñ—ó");

        // –Ø–∫—â–æ —î –∫–µ—à–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ, –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ —ó—Ö
        if (_cache.history && _cache.history.data) {
            return _cache.history.data;
        }

        // –Ø–∫—â–æ –∫–µ—à—É –Ω–µ–º–∞—î, —Å–ø—Ä–æ–±—É—î–º–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–∞–Ω—ñ –∑ localStorage
        try {
            const cachedHistory = localStorage.getItem('winix_raffles_history');
            if (cachedHistory) {
                const parsedHistory = JSON.parse(cachedHistory);
                if (Array.isArray(parsedHistory)) {
                    return parsedHistory;
                }
            }
        } catch (e) {
            console.warn("üîå Raffles API: –ü–æ–º–∏–ª–∫–∞ —á–∏—Ç–∞–Ω–Ω—è –∫–µ—à—É —ñ—Å—Ç–æ—Ä—ñ—ó –∑ localStorage:", e);
        }

        // –Ø–∫—â–æ –Ω—ñ—á–æ–≥–æ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ, –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ –ø–æ—Ä–æ–∂–Ω—ñ–π –º–∞—Å–∏–≤
        return [];
    }

    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∫–µ—à, —è–∫—â–æ –Ω–µ –ø–æ—Ç—Ä—ñ–±–Ω–µ –ø—Ä–∏–º—É—Å–æ–≤–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —ñ –Ω–µ–º–∞—î —Ñ—ñ–ª—å—Ç—Ä—ñ–≤
    if (!forceRefresh && !Object.keys(filters).length && _cache.history && _cache.history.data &&
        (Date.now() - _cache.history.timestamp) < _cache.history.ttl) {
        return _cache.history.data;
    }

    try {
        const userId = getUserId();
        if (!userId) {
            throw new Error('ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
        }

        // –ü–µ—Ä–µ–¥ –∑–∞–ø–∏—Ç–æ–º —ñ—Å—Ç–æ—Ä—ñ—ó –æ–Ω–æ–≤–ª—é—î–º–æ —Ç–æ–∫–µ–Ω
        const tokenRefreshed = await refreshToken();

        if (!tokenRefreshed) {
            console.warn("üîå Raffles API: –ù–µ –≤–¥–∞–ª–æ—Å—è –æ–Ω–æ–≤–∏—Ç–∏ —Ç–æ–∫–µ–Ω –ø–µ—Ä–µ–¥ –∑–∞–ø–∏—Ç–æ–º —ñ—Å—Ç–æ—Ä—ñ—ó");
        }

        // –§–æ—Ä–º—É—î–º–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ –∑–∞–ø–∏—Ç—É
        let queryParams = '';
        if (filters.type && filters.type !== 'all') {
            queryParams += `&type=${filters.type}`;
        }
        if (filters.status && filters.status !== 'all') {
            queryParams += `&status=${filters.status}`;
        }
        if (filters.period && filters.period !== 'all') {
            queryParams += `&period=${filters.period}`;
        }

        // –î–æ–¥–∞—î–º–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ –¥–æ URL, —è–∫—â–æ –≤–æ–Ω–∏ —î
        const url = queryParams
            ? `user/${userId}/raffles-history?${queryParams.substring(1)}`
            : `user/${userId}/raffles-history`;

        const response = await apiRequest(url, 'GET', null, {
            timeout: 15000, // –ó–±—ñ–ª—å—à—É—î–º–æ —Ç–∞–π–º–∞—É—Ç –¥–ª—è —ñ—Å—Ç–æ—Ä—ñ—ó
            loaderMessage: '–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —ñ—Å—Ç–æ—Ä—ñ—ó —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤...',
            bypassThrottle: forceRefresh,
            skipTokenRefresh: true // –í–∂–µ –æ–Ω–æ–≤–∏–ª–∏ —Ç–æ–∫–µ–Ω –≤–∏—â–µ
        });

        if (response && response.status === 'success') {
            const resultData = Array.isArray(response.data) ? response.data : [];

            // –û–Ω–æ–≤–ª—é—î–º–æ –∫–µ—à —Ç—ñ–ª—å–∫–∏ —è–∫—â–æ –Ω–µ–º–∞—î —Ñ—ñ–ª—å—Ç—Ä—ñ–≤ –∞–±–æ —Ü–µ –ø—Ä–∏–º—É—Å–æ–≤–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
            if (!Object.keys(filters).length || forceRefresh) {
                _cache.history = {
                    data: resultData,
                    timestamp: Date.now(),
                    ttl: _cache.history?.ttl || 300000
                };

                // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –¥–∞–Ω—ñ –≤ localStorage
                try {
                    localStorage.setItem('winix_raffles_history', JSON.stringify(resultData));
                } catch (e) {
                    console.warn("üîå Raffles API: –ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —ñ—Å—Ç–æ—Ä—ñ—ó –≤ localStorage:", e);
                }
            }

            return resultData;
        }

        // –Ø–∫—â–æ —î –ø–æ–º–∏–ª–∫–∞, –∞–ª–µ —î –∫–µ—à–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ, –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ —ó—Ö
        if (_cache.history && _cache.history.data) {
            console.warn("üîå Raffles API: –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∫–µ—à–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ —ñ—Å—Ç–æ—Ä—ñ—ó –ø—ñ—Å–ª—è –ø–æ–º–∏–ª–∫–∏");
            return _cache.history.data;
        }

        return [];
    } catch (error) {
        console.error('–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —ñ—Å—Ç–æ—Ä—ñ—ó —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤:', error);

        // –Ø–∫—â–æ —î –∫–µ—à–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ, –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ —ó—Ö
        if (_cache.history && _cache.history.data) {
            console.warn("üîå Raffles API: –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∫–µ—à–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ —ñ—Å—Ç–æ—Ä—ñ—ó –ø—ñ—Å–ª—è –ø–æ–º–∏–ª–∫–∏");
            return _cache.history.data;
        }

        // –°–ø—Ä–æ–±—É—î–º–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–∞–Ω—ñ –∑ localStorage
        try {
            const cachedHistory = localStorage.getItem('winix_raffles_history');
            if (cachedHistory) {
                const parsedHistory = JSON.parse(cachedHistory);
                if (Array.isArray(parsedHistory)) {
                    return parsedHistory;
                }
            }
        } catch (e) {
            console.warn("üîå Raffles API: –ü–æ–º–∏–ª–∫–∞ —á–∏—Ç–∞–Ω–Ω—è –∫–µ—à—É —ñ—Å—Ç–æ—Ä—ñ—ó –∑ localStorage:", e);
        }

        return [];
    }
}

/**
 * –£—á–∞—Å—Ç—å —É —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ
 * @param {string} raffleId - ID —Ä–æ–∑—ñ–≥—Ä–∞—à—É
 * @param {number} entryCount - –ö—ñ–ª—å–∫—ñ—Å—Ç—å –∂–µ—Ç–æ–Ω—ñ–≤ –¥–ª—è —É—á–∞—Å—Ç—ñ
 * @returns {Promise<Object>} –†–µ–∑—É–ª—å—Ç–∞—Ç —É—á–∞—Å—Ç—ñ
 */
export async function participateInRaffle(raffleId, entryCount = 1) {
    try {
        // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ –ø—Ä–∏—Å—Ç—Ä—ñ–π –æ–Ω–ª–∞–π–Ω
        if (typeof navigator.onLine !== 'undefined' && !navigator.onLine) {
            return {
                status: 'error',
                message: '–ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∑—è—Ç–∏ —É—á–∞—Å—Ç—å: –ø—Ä–∏—Å—Ç—Ä—ñ–π –æ—Ñ–ª–∞–π–Ω',
                source: 'offline'
            };
        }

        const userId = getUserId();
        if (!userId) {
            throw new Error('ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
        }

        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∫–æ—Ä–µ–∫—Ç–Ω—ñ—Å—Ç—å entryCount
        if (isNaN(entryCount) || entryCount <= 0) {
            throw new Error('–ö—ñ–ª—å–∫—ñ—Å—Ç—å –∂–µ—Ç–æ–Ω—ñ–≤ –ø–æ–≤–∏–Ω–Ω–∞ –±—É—Ç–∏ –±—ñ–ª—å—à–æ—é –∑–∞ –Ω—É–ª—å');
        }

        // –û–Ω–æ–≤–ª—é—î–º–æ —Ç–æ–∫–µ–Ω –ø–µ—Ä–µ–¥ –≤–∞–∂–ª–∏–≤–∏–º –∑–∞–ø–∏—Ç–æ–º
        const tokenRefreshed = await refreshToken();

        if (!tokenRefreshed) {
            console.warn("üîå Raffles API: –ù–µ –≤–¥–∞–ª–æ—Å—è –æ–Ω–æ–≤–∏—Ç–∏ —Ç–æ–∫–µ–Ω –ø–µ—Ä–µ–¥ —É—á–∞—Å—Ç—é –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ");
        }

        const response = await apiRequest(`user/${userId}/participate-raffle`, 'POST', {
            raffle_id: raffleId,
            entry_count: entryCount
        }, {
            timeout: 15000, // –ó–±—ñ–ª—å—à—É—î–º–æ —Ç–∞–π–º–∞—É—Ç –¥–ª—è –≤–∞–∂–ª–∏–≤–æ—ó –æ–ø–µ—Ä–∞—Ü—ñ—ó
            loaderMessage: '–ë–µ—Ä–µ–º–æ —É—á–∞—Å—Ç—å —É —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ...',
            skipTokenRefresh: true // –í–∂–µ –æ–Ω–æ–≤–∏–ª–∏ —Ç–æ–∫–µ–Ω –≤–∏—â–µ
        });

        if (response && response.status === 'success') {
            // –û–Ω–æ–≤–ª—é—î–º–æ –∫–µ—à —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ –ø—ñ—Å–ª—è —É—Å–ø—ñ—à–Ω–æ—ó —É—á–∞—Å—Ç—ñ
            clearCache('activeRaffles');

            // –û–Ω–æ–≤–ª—é—î–º–æ –±–∞–ª–∞–Ω—Å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            if (hasMainApi()) {
                try {
                    await window.WinixAPI.getBalance(true);
                } catch (e) {
                    console.warn("üîå Raffles API: –ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É –ø—ñ—Å–ª—è —É—á–∞—Å—Ç—ñ:", e);
                }
            } else {
                // –ê–±–æ –æ–Ω–æ–≤–ª—é—î–º–æ –±–∞–ª–∞–Ω—Å —á–µ—Ä–µ–∑ –≤–ª–∞—Å–Ω–∏–π API
                await getBalance(true);
            }

            // –û–Ω–æ–≤–ª—é—î–º–æ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            clearCache('userData');

            return {
                status: 'success',
                message: response.data?.message || '–í–∏ —É—Å–ø—ñ—à–Ω–æ –≤–∑—è–ª–∏ —É—á–∞—Å—Ç—å —É —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ',
                data: response.data
            };
        }

        throw new Error(response.message || '–ü–æ–º–∏–ª–∫–∞ —É—á–∞—Å—Ç—ñ –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ');
    } catch (error) {
        console.error(`–ü–æ–º–∏–ª–∫–∞ —É—á–∞—Å—Ç—ñ –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ ${raffleId}:`, error);
        return {
            status: 'error',
            message: error.message || '–ü–æ–º–∏–ª–∫–∞ —É—á–∞—Å—Ç—ñ –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ'
        };
    }
}

/**
 * –û—Ç—Ä–∏–º–∞–Ω–Ω—è –±–æ–Ω—É—Å—É –Ω–æ–≤–∞—á–∫–∞
 * @returns {Promise<Object>} –†–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –±–æ–Ω—É—Å—É
 */
export async function claimNewbieBonus() {
    try {
        // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ –ø—Ä–∏—Å—Ç—Ä—ñ–π –æ–Ω–ª–∞–π–Ω
        if (typeof navigator.onLine !== 'undefined' && !navigator.onLine) {
            return {
                status: 'error',
                message: '–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –±–æ–Ω—É—Å: –ø—Ä–∏—Å—Ç—Ä—ñ–π –æ—Ñ–ª–∞–π–Ω',
                source: 'offline'
            };
        }

        const userId = getUserId();
        if (!userId) {
            throw new Error('ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
        }

        // –û–Ω–æ–≤–ª—é—î–º–æ —Ç–æ–∫–µ–Ω –ø–µ—Ä–µ–¥ –≤–∞–∂–ª–∏–≤–∏–º –∑–∞–ø–∏—Ç–æ–º
        await refreshToken();

        const response = await apiRequest(`user/${userId}/claim-newbie-bonus`, 'POST', null, {
            timeout: 10000,
            loaderMessage: '–û—Ç—Ä–∏–º—É—î–º–æ –±–æ–Ω—É—Å –Ω–æ–≤–∞—á–∫–∞...'
        });

        if (response && (response.status === 'success' || response.status === 'already_claimed')) {
            // –û–Ω–æ–≤–ª—é—î–º–æ –±–∞–ª–∞–Ω—Å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            if (hasMainApi()) {
                try {
                    await window.WinixAPI.getBalance(true);
                } catch (e) {
                    console.warn("üîå Raffles API: –ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É –ø—ñ—Å–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –±–æ–Ω—É—Å—É:", e);
                }
            } else {
                // –ê–±–æ –æ–Ω–æ–≤–ª—é—î–º–æ –±–∞–ª–∞–Ω—Å —á–µ—Ä–µ–∑ –≤–ª–∞—Å–Ω–∏–π API
                await getBalance(true);
            }

            // –û–Ω–æ–≤–ª—é—î–º–æ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            clearCache('userData');

            // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –≤ localStorage
            try {
                localStorage.setItem('newbie_bonus_claimed', 'true');
            } catch (e) {
                console.warn("üîå Raffles API: –ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Å—Ç–∞—Ç—É—Å—É –±–æ–Ω—É—Å—É –≤ localStorage:", e);
            }

            return {
                status: response.status,
                message: response.message || '–ë–æ–Ω—É—Å –Ω–æ–≤–∞—á–∫–∞ —É—Å–ø—ñ—à–Ω–æ –æ—Ç—Ä–∏–º–∞–Ω–æ',
                data: response.data
            };
        }

        throw new Error(response.message || '–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –±–æ–Ω—É—Å—É –Ω–æ–≤–∞—á–∫–∞');
    } catch (error) {
        console.error('–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –±–æ–Ω—É—Å—É –Ω–æ–≤–∞—á–∫–∞:', error);
        return {
            status: 'error',
            message: error.message || '–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –±–æ–Ω—É—Å—É –Ω–æ–≤–∞—á–∫–∞'
        };
    }
}

// –û–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ—ó –æ–Ω–ª–∞–π–Ω/–æ—Ñ–ª–∞–π–Ω
window.addEventListener('online', () => {
    console.log("üîå Raffles API: –ó'—î–¥–Ω–∞–Ω–Ω—è –∑ –º–µ—Ä–µ–∂–µ—é –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–æ");

    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –æ–Ω–æ–≤–ª—é—î–º–æ —Ç–æ–∫–µ–Ω –ø—Ä–∏ –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—ñ –∑'—î–¥–Ω–∞–Ω–Ω—è
    setTimeout(() => {
        refreshToken().then(() => {
            console.log("üîå Raffles API: –¢–æ–∫–µ–Ω –æ–Ω–æ–≤–ª–µ–Ω–æ –ø—ñ—Å–ª—è –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –∑'—î–¥–Ω–∞–Ω–Ω—è");
        }).catch(e => {
            console.warn("üîå Raffles API: –ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω—É –ø—ñ—Å–ª—è –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –∑'—î–¥–Ω–∞–Ω–Ω—è:", e);
        });
    }, 1000);
});

window.addEventListener('offline', () => {
    console.warn("üîå Raffles API: –ó'—î–¥–Ω–∞–Ω–Ω—è –∑ –º–µ—Ä–µ–∂–µ—é –≤—Ç—Ä–∞—á–µ–Ω–æ");
});

// –°—Ç–≤–æ—Ä—é—î–º–æ –æ–±'—î–∫—Ç –∑ API —Ñ—É–Ω–∫—Ü—ñ—è–º–∏ –¥–ª—è –º–æ–¥—É–ª—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
const rafflesAPI = {
    // –û—Å–Ω–æ–≤–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó
    apiRequest,
    getUserId,
    getAuthToken,
    getUserData,
    getBalance,
    forceCleanupRequests,
    clearCache,
    refreshToken,

    // –°–ø–µ—Ü–∏—Ñ—ñ—á–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –¥–ª—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
    getActiveRaffles,
    getRafflesHistory,
    participateInRaffle,
    claimNewbieBonus,

    // –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è
    config: {
        baseUrl: getApiBaseUrl(),
        throttle: REQUEST_THROTTLE
    },

    // –ú–µ—Ç–∞–¥–∞–Ω—ñ
    _version: '1.2.0',
    _type: 'raffles'
};

// –†–æ–∑—à–∏—Ä—é—î–º–æ –æ—Å–Ω–æ–≤–Ω–∏–π API –Ω–æ–≤–∏–º–∏ —Ñ—É–Ω–∫—Ü—ñ—è–º–∏, —è–∫—â–æ –≤—ñ–Ω —ñ—Å–Ω—É—î
if (hasMainApi()) {
    // –î–æ–¥–∞—î–º–æ –¥–æ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ API –≤—Å—ñ –Ω–æ–≤—ñ —Ñ—É–Ω–∫—Ü—ñ—ó, —è–∫–∏—Ö —Ç–∞–º –Ω–µ–º–∞—î
    Object.keys(rafflesAPI).forEach(key => {
        if (!window.WinixAPI[key] &&
            key !== 'apiRequest' &&
            key !== 'getUserId' &&
            key !== 'getAuthToken') {
            window.WinixAPI[key] = rafflesAPI[key];
        }
    });

    // –î–æ–¥–∞—î–º–æ –æ–±'—î–∫—Ç raffles –≤ –æ—Å–Ω–æ–≤–Ω–∏–π API
    window.WinixAPI.raffles = rafflesAPI;

    console.log("üîå Raffles API: –£—Å–ø—ñ—à–Ω–æ —Ä–æ–∑—à–∏—Ä–µ–Ω–æ –æ—Å–Ω–æ–≤–Ω–∏–π API —Å–∏—Å—Ç–µ–º–∏");
} else {
    // –Ø–∫—â–æ –æ—Å–Ω–æ–≤–Ω–∏–π API –Ω–µ —ñ—Å–Ω—É—î, —Å—Ç–≤–æ—Ä—é—î–º–æ –≥–ª–æ–±–∞–ª—å–Ω–∏–π –æ–±'—î–∫—Ç –¥–ª—è API —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
    window.WinixRafflesAPI = rafflesAPI;
    console.log("üîå Raffles API: –°—Ç–≤–æ—Ä–µ–Ω–æ –æ–∫—Ä–µ–º–∏–π API –¥–ª—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ (–æ—Å–Ω–æ–≤–Ω–∏–π API –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ)");
}

// –î–æ–¥–∞—î–º–æ API –≤ –≥–ª–æ–±–∞–ª—å–Ω–∏–π –æ–±'—î–∫—Ç —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ –¥–ª—è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –≤ —ñ–Ω—à–∏—Ö –º–æ–¥—É–ª—è—Ö
if (WinixRaffles) {
    WinixRaffles.api = rafflesAPI;
}

console.log("üîå Raffles API: –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—é –∑–∞–≤–µ—Ä—à–µ–Ω–æ");

// –ï–∫—Å–ø–æ—Ä—Ç—É—î–º–æ –æ–±'—î–∫—Ç –∑ —É—Å—ñ–º–∞ —Ñ—É–Ω–∫—Ü—ñ—è–º–∏ —è–∫ –æ—Å–Ω–æ–≤–Ω–∏–π –µ–∫—Å–ø–æ—Ä—Ç
export default rafflesAPI;