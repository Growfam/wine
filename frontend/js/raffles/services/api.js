/**
 * api.js - –¶–µ–Ω—Ç—Ä–∞–ª—ñ–∑–æ–≤–∞–Ω–∏–π —Å–µ—Ä–≤—ñ—Å –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ API
 * –í—ñ–¥–ø–æ–≤—ñ–¥–∞—î –∑–∞ –≤—Å—ñ –∑–∞–ø–∏—Ç–∏ –¥–æ —Å–µ—Ä–≤–µ—Ä–∞ —Ç–∞ —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –≤—ñ–¥–ø–æ–≤—ñ–¥—è–º–∏
 */

import WinixRaffles from '../globals.js';
import { showToast } from '../utils/ui-helpers.js';

// –ë–∞–∑–æ–≤–∏–π URL –¥–ª—è API-–∑–∞–ø–∏—Ç—ñ–≤
const API_BASE_URL = WinixRaffles.config.apiBaseUrl || '/api';

// –î–∞–Ω—ñ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó
let _token = null;
let _userId = null;

// –í—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –∑–∞–ø–∏—Ç—ñ–≤
let _lastRequestTime = 0;
let _requestsInProgress = {};

// –û–±–º–µ–∂–µ–Ω–Ω—è –∑–∞–ø–∏—Ç—ñ–≤ (throttling)
const REQUEST_THROTTLE = {
    '/raffles-history': 15000,      // 15 —Å–µ–∫—É–Ω–¥ –¥–ª—è —ñ—Å—Ç–æ—Ä—ñ—ó —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
    '/participate-raffle': 3000,    // 3 —Å–µ–∫—É–Ω–¥–∏ –¥–ª—è —É—á–∞—Å—Ç—ñ –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à–∞—Ö
    'default': 2000                 // 2 —Å–µ–∫—É–Ω–¥–∏ –¥–ª—è –≤—Å—ñ—Ö —ñ–Ω—à–∏—Ö
};

// –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–∞—Ä–∞–ª–µ–ª—å–Ω–∏—Ö –∑–∞–ø–∏—Ç—ñ–≤
const PARALLEL_REQUESTS_LIMIT = 5;

// –¢–∞–π–º–∞—É—Ç–∏ –¥–ª—è –∑–∞–ø–∏—Ç—ñ–≤
let _requestTimeouts = {};

// –ö–µ—à –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π –¥–ª—è GET –∑–∞–ø–∏—Ç—ñ–≤
let _responseCache = {};

// –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∏–π —á–∞—Å –∂–∏—Ç—Ç—è –∫–µ—à—É
const DEFAULT_CACHE_TTL = 5 * 60 * 1000; // 5 —Ö–≤–∏–ª–∏–Ω

/**
 * –û—Ç—Ä–∏–º–∞—Ç–∏ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ —É—Å—ñ—Ö –º–æ–∂–ª–∏–≤–∏—Ö –¥–∂–µ—Ä–µ–ª
 * @returns {string|null} ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∞–±–æ null, —è–∫—â–æ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ
 */
export function getUserId() {
    // 1. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∫–µ—à–æ–≤–∞–Ω–∏–π ID, —è–∫—â–æ –≤—ñ–Ω —î
    if (_userId) {
        return _userId;
    }

    // 2. –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ Telegram WebApp
    if (window.Telegram && window.Telegram.WebApp) {
        try {
            if (window.Telegram.WebApp.initDataUnsafe &&
                window.Telegram.WebApp.initDataUnsafe.user &&
                window.Telegram.WebApp.initDataUnsafe.user.id) {

                _userId = window.Telegram.WebApp.initDataUnsafe.user.id.toString();
                return _userId;
            }
        } catch (e) {
            console.warn("üîå API: –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è ID –∑ Telegram WebApp:", e);
        }
    }

    // 3. –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ localStorage
    try {
        const localId = localStorage.getItem('telegram_user_id');
        if (localId) {
            _userId = localId;
            return _userId;
        }
    } catch (e) {
        // –Ü–≥–Ω–æ—Ä—É—î–º–æ –ø–æ–º–∏–ª–∫–∏ localStorage
    }

    // 4. –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –≥–ª–æ–±–∞–ª—å–Ω–∏–π –æ–±'—î–∫—Ç –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó
    if (window.WinixConfig && window.WinixConfig.userId) {
        _userId = window.WinixConfig.userId.toString();
        return _userId;
    }

    // ID –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ
    return null;
}

/**
 * –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç–æ–∫–µ–Ω—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó
 * @returns {string|null} –¢–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó –∞–±–æ null, —è–∫—â–æ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ
 */
export function getAuthToken() {
    // 1. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∫–µ—à–æ–≤–∞–Ω–∏–π —Ç–æ–∫–µ–Ω, —è–∫—â–æ –≤—ñ–Ω —î
    if (_token) {
        return _token;
    }

    // 2. –°–ø—Ä–æ–±—É—î–º–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ —Ç–æ–∫–µ–Ω –∑ localStorage
    try {
        _token = localStorage.getItem('auth_token');
        return _token;
    } catch (e) {
        // –Ü–≥–Ω–æ—Ä—É—î–º–æ –ø–æ–º–∏–ª–∫–∏ localStorage
    }

    // 3. –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –≥–ª–æ–±–∞–ª—å–Ω–∏–π –æ–±'—î–∫—Ç –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó
    if (window.WinixConfig && window.WinixConfig.authToken) {
        _token = window.WinixConfig.authToken;
        return _token;
    }

    return null;
}

/**
 * –û—Ç—Ä–∏–º–∞–Ω–Ω—è ID –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (–¥–ª—è –∞–¥–º—ñ–Ω-—Ñ—É–Ω–∫—Ü—ñ–π)
 * @returns {string|null} ID –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∞–±–æ null
 */
export function getAdminId() {
    try {
        // 1. –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å ID –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤ localStorage
        const adminId = localStorage.getItem('admin_user_id');
        if (adminId) {
            return adminId;
        }

        // 2. –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –∞–¥–º—ñ–Ω-–ø—Ä–∞–≤ –≤ Telegram WebApp
        if (window.Telegram && window.Telegram.WebApp &&
            window.Telegram.WebApp.initDataUnsafe &&
            window.Telegram.WebApp.initDataUnsafe.user &&
            window.Telegram.WebApp.initDataUnsafe.user.is_admin) {

            return window.Telegram.WebApp.initDataUnsafe.user.id.toString();
        }

        // 3. –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –≥–ª–æ–±–∞–ª—å–Ω–∏–π –æ–±'—î–∫—Ç –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó
        if (window.WinixConfig && window.WinixConfig.isAdmin) {
            return getUserId();
        }

        return null;
    } catch (e) {
        console.warn("üîå API: –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è ID –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞:", e);
        return null;
    }
}

/**
 * –û—Ç—Ä–∏–º–∞—Ç–∏ —á–∞—Å –æ–±–º–µ–∂–µ–Ω–Ω—è –¥–ª—è –µ–Ω–¥–ø–æ—ñ–Ω—Ç—É
 * @param {string} endpoint - URL –µ–Ω–¥–ø–æ—ñ–Ω—Ç—É
 * @returns {number} –ß–∞—Å –æ–±–º–µ–∂–µ–Ω–Ω—è –≤ –º—ñ–ª—ñ—Å–µ–∫—É–Ω–¥–∞—Ö
 * @private
 */
function _getThrottleTime(endpoint) {
    for (const key in REQUEST_THROTTLE) {
        if (endpoint.includes(key)) {
            return REQUEST_THROTTLE[key];
        }
    }
    return REQUEST_THROTTLE.default;
}

/**
 * –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫–µ—à—É –¥–ª—è –∑–∞–ø–∏—Ç—É
 * @param {string} cacheKey - –ö–ª—é—á –∫–µ—à—É
 * @returns {Object|null} –î–∞–Ω—ñ –∑ –∫–µ—à—É –∞–±–æ null
 * @private
 */
function _checkCache(cacheKey) {
    const cachedItem = _responseCache[cacheKey];
    if (!cachedItem) return null;

    const now = Date.now();
    if (now > cachedItem.expires) {
        // –ö–µ—à –∑–∞—Å—Ç–∞—Ä—ñ–≤, –≤–∏–¥–∞–ª—è—î–º–æ –π–æ–≥–æ
        delete _responseCache[cacheKey];
        return null;
    }

    return cachedItem.data;
}

/**
 * –î–æ–¥–∞–≤–∞–Ω–Ω—è –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –≤ –∫–µ—à
 * @param {string} cacheKey - –ö–ª—é—á –∫–µ—à—É
 * @param {Object} data - –î–∞–Ω—ñ –¥–ª—è –∫–µ—à—É–≤–∞–Ω–Ω—è
 * @param {number} ttl - –ß–∞—Å –∂–∏—Ç—Ç—è –∫–µ—à—É –≤ –º—ñ–ª—ñ—Å–µ–∫—É–Ω–¥–∞—Ö
 * @private
 */
function _addToCache(cacheKey, data, ttl = DEFAULT_CACHE_TTL) {
    _responseCache[cacheKey] = {
        data,
        created: Date.now(),
        expires: Date.now() + ttl
    };

    // –û—á–∏—â–µ–Ω–Ω—è —Å—Ç–∞—Ä–∏—Ö –∑–∞–ø–∏—Å—ñ–≤, —è–∫—â–æ –∫–µ—à –∑–∞–Ω–∞–¥—Ç–æ –≤–µ–ª–∏–∫–∏–π
    const cacheSize = Object.keys(_responseCache).length;
    if (cacheSize > 50) {
        _cleanupCache();
    }
}

/**
 * –û—á–∏—â–µ–Ω–Ω—è –∑–∞—Å—Ç–∞—Ä—ñ–ª–∏—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –∫–µ—à—É
 * @private
 */
function _cleanupCache() {
    const now = Date.now();
    let count = 0;

    // –í–∏–¥–∞–ª—è—î–º–æ –∑–∞—Å—Ç–∞—Ä—ñ–ª—ñ –µ–ª–µ–º–µ–Ω—Ç–∏
    Object.keys(_responseCache).forEach(key => {
        if (_responseCache[key].expires < now) {
            delete _responseCache[key];
            count++;
        }
    });

    // –Ø–∫—â–æ –≤—Å–µ —â–µ –∑–∞–±–∞–≥–∞—Ç–æ –∑–∞–ø–∏—Å—ñ–≤, –≤–∏–¥–∞–ª—è—î–º–æ –Ω–∞–π—Å—Ç–∞—Ä—ñ—à—ñ
    const remainingSize = Object.keys(_responseCache).length;
    if (remainingSize > 30) {
        const sortedEntries = Object.entries(_responseCache)
            .sort(([, a], [, b]) => a.created - b.created);

        // –í–∏–¥–∞–ª—è—î–º–æ 10 –Ω–∞–π—Å—Ç–∞—Ä—ñ—à–∏—Ö –∑–∞–ø–∏—Å—ñ–≤
        sortedEntries.slice(0, 10).forEach(([key]) => {
            delete _responseCache[key];
            count++;
        });
    }

    console.log(`üßπ API: –û—á–∏—â–µ–Ω–æ ${count} –∑–∞—Å—Ç–∞—Ä—ñ–ª–∏—Ö –∞–±–æ –Ω–∞–¥–ª–∏—à–∫–æ–≤–∏—Ö –∑–∞–ø–∏—Å—ñ–≤ –∫–µ—à—É`);
}

/**
 * –£–Ω—ñ–≤–µ—Ä—Å–∞–ª—å–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤–∏–∫–æ–Ω–∞–Ω–Ω—è API-–∑–∞–ø–∏—Ç—ñ–≤
 * @param {string} endpoint - URL –µ–Ω–¥–ø–æ—ñ–Ω—Ç—É
 * @param {string} method - HTTP –º–µ—Ç–æ–¥ (GET, POST, PUT, DELETE)
 * @param {Object} data - –î–∞–Ω—ñ –¥–ª—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏
 * @param {Object} options - –î–æ–¥–∞—Ç–∫–æ–≤—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏
 * @returns {Promise<Object>} –†–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–ø–∏—Ç—É
 */
export async function apiRequest(endpoint, method = 'GET', data = null, options = {}) {
    try {
        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –µ–Ω–¥–ø–æ—ñ–Ω—Ç—É
        if (!endpoint) {
            return Promise.reject({
                status: 'error',
                message: '–ï–Ω–¥–ø–æ—ñ–Ω—Ç –Ω–µ –≤–∫–∞–∑–∞–Ω–æ',
                source: 'validation'
            });
        }

        // –ù–æ—Ä–º–∞–ª—ñ–∑—É—î–º–æ –º–µ—Ç–æ–¥
        method = method.toUpperCase();

        // –§–æ—Ä–º—É—î–º–æ –∫–ª—é—á—ñ –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –∑–∞–ø–∏—Ç—ñ–≤
        const requestKey = `${method}:${endpoint}:${JSON.stringify(data || {})}`;

        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –æ–±–º–µ–∂–µ–Ω–Ω—è —á–∞—Å—Ç–æ—Ç–∏ –∑–∞–ø–∏—Ç—ñ–≤
        const now = Date.now();
        const timeSinceLastRequest = now - _lastRequestTime;
        const throttleTime = _getThrottleTime(endpoint);

        if (timeSinceLastRequest < throttleTime && !options.ignoreThrottle) {
            console.warn(`üîå API: –ó–∞–Ω–∞–¥—Ç–æ —á–∞—Å—Ç–∏–π –∑–∞–ø–∏—Ç –¥–æ ${endpoint}, –º–∏–Ω—É–ª–æ ${timeSinceLastRequest}ms`);

            // –°–ø–µ—Ü—ñ–∞–ª—å–Ω–∞ –æ–±—Ä–æ–±–∫–∞ –¥–ª—è —ñ—Å—Ç–æ—Ä—ñ—ó —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
            if (endpoint.includes('/raffles-history')) {
                console.log("üîå API: –ü–æ–≤–µ—Ä—Ç–∞—é –ø–æ—Ä–æ–∂–Ω—ñ–π –º–∞—Å–∏–≤ –¥–ª—è –∑–∞–Ω–∞–¥—Ç–æ —á–∞—Å—Ç–æ–≥–æ –∑–∞–ø–∏—Ç—É —ñ—Å—Ç–æ—Ä—ñ—ó —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤");
                return Promise.resolve({
                    status: 'success',
                    data: [],
                    source: 'throttle_fallback'
                });
            }

            // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –ø–æ–º–∏–ª–∫—É –¥–ª—è —ñ–Ω—à–∏—Ö –∑–∞–ø–∏—Ç—ñ–≤
            return Promise.reject({
                status: 'error',
                source: 'throttle',
                message: "–ó–∞–Ω–∞–¥—Ç–æ —á–∞—Å—Ç–∏–π –∑–∞–ø–∏—Ç",
                retryAfter: throttleTime - timeSinceLastRequest,
                endpoint: endpoint
            });
        }

        // –û–Ω–æ–≤–ª—é—î–º–æ —á–∞—Å –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ –∑–∞–ø–∏—Ç—É
        _lastRequestTime = now;

        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∫–µ—à –¥–ª—è GET –∑–∞–ø–∏—Ç—ñ–≤
        if (method === 'GET' && !options.bypassCache) {
            const cachedData = _checkCache(requestKey);
            if (cachedData) {
                return { ...cachedData, source: 'cache' };
            }
        }

        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —Ü–µ–π –∑–∞–ø–∏—Ç —É–∂–µ –≤ –ø—Ä–æ—Ü–µ—Å—ñ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è
        if (_requestsInProgress[requestKey] && !options.allowParallel) {
            console.warn(`üîå API: –î—É–±–ª—ñ–∫–∞—Ç –∑–∞–ø–∏—Ç—É –≤–∏—è–≤–ª–µ–Ω–æ: ${endpoint}`);
            return Promise.reject({
                status: 'error',
                source: 'duplicate',
                message: "–ó–∞–ø–∏—Ç –≤–∂–µ –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è",
                endpoint: endpoint
            });
        }

        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –ª—ñ–º—ñ—Ç –ø–∞—Ä–∞–ª–µ–ª—å–Ω–∏—Ö –∑–∞–ø–∏—Ç—ñ–≤
        const activeRequestsCount = Object.keys(_requestsInProgress).length;
        if (activeRequestsCount >= PARALLEL_REQUESTS_LIMIT && !options.allowParallel) {
            console.warn(`üîå API: –î–æ—Å—è–≥–Ω—É—Ç–æ –ª—ñ–º—ñ—Ç –ø–∞—Ä–∞–ª–µ–ª—å–Ω–∏—Ö –∑–∞–ø–∏—Ç—ñ–≤ (${PARALLEL_REQUESTS_LIMIT})`);
            return Promise.reject({
                status: 'error',
                source: 'parallel_limit',
                message: "–î–æ—Å—è–≥–Ω—É—Ç–æ –ª—ñ–º—ñ—Ç –ø–∞—Ä–∞–ª–µ–ª—å–Ω–∏—Ö –∑–∞–ø–∏—Ç—ñ–≤",
                endpoint: endpoint
            });
        }

        // –ü–æ–∑–Ω–∞—á–∞—î–º–æ –∑–∞–ø–∏—Ç —è–∫ –≤–∏–∫–æ–Ω—É–≤–∞–Ω–∏–π
        _requestsInProgress[requestKey] = true;

        // –û—Ç—Ä–∏–º—É—î–º–æ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        const userId = getUserId();

        // –û—Ç—Ä–∏–º—É—î–º–æ —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó
        const authToken = getAuthToken();

        // –î–æ–¥–∞—î–º–æ –º—ñ—Ç–∫—É —á–∞—Å—É –¥–ª—è –∑–∞–ø–æ–±—ñ–≥–∞–Ω–Ω—è –∫–µ—à—É–≤–∞–Ω–Ω—é
        const timestamp = Date.now();
        const hasQuery = endpoint.includes('?');
        const url = `${API_BASE_URL}${endpoint}${hasQuery ? '&' : '?'}t=${timestamp}`;

        // –ì–æ—Ç—É—î–º–æ –∑–∞–≥–æ–ª–æ–≤–∫–∏
        const headers = {
            'Content-Type': 'application/json',
            ...options.headers
        };

        // –î–æ–¥–∞—î–º–æ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —ñ —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó, —è–∫—â–æ –≤–æ–Ω–∏ —î
        if (userId) {
            headers['X-Telegram-User-Id'] = userId;
        }

        if (authToken) {
            headers['Authorization'] = authToken.startsWith('Bearer ') ?
                authToken : `Bearer ${authToken}`;
        }

        // –î–æ–¥–∞—î–º–æ ID –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞, —è–∫—â–æ –¥–æ—Å—Ç—É–ø–Ω–∏–π
        const adminId = getAdminId();
        if (adminId) {
            headers['X-Admin-User-Id'] = adminId;
        }

        // –ì–æ—Ç—É—î–º–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ –∑–∞–ø–∏—Ç—É
        const requestOptions = {
            method: method,
            headers: headers,
            mode: 'cors',
            cache: 'no-cache',
            credentials: 'same-origin',
            redirect: 'follow',
            referrerPolicy: 'no-referrer'
        };

        // –î–æ–¥–∞—î–º–æ —Ç—ñ–ª–æ –∑–∞–ø–∏—Ç—É –¥–ª—è POST, PUT, PATCH
        if (data && ['POST', 'PUT', 'PATCH'].includes(method)) {
            requestOptions.body = JSON.stringify(data);
        }

        // –°—Ç–≤–æ—Ä—é—î–º–æ –∫–æ–Ω—Ç—Ä–æ–ª–µ—Ä –¥–ª—è —Ç–∞–π–º–∞—É—Ç—É
        const controller = new AbortController();
        requestOptions.signal = controller.signal;

        // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Ç–∞–π–º–∞—É—Ç
        const timeout = options.timeout || 10000;
        const timeoutId = setTimeout(() => {
            controller.abort();
            delete _requestTimeouts[requestKey];
            delete _requestsInProgress[requestKey];
            console.warn(`üîå API: –¢–∞–π–º–∞—É—Ç –∑–∞–ø–∏—Ç—É ${requestKey}`);
        }, timeout);

        _requestTimeouts[requestKey] = timeoutId;

        // –ü–æ–∫–∞–∑—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
        if (!options.hideLoader) {
            // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Ü–µ–Ω—Ç—Ä–∞–ª—ñ–∑–æ–≤–∞–Ω–µ —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –ª–æ–∞–¥–µ—Ä–æ–º
            WinixRaffles.loader.show('–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...', `api-${requestKey}`);
        }

        try {
            // –í–∏–∫–æ–Ω—É—î–º–æ –∑–∞–ø–∏—Ç
            const response = await fetch(url, requestOptions);

            // –û–±—Ä–æ–±–ª—è—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å
            if (!response.ok) {
                // –°–ø–µ—Ü—ñ–∞–ª—å–Ω–∞ –æ–±—Ä–æ–±–∫–∞ –¥–ª—è —ñ—Å—Ç–æ—Ä—ñ—ó —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ –ø—Ä–∏ –ø–æ–º–∏–ª–∫–∞—Ö —Å–µ—Ä–≤–µ—Ä–∞
                if (endpoint.includes('/raffles-history') && response.status >= 500) {
                    console.warn(`üîå API: –ü–æ–º–∏–ª–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ –∑–∞–ø–∏—Ç—ñ —ñ—Å—Ç–æ—Ä—ñ—ó —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤, –ø–æ–≤–µ—Ä—Ç–∞—é –ø–æ—Ä–æ–∂–Ω—ñ–π –º–∞—Å–∏–≤`);
                    return {
                        status: 'success',
                        data: [],
                        source: 'error_fallback'
                    };
                }

                throw new Error(`–ü–æ–º–∏–ª–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: ${response.status} ${response.statusText}`);
            }

            // –ü–∞—Ä—Å–∏–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å
            const jsonData = await response.json();

            // –ö–µ—à—É—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –¥–ª—è GET –∑–∞–ø–∏—Ç—ñ–≤
            if (method === 'GET' && !options.noCache) {
                const cacheTTL = options.cacheTTL || DEFAULT_CACHE_TTL;
                _addToCache(requestKey, jsonData, cacheTTL);
            }

            // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å
            return jsonData;
        } catch (error) {
            // –û–±—Ä–æ–±–∫–∞ —Å–ø–µ—Ü—ñ–∞–ª—å–Ω–∏—Ö –ø–æ–º–∏–ª–æ–∫ –¥–ª—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
            if (endpoint.includes('/raffles-history')) {
                console.warn(`üîå API: –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Ç—ñ —ñ—Å—Ç–æ—Ä—ñ—ó —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤: ${error.message}, –ø–æ–≤–µ—Ä—Ç–∞—é –ø–æ—Ä–æ–∂–Ω—ñ–π –º–∞—Å–∏–≤`);
                return {
                    status: 'success',
                    data: [],
                    source: 'error_fallback'
                };
            }

            throw error;
        } finally {
            // –ó–Ω—ñ–º–∞—î–º–æ —Ç–∞–π–º–∞—É—Ç —ñ –ø—Ä–∞–ø–æ—Ä–µ—Ü—å –≤–∏–∫–æ–Ω–∞–Ω–Ω—è
            if (_requestTimeouts[requestKey]) {
                clearTimeout(_requestTimeouts[requestKey]);
                delete _requestTimeouts[requestKey];
            }
            delete _requestsInProgress[requestKey];

            // –ü—Ä–∏—Ö–æ–≤—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
            if (!options.hideLoader) {
                WinixRaffles.loader.hide(`api-${requestKey}`);
            }
        }
    } catch (error) {
        console.error(`üîå API: –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø–∏—Ç—É ${endpoint}:`, error.message);

        // –ì–µ–Ω–µ—Ä—É—î–º–æ –ø–æ–¥—ñ—é –ø—Ä–æ –ø–æ–º–∏–ª–∫—É API
        WinixRaffles.events.emit('api-error', {
            error: error,
            endpoint: endpoint,
            method: method
        });

        // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –æ–±'—î–∫—Ç –∑ –ø–æ–º–∏–ª–∫–æ—é
        return {
            status: 'error',
            message: error.message || '–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏–∫–æ–Ω–∞–Ω–Ω—ñ –∑–∞–ø–∏—Ç—É',
            source: error.source || 'unknown'
        };
    }
}

/**
 * –ü—Ä–∏–º—É—Å–æ–≤–µ –æ—á–∏—â–µ–Ω–Ω—è –≤—Å—ñ—Ö –∞–∫—Ç–∏–≤–Ω–∏—Ö –∑–∞–ø–∏—Ç—ñ–≤
 * @returns {number} –ö—ñ–ª—å–∫—ñ—Å—Ç—å –æ—á–∏—â–µ–Ω–∏—Ö –∑–∞–ø–∏—Ç—ñ–≤
 */
export function forceCleanupRequests() {
    const count = Object.keys(_requestsInProgress).length;

    // –û—á–∏—â–µ–Ω–Ω—è –∞–∫—Ç–∏–≤–Ω–∏—Ö –∑–∞–ø–∏—Ç—ñ–≤
    _requestsInProgress = {};

    // –û—á–∏—â–µ–Ω–Ω—è —Ç–∞–π–º–∞—É—Ç—ñ–≤
    for (const key in _requestTimeouts) {
        clearTimeout(_requestTimeouts[key]);
        delete _requestTimeouts[key];
    }

    console.log(`üîå API: –ü—Ä–∏–º—É—Å–æ–≤–æ –æ—á–∏—â–µ–Ω–æ ${count} –∞–∫—Ç–∏–≤–Ω–∏—Ö –∑–∞–ø–∏—Ç—ñ–≤`);
    return count;
}

/**
 * –û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ —Å–µ—Ä–≤–µ—Ä–∞
 * @param {boolean} forceRefresh - –ü—Ä–∏–º—É—Å–æ–≤–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö
 * @returns {Promise<Object>} –î–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
 */
export async function getUserData(forceRefresh = false) {
    const userId = getUserId();
    if (!userId) {
        return {
            status: 'error',
            message: 'ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ'
        };
    }

    return await apiRequest(`/user/${userId}`, 'GET', null, {
        bypassCache: forceRefresh,
        cacheTTL: 5 * 60 * 1000 // 5 —Ö–≤–∏–ª–∏–Ω
    });
}

/**
 * –û—Ç—Ä–∏–º–∞–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
 * @param {boolean} forceRefresh - –ü—Ä–∏–º—É—Å–æ–≤–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö
 * @returns {Promise<Object>} –ë–∞–ª–∞–Ω—Å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
 */
export async function getBalance(forceRefresh = false) {
    const userId = getUserId();
    if (!userId) {
        return {
            status: 'error',
            message: 'ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ'
        };
    }

    return await apiRequest(`/user/${userId}/balance`, 'GET', null, {
        bypassCache: forceRefresh,
        cacheTTL: 2 * 60 * 1000 // 2 —Ö–≤–∏–ª–∏–Ω–∏
    });
}

/**
 * –û–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–µ—à—É API
 * @param {string} type - –¢–∏–ø –¥–∞–Ω–∏—Ö –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è ('all', 'user', 'raffles')
 */
export function invalidateCache(type = 'all') {
    let count = 0;

    if (type === 'all') {
        // –û—á–∏—â–∞—î–º–æ –≤–µ—Å—å –∫–µ—à
        count = Object.keys(_responseCache).length;
        _responseCache = {};
    } else {
        // –û—á–∏—â–∞—î–º–æ –∫–µ—à –ø–µ–≤–Ω–æ–≥–æ —Ç–∏–ø—É
        Object.keys(_responseCache).forEach(key => {
            if ((type === 'user' && key.includes('/user/')) ||
                (type === 'raffles' && key.includes('/raffles'))) {
                delete _responseCache[key];
                count++;
            }
        });
    }

    console.log(`üßπ API: –û—á–∏—â–µ–Ω–æ ${count} –∑–∞–ø–∏—Å—ñ–≤ –∫–µ—à—É —Ç–∏–ø—É "${type}"`);
    return count;
}

/**
 * –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è API
 * @returns {Object} –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–ø–∏—Ç—ñ–≤
 */
export function getApiStats() {
    return {
        activeRequests: Object.keys(_requestsInProgress).length,
        cacheSize: Object.keys(_responseCache).length,
        lastRequestTime: _lastRequestTime,
        throttleSettings: REQUEST_THROTTLE,
    };
}

/**
 * –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –æ–±'—î–∫—Ç—É –¥–ª—è API
 */
const api = {
    // –û—Å–Ω–æ–≤–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó
    apiRequest,
    getUserId,
    getAuthToken,
    getAdminId,
    forceCleanupRequests,

    // –§—É–Ω–∫—Ü—ñ—ó –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º
    getUserData,
    getBalance,

    // –§—É–Ω–∫—Ü—ñ—ó —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –∫–µ—à–µ–º
    invalidateCache,
    getApiStats,

    // –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è
    config: {
        baseUrl: API_BASE_URL,
        throttle: REQUEST_THROTTLE,
        parallelLimit: PARALLEL_REQUESTS_LIMIT
    }
};

// –î–æ–¥–∞—î–º–æ –≤ –≥–ª–æ–±–∞–ª—å–Ω–∏–π –æ–±'—î–∫—Ç –¥–ª—è –∑–≤–æ—Ä–æ—Ç–Ω–æ—ó —Å—É–º—ñ—Å–Ω–æ—Å—Ç—ñ
WinixRaffles.api = api;

// –î–ª—è –ø–æ–≤–Ω–æ—ó –∑–≤–æ—Ä–æ—Ç–Ω–æ—ó —Å—É–º—ñ—Å–Ω–æ—Å—Ç—ñ –¥–æ–¥–∞—î–º–æ –≤ window
window.WinixAPI = api;

console.log("üîå API: –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Ü–µ–Ω—Ç—Ä–∞–ª—ñ–∑–æ–≤–∞–Ω–æ–≥–æ API —Å–µ—Ä–≤—ñ—Å—É");

// –ï–∫—Å–ø–æ—Ä—Ç—É—î–º–æ API —è–∫ –æ—Å–Ω–æ–≤–Ω–∏–π –µ–∫—Å–ø–æ—Ä—Ç
export default api;