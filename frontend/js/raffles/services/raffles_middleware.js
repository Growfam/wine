/**
 * –ú–æ–¥—É–ª—å –ø—Ä–æ–º—ñ–∂–Ω–æ—ó –æ–±—Ä–æ–±–∫–∏ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ - –≤–∏—è–≤–ª—è—î —Ç–∞ –≤–∏–ø—Ä–∞–≤–ª—è—î –ø–æ–º–∏–ª–∫–∏ –∑ ID —Ä–æ–∑—ñ–≥—Ä–∞—à—É
 * –¢–∞–∫–æ–∂ –≤—ñ–¥—Å–ª—ñ–¥–∫–æ–≤—É—î —Ç–∞ –∫–µ—à—É—î –∞–∫—Ç–∏–≤–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ
 */

import WinixRaffles from '../globals.js';
import { showLoading, hideLoading, showToast } from '../utils/ui-helpers.js';
import api from '../services/api.js';

// –ö–µ—à-—Å—Ö–æ–≤–∏—â–µ –¥–ª—è –∞–∫—Ç–∏–≤–Ω–∏—Ö ID —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
let _activeRaffleIds = [];
// –ß–∞—Å –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–µ—à—É
let _cacheUpdateTime = 0;
// –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∏–π —á–∞—Å –∂–∏—Ç—Ç—è –∫–µ—à—É (5 —Ö–≤–∏–ª–∏–Ω)
const CACHE_TTL = 5 * 60 * 1000;
// –†–µ–≥—É–ª—è—Ä–Ω–∏–π –≤–∏—Ä–∞–∑ –¥–ª—è –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó UUID
const UUID_REGEX = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;

/**
 * –ö–ª–∞—Å –ø—Ä–æ–º—ñ–∂–Ω–æ–≥–æ –º–æ–¥—É–ª—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
 * –í—ñ–¥–ø–æ–≤—ñ–¥–∞—î –∑–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É —Ç–∞ –Ω–æ—Ä–º–∞–ª—ñ–∑–∞—Ü—ñ—é ID —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
 */
class RafflesMiddleware {
    /**
     * –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –º–æ–¥—É–ª—è
     */
    init() {
        console.log("üõ°Ô∏è RafflesMiddleware: –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –º–æ–¥—É–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤");

        try {
            // –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–±–µ—Ä–µ–∂–µ–Ω–∏—Ö ID –∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Å—Ö–æ–≤–∏—â–∞
            this._loadCachedIds();

            // –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ø–µ—Ä–µ—Ö–æ–ø–ª—é–≤–∞—á—ñ–≤ –ø–æ–¥—ñ–π
            this._setupEventListeners();

            // –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –ø—Ä–∏ –∑–∞–ø—É—Å–∫—É
            this.refreshActiveRaffleIds();

            console.log("‚úÖ RafflesMiddleware: –ú–æ–¥—É–ª—å —É—Å–ø—ñ—à–Ω–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ");
        } catch (error) {
            console.error("‚ùå RafflesMiddleware: –ü–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó:", error);
        }
    }

    /**
     * –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –ø–æ–¥—ñ–π
     * @private
     */
    _setupEventListeners() {
        try {
            // –ü—ñ–¥–ø–∏—Å—É—î–º–æ—Å—è –Ω–∞ –ø–æ–¥—ñ—ó –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è –¥–µ—Ç–∞–ª–µ–π —Ä–æ–∑—ñ–≥—Ä–∞—à—É
            if (WinixRaffles && WinixRaffles.events) {
                WinixRaffles.events.on('open-raffle-details', (data) => {
                    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –≤–∞–ª—ñ–¥–Ω—ñ—Å—Ç—å ID —Ä–æ–∑—ñ–≥—Ä–∞—à—É –ø–µ—Ä–µ–¥ –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è–º –¥–µ—Ç–∞–ª–µ–π
                    if (data && data.raffleId) {
                        const isValid = this.validateRaffleId(data.raffleId);
                        if (!isValid) {
                            // –Ø–∫—â–æ ID –Ω–µ–≤–∞–ª—ñ–¥–Ω–∏–π, –ø–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —ñ —Å–∫–∞—Å–æ–≤—É—î–º–æ –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è
                            showToast('–†–æ–∑—ñ–≥—Ä–∞—à –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∞–±–æ –∑–∞–∫—ñ–Ω—á–∏–≤—Å—è. –û–Ω–æ–≤—ñ—Ç—å —Å–ø–∏—Å–æ–∫.', 'warning');
                            WinixRaffles.events.emit('refresh-raffles', { force: true });
                            return;
                        }
                    }
                });

                // –ü—ñ–¥–ø–∏—Å—É—î–º–æ—Å—è –Ω–∞ –ø–æ–¥—ñ—é –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Å–ø–∏—Å–∫—É —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
                WinixRaffles.events.on('refresh-raffles', () => {
                    this.refreshActiveRaffleIds();
                });

                // –ü—ñ–¥–ø–∏—Å—É—î–º–æ—Å—è –Ω–∞ –ø–æ–º–∏–ª–∫–∏ API
                document.addEventListener('api-error', (event) => {
                    const error = event.detail;

                    // –Ø–∫—â–æ –ø–æ–º–∏–ª–∫–∞ —Å—Ç–æ—Å—É—î—Ç—å—Å—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
                    if (error && error.endpoint &&
                        (error.endpoint.includes('raffles') || error.endpoint.includes('participate-raffle'))) {
                        console.warn("RafflesMiddleware: –í–∏—è–≤–ª–µ–Ω–æ –ø–æ–º–∏–ª–∫—É API –¥–ª—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤:", error);

                        // –û—á–∏—â—É—î–º–æ –∫–µ—à —Ç–∞ –æ–Ω–æ–≤–ª—é—î–º–æ —Å–ø–∏—Å–æ–∫
                        setTimeout(() => this.refreshActiveRaffleIds(), 1000);
                    }
                });
            }

            // –î–æ–¥–∞—î–º–æ –≥–ª–æ–±–∞–ª—å–Ω–∏–π –ø–µ—Ä–µ—Ö–æ–ø–ª—é–≤–∞—á –ø–æ–º–∏–ª–æ–∫
            window.addEventListener('error', (event) => {
                // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –ø–æ–º–∏–ª–∫–∞ –ø–æ–≤'—è–∑–∞–Ω–∞ –∑ —Ä–æ–∑—ñ–≥—Ä–∞—à–∞–º–∏
                if (event.message &&
                    (event.message.includes('raffle_id') ||
                     event.message.includes('raffleId') ||
                     event.message.includes('—Ä–æ–∑—ñ–≥—Ä–∞—à'))) {
                    console.warn("RafflesMiddleware: –í–∏—è–≤–ª–µ–Ω–æ –ø–æ–º–∏–ª–∫—É, –ø–æ–≤'—è–∑–∞–Ω—É –∑ —Ä–æ–∑—ñ–≥—Ä–∞—à–∞–º–∏:", event.message);

                    // –û—á–∏—â—É—î–º–æ –∫–µ—à —Ç–∞ –æ–Ω–æ–≤–ª—é—î–º–æ —Å–ø–∏—Å–æ–∫
                    setTimeout(() => this.clearCache(), 500);
                }
            });
        } catch (error) {
            console.error("‚ùå RafflesMiddleware: –ü–æ–º–∏–ª–∫–∞ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –ø–æ–¥—ñ–π:", error);
        }
    }

    /**
     * –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–µ—à–æ–≤–∞–Ω–∏—Ö ID –∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Å—Ö–æ–≤–∏—â–∞
     * @private
     */
    _loadCachedIds() {
        try {
            const storedIds = localStorage.getItem('activeRaffleIds');
            const storedTime = localStorage.getItem('raffleIdsCacheTime');

            if (storedIds && storedTime) {
                _activeRaffleIds = JSON.parse(storedIds);
                _cacheUpdateTime = parseInt(storedTime);

                console.log(`RafflesMiddleware: –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ ${_activeRaffleIds.length} –∫–µ—à–æ–≤–∞–Ω–∏—Ö ID —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤`);
            }
        } catch (e) {
            console.warn("RafflesMiddleware: –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–µ—à–æ–≤–∞–Ω–∏—Ö ID:", e);
            _activeRaffleIds = [];
            _cacheUpdateTime = 0;
        }
    }

    /**
     * –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –∫–µ—à–æ–≤–∞–Ω–∏—Ö ID –≤ –ª–æ–∫–∞–ª—å–Ω–µ —Å—Ö–æ–≤–∏—â–µ
     * @private
     */
    _saveCachedIds() {
        try {
            localStorage.setItem('activeRaffleIds', JSON.stringify(_activeRaffleIds));
            localStorage.setItem('raffleIdsCacheTime', _cacheUpdateTime.toString());
        } catch (e) {
            console.warn("RafflesMiddleware: –ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –∫–µ—à–æ–≤–∞–Ω–∏—Ö ID:", e);
        }
    }

    /**
     * –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –≤–∞–ª—ñ–¥–Ω–æ—Å—Ç—ñ ID —Ä–æ–∑—ñ–≥—Ä–∞—à—É
     * @param {string} raffleId ID —Ä–æ–∑—ñ–≥—Ä–∞—à—É –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏
     * @returns {boolean} true, —è–∫—â–æ ID –≤–∞–ª—ñ–¥–Ω–∏–π —ñ —Ä–æ–∑—ñ–≥—Ä–∞—à –∞–∫—Ç–∏–≤–Ω–∏–π
     */
    validateRaffleId(raffleId) {
        if (!raffleId) return false;

        // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç—É UUID
        if (!UUID_REGEX.test(raffleId)) {
            console.warn(`RafflesMiddleware: –ù–µ–≤–∞–ª—ñ–¥–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç UUID: ${raffleId}`);
            return false;
        }

        // –Ø–∫—â–æ –∫–µ—à –∑–∞—Å—Ç–∞—Ä—ñ–≤ –∞–±–æ –ø–æ—Ä–æ–∂–Ω—ñ–π, –æ–Ω–æ–≤–ª—é—î–º–æ –π–æ–≥–æ
        const now = Date.now();
        if (now - _cacheUpdateTime > CACHE_TTL || _activeRaffleIds.length === 0) {
            // –û–Ω–æ–≤–ª—é—î–º–æ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ, –∞–ª–µ –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–∞ –æ—Å–Ω–æ–≤—ñ –ø–æ—Ç–æ—á–Ω–∏—Ö –¥–∞–Ω–∏—Ö
            this.refreshActiveRaffleIds();
        }

        // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ –≤ —Å–ø–∏—Å–∫—É –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
        const isActive = _activeRaffleIds.includes(raffleId);

        if (!isActive) {
            console.warn(`RafflesMiddleware: ID ${raffleId} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ —Å–ø–∏—Å–∫—É –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤`);
        }

        return isActive;
    }

    /**
     * –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —ñ—Å–Ω—É–≤–∞–Ω–Ω—è —Ä–æ–∑—ñ–≥—Ä–∞—à—É —á–µ—Ä–µ–∑ API
     * @param {string} raffleId ID —Ä–æ–∑—ñ–≥—Ä–∞—à—É –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏
     * @returns {Promise<boolean>} Promise –∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏
     */
    async checkRaffleExists(raffleId) {
        if (!raffleId) return false;

        // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç—É UUID
        if (!UUID_REGEX.test(raffleId)) {
            console.warn(`RafflesMiddleware: –ù–µ–≤–∞–ª—ñ–¥–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç UUID: ${raffleId}`);
            return false;
        }

        try {
            // –ü—Ä—è–º–∏–π –∑–∞–ø–∏—Ç –¥–æ API –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —ñ—Å–Ω—É–≤–∞–Ω–Ω—è —Ä–æ–∑—ñ–≥—Ä–∞—à—É
            const response = await api.apiRequest(`/api/raffles/${raffleId}/check`, 'GET', null, {
                timeout: 5000,
                suppressErrors: true
            });

            return response && response.status === 'success';
        } catch (error) {
            console.error(`RafflesMiddleware: –ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Ä–æ–∑—ñ–≥—Ä–∞—à—É ${raffleId}:`, error);
            return false;
        }
    }

    /**
     * –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Å–ø–∏—Å–∫—É –∞–∫—Ç–∏–≤–Ω–∏—Ö ID —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
     * @returns {Promise<string[]>} Promise –∑—ñ —Å–ø–∏—Å–∫–æ–º –∞–∫—Ç–∏–≤–Ω–∏—Ö ID
     */
    async refreshActiveRaffleIds() {
        try {
            showLoading('–û–Ω–æ–≤–ª–µ–Ω–Ω—è —Å–ø–∏—Å–∫—É —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤...', 'refresh-raffles');

            // –û—Ç—Ä–∏–º—É—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω–∏–π —Å–ø–∏—Å–æ–∫ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
            const response = await api.apiRequest('/api/raffles', 'GET', null, {
                forceRefresh: true,
                timeout: 10000,
                suppressErrors: true
            });

            hideLoading('refresh-raffles');

            if (response && response.status === 'success' && response.data) {
                // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —Ç—ñ–ª—å–∫–∏ ID –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
                _activeRaffleIds = response.data.map(raffle => raffle.id);
                _cacheUpdateTime = Date.now();

                // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –≤ –ª–æ–∫–∞–ª—å–Ω–µ —Å—Ö–æ–≤–∏—â–µ
                this._saveCachedIds();

                console.log(`RafflesMiddleware: –û–Ω–æ–≤–ª–µ–Ω–æ ${_activeRaffleIds.length} –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤`);

                // –û–ø–æ–≤—ñ—â–∞—î–º–æ –ø—Ä–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Å–ø–∏—Å–∫—É —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
                if (WinixRaffles && WinixRaffles.events) {
                    WinixRaffles.events.emit('raffles-updated', {
                        count: _activeRaffleIds.length,
                        timestamp: Date.now()
                    });
                }

                return _activeRaffleIds;
            }

            return _activeRaffleIds;
        } catch (error) {
            console.error('RafflesMiddleware: –ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Å–ø–∏—Å–∫—É —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤:', error);
            hideLoading('refresh-raffles');
            return _activeRaffleIds;
        }
    }

    /**
     * –û—á–∏—â–µ–Ω–Ω—è –∫–µ—à—É ID —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
     */
    clearCache() {
        _activeRaffleIds = [];
        _cacheUpdateTime = 0;

        try {
            localStorage.removeItem('activeRaffleIds');
            localStorage.removeItem('raffleIdsCacheTime');
        } catch (e) {
            console.warn("RafflesMiddleware: –ü–æ–º–∏–ª–∫–∞ –æ—á–∏—â–µ–Ω–Ω—è –∫–µ—à—É:", e);
        }

        console.log("RafflesMiddleware: –ö–µ—à ID —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ –æ—á–∏—â–µ–Ω–æ");

        // –û–Ω–æ–≤–ª—é—î–º–æ —Å–ø–∏—Å–æ–∫
        this.refreshActiveRaffleIds();
    }

    /**
     * –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Å–ø–∏—Å–∫—É –∞–∫—Ç–∏–≤–Ω–∏—Ö ID —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
     * @returns {string[]} –°–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω–∏—Ö ID
     */
    getActiveRaffleIds() {
        return [..._activeRaffleIds];
    }

    /**
     * –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ç–∞ –Ω–æ—Ä–º–∞–ª—ñ–∑–∞—Ü—ñ—è ID —Ä–æ–∑—ñ–≥—Ä–∞—à—É
     * @param {string} raffleId ID —Ä–æ–∑—ñ–≥—Ä–∞—à—É –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Ç–∞ –Ω–æ—Ä–º–∞–ª—ñ–∑–∞—Ü—ñ—ó
     * @returns {string|null} –ù–æ—Ä–º–∞–ª—ñ–∑–æ–≤–∞–Ω–∏–π ID –∞–±–æ null, —è–∫—â–æ ID –Ω–µ–≤–∞–ª—ñ–¥–Ω–∏–π
     */
    normalizeRaffleId(raffleId) {
        if (!raffleId) return null;

        try {
            // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç—É UUID
            if (UUID_REGEX.test(raffleId)) {
                // ID –≤–∂–µ —É –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º—É —Ñ–æ—Ä–º–∞—Ç—ñ
                return raffleId;
            }

            // –í–∏–¥–∞–ª–µ–Ω–Ω—è –Ω–µ—Ü–∏—Ñ—Ä–æ–≤–∏—Ö —Å–∏–º–≤–æ–ª—ñ–≤ –∫—Ä—ñ–º –¥–µ—Ñ—ñ—Å—ñ–≤
            const cleanId = raffleId.replace(/[^0-9a-f-]/gi, '');

            // –°–ø—Ä–æ–±–∞ –≤—ñ–¥—Ñ–æ—Ä–º–∞—Ç—É–≤–∞—Ç–∏ UUID
            if (cleanId.length >= 32) {
                // –í—Å—Ç–∞–≤–ª—è—î–º–æ –¥–µ—Ñ—ñ—Å–∏ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–∏—Ö –º—ñ—Å—Ü—è—Ö
                const formattedId = [
                    cleanId.substring(0, 8),
                    cleanId.substring(8, 12),
                    cleanId.substring(12, 16),
                    cleanId.substring(16, 20),
                    cleanId.substring(20, 32)
                ].join('-');

                // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –≤—ñ–¥—Ñ–æ—Ä–º–∞—Ç–æ–≤–∞–Ω–∏–π ID –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î —Ñ–æ—Ä–º–∞—Ç—É UUID
                if (UUID_REGEX.test(formattedId)) {
                    console.log(`RafflesMiddleware: –£—Å–ø—ñ—à–Ω–æ –Ω–æ—Ä–º–∞–ª—ñ–∑–æ–≤–∞–Ω–æ ID ${raffleId} => ${formattedId}`);
                    return formattedId;
                }
            }

            console.warn(`RafflesMiddleware: –ù–µ–º–æ–∂–ª–∏–≤–æ –Ω–æ—Ä–º–∞–ª—ñ–∑—É–≤–∞—Ç–∏ ID: ${raffleId}`);
            return null;
        } catch (error) {
            console.error(`RafflesMiddleware: –ü–æ–º–∏–ª–∫–∞ –Ω–æ—Ä–º–∞–ª—ñ–∑–∞—Ü—ñ—ó ID ${raffleId}:`, error);
            return null;
        }
    }
}

// –°—Ç–≤–æ—Ä—é—î–º–æ –µ–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—É
const rafflesMiddleware = new RafflesMiddleware();

// –î–æ–¥–∞—î–º–æ –≤ –≥–ª–æ–±–∞–ª—å–Ω–∏–π –æ–±'—î–∫—Ç –¥–ª—è –¥–æ—Å—Ç—É–ø—É –∑ —ñ–Ω—à–∏—Ö –º–æ–¥—É–ª—ñ–≤
if (WinixRaffles) {
    WinixRaffles.middleware = rafflesMiddleware;
}

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ
if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', () => rafflesMiddleware.init());
} else {
    setTimeout(() => rafflesMiddleware.init(), 100);
}

export default rafflesMiddleware;