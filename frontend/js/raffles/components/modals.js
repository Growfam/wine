/**
 * modals.js - –ú–æ–¥—É–ª—å –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ –º–æ–¥–∞–ª—å–Ω–∏–º–∏ –≤—ñ–∫–Ω–∞–º–∏ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
 * –í—ñ–¥–ø–æ–≤—ñ–¥–∞—î –∑–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞ —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –º–æ–¥–∞–ª—å–Ω–∏–º–∏ –≤—ñ–∫–Ω–∞–º–∏ –¥–ª—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
 */

import { formatDate } from '../utils/formatters.js';
import { showToast, getElement } from '../utils/ui-helpers.js';
import api from '../services/api.js';
import WinixRaffles from '../globals.js';

/**
 * –ö–ª–∞—Å –¥–ª—è —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –º–æ–¥–∞–ª—å–Ω–∏–º–∏ –≤—ñ–∫–Ω–∞–º–∏ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
 */
class RaffleModals {
    /**
     * –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –∫–ª–∞—Å—É
     */
    constructor() {
        this._modals = {};
        this._activeModals = [];
        this._eventListeners = [];
    }

    /**
     * –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –º–æ–¥–∞–ª—å–Ω–∏—Ö –≤—ñ–∫–æ–Ω –¥–ª—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
     */
    init() {
        // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π –¥–ª—è —ñ—Å–Ω—É—é—á–∏—Ö –º–æ–¥–∞–ª—å–Ω–∏—Ö –≤—ñ–∫–æ–Ω
        this._setupExistingModals();

        // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –¥–ª—è –≤–∑–∞—î–º–æ–¥—ñ—ó –∑ —ñ–Ω—à–∏–º–∏ –º–æ–¥—É–ª—è–º–∏ —á–µ—Ä–µ–∑ –ø–æ–¥—ñ—ó
        this._setupGlobalEventListeners();

        console.log("üñºÔ∏è Raffle Modals: –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ");
    }

    /**
     * –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —ñ—Å–Ω—É—é—á–∏—Ö –º–æ–¥–∞–ª—å–Ω–∏—Ö –≤—ñ–∫–æ–Ω –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ
     * @private
     */
    _setupExistingModals() {
        // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –≤—Å—ñ –º–æ–¥–∞–ª—å–Ω—ñ –≤—ñ–∫–Ω–∞ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ
        const modals = document.querySelectorAll('.raffle-modal');

        modals.forEach(modal => {
            const modalId = modal.id;
            if (!modalId) return;

            // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
            this._modals[modalId] = modal;

            // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –¥–ª—è –∑–∞–∫—Ä–∏—Ç—Ç—è
            const closeButtons = modal.querySelectorAll('.modal-close, .cancel-btn');
            closeButtons.forEach(btn => {
                const closeHandler = () => this.closeModal(modalId);
                btn.addEventListener('click', closeHandler);

                // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –º–æ–∂–ª–∏–≤–æ—Å—Ç—ñ –≤–∏–¥–∞–ª–µ–Ω–Ω—è
                this._eventListeners.push({
                    element: btn,
                    event: 'click',
                    handler: closeHandler
                });
            });

            // –ó–∞–∫—Ä–∏—Ç—Ç—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞ –ø–æ –∫–ª—ñ–∫—É –Ω–∞ —Ñ–æ–Ω (—è–∫—â–æ –∫–ª—ñ–∫ –±—É–≤ —Å–∞–º–µ –Ω–∞ —Ñ–æ–Ω—ñ)
            const backgroundClickHandler = (e) => {
                if (e.target === modal) {
                    this.closeModal(modalId);
                }
            };

            modal.addEventListener('click', backgroundClickHandler);

            // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –º–æ–∂–ª–∏–≤–æ—Å—Ç—ñ –≤–∏–¥–∞–ª–µ–Ω–Ω—è
            this._eventListeners.push({
                element: modal,
                event: 'click',
                handler: backgroundClickHandler
            });
        });
    }

    /**
     * –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –≥–ª–æ–±–∞–ª—å–Ω–∏—Ö –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –ø–æ–¥—ñ–π
     * @private
     */
    _setupGlobalEventListeners() {
        // –û–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –ø–æ–∫–∞–∑—É –¥–µ—Ç–∞–ª–µ–π —ñ—Å—Ç–æ—Ä—ñ—ó —Ä–æ–∑—ñ–≥—Ä–∞—à—É
        WinixRaffles.events.on('show-history-details', (data) => {
            if (data && data.raffleData) {
                this.showRaffleHistoryDetails(data.raffleData);
            }
        });
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç–∏ –¥–µ—Ç–∞–ª—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—É –∑ —ñ—Å—Ç–æ—Ä—ñ—ó
     * @param {Object} raffleData - –î–∞–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
     */
    showRaffleHistoryDetails(raffleData) {
        if (!raffleData) {
            showToast('–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–∞–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—É', 'error');
            return;
        }

        // –í–∏–¥–∞–ª—è—î–º–æ —ñ—Å–Ω—É—é—á–µ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ —ñ—Å—Ç–æ—Ä—ñ—ó, —è–∫—â–æ –≤–æ–Ω–æ —î
        const existingModal = document.getElementById('raffle-history-modal');
        if (existingModal) {
            existingModal.remove();
        }

        // –°—Ç–≤–æ—Ä—é—î–º–æ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
        const modal = document.createElement('div');
        modal.id = 'raffle-history-modal';
        modal.className = 'raffle-modal';

        // –ì–µ–Ω–µ—Ä—É—î–º–æ —Å–ø–∏—Å–æ–∫ –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤, —è–∫—â–æ –≤–æ–Ω–∏ —î
        let winnersHTML = '';
        if (raffleData.winners && Array.isArray(raffleData.winners) && raffleData.winners.length > 0) {
            winnersHTML = this._generateWinnersListHTML(raffleData.winners);
        } else {
            winnersHTML = '<div class="no-winners">–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤ –≤—ñ–¥—Å—É—Ç–Ω—è</div>';
        }

        // –í–∏–∑–Ω–∞—á–∞—î–º–æ —Å—Ç–∞—Ç—É—Å —ñ –∫–ª–∞—Å —Å—Ç–∞—Ç—É—Å—É
        const statusClass = raffleData.status === 'won' ? 'win-status' : 'participated-status';
        const statusText = raffleData.status === 'won' ? '–í–∏ –ø–µ—Ä–µ–º–æ–≥–ª–∏' : '–£—á–∞—Å—Ç—å –±–µ–∑ –ø–µ—Ä–µ–º–æ–≥–∏';

        // –í–∏–∑–Ω–∞—á–∞—î–º–æ —Ç–∏–ø —Ä–æ–∑—ñ–≥—Ä–∞—à—É
        const raffleType = raffleData.is_daily ? '–©–æ–¥–µ–Ω–Ω–∏–π —Ä–æ–∑—ñ–≥—Ä–∞—à' : '–ì—Ä–∞–Ω–¥ —Ä–æ–∑—ñ–≥—Ä–∞—à';

        // –§–æ—Ä–º—É—î–º–æ HTML –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞
        modal.innerHTML = `
            <div class="modal-content">
                <div class="modal-header">
                    <h2 class="modal-title">${raffleData.title || '–î–µ—Ç–∞–ª—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—É'}</h2>
                    <span class="modal-close">√ó</span>
                </div>
                
                <div class="prize-details">
                    <div class="detail-item">
                        <div class="detail-label">–î–∞—Ç–∞:</div>
                        <div class="detail-value">${raffleData.date || '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'}</div>
                    </div>
                    <div class="detail-item">
                        <div class="detail-label">–¢–∏–ø:</div>
                        <div class="detail-value">${raffleType}</div>
                    </div>
                    <div class="detail-item">
                        <div class="detail-label">–ü—Ä–∏–∑–æ–≤–∏–π —Ñ–æ–Ω–¥:</div>
                        <div class="detail-value prize-value">${raffleData.prize || '0 WINIX'}</div>
                    </div>
                    <div class="detail-item">
                        <div class="detail-label">–í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç:</div>
                        <div class="detail-value ${statusClass}">${statusText}</div>
                    </div>
                    <div class="detail-item">
                        <div class="detail-label">–í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–æ –∂–µ—Ç–æ–Ω—ñ–≤:</div>
                        <div class="detail-value">${raffleData.entry_count || 0}</div>
                    </div>
                    ${raffleData.status === 'won' ? `
                    <div class="detail-item">
                        <div class="detail-label">–í–∞—à–µ –º—ñ—Å—Ü–µ:</div>
                        <div class="detail-value winner-place-value">${raffleData.place || '-'}</div>
                    </div>
                    ` : ''}
                </div>
                
                <div class="winners-container">
                    <h3>–ü–µ—Ä–µ–º–æ–∂—Ü—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—É</h3>
                    <div class="winners-list">
                        ${winnersHTML}
                    </div>
                </div>
                
                <button class="join-button" id="close-history-btn">–ó–ê–ö–†–ò–¢–ò</button>
            </div>
        `;

        // –î–æ–¥–∞—î–º–æ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É
        document.body.appendChild(modal);

        // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π
        const closeButton = modal.querySelector('.modal-close');
        if (closeButton) {
            const closeHandler = () => {
                modal.classList.remove('open');
                setTimeout(() => modal.remove(), 300);
            };

            closeButton.addEventListener('click', closeHandler);

            // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫
            this._eventListeners.push({
                element: closeButton,
                event: 'click',
                handler: closeHandler
            });
        }

        const closeActionButton = modal.querySelector('#close-history-btn');
        if (closeActionButton) {
            const closeHandler = () => {
                modal.classList.remove('open');
                setTimeout(() => modal.remove(), 300);
            };

            closeActionButton.addEventListener('click', closeHandler);

            // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫
            this._eventListeners.push({
                element: closeActionButton,
                event: 'click',
                handler: closeHandler
            });
        }

        // –ü–æ–∫–∞–∑—É—î–º–æ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
        requestAnimationFrame(() => {
            modal.classList.add('open');
        });

        // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
        this._modals['raffle-history-modal'] = modal;
        this._activeModals.push('raffle-history-modal');

        return modal;
    }

    /**
     * –ì–µ–Ω–µ—Ä—É–≤–∞–Ω–Ω—è HTML –¥–ª—è —Å–ø–∏—Å–∫—É –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤
     * @param {Array} winners - –ú–∞—Å–∏–≤ –∑ –ø–µ—Ä–µ–º–æ–∂—Ü—è–º–∏
     * @returns {string} - HTML-—Ä–æ–∑–º—ñ—Ç–∫–∞
     * @private
     */
    _generateWinnersListHTML(winners) {
        if (!winners || !Array.isArray(winners) || winners.length === 0) {
            return '<div class="no-winners">–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤ –≤—ñ–¥—Å—É—Ç–Ω—è</div>';
        }

        // –°–æ—Ä—Ç—É—î–º–æ –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤ –∑–∞ –º—ñ—Å—Ü–µ–º (—Å–ø–æ—á–∞—Ç–∫—É –Ω–∞–π–≤–∏—â—ñ)
        const sortedWinners = [...winners].sort((a, b) => {
            if (!a || !b || !a.place || !b.place) return 0;
            return a.place - b.place;
        });

        return sortedWinners.map(winner => {
            if (!winner) return '';

            // –í–∏–∑–Ω–∞—á–∞—î–º–æ –∫–ª–∞—Å –¥–ª—è –º—ñ—Å—Ü—è (top-1, top-2, top-3)
            const placeClass = winner.place <= 3 ? `place-${winner.place}` : 'default-place';

            // –í–∏–∑–Ω–∞—á–∞—î–º–æ, —á–∏ —Ü–µ –ø–æ—Ç–æ—á–Ω–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á
            const currentUserClass = winner.isCurrentUser ? 'current-user' : '';

            // –§–æ—Ä–º—É—î–º–æ HTML –¥–ª—è –æ–¥–Ω–æ–≥–æ –ø–µ—Ä–µ–º–æ–∂—Ü—è
            return `
                <div class="winner-item ${currentUserClass}" ${winner.isCurrentUser ? 'title="–¶–µ –≤–∏!"' : ''}>
                    <div class="winner-place ${placeClass}">
                        <span>${winner.place || '-'}</span>
                    </div>
                    <div class="winner-info">
                        <div class="winner-name">${winner.username || '–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á'}</div>
                        <div class="winner-id">ID: ${winner.userId || '–Ω–µ–≤—ñ–¥–æ–º–æ'}</div>
                    </div>
                    <div class="winner-prize">${winner.prize || '0 WINIX'}</div>
                </div>
            `;
        }).join('');
    }

    /**
     * –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞ –∫–æ–Ω—Ñ—ñ—Ä–º–∞—Ü—ñ—ó
     * @param {string} message - –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
     * @param {string} [confirmText='–¢–∞–∫'] - –¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è
     * @param {string} [cancelText='–ù—ñ'] - –¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ —Å–∫–∞—Å—É–≤–∞–Ω–Ω—è
     * @returns {Promise<boolean>} - –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è
     */
    showConfirm(message, confirmText = '–¢–∞–∫', cancelText = '–ù—ñ') {
        return new Promise((resolve) => {
            // –°—Ç–≤–æ—Ä—é—î–º–æ —É–Ω—ñ–∫–∞–ª—å–Ω–∏–π ID –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞
            const modalId = 'confirm-modal-' + Date.now();

            // –°—Ç–≤–æ—Ä—é—î–º–æ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
            const modal = document.createElement('div');
            modal.id = modalId;
            modal.className = 'raffle-modal confirm-modal';

            modal.innerHTML = `
                <div class="modal-content confirm-content">
                    <div class="modal-header">
                        <h2 class="modal-title">–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è</h2>
                        <span class="modal-close">√ó</span>
                    </div>
                    <div class="modal-body">
                        <p>${message}</p>
                    </div>
                    <div class="modal-footer">
                        <button class="cancel-btn">${cancelText}</button>
                        <button class="confirm-btn">${confirmText}</button>
                    </div>
                </div>
            `;

            // –î–æ–¥–∞—î–º–æ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É
            document.body.appendChild(modal);

            // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π
            const closeButton = modal.querySelector('.modal-close');
            const cancelButton = modal.querySelector('.cancel-btn');
            const confirmButton = modal.querySelector('.confirm-btn');

            const closeHandler = () => {
                modal.classList.remove('open');
                setTimeout(() => {
                    modal.remove();
                    resolve(false);
                }, 300);
            };

            const confirmHandler = () => {
                modal.classList.remove('open');
                setTimeout(() => {
                    modal.remove();
                    resolve(true);
                }, 300);
            };

            // –ü—Ä–∏–∑–Ω–∞—á–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏
            closeButton.addEventListener('click', closeHandler);
            cancelButton.addEventListener('click', closeHandler);
            confirmButton.addEventListener('click', confirmHandler);

            // –ü–æ–∫–∞–∑—É—î–º–æ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
            setTimeout(() => {
                modal.classList.add('open');
                // –§–æ–∫—É—Å –Ω–∞ –∫–Ω–æ–ø—Ü—ñ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è
                confirmButton.focus();
            }, 10);
        });
    }

    /**
     * –í—ñ–¥–∫—Ä–∏—Ç—Ç—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞ –∑–∞ –π–æ–≥–æ ID
     * @param {string} modalId - ID –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞
     */
    openModal(modalId) {
        const modal = this._modals[modalId] || getElement(`#${modalId}`);

        if (!modal) {
            console.error(`–ú–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ –∑ id ${modalId} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ`);
            return;
        }

        // –î–æ–¥–∞—î–º–æ –∫–ª–∞—Å –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è
        modal.classList.add('open');

        // –î–æ–¥–∞—î–º–æ –¥–æ —Å–ø–∏—Å–∫—É –∞–∫—Ç–∏–≤–Ω–∏—Ö –º–æ–¥–∞–ª—å–Ω–∏—Ö –≤—ñ–∫–æ–Ω
        if (!this._activeModals.includes(modalId)) {
            this._activeModals.push(modalId);
        }

        // –ë–ª–æ–∫—É—î–º–æ —Å–∫—Ä–æ–ª–ª –Ω–∞ —Ñ–æ–Ω—ñ
        document.body.style.overflow = 'hidden';
    }

    /**
     * –ó–∞–∫—Ä–∏—Ç—Ç—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞ –∑–∞ –π–æ–≥–æ ID
     * @param {string} modalId - ID –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞
     */
    closeModal(modalId) {
        const modal = this._modals[modalId] || getElement(`#${modalId}`);

        if (!modal) return;

        // –í–∏–¥–∞–ª—è—î–º–æ –∫–ª–∞—Å –¥–ª—è –ø—Ä–∏—Ö–æ–≤—É–≤–∞–Ω–Ω—è
        modal.classList.remove('open');

        // –í–∏–¥–∞–ª—è—î–º–æ –∑—ñ —Å–ø–∏—Å–∫—É –∞–∫—Ç–∏–≤–Ω–∏—Ö –º–æ–¥–∞–ª—å–Ω–∏—Ö –≤—ñ–∫–æ–Ω
        const index = this._activeModals.indexOf(modalId);
        if (index !== -1) {
            this._activeModals.splice(index, 1);
        }

        // –†–æ–∑–±–ª–æ–∫–æ–≤—É—î–º–æ —Å–∫—Ä–æ–ª–ª, —è–∫—â–æ –Ω–µ–º–∞—î –∞–∫—Ç–∏–≤–Ω–∏—Ö –º–æ–¥–∞–ª—å–Ω–∏—Ö –≤—ñ–∫–æ–Ω
        if (this._activeModals.length === 0) {
            document.body.style.overflow = '';
        }
    }

    /**
     * –ó–∞–∫—Ä–∏—Ç—Ç—è –≤—Å—ñ—Ö –≤—ñ–¥–∫—Ä–∏—Ç–∏—Ö –º–æ–¥–∞–ª—å–Ω–∏—Ö –≤—ñ–∫–æ–Ω
     */
    closeAllModals() {
        // –ö–æ–ø—ñ—é—î–º–æ –º–∞—Å–∏–≤, —â–æ–± —É–Ω–∏–∫–Ω—É—Ç–∏ –ø—Ä–æ–±–ª–µ–º –∑ —ñ—Ç–µ—Ä–∞—Ü—ñ—î—é –ø—Ä–∏ –∑–º—ñ–Ω–∞—Ö
        const activeModals = [...this._activeModals];

        activeModals.forEach(modalId => {
            this.closeModal(modalId);
        });

        // –†–æ–∑–±–ª–æ–∫–æ–≤—É—î–º–æ —Å–∫—Ä–æ–ª–ª
        document.body.style.overflow = '';
    }

    /**
     * –ó–Ω–∏—â–µ–Ω–Ω—è –º–æ–¥—É–ª—è —Ç–∞ –∑–≤—ñ–ª—å–Ω–µ–Ω–Ω—è —Ä–µ—Å—É—Ä—Å—ñ–≤
     */
    destroy() {
        // –ó–∞–∫—Ä–∏–≤–∞—î–º–æ –≤—Å—ñ –≤—ñ–¥–∫—Ä–∏—Ç—ñ –º–æ–¥–∞–ª—å–Ω—ñ –≤—ñ–∫–Ω–∞
        this.closeAllModals();

        // –í–∏–¥–∞–ª—è—î–º–æ –≤—Å—ñ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π
        this._eventListeners.forEach(listener => {
            if (listener.element) {
                listener.element.removeEventListener(listener.event, listener.handler);
            }
        });

        // –û—á–∏—â–∞—î–º–æ –º–∞—Å–∏–≤–∏
        this._eventListeners = [];
        this._activeModals = [];
        this._modals = {};

        console.log("üö´ Raffle Modals: –ú–æ–¥—É–ª—å –∑–Ω–∏—â–µ–Ω–æ");
    }
}

// –°—Ç–≤–æ—Ä—é—î–º–æ –µ–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—É
const raffleModals = new RaffleModals();

// –î–æ–¥–∞—î–º–æ –≤ –≥–ª–æ–±–∞–ª—å–Ω–∏–π –æ–±'—î–∫—Ç –¥–ª—è –∑–≤–æ—Ä–æ—Ç–Ω–æ—ó —Å—É–º—ñ—Å–Ω–æ—Å—Ç—ñ
WinixRaffles.modals = raffleModals;

// –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ –º–æ–¥—É–ª—å –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ –¥–æ–∫—É–º–µ–Ω—Ç–∞
if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', () => raffleModals.init());
} else {
    setTimeout(() => raffleModals.init(), 100);
}

export default raffleModals;