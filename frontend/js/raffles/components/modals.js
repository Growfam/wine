/**
 * modals.js - –ú–æ–¥—É–ª—å –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ –º–æ–¥–∞–ª—å–Ω–∏–º–∏ –≤—ñ–∫–Ω–∞–º–∏ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
 * –í—ñ–¥–ø–æ–≤—ñ–¥–∞—î –∑–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞ —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –º–æ–¥–∞–ª—å–Ω–∏–º–∏ –≤—ñ–∫–Ω–∞–º–∏ –¥–ª—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
 */

import { formatDate, formatCurrency } from '../utils/formatters.js';
import { showToast } from '../utils/ui-helpers.js';
import raffleParticipation from '../modules/participation.js';
import api from '../services/api.js';
import WinixRaffles from '../globals.js';

/**
 * –ö–ª–∞—Å –¥–ª—è —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –º–æ–¥–∞–ª—å–Ω–∏–º–∏ –≤—ñ–∫–Ω–∞–º–∏ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
 */
class RaffleModals {
    /**
     * –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –∫–ª–∞—Å—É
     */
    constructor() {
        this._modals = {};
        this._activeModals = [];
    }

    /**
     * –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –º–æ–¥–∞–ª—å–Ω–∏—Ö –≤—ñ–∫–æ–Ω –¥–ª—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
     */
    init() {
        // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π –¥–ª—è —ñ—Å–Ω—É—é—á–∏—Ö –º–æ–¥–∞–ª—å–Ω–∏—Ö –≤—ñ–∫–æ–Ω
        this._setupExistingModals();
        console.log("üñºÔ∏è Raffle Modals: –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ");
    }

    /**
     * –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —ñ—Å–Ω—É—é—á–∏—Ö –º–æ–¥–∞–ª—å–Ω–∏—Ö –≤—ñ–∫–æ–Ω –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ
     * @private
     */
    _setupExistingModals() {
        // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –≤—Å—ñ –º–æ–¥–∞–ª—å–Ω—ñ –≤—ñ–∫–Ω–∞ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ
        const modals = document.querySelectorAll('.raffle-modal');

        modals.forEach(modal => {
            const modalId = modal.id;
            if (!modalId) return;

            // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
            this._modals[modalId] = modal;

            // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –¥–ª—è –∑–∞–∫—Ä–∏—Ç—Ç—è
            const closeButtons = modal.querySelectorAll('.modal-close, .cancel-btn');
            closeButtons.forEach(btn => {
                btn.addEventListener('click', () => this.closeModal(modalId));
            });

            // –ó–∞–∫—Ä–∏—Ç—Ç—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞ –ø–æ –∫–ª—ñ–∫—É –Ω–∞ —Ñ–æ–Ω (—è–∫—â–æ –∫–ª—ñ–∫ –±—É–≤ —Å–∞–º–µ –Ω–∞ —Ñ–æ–Ω—ñ)
            modal.addEventListener('click', (e) => {
                if (e.target === modal) {
                    this.closeModal(modalId);
                }
            });
        });
    }

    /**
     * –í—ñ–¥–∫—Ä–∏—Ç—Ç—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞ –∑ –¥–µ—Ç–∞–ª—è–º–∏ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
     * @param {string} raffleId - ID —Ä–æ–∑—ñ–≥—Ä–∞—à—É
     * @param {string} raffleType - –¢–∏–ø —Ä–æ–∑—ñ–≥—Ä–∞—à—É ('daily' –∞–±–æ 'main')
     */
    async openRaffleDetails(raffleId, raffleType) {
        if (!raffleId) {
            showToast('ID —Ä–æ–∑—ñ–≥—Ä–∞—à—É –Ω–µ –≤–∫–∞–∑–∞–Ω–æ');
            return;
        }

        try {
            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –∂–µ—Ç–æ–Ω—ñ–≤
            const userData = await api.getUserData();
            const coinsBalance = userData.data?.coins || 0;

            if (coinsBalance < 1) {
                showToast('–î–ª—è —É—á–∞—Å—Ç—ñ –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ –ø–æ—Ç—Ä—ñ–±–µ–Ω —â–æ–Ω–∞–π–º–µ–Ω—à–µ 1 –∂–µ—Ç–æ–Ω');
                return;
            }

            // –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
            const raffleData = await this._getRaffleDetails(raffleId);
            if (!raffleData) {
                showToast('–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—É');
                return;
            }

            // –û–±—Ä–æ–±–ª—è—î–º–æ –¥–µ—Ç–∞–ª—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
            this._processRaffleDetails(raffleData, raffleType);
        } catch (error) {
            console.error('–ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è –¥–µ—Ç–∞–ª–µ–π —Ä–æ–∑—ñ–≥—Ä–∞—à—É:', error);
            showToast('–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –¥–µ—Ç–∞–ª—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—É. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.');
        }
    }

    /**
     * –û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–µ—Ç–∞–ª–µ–π —Ä–æ–∑—ñ–≥—Ä–∞—à—É
     * @param {string} raffleId - ID —Ä–æ–∑—ñ–≥—Ä–∞—à—É
     * @returns {Promise<Object>} - –î–∞–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
     * @private
     */
    async _getRaffleDetails(raffleId) {
        try {
            if (!raffleId) {
                throw new Error('ID —Ä–æ–∑—ñ–≥—Ä–∞—à—É –Ω–µ –≤–∫–∞–∑–∞–Ω–æ');
            }

            if (typeof window.showLoading === 'function') {
                window.showLoading('–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–µ—Ç–∞–ª–µ–π —Ä–æ–∑—ñ–≥—Ä–∞—à—É...');
            }

            const response = await api.apiRequest(`/api/raffles/${raffleId}`, 'GET');

            if (typeof window.hideLoading === 'function') {
                window.hideLoading();
            }

            if (response && response.status === 'success') {
                return response.data;
            } else {
                throw new Error((response && response.message) || '–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–µ—Ç–∞–ª–µ–π —Ä–æ–∑—ñ–≥—Ä–∞—à—É');
            }
        } catch (error) {
            console.error(`‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–µ—Ç–∞–ª–µ–π —Ä–æ–∑—ñ–≥—Ä–∞—à—É ${raffleId}:`, error);

            if (typeof window.hideLoading === 'function') {
                window.hideLoading();
            }

            showToast('–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –¥–µ—Ç–∞–ª—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—É. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.');
            return null;
        }
    }

    /**
     * –û–±—Ä–æ–±–∫–∞ –¥–µ—Ç–∞–ª–µ–π —Ä–æ–∑—ñ–≥—Ä–∞—à—É
     * @param {Object} raffleData - –î–∞–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
     * @param {string} raffleType - –¢–∏–ø —Ä–æ–∑—ñ–≥—Ä–∞—à—É ('daily' –∞–±–æ 'main')
     * @private
     */
    _processRaffleDetails(raffleData, raffleType) {
        if (!raffleData) {
            showToast('–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—É');
            return;
        }

        // –í—ñ–¥–∫—Ä–∏–≤–∞—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–µ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
        const modalId = raffleType === 'daily' ? 'daily-raffle-modal' : 'main-raffle-modal';
        const modal = this._modals[modalId] || document.getElementById(modalId);

        if (!modal) {
            console.error(`–ú–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ –∑ id ${modalId} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ`);
            showToast('–ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –¥–µ—Ç–∞–ª–µ–π —Ä–æ–∑—ñ–≥—Ä–∞—à—É');
            return;
        }

        // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –∑–Ω–∞—á–µ–Ω–Ω—è –ø–æ–ª—ñ–≤ —É –º–æ–¥–∞–ª—å–Ω–æ–º—É –≤—ñ–∫–Ω—ñ
        this._updateModalFields(modal, raffleData, raffleType);

        // –í—ñ–¥–∫—Ä–∏–≤–∞—î–º–æ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
        this.openModal(modalId);
    }

    /**
     * –û–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–æ–ª—ñ–≤ —É –º–æ–¥–∞–ª—å–Ω–æ–º—É –≤—ñ–∫–Ω—ñ
     * @param {HTMLElement} modal - –ï–ª–µ–º–µ–Ω—Ç –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞
     * @param {Object} raffleData - –î–∞–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
     * @param {string} raffleType - –¢–∏–ø —Ä–æ–∑—ñ–≥—Ä–∞—à—É ('daily' –∞–±–æ 'main')
     * @private
     */
    async _updateModalFields(modal, raffleData, raffleType) {
        // –û—Ç—Ä–∏–º—É—î–º–æ –±–∞–ª–∞–Ω—Å –∂–µ—Ç–æ–Ω—ñ–≤
        const userData = await api.getUserData();
        const coinsBalance = userData.data?.coins || 0;

        // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –ø–æ–ª—è –¥–ª—è –≤–≤–µ–¥–µ–Ω–Ω—è –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –∂–µ—Ç–æ–Ω—ñ–≤
        const inputId = raffleType === 'daily' ? 'daily-token-amount' : 'main-token-amount';
        const input = document.getElementById(inputId);

        if (input) {
            input.value = '1';

            // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è —Ä—ñ–≤–Ω–µ –±–∞–ª–∞–Ω—Å—É –∂–µ—Ç–æ–Ω—ñ–≤
            const tokenCost = raffleType === 'daily' ? 1 : 3;
            const maxTickets = Math.floor(coinsBalance / tokenCost);
            input.max = maxTickets;

            // –ü–æ–∫–∞–∑—É—î–º–æ –∫–Ω–æ–ø–∫—É "–í–°–Ü", —è–∫—â–æ –±–∞–ª–∞–Ω—Å –±—ñ–ª—å—à–µ 1
            const allButtonId = raffleType === 'daily' ? 'daily-all-tokens-btn' : 'main-all-tokens-btn';
            const allButton = document.getElementById(allButtonId);

            if (allButton) {
                if (coinsBalance > tokenCost) {
                    allButton.style.display = 'block';

                    // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–í–°–Ü"
                    allButton.onclick = function() {
                        input.value = maxTickets;
                    };
                } else {
                    allButton.style.display = 'none';
                }
            }
        }

        // –ù–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ –∫–Ω–æ–ø–∫—É —É—á–∞—Å—Ç—ñ
        const btnId = raffleType === 'daily' ? 'daily-join-btn' : 'main-join-btn';
        const joinBtn = document.getElementById(btnId);

        if (joinBtn) {
            joinBtn.setAttribute('data-raffle-id', raffleData.id);
            joinBtn.setAttribute('data-raffle-type', raffleType);

            // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è
            joinBtn.onclick = () => {
                const raffleId = joinBtn.getAttribute('data-raffle-id');
                const raffleType = joinBtn.getAttribute('data-raffle-type');

                this._participateInRaffle(raffleId, raffleType, inputId);
            };
        }

        // –û–Ω–æ–≤–ª—é—î–º–æ –¥–∞–Ω—ñ –≤ –º–æ–¥–∞–ª—å–Ω–æ–º—É –≤—ñ–∫–Ω—ñ –≤ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –≤—ñ–¥ —Ç–∏–ø—É
        if (raffleType === 'daily') {
            this._updateDailyRaffleModal(raffleData);
        } else {
            this._updateMainRaffleModal(raffleData);
        }
    }

    /**
     * –û–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–æ–ª—ñ–≤ —É –º–æ–¥–∞–ª—å–Ω–æ–º—É –≤—ñ–∫–Ω—ñ –¥–ª—è —â–æ–¥–µ–Ω–Ω–æ–≥–æ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
     * @param {Object} raffleData - –î–∞–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
     * @private
     */
    _updateDailyRaffleModal(raffleData) {
        const titleElement = document.getElementById('daily-modal-title');
        if (titleElement) titleElement.textContent = raffleData.title || '–©–æ–¥–µ–Ω–Ω–∏–π —Ä–æ–∑—ñ–≥—Ä–∞—à';

        const prizeElement = document.getElementById('daily-prize-value');
        if (prizeElement) prizeElement.textContent = `${raffleData.prize_amount} ${raffleData.prize_currency} (${raffleData.winners_count} –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤)`;

        const participantsElement = document.getElementById('daily-participants');
        if (participantsElement) participantsElement.textContent = raffleData.participants_count || '0';

        const endDateElement = document.getElementById('daily-end-time');
        if (endDateElement) endDateElement.textContent = formatDate(raffleData.end_time);

        const descriptionElement = document.getElementById('daily-description');
        if (descriptionElement) descriptionElement.textContent = raffleData.description || '–©–æ–¥–µ–Ω–Ω–∏–π —Ä–æ–∑—ñ–≥—Ä–∞—à –∑ –ø—Ä–∏–∑–∞–º–∏ –¥–ª—è –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤! –í–∏–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ –∂–µ—Ç–æ–Ω–∏ –¥–ª—è —É—á–∞—Å—Ç—ñ.';

        // –û–Ω–æ–≤–ª—é—î–º–æ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è, —è–∫—â–æ –≤–æ–Ω–æ —î
        const imageElement = document.getElementById('daily-prize-image');
        if (imageElement && raffleData.image_url) {
            imageElement.src = raffleData.image_url;
        }
    }

    /**
     * –û–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–æ–ª—ñ–≤ —É –º–æ–¥–∞–ª—å–Ω–æ–º—É –≤—ñ–∫–Ω—ñ –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
     * @param {Object} raffleData - –î–∞–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
     * @private
     */
    _updateMainRaffleModal(raffleData) {
        const titleElement = document.getElementById('main-modal-title');
        if (titleElement) titleElement.textContent = raffleData.title || '–ì—Ä–∞–Ω–¥ –†–æ–∑—ñ–≥—Ä–∞—à';

        const prizeElement = document.getElementById('main-prize-value');
        if (prizeElement) prizeElement.textContent = `${raffleData.prize_amount} ${raffleData.prize_currency} (${raffleData.winners_count} –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤)`;

        const participantsElement = document.getElementById('main-participants');
        if (participantsElement) participantsElement.textContent = raffleData.participants_count || '0';

        const endDateElement = document.getElementById('main-end-time');
        if (endDateElement) endDateElement.textContent = formatDate(raffleData.end_time);

        const descriptionElement = document.getElementById('main-description');
        if (descriptionElement) descriptionElement.textContent = raffleData.description || '–ì—Ä–∞–Ω–¥—ñ–æ–∑–Ω–∏–π —Ä–æ–∑—ñ–≥—Ä–∞—à –∑ —á—É–¥–æ–≤–∏–º–∏ –ø—Ä–∏–∑–∞–º–∏! –í–∏–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ –∂–µ—Ç–æ–Ω–∏ –¥–ª—è —É—á–∞—Å—Ç—ñ —Ç–∞ –∑–±—ñ–ª—å—à—ñ—Ç—å —Å–≤–æ—ó —à–∞–Ω—Å–∏ –Ω–∞ –ø–µ—Ä–µ–º–æ–≥—É.';

        // –û–Ω–æ–≤–ª—é—î–º–æ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è, —è–∫—â–æ –≤–æ–Ω–æ —î
        const imageElement = document.getElementById('main-prize-image');
        if (imageElement && raffleData.image_url) {
            imageElement.src = raffleData.image_url;
        }

        // –û–Ω–æ–≤–ª—é—î–º–æ —Ä–æ–∑–ø–æ–¥—ñ–ª –ø—Ä–∏–∑—ñ–≤, —è–∫—â–æ —î
        const prizeDistributionElement = document.getElementById('main-prize-distribution');
        if (prizeDistributionElement && raffleData.prize_distribution) {
            prizeDistributionElement.innerHTML = this._generatePrizeDistributionHTML(raffleData.prize_distribution);
        }
    }

    /**
     * –§—É–Ω–∫—Ü—ñ—è —É—á–∞—Å—Ç—ñ –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ
     * @param {string} raffleId - ID —Ä–æ–∑—ñ–≥—Ä–∞—à—É
     * @param {string} raffleType - –¢–∏–ø —Ä–æ–∑—ñ–≥—Ä–∞—à—É ('daily' –∞–±–æ 'main')
     * @param {string} inputId - ID –ø–æ–ª—è –¥–ª—è –≤–≤–µ–¥–µ–Ω–Ω—è –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –∂–µ—Ç–æ–Ω—ñ–≤
     * @private
     */
    async _participateInRaffle(raffleId, raffleType, inputId) {
        if (!raffleId) {
            showToast('ID —Ä–æ–∑—ñ–≥—Ä–∞—à—É –Ω–µ –≤–∫–∞–∑–∞–Ω–æ');
            return;
        }

        // –û—Ç—Ä–∏–º—É—î–º–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∂–µ—Ç–æ–Ω—ñ–≤
        const input = document.getElementById(inputId);
        const entryCount = parseInt(input?.value || '1') || 1;

        // –û—Ç—Ä–∏–º—É—î–º–æ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
        const modalId = raffleType === 'daily' ? 'daily-raffle-modal' : 'main-raffle-modal';

        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∫–æ—Ä–µ–∫—Ç–Ω—ñ—Å—Ç—å –≤–≤–µ–¥–µ–Ω–Ω—è
        if (entryCount <= 0) {
            showToast('–ö—ñ–ª—å–∫—ñ—Å—Ç—å –∂–µ—Ç–æ–Ω—ñ–≤ –º–∞—î –±—É—Ç–∏ –±—ñ–ª—å—à–µ –Ω—É–ª—è');
            return;
        }

        // –î–µ–ª–µ–≥—É—î–º–æ —É—á–∞—Å—Ç—å —É —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ –¥–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ–≥–æ –º–æ–¥—É–ª—è
        const result = await raffleParticipation.participateInRaffle(raffleId, entryCount);

        // –û–±—Ä–æ–±–ª—è—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        if (result.status === 'success') {
            // –ó–∞–∫—Ä–∏–≤–∞—î–º–æ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
            this.closeModal(modalId);

            // –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ —É—Å–ø—ñ—Ö
            showToast(result.message);

            // –Ø–∫—â–æ —î –±–æ–Ω—É—Å, –ø–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –Ω—å–æ–≥–æ
            if (result.data && result.data.bonus_amount) {
                setTimeout(() => {
                    showToast(`–í—ñ—Ç–∞—î–º–æ! –í–∏ –æ—Ç—Ä–∏–º–∞–ª–∏ ${result.data.bonus_amount} WINIX —è–∫ –±–æ–Ω—É—Å!`);
                }, 3000);
            }

            // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
            if (typeof WinixRaffles.active?.displayRaffles === 'function') {
                WinixRaffles.active.displayRaffles();
            }
        } else {
            // –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É
            showToast(result.message);
        }
    }

    /**
     * –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è HTML –¥–ª—è —Ä–æ–∑–ø–æ–¥—ñ–ª—É –ø—Ä–∏–∑—ñ–≤
     * @param {Object} prizeDistribution - –û–±'—î–∫—Ç –∑ —Ä–æ–∑–ø–æ–¥—ñ–ª–æ–º –ø—Ä–∏–∑—ñ–≤
     * @returns {string} - HTML-—Ä–æ–∑–º—ñ—Ç–∫–∞
     * @private
     */
    _generatePrizeDistributionHTML(prizeDistribution) {
        if (!prizeDistribution || typeof prizeDistribution !== 'object' || Object.keys(prizeDistribution).length === 0) {
            return '<div class="prize-item"><span class="prize-place">–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –≤—ñ–¥—Å—É—Ç–Ω—è</span></div>';
        }

        let html = '';
        const places = Object.keys(prizeDistribution).sort((a, b) => parseInt(a) - parseInt(b));

        // –ì—Ä—É–ø—É—î–º–æ –º—ñ—Å—Ü—è –∑ –æ–¥–Ω–∞–∫–æ–≤–∏–º–∏ –ø—Ä–∏–∑–∞–º–∏
        const groupedPrizes = {};

        places.forEach(place => {
            const prize = prizeDistribution[place];
            if (!prize) return;

            const key = `${prize.amount}-${prize.currency}`;

            if (!groupedPrizes[key]) {
                groupedPrizes[key] = {
                    amount: prize.amount,
                    currency: prize.currency,
                    places: []
                };
            }

            groupedPrizes[key].places.push(parseInt(place));
        });

        // –°—Ç–≤–æ—Ä—é—î–º–æ HTML –¥–ª—è –∫–æ–∂–Ω–æ—ó –≥—Ä—É–ø–∏ –ø—Ä–∏–∑—ñ–≤
        for (const key in groupedPrizes) {
            const group = groupedPrizes[key];
            const placesText = this._formatPlaces(group.places);

            html += `
                <div class="prize-item">
                    <span class="prize-place">${placesText}:</span>
                    <span class="prize-value">${group.amount} ${group.currency}</span>
                </div>
            `;
        }

        return html;
    }

    /**
     * –§–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è —Å–ø–∏—Å–∫—É –º—ñ—Å—Ü—å
     * @param {Array} places - –ú–∞—Å–∏–≤ –∑ –º—ñ—Å—Ü—è–º–∏
     * @returns {string} - –í—ñ–¥—Ñ–æ—Ä–º–∞—Ç–æ–≤–∞–Ω–∏–π —Ç–µ–∫—Å—Ç –º—ñ—Å—Ü—å
     * @private
     */
    _formatPlaces(places) {
        if (!places || !Array.isArray(places) || places.length === 0) {
            return "–ù–µ–≤—ñ–¥–æ–º–æ";
        }

        if (places.length === 1) {
            return `${places[0]} –º—ñ—Å—Ü–µ`;
        }

        // –®—É–∫–∞—î–º–æ –ø–æ—Å–ª—ñ–¥–æ–≤–Ω—ñ –º—ñ—Å—Ü—è
        places.sort((a, b) => a - b);

        const ranges = [];
        let start = places[0];
        let end = places[0];

        for (let i = 1; i < places.length; i++) {
            if (places[i] === end + 1) {
                end = places[i];
            } else {
                if (start === end) {
                    ranges.push(`${start}`);
                } else {
                    ranges.push(`${start}-${end}`);
                }
                start = end = places[i];
            }
        }

        if (start === end) {
            ranges.push(`${start}`);
        } else {
            ranges.push(`${start}-${end}`);
        }

        return ranges.join(', ') + ' –º—ñ—Å—Ü—è';
    }

    /**
     * –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞ –∑ –¥–µ—Ç–∞–ª—è–º–∏ —Ä–æ–∑—ñ–≥—Ä–∞—à—É –∑ —ñ—Å—Ç–æ—Ä—ñ—ó
     * @param {Object} raffleData - –î–∞–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—É –∑ —ñ—Å—Ç–æ—Ä—ñ—ó
     */
    showRaffleHistoryDetails(raffleData) {
        if (!raffleData) {
            showToast('–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–∞–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—É');
            return;
        }

        // –í–∏–¥–∞–ª—è—î–º–æ —ñ—Å–Ω—É—é—á–µ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ —ñ—Å—Ç–æ—Ä—ñ—ó, —è–∫—â–æ –≤–æ–Ω–æ —î
        const existingModal = document.getElementById('raffle-history-modal');
        if (existingModal) {
            existingModal.remove();
        }

        // –°—Ç–≤–æ—Ä—é—î–º–æ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
        const modal = document.createElement('div');
        modal.id = 'raffle-history-modal';
        modal.className = 'raffle-modal';

        // –ì–µ–Ω–µ—Ä—É—î–º–æ —Å–ø–∏—Å–æ–∫ –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤, —è–∫—â–æ –≤–æ–Ω–∏ —î
        let winnersHTML = '';
        if (raffleData.winners && Array.isArray(raffleData.winners) && raffleData.winners.length > 0) {
            winnersHTML = this._generateWinnersListHTML(raffleData.winners);
        } else {
            winnersHTML = '<div class="no-winners">–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤ –≤—ñ–¥—Å—É—Ç–Ω—è</div>';
        }

        // –í–∏–∑–Ω–∞—á–∞—î–º–æ —Å—Ç–∞—Ç—É—Å —ñ –∫–ª–∞—Å —Å—Ç–∞—Ç—É—Å—É
        const statusClass = raffleData.status === 'won' ? 'win-status' : 'participated-status';
        const statusText = raffleData.status === 'won' ? '–í–∏ –ø–µ—Ä–µ–º–æ–≥–ª–∏' : '–£—á–∞—Å—Ç—å –±–µ–∑ –ø–µ—Ä–µ–º–æ–≥–∏';

        // –í–∏–∑–Ω–∞—á–∞—î–º–æ —Ç–∏–ø —Ä–æ–∑—ñ–≥—Ä–∞—à—É
        const raffleType = raffleData.is_daily ? '–©–æ–¥–µ–Ω–Ω–∏–π —Ä–æ–∑—ñ–≥—Ä–∞—à' : '–ì—Ä–∞–Ω–¥ —Ä–æ–∑—ñ–≥—Ä–∞—à';

        // –§–æ—Ä–º—É—î–º–æ HTML –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞
        modal.innerHTML = `
            <div class="modal-content">
                <div class="modal-header">
                    <h2 class="modal-title">${raffleData.title || '–î–µ—Ç–∞–ª—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—É'}</h2>
                    <span class="modal-close">√ó</span>
                </div>
                
                <div class="prize-details">
                    <div class="detail-item">
                        <div class="detail-label">–î–∞—Ç–∞:</div>
                        <div class="detail-value">${raffleData.date || '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'}</div>
                    </div>
                    <div class="detail-item">
                        <div class="detail-label">–¢–∏–ø:</div>
                        <div class="detail-value">${raffleType}</div>
                    </div>
                    <div class="detail-item">
                        <div class="detail-label">–ü—Ä–∏–∑–æ–≤–∏–π —Ñ–æ–Ω–¥:</div>
                        <div class="detail-value prize-value">${raffleData.prize || '0 WINIX'}</div>
                    </div>
                    <div class="detail-item">
                        <div class="detail-label">–í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç:</div>
                        <div class="detail-value ${statusClass}">${statusText}</div>
                    </div>
                    <div class="detail-item">
                        <div class="detail-label">–í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–æ –∂–µ—Ç–æ–Ω—ñ–≤:</div>
                        <div class="detail-value">${raffleData.entry_count || 0}</div>
                    </div>
                    ${raffleData.status === 'won' ? `
                    <div class="detail-item">
                        <div class="detail-label">–í–∞—à–µ –º—ñ—Å—Ü–µ:</div>
                        <div class="detail-value winner-place-value">${raffleData.place || '-'}</div>
                    </div>
                    ` : ''}
                </div>
                
                <div class="winners-container">
                    <h3>–ü–µ—Ä–µ–º–æ–∂—Ü—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—É</h3>
                    <div class="winners-list">
                        ${winnersHTML}
                    </div>
                </div>
                
                <button class="join-button" id="close-history-btn">–ó–ê–ö–†–ò–¢–ò</button>
            </div>
        `;

        // –î–æ–¥–∞—î–º–æ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É
        document.body.appendChild(modal);

        // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π
        const closeButton = modal.querySelector('.modal-close');
        if (closeButton) {
            closeButton.addEventListener('click', () => {
                modal.classList.remove('open');
                setTimeout(() => modal.remove(), 300);
            });
        }

        const closeActionButton = modal.querySelector('#close-history-btn');
        if (closeActionButton) {
            closeActionButton.addEventListener('click', () => {
                modal.classList.remove('open');
                setTimeout(() => modal.remove(), 300);
            });
        }

        // –ü–æ–∫–∞–∑—É—î–º–æ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
        requestAnimationFrame(() => {
            modal.classList.add('open');
        });

        // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
        this._modals['raffle-history-modal'] = modal;
        this._activeModals.push('raffle-history-modal');
    }

    /**
     * –ì–µ–Ω–µ—Ä—É–≤–∞–Ω–Ω—è HTML –¥–ª—è —Å–ø–∏—Å–∫—É –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤
     * @param {Array} winners - –ú–∞—Å–∏–≤ –∑ –ø–µ—Ä–µ–º–æ–∂—Ü—è–º–∏
     * @returns {string} - HTML-—Ä–æ–∑–º—ñ—Ç–∫–∞
     * @private
     */
    _generateWinnersListHTML(winners) {
        if (!winners || !Array.isArray(winners) || winners.length === 0) {
            return '<div class="no-winners">–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤ –≤—ñ–¥—Å—É—Ç–Ω—è</div>';
        }

        // –°–æ—Ä—Ç—É—î–º–æ –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤ –∑–∞ –º—ñ—Å—Ü–µ–º
        const sortedWinners = [...winners].sort((a, b) => {
            if (!a || !b || !a.place || !b.place) return 0;
            return a.place - b.place;
        });

        return sortedWinners.map(winner => {
            if (!winner) return '';

            // –í–∏–∑–Ω–∞—á–∞—î–º–æ –∫–ª–∞—Å –¥–ª—è –º—ñ—Å—Ü—è (top-1, top-2, top-3)
            const placeClass = winner.place <= 3 ? `place-${winner.place}` : 'default-place';

            // –í–∏–∑–Ω–∞—á–∞—î–º–æ, —á–∏ —Ü–µ –ø–æ—Ç–æ—á–Ω–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á
            const currentUserClass = winner.isCurrentUser ? 'current-user' : '';

            // –§–æ—Ä–º—É—î–º–æ HTML –¥–ª—è –æ–¥–Ω–æ–≥–æ –ø–µ—Ä–µ–º–æ–∂—Ü—è
            return `
                <div class="winner-item ${currentUserClass}" ${winner.isCurrentUser ? 'title="–¶–µ –≤–∏!"' : ''}>
                    <div class="winner-place ${placeClass}">
                        <span>${winner.place || '-'}</span>
                    </div>
                    <div class="winner-info">
                        <div class="winner-name">${winner.username || '–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á'}</div>
                        <div class="winner-id">ID: ${winner.userId || '–Ω–µ–≤—ñ–¥–æ–º–æ'}</div>
                    </div>
                    <div class="winner-prize">${winner.prize || '0 WINIX'}</div>
                </div>
            `;
        }).join('');
    }

    /**
     * –í—ñ–¥–∫—Ä–∏—Ç—Ç—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞ –∑–∞ –π–æ–≥–æ ID
     * @param {string} modalId - ID –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞
     */
    openModal(modalId) {
        const modal = this._modals[modalId] || document.getElementById(modalId);
        if (!modal) {
            console.error(`–ú–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ –∑ id ${modalId} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ`);
            return;
        }

        // –î–æ–¥–∞—î–º–æ –∫–ª–∞—Å –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è
        modal.classList.add('open');

        // –î–æ–¥–∞—î–º–æ –¥–æ —Å–ø–∏—Å–∫—É –∞–∫—Ç–∏–≤–Ω–∏—Ö –º–æ–¥–∞–ª—å–Ω–∏—Ö –≤—ñ–∫–æ–Ω
        if (!this._activeModals.includes(modalId)) {
            this._activeModals.push(modalId);
        }
    }

    /**
     * –ó–∞–∫—Ä–∏—Ç—Ç—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞ –∑–∞ –π–æ–≥–æ ID
     * @param {string} modalId - ID –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞
     */
    closeModal(modalId) {
        const modal = this._modals[modalId] || document.getElementById(modalId);
        if (!modal) return;

        // –í–∏–¥–∞–ª—è—î–º–æ –∫–ª–∞—Å –¥–ª—è –ø—Ä–∏—Ö–æ–≤—É–≤–∞–Ω–Ω—è
        modal.classList.remove('open');

        // –í–∏–¥–∞–ª—è—î–º–æ –∑—ñ —Å–ø–∏—Å–∫—É –∞–∫—Ç–∏–≤–Ω–∏—Ö –º–æ–¥–∞–ª—å–Ω–∏—Ö –≤—ñ–∫–æ–Ω
        const index = this._activeModals.indexOf(modalId);
        if (index !== -1) {
            this._activeModals.splice(index, 1);
        }
    }

    /**
     * –ó–∞–∫—Ä–∏—Ç—Ç—è –≤—Å—ñ—Ö –≤—ñ–¥–∫—Ä–∏—Ç–∏—Ö –º–æ–¥–∞–ª—å–Ω–∏—Ö –≤—ñ–∫–æ–Ω
     */
    closeAllModals() {
        // –ö–æ–ø—ñ—é—î–º–æ –º–∞—Å–∏–≤, —â–æ–± —É–Ω–∏–∫–Ω—É—Ç–∏ –ø—Ä–æ–±–ª–µ–º –∑ —ñ—Ç–µ—Ä–∞—Ü—ñ—î—é –ø—Ä–∏ –∑–º—ñ–Ω–∞—Ö
        const activeModals = [...this._activeModals];

        activeModals.forEach(modalId => {
            this.closeModal(modalId);
        });
    }
}

// –°—Ç–≤–æ—Ä—é—î–º–æ –µ–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—É
const raffleModals = new RaffleModals();

// –î–æ–¥–∞—î–º–æ –≤ –≥–ª–æ–±–∞–ª—å–Ω–∏–π –æ–±'—î–∫—Ç –¥–ª—è –∑–≤–æ—Ä–æ—Ç–Ω–æ—ó —Å—É–º—ñ—Å–Ω–æ—Å—Ç—ñ
WinixRaffles.modals = raffleModals;

export default raffleModals;