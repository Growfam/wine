/**
 * WINIX - –°–∏—Å—Ç–µ–º–∞ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ (statistics.js)
 * –í–¥–æ—Å–∫–æ–Ω–∞–ª–µ–Ω–∏–π –º–æ–¥—É–ª—å –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑—ñ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ—é —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
 * @version 2.1.0
 */

(function() {
    'use strict';

    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–æ–¥—É–ª—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
    if (typeof WinixRaffles === 'undefined') {
        console.error('‚ùå WinixRaffles –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ! –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—è, —â–æ core.js –ø—ñ–¥–∫–ª—é—á–µ–Ω–æ —Ä–∞–Ω—ñ—à–µ statistics.js');
        return;
    }

    // –ü—ñ–¥–º–æ–¥—É–ª—å –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
    const statistics = {
        // –î–∞–Ω—ñ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        statsData: null,

        // –Ü—Å—Ç–æ—Ä—ñ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∑–∞ –ø–µ—Ä—ñ–æ–¥–∏ (–¥–ª—è –≥—Ä–∞—Ñ—ñ–∫—ñ–≤)
        statsHistory: [],

        // –û—Å—Ç–∞–Ω–Ω—ñ–π —á–∞—Å –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
        lastUpdate: 0,

        // –Ü–Ω—Ç–µ—Ä–≤–∞–ª –∫–µ—à—É–≤–∞–Ω–Ω—è (3 —Ö–≤–∏–ª–∏–Ω–∏)
        cacheInterval: 3 * 60 * 1000, // –í–ò–ü–†–ê–í–õ–ï–ù–û: –ó–º–µ–Ω—à–µ–Ω–æ –¥–ª—è –±—ñ–ª—å—à —á–∞—Å—Ç–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è

        // –°—Ç–∞—Ç—É—Å –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
        isLoading: false,

        // –ß–∏ –±—É–ª–∏ –ø—Ä–æ–±–ª–µ–º–∏ –∑ –æ—Å—Ç–∞–Ω–Ω—ñ–º –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è–º
        hasLoadingErrors: false,

        // –ß–∏ –ø–æ—Ç—Ä—ñ–±–Ω–æ –æ–Ω–æ–≤–∏—Ç–∏ –¥–∞–Ω—ñ (–≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –¥–ª—è –≤—ñ–¥–∫–ª–∞–¥–µ–Ω–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è)
        needsUpdate: false,

        // –Ü–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä —Ç–∞–π–º–µ—Ä–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
        updateTimer: null,

        // –î–û–î–ê–ù–û: –ü—Ä–∞–ø–æ—Ä–µ—Ü—å –ø—Ä–∏–º—É—Å–æ–≤–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
        forceUpdateOnNextShow: false,

        // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –º–æ–¥—É–ª—è
        init: function() {
            console.log('üìä –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –º–æ–¥—É–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤...');

            // –°–ø–æ—á–∞—Ç–∫—É —Å–ø—Ä–æ–±—É—î–º–æ –≤—ñ–¥–Ω–æ–≤–∏—Ç–∏ –¥–∞–Ω—ñ –∑ –∫–µ—à—É
            this.restoreFromCache();

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤—ñ–¥—Ä–∞–∑—É –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            if (WinixRaffles.state.activeTab === 'stats') {
                this.loadStatistics();
            }

            // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π
            this.setupEventListeners();

            // –î–æ–¥–∞—î–º–æ —Å—Ç–∏–ª—ñ –¥–ª—è –≥—Ä–∞—Ñ—ñ–∫—ñ–≤
            this.injectChartStyles();
        },

        // –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –ø–æ–¥—ñ–π
        setupEventListeners: function() {
            // –û–±—Ä–æ–±–Ω–∏–∫ –∑–º—ñ–Ω–∏ –≤–∫–ª–∞–¥–∫–∏
            document.querySelectorAll('.tab-button').forEach(button => {
                button.addEventListener('click', () => {
                    const tabName = button.getAttribute('data-tab');
                    if (tabName === 'stats') {
                        // –í–ò–ü–†–ê–í–õ–ï–ù–ù–Ø: –û–Ω–æ–≤–ª—é—î–º–æ –ø—Ä–∏ –∫–æ–∂–Ω–æ–º—É –ø–µ—Ä–µ—Ö–æ–¥—ñ –Ω–∞ –≤–∫–ª–∞–¥–∫—É,
                        // –∞–±–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∫–µ—à, —è–∫—â–æ –¥–∞–Ω—ñ –¥–æ—Å—Ç–∞—Ç–Ω—å–æ —Å–≤—ñ–∂—ñ
                        const now = Date.now();
                        if (this.forceUpdateOnNextShow || now - this.lastUpdate > 60000) { // 1 —Ö–≤–∏–ª–∏–Ω–∞
                            this.loadStatistics(this.forceUpdateOnNextShow);
                            this.forceUpdateOnNextShow = false; // –°–∫–∏–¥–∞—î–º–æ –ø—Ä–∞–ø–æ—Ä–µ—Ü—å
                        } else {
                            // –í—ñ–¥–æ–±—Ä–∞–∂–∞—î–º–æ –∫–µ—à–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ, —è–∫—â–æ –≤–æ–Ω–∏ —ñ—Å–Ω—É—é—Ç—å
                            if (this.statsData) {
                                this.renderStatistics(this.statsData);
                            }
                        }
                    }
                });
            });

            // –û–±—Ä–æ–±–Ω–∏–∫ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            document.addEventListener('user-data-updated', (event) => {
                if (event.detail && event.detail.userData) {
                    // –í–ò–ü–†–ê–í–õ–ï–ù–ù–Ø: –í—ñ–¥–∫–ª–∞–¥–∞—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è, —â–æ–± –Ω–µ –≤–∏–∫–ª–∏–∫–∞—Ç–∏ –Ω–∞–¥–º—ñ—Ä–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∑–∞–ø–∏—Ç—ñ–≤
                    this.needsUpdate = true;
                    this.forceUpdateOnNextShow = true;

                    // –°–∫–∞—Å–æ–≤—É—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ–π —Ç–∞–π–º–µ—Ä, —è–∫—â–æ –≤—ñ–Ω —ñ—Å–Ω—É—î
                    if (this.updateTimer) {
                        clearTimeout(this.updateTimer);
                    }

                    // –Ø–∫—â–æ –º–∏ –Ω–∞ –≤–∫–ª–∞–¥—Ü—ñ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏, –æ–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥—Ä–∞–∑—É,
                    // —ñ–Ω–∞–∫—à–µ –≤—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –ø—Ä–∞–ø–æ—Ä–µ—Ü—å –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –ø—Ä–∏ –Ω–∞—Å—Ç—É–ø–Ω–æ–º—É –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—ñ
                    if (WinixRaffles.state.activeTab === 'stats') {
                        this.updateTimer = setTimeout(() => {
                            if (this.needsUpdate) {
                                this.loadStatistics(true);
                                this.needsUpdate = false;
                            }
                        }, 2000); // –ó–∞—Ç—Ä–∏–º–∫–∞ —É 2 —Å–µ–∫—É–Ω–¥–∏
                    }
                }
            });

            // –û–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ—ó —É—Å–ø—ñ—à–Ω–æ—ó —É—á–∞—Å—Ç—ñ –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ
            document.addEventListener('raffle-participation', (event) => {
                if (event.detail && event.detail.successful) {
                    // –í–ò–ü–†–ê–í–õ–ï–ù–ù–Ø: –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –ø—Ä–∞–ø–æ—Ä—Ü—ñ
                    this.needsUpdate = true;
                    this.forceUpdateOnNextShow = true;

                    // –Ø–∫—â–æ –º–∏ –Ω–∞ –≤–∫–ª–∞–¥—Ü—ñ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏, –æ–Ω–æ–≤–ª—é—î–º–æ —á–µ—Ä–µ–∑ –ø–µ–≤–Ω–∏–π —á–∞—Å
                    if (WinixRaffles.state.activeTab === 'stats') {
                        if (this.updateTimer) {
                            clearTimeout(this.updateTimer);
                        }

                        // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Ç–∞–π–º–µ—Ä –Ω–∞ 3 —Å–µ–∫—É–Ω–¥–∏ –¥–ª—è –¥–æ–∑–≤–æ–ª–µ–Ω–Ω—è —Å–µ—Ä–≤–µ—Ä—É –æ–Ω–æ–≤–∏—Ç–∏ –¥–∞–Ω—ñ
                        this.updateTimer = setTimeout(() => {
                            this.loadStatistics(true);
                            this.needsUpdate = false;
                        }, 3000);
                    }
                }
            });

            // –û–±—Ä–æ–±–Ω–∏–∫ –≤–∏–¥–∏–º–æ—Å—Ç—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –ø—Ä–∏ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—ñ
            document.addEventListener('visibilitychange', () => {
                if (document.visibilityState === 'visible' &&
                    WinixRaffles.state.activeTab === 'stats') {

                    const now = Date.now();
                    // –í–ò–ü–†–ê–í–õ–ï–ù–ù–Ø: –ü—Ä–∏–º—É—Å–æ–≤–æ –æ–Ω–æ–≤–ª—é–≤–∞—Ç–∏ —è–∫—â–æ –º–∏–Ω—É–ª–æ –±—ñ–ª—å—à–µ 5 —Ö–≤–∏–ª–∏–Ω –∞–±–æ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –ø—Ä–∞–ø–æ—Ä–µ—Ü—å
                    if (this.forceUpdateOnNextShow || now - this.lastUpdate > 300000) { // 5 —Ö–≤–∏–ª–∏–Ω
                        this.loadStatistics(true);
                        this.forceUpdateOnNextShow = false;
                    }
                }
            });

            // –ö–Ω–æ–ø–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
            const refreshButton = document.getElementById('refresh-stats-button');
            if (refreshButton) {
                refreshButton.addEventListener('click', () => {
                    this.loadStatistics(true);
                });
            }
        },

        // –í—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∑ –∫–µ—à—É
        restoreFromCache: function() {
            try {
                const cachedStats = localStorage.getItem('winix_raffle_statistics');
                if (cachedStats) {
                    const parsedStats = JSON.parse(cachedStats);
                    if (parsedStats && parsedStats.timestamp && parsedStats.data) {
                        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∞–∫—Ç—É–∞–ª—å–Ω—ñ—Å—Ç—å –¥–∞–Ω–∏—Ö
                        const now = Date.now();
                        const cacheAge = now - parsedStats.timestamp;

                        if (cacheAge < 3600000) { // 1 –≥–æ–¥–∏–Ω–∞
                            console.log('üìä –í—ñ–¥–Ω–æ–≤–ª–µ–Ω–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∑ –∫–µ—à—É');
                            this.statsData = parsedStats.data;
                            this.lastUpdate = parsedStats.timestamp;

                            // –¢–∞–∫–æ–∂ –≤—ñ–¥–Ω–æ–≤–ª—é—î–º–æ —ñ—Å—Ç–æ—Ä—ñ—é, —è–∫—â–æ –≤–æ–Ω–∞ —î
                            if (parsedStats.history) {
                                this.statsHistory = parsedStats.history;
                            }

                            return true;
                        }
                    }
                }
            } catch (e) {
                console.warn('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∑ –∫–µ—à—É:', e);
            }

            return false;
        },

        // –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö —É –∫–µ—à
        saveToCache: function() {
            try {
                const cacheData = {
                    timestamp: this.lastUpdate,
                    data: this.statsData,
                    history: this.statsHistory
                };

                localStorage.setItem('winix_raffle_statistics', JSON.stringify(cacheData));
            } catch (e) {
                console.warn('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –≤ –∫–µ—à:', e);
            }
        },

        // –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
        loadStatistics: async function(forceRefresh = false) {
            // –ó–∞–ø–æ–±—ñ–≥–∞—î–º–æ –ø–∞—Ä–∞–ª–µ–ª—å–Ω–∏–º –∑–∞–ø–∏—Ç–∞–º
            if (this.isLoading) {
                console.log('üìä –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –≤–∂–µ –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è...');
                return;
            }

            const userId = WinixRaffles.state.telegramId ||
                          (window.WinixAPI && typeof window.WinixAPI.getUserId === 'function' ?
                           window.WinixAPI.getUserId() : null);

            if (!userId) {
                console.error('‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–∑–Ω–∞—á–∏—Ç–∏ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏');
                this.renderEmptyStatistics();
                return;
            }

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –ø–æ—Ç—Ä—ñ–±–Ω–æ –æ–Ω–æ–≤–ª—é–≤–∞—Ç–∏ –∫–µ—à
            const now = Date.now();
            if (!forceRefresh && now - this.lastUpdate < this.cacheInterval && this.statsData) {
                console.log('üìä –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∫–µ—à–æ–≤–∞–Ω—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤');
                this.renderStatistics(this.statsData);
                return;
            }

            this.isLoading = true;
            this.hasLoadingErrors = false;

            // –ü–æ–∫–∞–∑—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –≤ –±–ª–æ–∫–∞—Ö —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
            this.showLoadingState();

            try {
                console.log('üìä –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤...');

                // –í–ò–ü–†–ê–í–õ–ï–ù–ù–Ø: –î–æ–¥–∞–Ω–æ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑–∞–ø–∏—Ç—É –¥–ª—è –æ–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—ó
                const requestOptions = {
                    method: 'GET',
                    timeout: 10000,
                    cache: 'no-cache',
                    headers: {
                        'Cache-Control': 'no-cache',
                        'Pragma': 'no-cache',
                        'X-Timestamp': now // –î–æ–¥–∞—î–º–æ –≤–∏–ø–∞–¥–∫–æ–≤–∏–π –ø–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è —É–Ω–∏–∫–Ω–µ–Ω–Ω—è –∫–µ—à—É–≤–∞–Ω–Ω—è
                    }
                };

                // –í–∏–∫–æ–Ω—É—î–º–æ –∑–∞–ø–∏—Ç —ñ–∑ –∑–∞—Ö–∏—Å—Ç–æ–º –≤—ñ–¥ –ø–æ–º–∏–ª–æ–∫
                let response;

                // –°–ø–æ—á–∞—Ç–∫—É —Å–ø—Ä–æ–±—É—î–º–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ –ø–æ–≤–Ω—ñ –¥–∞–Ω—ñ –ø—Ä–æ—Ñ—ñ–ª—é –∑ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ—é
                if (typeof window.WinixAPI !== 'undefined' && typeof window.WinixAPI.getUserData === 'function') {
                    response = await window.WinixAPI.getUserData(true, requestOptions);
                } else {
                    // –ó–∞–ø–∞—Å–Ω–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç —á–µ—Ä–µ–∑ –ø—Ä—è–º–∏–π –∑–∞–ø–∏—Ç
                    response = await this.fallbackStatisticsRequest(userId, requestOptions);
                }

                // –û–±—Ä–æ–±–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É
                if (response && response.status === 'success' && response.data) {
                    // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —ñ –æ–±—Ä–æ–±–ª—è—î–º–æ –¥–∞–Ω—ñ
                    this.processStatisticsData(response.data, now);
                } else if (response && response.status === 'error') {
                    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', response.message);
                    this.hasLoadingErrors = true;

                    // –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞, —è–∫—â–æ —Ü–µ –Ω–µ –ø—Ä–æ—Å—Ç–æ —Ç–∞–π–º-–∞—É—Ç –∞–±–æ –≤—ñ–¥—Å—É—Ç–Ω—ñ—Å—Ç—å —ñ–Ω—Ç–µ—Ä–Ω–µ—Ç—É
                    if (response.message &&
                        !response.message.includes('timeout') &&
                        !response.message.includes('network')) {
                        this.showErrorMessage(response.message);
                    }

                    // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∫–µ—à–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ
                    if (this.statsData) {
                        this.renderStatistics(this.statsData);
                    } else {
                        this.renderEmptyStatistics('–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö');
                    }
                } else {
                    console.error('‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ:', response);
                    this.hasLoadingErrors = true;

                    // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∫–µ—à–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ –∞–±–æ –ø–æ–∫–∞–∑—É—î–º–æ –ø—É—Å—Ç—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
                    if (this.statsData) {
                        this.renderStatistics(this.statsData);
                    } else {
                        this.renderEmptyStatistics('–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ');
                    }
                }
            } catch (error) {
                console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤:', error);
                this.hasLoadingErrors = true;

                // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∫–µ—à–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ –∞–±–æ –ø–æ–∫–∞–∑—É—î–º–æ –ø—É—Å—Ç—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
                if (this.statsData) {
                    this.renderStatistics(this.statsData);
                } else {
                    this.renderEmptyStatistics('–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö');
                }
            } finally {
                this.isLoading = false;

                // –ü—Ä–∏—Ö–æ–≤—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
                this.hideLoadingState();
            }
        },

        // –ó–∞–ø–∞—Å–Ω–∏–π –∑–∞–ø–∏—Ç –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        fallbackStatisticsRequest: async function(userId, options = {}) {
            if (!userId) return null;

            try {
                const endpoint = `/api/user/${userId}/statistics`;

                if (typeof window.WinixAPI !== 'undefined' && typeof window.WinixAPI.apiRequest === 'function') {
                    // –í–ò–ü–†–ê–í–õ–ï–ù–ù–Ø: –ü–µ—Ä–µ–¥–∞—î–º–æ –¥–æ–¥–∞—Ç–∫–æ–≤—ñ –æ–ø—Ü—ñ—ó –¥–ª—è –∑–∞–ø–∏—Ç—É
                    return await window.WinixAPI.apiRequest(endpoint, 'GET', null, {
                        suppressErrors: true,
                        hideLoader: true,
                        timeout: 10000,
                        headers: options.headers || {},
                        cache: 'no-cache'
                    });
                } else {
                    // –ü—Ä—è–º–∏–π –∑–∞–ø–∏—Ç —á–µ—Ä–µ–∑ fetch, —è–∫—â–æ WinixAPI –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π
                    const fetchOptions = {
                        method: 'GET',
                        cache: 'no-cache',
                        headers: options.headers || {}
                    };

                    const response = await fetch(endpoint, fetchOptions);
                    return await response.json();
                }
            } catch (error) {
                console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø–∞—Å–Ω–æ–≥–æ –∑–∞–ø–∏—Ç—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error);
                return {
                    status: 'error',
                    message: error.message || '–ü–æ–º–∏–ª–∫–∞ –∑–∞–ø–∏—Ç—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏'
                };
            }
        },

        // –û–±—Ä–æ–±–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–∏—Ö –¥–∞–Ω–∏—Ö —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        processStatisticsData: function(data, timestamp) {
            if (!data) return;

            // –°—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ—Ä–º–∞–ª—ñ–∑–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
            const normalizedData = {
                participations_count: 0,
                wins_count: 0,
                total_winnings: 0,
                tokens_spent: 0,
                win_rate: 0,
                activity_data: [],
                last_participation: null,
                last_win: null
            };

            // –ó–∞–ø–æ–≤–Ω—é—î–º–æ –æ—Å–Ω–æ–≤–Ω—ñ –ø–æ–∫–∞–∑–Ω–∏–∫–∏
            if (data.participations_count !== undefined) {
                normalizedData.participations_count = data.participations_count;
            } else if (data.totalParticipations !== undefined) {
                normalizedData.participations_count = data.totalParticipations;
            }

            if (data.wins_count !== undefined) {
                normalizedData.wins_count = data.wins_count;
            } else if (data.totalWins !== undefined) {
                normalizedData.wins_count = data.totalWins;
            }

            if (data.total_winnings !== undefined) {
                normalizedData.total_winnings = data.total_winnings;
            } else if (data.totalWinnings !== undefined) {
                normalizedData.total_winnings = data.totalWinnings;
            } else if (normalizedData.wins_count > 0) {
                // –Ø–∫—â–æ –Ω–µ–º–∞—î –ø—Ä—è–º–∏—Ö –¥–∞–Ω–∏—Ö, —Ä–æ–±–∏–º–æ —Ä–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –Ω–∞ –æ—Å–Ω–æ–≤—ñ –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –ø–µ—Ä–µ–º–æ–≥
                // –∑ —Å–µ—Ä–µ–¥–Ω—ñ–º –ø—Ä–∏–∑–æ–º 15000 WINIX –∑–∞ –ø–µ—Ä–µ–º–æ–≥—É
                normalizedData.total_winnings = normalizedData.wins_count * 15000;
            }

            if (data.tokens_spent !== undefined) {
                normalizedData.tokens_spent = data.tokens_spent;
            } else if (data.tokensSpent !== undefined) {
                normalizedData.tokens_spent = data.tokensSpent;
            } else if (normalizedData.participations_count > 0) {
                // –ü—Ä–∏–±–ª–∏–∑–Ω–∏–π —Ä–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –≤–∏—Ç—Ä–∞—á–µ–Ω–∏—Ö –∂–µ—Ç–æ–Ω—ñ–≤
                // –í —Å–µ—Ä–µ–¥–Ω—å–æ–º—É 2 –∂–µ—Ç–æ–Ω–∏ –∑–∞ —É—á–∞—Å—Ç—å
                normalizedData.tokens_spent = normalizedData.participations_count * 2;
            }

            // –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –≤—ñ–¥—Å–æ—Ç–∫–∞ –ø–µ—Ä–µ–º–æ–≥
            if (normalizedData.participations_count > 0) {
                normalizedData.win_rate = (normalizedData.wins_count / normalizedData.participations_count) * 100;
            }

            // –û–±—Ä–æ–±–∫–∞ –¥–∞–Ω–∏—Ö –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ, —è–∫—â–æ –≤–æ–Ω–∏ —î
            if (data.activity_data && Array.isArray(data.activity_data)) {
                normalizedData.activity_data = data.activity_data;
            } else if (data.activityData && Array.isArray(data.activityData)) {
                normalizedData.activity_data = data.activityData;
            } else {
                // –Ø–∫—â–æ –Ω–µ–º–∞—î –¥–∞–Ω–∏—Ö –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ, —Å—Ç–≤–æ—Ä—é—î–º–æ –≤–∏–ø–∞–¥–∫–æ–≤—ñ –¥–∞–Ω—ñ –¥–ª—è –≥—Ä–∞—Ñ—ñ–∫–∞
                // –¶–µ —Ç–∏–º—á–∞—Å–æ–≤–µ —Ä—ñ—à–µ–Ω–Ω—è, –≤ —Ä–µ–∞–ª—å–Ω—ñ–π —Å–∏—Å—Ç–µ–º—ñ –ø–æ—Ç—Ä—ñ–±–Ω–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ —Å–ø—Ä–∞–≤–∂–Ω—ñ –¥–∞–Ω—ñ
                normalizedData.activity_data = this.generateSampleActivityData(normalizedData.participations_count);
            }

            // –î–∞–Ω—ñ –ø—Ä–æ –æ—Å—Ç–∞–Ω–Ω—ñ –ø–æ–¥—ñ—ó
            if (data.last_participation) {
                normalizedData.last_participation = data.last_participation;
            }

            if (data.last_win) {
                normalizedData.last_win = data.last_win;
            }

            // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –æ–±—Ä–æ–±–ª–µ–Ω—ñ –¥–∞–Ω—ñ
            this.statsData = normalizedData;
            this.lastUpdate = timestamp || Date.now();

            // –û–Ω–æ–≤–ª—é—î–º–æ —ñ—Å—Ç–æ—Ä—ñ—é –ø–æ–∫–∞–∑–Ω–∏–∫—ñ–≤ –¥–ª—è –≥—Ä–∞—Ñ—ñ–∫—ñ–≤
            this.updateStatsHistory(normalizedData);

            // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —É –∫–µ—à
            this.saveToCache();

            // –í—ñ–¥–æ–±—Ä–∞–∂–∞—î–º–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            this.renderStatistics(normalizedData);
        },

        // –û–Ω–æ–≤–ª–µ–Ω–Ω—è —ñ—Å—Ç–æ—Ä—ñ—ó —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–ª—è –≥—Ä–∞—Ñ—ñ–∫—ñ–≤
        updateStatsHistory: function(newData) {
            if (!newData) return;

            // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∏–π —Ä–æ–∑–º—ñ—Ä —ñ—Å—Ç–æ—Ä—ñ—ó - 10 –∑–∞–ø–∏—Å—ñ–≤
            const MAX_HISTORY_SIZE = 10;

            // –°—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤–∏–π –∑–∞–ø–∏—Å –∑ –ø–æ—Ç–æ—á–Ω–æ—é –¥–∞—Ç–æ—é
            const newEntry = {
                timestamp: Date.now(),
                participations: newData.participations_count,
                wins: newData.wins_count,
                winnings: newData.total_winnings,
                tokens: newData.tokens_spent
            };

            // –î–æ–¥–∞—î–º–æ –∑–∞–ø–∏—Å –¥–æ —ñ—Å—Ç–æ—Ä—ñ—ó
            this.statsHistory.push(newEntry);

            // –û–±–º–µ–∂—É—î–º–æ —Ä–æ–∑–º—ñ—Ä —ñ—Å—Ç–æ—Ä—ñ—ó
            if (this.statsHistory.length > MAX_HISTORY_SIZE) {
                this.statsHistory = this.statsHistory.slice(-MAX_HISTORY_SIZE);
            }
        },

        // –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑—Ä–∞–∑–∫–æ–≤–∏—Ö –¥–∞–Ω–∏—Ö –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ (–¥–ª—è —Ç–∏–º—á–∞—Å–æ–≤–æ–≥–æ —Ä—ñ—à–µ–Ω–Ω—è)
        generateSampleActivityData: function(totalParticipations) {
            const data = [];

            // –ö—ñ–ª—å–∫—ñ—Å—Ç—å –∑—Ä–∞–∑–∫–æ–≤–∏—Ö –¥–∞–Ω–∏—Ö
            const DAYS_COUNT = 7;

            // –Ø–∫—â–æ –Ω–µ–º–∞—î —É—á–∞—Å—Ç–µ–π, –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ –ø–æ—Ä–æ–∂–Ω—ñ–π –º–∞—Å–∏–≤
            if (!totalParticipations || totalParticipations <= 0) {
                return Array(DAYS_COUNT).fill(0).map((_, i) => ({
                    day: this.getDayName(i),
                    count: 0
                }));
            }

            // –†–æ–∑–ø–æ–¥—ñ–ª—è—î–º–æ –∑–∞–≥–∞–ª—å–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å —É—á–∞—Å—Ç–µ–π –Ω–∞ –æ—Å—Ç–∞–Ω–Ω—ñ 7 –¥–Ω—ñ–≤
            // –∑ –≤–∏–ø–∞–¥–∫–æ–≤–∏–º —Ä–æ–∑–ø–æ–¥—ñ–ª–æ–º
            let remaining = totalParticipations;

            for (let i = 0; i < DAYS_COUNT - 1; i++) {
                // –í–∏–ø–∞–¥–∫–æ–≤–∞ —á–∞—Å—Ç–∫–∞ –≤—ñ–¥ –∑–∞–ª–∏—à–∫—É, –∞–ª–µ –Ω–µ –±—ñ–ª—å—à–µ 80%
                const maxShare = Math.min(0.8, (DAYS_COUNT - i - 1) / (DAYS_COUNT - i));
                const share = Math.random() * maxShare;

                const count = Math.round(remaining * share);
                remaining -= count;

                data.push({
                    day: this.getDayName(i),
                    count: count
                });
            }

            // –û—Å—Ç–∞–Ω–Ω—ñ–π –¥–µ–Ω—å –æ—Ç—Ä–∏–º—É—î –∑–∞–ª–∏—à–æ–∫
            data.push({
                day: this.getDayName(DAYS_COUNT - 1),
                count: remaining
            });

            return data;
        },

        // –û—Ç—Ä–∏–º–∞–Ω–Ω—è –Ω–∞–∑–≤–∏ –¥–Ω—è —Ç–∏–∂–Ω—è –∑–∞ —ñ–Ω–¥–µ–∫—Å–æ–º
        getDayName: function(index) {
            const today = new Date();
            const targetDate = new Date(today);

            // –û–±—á–∏—Å–ª—é—î–º–æ –¥–∞—Ç—É, –≤—ñ–¥–Ω—ñ–º–∞—é—á–∏ –ø–æ—Ç—Ä—ñ–±–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å –¥–Ω—ñ–≤
            targetDate.setDate(today.getDate() - (6 - index));

            // –û—Ç—Ä–∏–º—É—î–º–æ –¥–µ–Ω—å —Ç–∏–∂–Ω—è
            const dayOfWeek = targetDate.getDay();

            // –õ–æ–∫–∞–ª—ñ–∑–æ–≤–∞–Ω—ñ –Ω–∞–∑–≤–∏ –¥–Ω—ñ–≤
            const dayNames = ['–ù–¥', '–ü–Ω', '–í—Ç', '–°—Ä', '–ß—Ç', '–ü—Ç', '–°–±'];
            return dayNames[dayOfWeek];
        },

        // –ü–æ–∫–∞–∑ —Å—Ç–∞–Ω—É –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –≤ –µ–ª–µ–º–µ–Ω—Ç–∞—Ö —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        showLoadingState: function() {
            // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –∫–ª–∞—Å loading –¥–ª—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
            document.querySelectorAll('.stat-value').forEach(element => {
                element.classList.add('loading');
                element.setAttribute('data-original-value', element.textContent);
                element.textContent = '¬∑¬∑¬∑';
            });

            // –î–æ–¥–∞—î–º–æ –∫–ª–∞—Å loading –¥–ª—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –≥—Ä–∞—Ñ—ñ–∫–∞
            const chartContainer = document.querySelector('.chart-container');
            if (chartContainer) {
                chartContainer.classList.add('loading');
            }
        },

        // –ü—Ä–∏—Ö–æ–≤—É–≤–∞–Ω–Ω—è —Å—Ç–∞–Ω—É –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
        hideLoadingState: function() {
            // –í–∏–¥–∞–ª—è—î–º–æ –∫–ª–∞—Å loading –∑ –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
            document.querySelectorAll('.stat-value.loading').forEach(element => {
                element.classList.remove('loading');

                // –í—ñ–¥–Ω–æ–≤–ª—é—î–º–æ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è, —è–∫—â–æ –Ω–µ –±—É–ª–æ –æ–Ω–æ–≤–ª–µ–Ω—å
                const originalValue = element.getAttribute('data-original-value');
                if (originalValue && element.textContent === '¬∑¬∑¬∑') {
                    element.textContent = originalValue;
                }

                element.removeAttribute('data-original-value');
            });

            // –í–∏–¥–∞–ª—è—î–º–æ –∫–ª–∞—Å loading –∑ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –≥—Ä–∞—Ñ—ñ–∫–∞
            const chartContainer = document.querySelector('.chart-container');
            if (chartContainer) {
                chartContainer.classList.remove('loading');
            }
        },

        // –ü–æ–∫–∞–∑ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É
        showErrorMessage: function(message) {
            // –Ø–∫—â–æ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è showToast, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —ó—ó
            if (typeof window.showToast === 'function') {
                window.showToast(message, 'error');
                return;
            }

            // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç - —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –≤–ª–∞—Å–Ω–æ–≥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É
            let errorContainer = document.getElementById('stats-error-message');

            if (!errorContainer) {
                errorContainer = document.createElement('div');
                errorContainer.id = 'stats-error-message';
                errorContainer.className = 'stats-error-message';

                // –°—Ç–∏–ª—ñ –¥–ª—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É
                errorContainer.style.cssText = `
                    color: #e74c3c;
                    background-color: rgba(231, 76, 60, 0.1);
                    border-left: 3px solid #e74c3c;
                    padding: 10px 15px;
                    margin: 10px 0;
                    border-radius: 4px;
                    font-size: 14px;
                `;

                // –î–æ–¥–∞—î–º–æ –¥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
                const statsContainer = document.querySelector('.statistics-container');
                if (statsContainer) {
                    statsContainer.prepend(errorContainer);
                } else {
                    // –Ø–∫—â–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ, –¥–æ–¥–∞—î–º–æ –¥–æ —Ç—ñ–ª–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞
                    document.body.prepend(errorContainer);
                }
            }

            // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Ç–µ–∫—Å—Ç –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
            errorContainer.textContent = message || '–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏';

            // –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
            errorContainer.style.display = 'block';

            // –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ —Ö–æ–≤–∞—î–º–æ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
            setTimeout(() => {
                errorContainer.style.display = 'none';
            }, 5000);
        },

        // –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
        renderStatistics: function(userData) {
            if (!userData) {
                this.renderEmptyStatistics();
                return;
            }

            // –û–Ω–æ–≤–ª—é—î–º–æ –∑–Ω–∞—á–µ–Ω–Ω—è –≤ –±–ª–æ–∫–∞—Ö —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∑ –∞–Ω—ñ–º–∞—Ü—ñ—î—é
            this.updateStatValue('total-participated', userData.participations_count || 0);
            this.updateStatValue('total-wins', userData.wins_count || 0);
            this.updateStatValue('total-winix-won', userData.total_winnings || 0);
            this.updateStatValue('total-tokens-spent', userData.tokens_spent || 0);

            // –°—Ç–≤–æ—Ä—é—î–º–æ –≥—Ä–∞—Ñ—ñ–∫ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ
            this.createActivityChart(userData.activity_data);

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –µ–ª–µ–º–µ–Ω—Ç–∞ win-rate —ñ –æ–Ω–æ–≤–ª—é—î–º–æ –π–æ–≥–æ, —è–∫—â–æ –≤—ñ–Ω —î
            const winRateElement = document.getElementById('win-rate');
            if (winRateElement) {
                const winRate = userData.win_rate || 0;
                this.updateStatValue('win-rate', winRate.toFixed(1) + '%');
            }

            // –î–æ–¥–∞—î–º–æ —Å—Ç–∞—Ç—É—Å –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
            this.updateLastUpdateTime();

            // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞—Ç—É—Å –∫–Ω–æ–ø–∫–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
            const refreshButton = document.getElementById('refresh-stats-button');
            if (refreshButton) {
                refreshButton.disabled = false;
                refreshButton.classList.remove('loading');
            }
        },

        // –û–Ω–æ–≤–ª–µ–Ω–Ω—è —á–∞—Å—É –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
        updateLastUpdateTime: function() {
            const lastUpdateElement = document.getElementById('last-update-time');
            if (!lastUpdateElement) return;

            // –§–æ—Ä–º–∞—Ç—É—î–º–æ —á–∞—Å –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
            const now = new Date();
            const lastUpdate = new Date(this.lastUpdate);

            // –Ø–∫—â–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –±—É–ª–æ —Å—å–æ–≥–æ–¥–Ω—ñ, –ø–æ–∫–∞–∑—É—î–º–æ —Ç—ñ–ª—å–∫–∏ —á–∞—Å
            if (now.toDateString() === lastUpdate.toDateString()) {
                const time = lastUpdate.toLocaleTimeString('uk-UA', {
                    hour: '2-digit',
                    minute: '2-digit'
                });
                lastUpdateElement.textContent = '–û–Ω–æ–≤–ª–µ–Ω–æ –æ ' + time;
            } else {
                // –Ü–Ω–∞–∫—à–µ –ø–æ–∫–∞–∑—É—î–º–æ —ñ –¥–∞—Ç—É, —ñ —á–∞—Å
                const dateTime = lastUpdate.toLocaleString('uk-UA', {
                    day: '2-digit',
                    month: '2-digit',
                    hour: '2-digit',
                    minute: '2-digit'
                });
                lastUpdateElement.textContent = '–û–Ω–æ–≤–ª–µ–Ω–æ ' + dateTime;
            }

            // –ü–æ–∫–∞–∑—É—î–º–æ –µ–ª–µ–º–µ–Ω—Ç
            lastUpdateElement.style.display = 'block';

            // –Ø–∫—â–æ –±—É–ª–∏ –ø–æ–º–∏–ª–∫–∏, –¥–æ–¥–∞—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä
            if (this.hasLoadingErrors) {
                lastUpdateElement.classList.add('has-errors');
                lastUpdateElement.title = '–í–∏–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º–∏ –ø—Ä–∏ –æ—Å—Ç–∞–Ω–Ω—å–æ–º—É –æ–Ω–æ–≤–ª–µ–Ω–Ω—ñ –¥–∞–Ω–∏—Ö';
            } else {
                lastUpdateElement.classList.remove('has-errors');
                lastUpdateElement.title = '';
            }
        },

        // –û–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–Ω–∞—á–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∑ –∞–Ω—ñ–º–∞—Ü—ñ—î—é
        updateStatValue: function(elementId, value) {
            const element = document.getElementById(elementId);
            if (!element) return;

            // –û—Ç—Ä–∏–º—É—î–º–æ –ø–æ—Ç–æ—á–Ω–µ —Ç–∞ –Ω–æ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è
            const currentValue = parseInt(element.textContent.replace(/\s+/g, '')) || 0;
            const newValue = typeof value === 'number' ? value : parseInt(value) || 0;

            // –Ø–∫—â–æ –∑–Ω–∞—á–µ–Ω–Ω—è –∑–º—ñ–Ω–∏–ª–æ—Å—è, –∑–∞–ø—É—Å–∫–∞—î–º–æ –∞–Ω—ñ–º–∞—Ü—ñ—é
            if (currentValue !== newValue) {
                // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ø–æ—á–∞—Ç–∫–æ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è
                const startValue = currentValue;

                // –í–∏–∑–Ω–∞—á–∞—î–º–æ –∫—Ä–æ–∫ –∞–Ω—ñ–º–∞—Ü—ñ—ó
                const diff = newValue - startValue;
                const duration = 1000; // –º—Å
                const steps = 20;
                const step = diff / steps;

                // –ê–Ω—ñ–º—É—î–º–æ –∑–º—ñ–Ω—É
                let currentStep = 0;
                const animationInterval = setInterval(() => {
                    currentStep++;

                    if (currentStep >= steps) {
                        clearInterval(animationInterval);
                        // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –∫—ñ–Ω—Ü–µ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è –∑ —Ñ–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è–º
                        element.textContent = this.formatNumber(newValue);
                        element.classList.add('stat-updated');

                        // –í–∏–¥–∞–ª—è—î–º–æ –∫–ª–∞—Å —á–µ—Ä–µ–∑ 1 —Å–µ–∫—É–Ω–¥—É
                        setTimeout(() => {
                            element.classList.remove('stat-updated');
                        }, 1000);
                    } else {
                        // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –ø—Ä–æ–º—ñ–∂–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è
                        const intermediateValue = Math.round(startValue + step * currentStep);
                        element.textContent = this.formatNumber(intermediateValue);
                    }
                }, duration / steps);
            } else {
                // –Ø–∫—â–æ –∑–Ω–∞—á–µ–Ω–Ω—è –Ω–µ –∑–º—ñ–Ω–∏–ª–æ—Å—è, –ø—Ä–æ—Å—Ç–æ —Ñ–æ—Ä–º–∞—Ç—É—î–º–æ –π–æ–≥–æ
                element.textContent = this.formatNumber(newValue);
            }
        },

        // –§–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è —á–∏—Å–ª–∞ –∑ —Ä–æ–∑–¥—ñ–ª—é–≤–∞—á–∞–º–∏ —Ä–æ–∑—Ä—è–¥—ñ–≤
        formatNumber: function(num) {
            return num.toString().replace(/\B(?=(\d{3})+(?!\d))/g, " ");
        },

        // –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –≥—Ä–∞—Ñ—ñ–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ
        createActivityChart: function(activityData) {
            const chartContainer = document.querySelector('.chart-container');
            if (!chartContainer) return;

            // –Ø–∫—â–æ –Ω–µ–º–∞—î –¥–∞–Ω–∏—Ö –¥–ª—è –≥—Ä–∞—Ñ—ñ–∫–∞, –ø–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
            if (!activityData || !Array.isArray(activityData) || activityData.length === 0) {
                chartContainer.innerHTML = '<div class="chart-placeholder">–ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –¥–∞–Ω–∏—Ö –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –≥—Ä–∞—Ñ—ñ–∫—É –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ</div>';
                return;
            }

            // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è –¥–ª—è –º–∞—Å—à—Ç–∞–±—É–≤–∞–Ω–Ω—è
            const maxValue = Math.max(...activityData.map(item => item.count || 0));

            // –Ø–∫—â–æ –Ω–µ–º–∞—î –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ, –ø–æ–∫–∞–∑—É—î–º–æ –ø–æ—Ä–æ–∂–Ω—ñ–π –≥—Ä–∞—Ñ—ñ–∫
            if (maxValue === 0) {
                chartContainer.innerHTML = '<div class="chart-placeholder">–ù–µ–º–∞—î –¥–∞–Ω–∏—Ö –ø—Ä–æ –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å</div>';
                return;
            }

            // –û—á–∏—â–∞—î–º–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
            chartContainer.innerHTML = '';

            // –°—Ç–≤–æ—Ä—é—î–º–æ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –≥—Ä–∞—Ñ—ñ–∫–∞
            const chartTitle = document.createElement('div');
            chartTitle.className = 'chart-title';
            chartTitle.textContent = '–ê–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å –∑–∞ –æ—Å—Ç–∞–Ω–Ω—ñ–π —Ç–∏–∂–¥–µ–Ω—å';
            chartContainer.appendChild(chartTitle);

            // –°—Ç–≤–æ—Ä—é—î–º–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Å—Ç–æ–≤–ø—Ü—ñ–≤
            const barsContainer = document.createElement('div');
            barsContainer.className = 'chart-bars-container';
            chartContainer.appendChild(barsContainer);

            // –î–æ–¥–∞—î–º–æ –∫–æ–∂–µ–Ω —Å—Ç–æ–≤–ø–µ—Ü—å
            activityData.forEach(item => {
                // –°—Ç–≤–æ—Ä—é—î–º–æ –≥—Ä—É–ø—É –¥–ª—è —Å—Ç–æ–≤–ø—Ü—è
                const barGroup = document.createElement('div');
                barGroup.className = 'chart-bar-group';

                // –°—Ç–≤–æ—Ä—é—î–º–æ —Å—Ç–æ–≤–ø–µ—Ü—å
                const bar = document.createElement('div');
                bar.className = 'chart-bar';

                // –û–±—á–∏—Å–ª—é—î–º–æ –≤–∏—Å–æ—Ç—É —Å—Ç–æ–≤–ø—Ü—è (—É –≤—ñ–¥—Å–æ—Ç–∫–∞—Ö –≤—ñ–¥ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–Ω—è)
                const heightPercent = Math.max(5, (item.count / maxValue) * 100);
                bar.style.height = `${heightPercent}%`;

                // –î–æ–¥–∞—î–º–æ –∞–Ω—ñ–º–∞—Ü—ñ—é –ø–æ—è–≤–∏
                bar.style.animation = 'grow-up 1s ease-out';

                // –î–æ–¥–∞—î–º–æ –∞—Ç—Ä–∏–±—É—Ç –∑ –∫—ñ–ª—å–∫—ñ—Å—Ç—é –¥–ª—è –ø—ñ–¥–∫–∞–∑–∫–∏
                bar.setAttribute('data-count', item.count);

                // –î–æ–¥–∞—î–º–æ –ø—ñ–¥–ø–∏—Å
                const label = document.createElement('div');
                label.className = 'chart-label';
                label.textContent = item.day;

                // –î–æ–¥–∞—î–º–æ —Å—Ç–æ–≤–ø–µ—Ü—å —ñ –ø—ñ–¥–ø–∏—Å –¥–æ –≥—Ä—É–ø–∏
                barGroup.appendChild(bar);
                barGroup.appendChild(label);

                // –î–æ–¥–∞—î–º–æ –≥—Ä—É–ø—É –¥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
                barsContainer.appendChild(barGroup);
            });
        },

        // –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –ø–æ—Ä–æ–∂–Ω—å–æ—ó —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        renderEmptyStatistics: function(errorMessage = null) {
            // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –Ω—É–ª—å–æ–≤—ñ –∑–Ω–∞—á–µ–Ω–Ω—è –¥–ª—è –≤—Å—ñ—Ö –ø–æ–ª—ñ–≤ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
            this.updateStatValue('total-participated', 0);
            this.updateStatValue('total-wins', 0);
            this.updateStatValue('total-winix-won', 0);
            this.updateStatValue('total-tokens-spent', 0);

            // –Ø–∫—â–æ —î win-rate, –æ–Ω–æ–≤–ª—é—î–º–æ —ñ –π–æ–≥–æ
            const winRateElement = document.getElementById('win-rate');
            if (winRateElement) {
                this.updateStatValue('win-rate', '0.0%');
            }

            // –û–Ω–æ–≤–ª—é—î–º–æ –≥—Ä–∞—Ñ—ñ–∫
            const chartContainer = document.querySelector('.chart-container');
            if (chartContainer) {
                // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ –ø–æ–º–∏–ª–∫–∏
                if (errorMessage) {
                    chartContainer.innerHTML = `<div class="chart-placeholder error">${errorMessage}</div>`;
                } else {
                    chartContainer.innerHTML = '<div class="chart-placeholder">–ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –¥–∞–Ω–∏—Ö –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –≥—Ä–∞—Ñ—ñ–∫—É –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ</div>';
                }
            }

            // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞—Ç—É—Å –∫–Ω–æ–ø–∫–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
            const refreshButton = document.getElementById('refresh-stats-button');
            if (refreshButton) {
                refreshButton.disabled = false;
                refreshButton.classList.remove('loading');
            }
        },

        // –Ü–Ω'—î–∫—Ü—ñ—è —Å—Ç–∏–ª—ñ–≤ –¥–ª—è –≥—Ä–∞—Ñ—ñ–∫—ñ–≤
        injectChartStyles: function() {
            if (document.getElementById('statistics-chart-styles')) return;

            const style = document.createElement('style');
            style.id = 'statistics-chart-styles';
            style.textContent = `
                /* –°—Ç–∏–ª—ñ –¥–ª—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –≥—Ä–∞—Ñ—ñ–∫–∞ */
                .chart-container {
                    height: 200px;
                    margin: 20px 0;
                    padding: 15px;
                    background-color: rgba(30, 39, 70, 0.5);
                    border-radius: 10px;
                    position: relative;
                    transition: opacity 0.3s ease;
                }
                
                .chart-container.loading {
                    opacity: 0.5;
                }
                
                /* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –≥—Ä–∞—Ñ—ñ–∫–∞ */
                .chart-title {
                    text-align: center;
                    color: #fff;
                    margin-bottom: 10px;
                    font-size: 14px;
                    font-weight: 500;
                }
                
                /* –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Å—Ç–æ–≤–ø—Ü—ñ–≤ */
                .chart-bars-container {
                    display: flex;
                    justify-content: space-around;
                    align-items: flex-end;
                    height: 150px;
                }
                
                /* –ì—Ä—É–ø–∞ –¥–ª—è —Å—Ç–æ–≤–ø—Ü—è —ñ –ø—ñ–¥–ø–∏—Å—É */
                .chart-bar-group {
                    display: flex;
                    flex-direction: column;
                    align-items: center;
                    width: calc(100% / 8);
                    height: 100%;
                    position: relative;
                }
                
                /* –°—Ç–æ–≤–ø–µ—Ü—å –≥—Ä–∞—Ñ—ñ–∫–∞ */
                .chart-bar {
                    width: 80%;
                    background: linear-gradient(to top, rgba(78, 181, 247, 0.8), rgba(0, 201, 167, 0.8));
                    border-radius: 4px 4px 0 0;
                    transition: height 0.5s ease;
                    position: relative;
                }
                
                /* –ü—ñ–¥–ø–∏—Å –ø—ñ–¥ —Å—Ç–æ–≤–ø—Ü–µ–º */
                .chart-label {
                    margin-top: 5px;
                    color: rgba(255, 255, 255, 0.8);
                    font-size: 12px;
                }
                
                /* –ü—ñ–¥–∫–∞–∑–∫–∞ –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–Ω—ñ */
                .chart-bar::before {
                    content: attr(data-count);
                    position: absolute;
                    top: -25px;
                    left: 50%;
                    transform: translateX(-50%);
                    background: rgba(0, 0, 0, 0.7);
                    color: white;
                    padding: 2px 6px;
                    border-radius: 4px;
                    font-size: 12px;
                    opacity: 0;
                    transition: opacity 0.3s;
                    pointer-events: none;
                    white-space: nowrap;
                }
                
                .chart-bar:hover::before {
                    opacity: 1;
                }
                
                /* –ê–Ω—ñ–º–∞—Ü—ñ—è —Ä–æ—Å—Ç—É —Å—Ç–æ–≤–ø—Ü—è */
                @keyframes grow-up {
                    from { height: 0; }
                    to { height: var(--height); }
                }
                
                /* –ö–æ–ª–∏ –Ω–µ–º–∞—î –¥–∞–Ω–∏—Ö –¥–ª—è –≥—Ä–∞—Ñ—ñ–∫–∞ */
                .chart-placeholder {
                    position: absolute;
                    top: 50%;
                    left: 50%;
                    transform: translate(-50%, -50%);
                    color: rgba(255, 255, 255, 0.6);
                    text-align: center;
                    font-size: 14px;
                    width: 80%;
                }
                
                .chart-placeholder.error {
                    color: rgba(231, 76, 60, 0.8);
                }
                
                /* –°—Ç–∏–ª—ñ –¥–ª—è –∞–Ω—ñ–º–∞—Ü—ñ—ó –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–Ω–∞—á–µ–Ω—å */
                @keyframes stat-pulse {
                    0% { transform: scale(1); }
                    50% { transform: scale(1.05); }
                    100% { transform: scale(1); }
                }
                
                .stat-updated {
                    animation: stat-pulse 0.5s ease-in-out;
                    transition: color 0.3s ease;
                    color: rgba(0, 201, 167, 1) !important;
                }
                
                /* –°—Ç–∏–ª—ñ –¥–ª—è –∑–Ω–∞—á–µ–Ω—å –≤ —Å—Ç–∞–Ω—ñ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è */
                .stat-value.loading {
                    opacity: 0.5;
                }
                
                /* –°—Ç–∏–ª—ñ –¥–ª—è —á–∞—Å—É –æ–Ω–æ–≤–ª–µ–Ω–Ω—è */
                #last-update-time {
                    font-size: 12px;
                    color: rgba(255, 255, 255, 0.6);
                    text-align: center;
                    margin-top: 10px;
                }
                
                #last-update-time.has-errors {
                    color: rgba(231, 76, 60, 0.8);
                }
                
                /* –°—Ç–∏–ª—ñ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è */
                #refresh-stats-button {
                    background: linear-gradient(90deg, rgba(78, 181, 247, 0.8), rgba(0, 201, 167, 0.8));
                    border: none;
                    border-radius: 20px;
                    color: white;
                    font-size: 14px;
                    padding: 8px 15px;
                    cursor: pointer;
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    gap: 5px;
                    transition: all 0.3s ease;
                    margin: 10px auto;
                }
                
                #refresh-stats-button:hover {
                    transform: translateY(-2px);
                    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
                }
                
                #refresh-stats-button:disabled {
                    opacity: 0.6;
                    cursor: not-allowed;
                    transform: none;
                    box-shadow: none;
                }
                
                #refresh-stats-button.loading::after {
                    content: "";
                    width: 16px;
                    height: 16px;
                    border: 2px solid rgba(255, 255, 255, 0.3);
                    border-top: 2px solid white;
                    border-radius: 50%;
                    animation: spin 1s linear infinite;
                    margin-left: 5px;
                }
                
                @keyframes spin {
                    0% { transform: rotate(0deg); }
                    100% { transform: rotate(360deg); }
                }
            `;

            document.head.appendChild(style);
        },

        // –û–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        refreshStatistics: function() {
            // –ë–ª–æ–∫—É—î–º–æ –∫–Ω–æ–ø–∫—É –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
            const refreshButton = document.getElementById('refresh-stats-button');
            if (refreshButton) {
                refreshButton.disabled = true;
                refreshButton.classList.add('loading');
            }

            // –ó–∞–ø—É—Å–∫–∞—î–º–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑ –ø—Ä–∏–º—É—Å–æ–≤–∏–º –æ–Ω–æ–≤–ª–µ–Ω–Ω—è–º
            this.loadStatistics(true);
        }
    };

    // –î–æ–¥–∞—î–º–æ –º–æ–¥—É–ª—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–æ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–æ–¥—É–ª—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
    WinixRaffles.statistics = statistics;

    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –º–æ–¥—É–ª—è –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
    document.addEventListener('DOMContentLoaded', function() {
        if (WinixRaffles.state.isInitialized) {
            statistics.init();
        } else {
            // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ—ó —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
            document.addEventListener('winix-raffles-initialized', function() {
                statistics.init();
            });
        }
    });
})();