/**
 * WINIX - –°–∏—Å—Ç–µ–º–∞ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ (statistics.js)
 * –ú–æ–¥—É–ª—å –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑—ñ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ—é —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
 */

(function() {
    'use strict';

    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–æ–¥—É–ª—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
    if (typeof WinixRaffles === 'undefined') {
        console.error('‚ùå WinixRaffles –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ! –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—è, —â–æ core.js –ø—ñ–¥–∫–ª—é—á–µ–Ω–æ —Ä–∞–Ω—ñ—à–µ statistics.js');
        return;
    }

    // –ü—ñ–¥–º–æ–¥—É–ª—å –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
    const statistics = {
        // –î–∞–Ω—ñ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        statsData: null,

        // –û—Å—Ç–∞–Ω–Ω—ñ–π —á–∞—Å –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
        lastUpdate: 0,

        // –Ü–Ω—Ç–µ—Ä–≤–∞–ª –∫–µ—à—É–≤–∞–Ω–Ω—è (5 —Ö–≤–∏–ª–∏–Ω)
        cacheInterval: 5 * 60 * 1000,

        // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –º–æ–¥—É–ª—è
        init: function() {
            console.log('üìä –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –º–æ–¥—É–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤...');

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤—ñ–¥—Ä–∞–∑—É –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            if (WinixRaffles.state.activeTab === 'stats') {
                this.loadStatistics();
            }
        },

        // –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
        loadStatistics: async function(forceRefresh = false) {
            const userId = WinixRaffles.state.telegramId || WinixAPI.getUserId();

            if (!userId) {
                console.error('‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–∑–Ω–∞—á–∏—Ç–∏ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏');
                this.renderEmptyStatistics();
                return;
            }

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –ø–æ—Ç—Ä—ñ–±–Ω–æ –æ–Ω–æ–≤–ª—é–≤–∞—Ç–∏ –∫–µ—à
            const now = Date.now();
            if (!forceRefresh && now - this.lastUpdate < this.cacheInterval && this.statsData) {
                console.log('üìä –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∫–µ—à–æ–≤–∞–Ω—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤');
                this.renderStatistics(this.statsData);
                return;
            }

            window.showLoading();

            try {
                console.log('üìä –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤...');

                // –û—Ç—Ä–∏–º—É—î–º–æ –ø–æ–≤–Ω—ñ –¥–∞–Ω—ñ –ø—Ä–æ—Ñ—ñ–ª—é –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞, —è–∫—ñ –º—ñ—Å—Ç—è—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
                const response = await WinixAPI.getUserData(true);

                window.hideLoading();

                if (response.status === 'success' && response.data) {
                    this.statsData = response.data;
                    this.lastUpdate = now;

                    // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –≤ –ª–æ–∫–∞–ª—å–Ω–æ–º—É —Å—Ö–æ–≤–∏—â—ñ
                    try {
                        localStorage.setItem('winix_raffle_statistics', JSON.stringify({
                            timestamp: now,
                            data: this.statsData
                        }));
                    } catch (e) {
                        console.warn('‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–±–µ—Ä–µ–≥—Ç–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≤ –ª–æ–∫–∞–ª—å–Ω–æ–º—É —Å—Ö–æ–≤–∏—â—ñ:', e);
                    }

                    this.renderStatistics(this.statsData);
                } else if (response.status === 'error') {
                    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', response.message);
                    this.tryLoadFromLocalStorage();
                } else {
                    console.error('‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ:', response);
                    this.tryLoadFromLocalStorage();
                }
            } catch (error) {
                window.hideLoading();
                console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤:', error);
                this.tryLoadFromLocalStorage();
            }
        },

        // –°–ø—Ä–æ–±–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Å—Ö–æ–≤–∏—â–∞
        tryLoadFromLocalStorage: function() {
            try {
                const storedStats = localStorage.getItem('winix_raffle_statistics');
                if (storedStats) {
                    const parsedStats = JSON.parse(storedStats);
                    if (parsedStats && parsedStats.data) {
                        console.log('üìä –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Å—Ö–æ–≤–∏—â–∞');
                        this.statsData = parsedStats.data;
                        this.renderStatistics(this.statsData);
                        return;
                    }
                }
            } catch (e) {
                console.warn('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Å—Ö–æ–≤–∏—â–∞:', e);
            }

            // –Ø–∫—â–æ –Ω–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Å—Ö–æ–≤–∏—â–∞
            this.renderEmptyStatistics();
        },

        // –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
        renderStatistics: function(userData) {
            if (!userData) {
                this.renderEmptyStatistics();
                return;
            }

            // –û–Ω–æ–≤–ª—é—î–º–æ –∑–Ω–∞—á–µ–Ω–Ω—è –≤ –±–ª–æ–∫–∞—Ö —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
            this.updateStatValue('total-participated', userData.participations_count || 0);
            this.updateStatValue('total-wins', userData.wins_count || 0);

            // –û–±—á–∏—Å–ª—é—î–º–æ –∑–∞–≥–∞–ª—å–Ω—É —Å—É–º—É –≤–∏–≥—Ä–∞—à—ñ–≤
            let totalWinnings = 0;
            if (userData.total_winnings) {
                // –Ø–∫—â–æ —î –≤ –¥–∞–Ω–∏—Ö
                totalWinnings = userData.total_winnings;
            } else if (userData.wins_count) {
                // –ü—Ä–∏–±–ª. —Ä–æ–∑—Ä–∞—Ö—É–Ω–æ–∫, —è–∫—â–æ –Ω–µ–º–∞—î —Ç–æ—á–Ω–∏—Ö –¥–∞–Ω–∏—Ö
                totalWinnings = userData.wins_count * 15000;
            }
            this.updateStatValue('total-winix-won', totalWinnings);

            // –û–±—á–∏—Å–ª—é—î–º–æ –≤–∏—Ç—Ä–∞—á–µ–Ω—ñ –∂–µ—Ç–æ–Ω–∏
            let tokensSpent = 0;
            if (userData.tokens_spent) {
                // –Ø–∫—â–æ —î –≤ –¥–∞–Ω–∏—Ö
                tokensSpent = userData.tokens_spent;
            } else if (userData.participations_count) {
                // –ü—Ä–∏–±–ª. —Ä–æ–∑—Ä–∞—Ö—É–Ω–æ–∫, —è–∫—â–æ –Ω–µ–º–∞—î —Ç–æ—á–Ω–∏—Ö –¥–∞–Ω–∏—Ö (—Å–µ—Ä–µ–¥–Ω—î 2 –∂–µ—Ç–æ–Ω–∏ –∑–∞ —É—á–∞—Å—Ç—å)
                tokensSpent = userData.participations_count * 2;
            }
            this.updateStatValue('total-tokens-spent', tokensSpent);

            // –°—Ç–≤–æ—Ä—é—î–º–æ –≥—Ä–∞—Ñ—ñ–∫ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ, —è–∫—â–æ —î –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
            this.createActivityChart();
        },

        // –û–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–Ω–∞—á–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        updateStatValue: function(elementId, value) {
            const element = document.getElementById(elementId);
            if (element) {
                // –§–æ—Ä–º–∞—Ç—É—î–º–æ —á–∏—Å–ª–æ –∑ —Ä–æ–∑–¥—ñ–ª—é–≤–∞—á–∞–º–∏
                element.textContent = typeof value === 'number' ?
                    value.toLocaleString('uk-UA') : value;
            }
        },

        // –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –≥—Ä–∞—Ñ—ñ–∫—É –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ
        createActivityChart: function() {
            const chartContainer = document.querySelector('.chart-placeholder');
            if (!chartContainer) return;

            // –Ø–∫—â–æ –Ω–µ–º–∞—î –¥–æ—Å—Ç–∞—Ç–Ω—å–æ –¥–∞–Ω–∏—Ö –¥–ª—è –≥—Ä–∞—Ñ—ñ–∫–∞
            if (!this.statsData || !this.statsData.participations_count) {
                chartContainer.innerHTML = '<span>–ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –¥–∞–Ω–∏—Ö –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –≥—Ä–∞—Ñ—ñ–∫—É –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ</span>';
                return;
            }

            // –°—Ç–≤–æ—Ä—é—î–º–æ –ø—Ä–æ—Å—Ç—ñ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ–π–Ω—ñ –¥–∞–Ω—ñ –¥–ª—è –≥—Ä–∞—Ñ—ñ–∫–∞
            const wins = this.statsData.wins_count || 0;
            const participations = this.statsData.participations_count || 0;
            const nonWinParticipations = participations - wins;

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –æ–±'—î–∫—Ç–∞ Chart –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –≥—Ä–∞—Ñ—ñ–∫–∞
            if (typeof Chart === 'undefined') {
                // –Ø–∫—â–æ Chart.js –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π, —Å—Ç–≤–æ—Ä—é—î–º–æ –ø—Ä–æ—Å—Ç–∏–π –≥—Ä–∞—Ñ—ñ–∫ —á–µ—Ä–µ–∑ div
                chartContainer.innerHTML = `
                    <div class="simple-chart">
                        <div class="chart-bar">
                            <div class="chart-bar-inner wins" style="height: ${wins * 10}px;"></div>
                            <div class="chart-bar-label">–ü–µ—Ä–µ–º–æ–≥–∏ (${wins})</div>
                        </div>
                        <div class="chart-bar">
                            <div class="chart-bar-inner participations" style="height: ${nonWinParticipations * 5}px;"></div>
                            <div class="chart-bar-label">–£—á–∞—Å—Ç—ñ –±–µ–∑ –≤–∏–≥—Ä–∞—à—É (${nonWinParticipations})</div>
                        </div>
                    </div>
                `;

                // –î–æ–¥–∞—î–º–æ —Å—Ç–∏–ª—ñ –¥–ª—è –ø—Ä–æ—Å—Ç–æ–≥–æ –≥—Ä–∞—Ñ—ñ–∫–∞
                const style = document.createElement('style');
                style.textContent = `
                    .simple-chart {
                        display: flex;
                        justify-content: center;
                        gap: 20px;
                        height: 180px;
                        align-items: flex-end;
                    }
                    
                    .chart-bar {
                        display: flex;
                        flex-direction: column;
                        align-items: center;
                        height: 100%;
                    }
                    
                    .chart-bar-inner {
                        width: 40px;
                        min-height: 10px;
                        border-radius: 4px 4px 0 0;
                    }
                    
                    .chart-bar-inner.wins {
                        background: linear-gradient(to top, #4CAF50, #81C784);
                    }
                    
                    .chart-bar-inner.participations {
                        background: linear-gradient(to top, #2196F3, #64B5F6);
                    }
                    
                    .chart-bar-label {
                        margin-top: 5px;
                        font-size: 0.8rem;
                        color: var(--text-secondary);
                        text-align: center;
                    }
                `;
                document.head.appendChild(style);
            } else {
                // –¢—É—Ç –º–∞–≤ –±–∏ –±—É—Ç–∏ –∫–æ–¥ –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –≥—Ä–∞—Ñ—ñ–∫–∞ —á–µ—Ä–µ–∑ Chart.js
                // –ê–ª–µ –æ—Å–∫—ñ–ª—å–∫–∏ –º–∏ –Ω–µ –≤–∫–ª—é—á–∏–ª–∏ Chart.js —É –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ, –∑–∞–ª–∏—à–∞—î–º–æ –ø—Ä–æ—Å—Ç–∏–π –≥—Ä–∞—Ñ—ñ–∫
                chartContainer.innerHTML = '<span>–î–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –≥—Ä–∞—Ñ—ñ–∫–∞ –Ω–µ–æ–±—Ö—ñ–¥–Ω–∞ –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∞ Chart.js</span>';
            }
        },

        // –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –ø–æ—Ä–æ–∂–Ω—å–æ—ó —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        renderEmptyStatistics: function() {
            // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –Ω—É–ª—å–æ–≤—ñ –∑–Ω–∞—á–µ–Ω–Ω—è –¥–ª—è –≤—Å—ñ—Ö –ø–æ–ª—ñ–≤ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
            this.updateStatValue('total-participated', 0);
            this.updateStatValue('total-wins', 0);
            this.updateStatValue('total-winix-won', 0);
            this.updateStatValue('total-tokens-spent', 0);

            // –û–Ω–æ–≤–ª—é—î–º–æ –≥—Ä–∞—Ñ—ñ–∫
            const chartContainer = document.querySelector('.chart-placeholder');
            if (chartContainer) {
                chartContainer.innerHTML = '<span>–ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –¥–∞–Ω–∏—Ö –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –≥—Ä–∞—Ñ—ñ–∫—É –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ</span>';
            }
        },

        // –û–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        refreshStatistics: function() {
            this.loadStatistics(true);
        }
    };

    // –î–æ–¥–∞—î–º–æ –º–æ–¥—É–ª—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–æ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–æ–¥—É–ª—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
    WinixRaffles.statistics = statistics;

    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –º–æ–¥—É–ª—è –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
    document.addEventListener('DOMContentLoaded', function() {
        if (WinixRaffles.state.isInitialized) {
            statistics.init();
        } else {
            // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ—ó —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
            document.addEventListener('winix-raffles-initialized', function() {
                statistics.init();
            });
        }
    });
})();