/**
 * WINIX - –°–∏—Å—Ç–µ–º–∞ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ (participation.js)
 * –û–ø—Ç–∏–º—ñ–∑–æ–≤–∞–Ω–∏–π –º–æ–¥—É–ª—å –¥–ª—è –æ–±—Ä–æ–±–∫–∏ —É—á–∞—Å—Ç—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à–∞—Ö
 * –í–∏–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤–µ—Ä—Å—ñ—è –∑ –ø–æ–∫—Ä–∞—â–µ–Ω–æ—é –æ–±—Ä–æ–±–∫–æ—é –ø–æ–º–∏–ª–æ–∫ —Ç–∞ —Å—Ç–∞–±—ñ–ª—å–Ω—ñ—Å—Ç—é
 * @version 2.0.0
 */

(function() {
    'use strict';

    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–æ–¥—É–ª—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
    if (typeof window.WinixRaffles === 'undefined') {
        console.error('‚ùå WinixRaffles –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ! –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—è, —â–æ core.js –ø—ñ–¥–∫–ª—é—á–µ–Ω–æ —Ä–∞–Ω—ñ—à–µ participation.js');
        return;
    }

    // –ü—ñ–¥–º–æ–¥—É–ª—å –¥–ª—è —É—á–∞—Å—Ç—ñ –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à–∞—Ö
    const participation = {
        // –ú–Ω–æ–∂–∏–Ω–∞ ID —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤, —É —è–∫–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á —É–∂–µ –±–µ—Ä–µ —É—á–∞—Å—Ç—å (–¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è)
        participatingRaffles: new Set(),

        // –ö—ñ–ª—å–∫—ñ—Å—Ç—å –±—ñ–ª–µ—Ç—ñ–≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
        userRaffleTickets: {},

        // –ö–µ—à –Ω–µ–≤–∞–ª—ñ–¥–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ (–¥–ª—è –∫—Ä–∞—â–æ—ó —Ä–æ–±–æ—Ç–∏ UI)
        invalidRaffleIds: new Set(),

        // –í–ê–ñ–õ–ò–í–û: –ó–∞–º—ñ—Å—Ç—å –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ —Ñ–ª–∞–≥—É requestInProgress —Ç–µ–ø–µ—Ä –≤–µ–¥–µ–º–æ –æ–±–ª—ñ–∫ –∑–∞–ø–∏—Ç—ñ–≤ –ø–æ –∫–æ–∂–Ω–æ–º—É —Ä–æ–∑—ñ–≥—Ä–∞—à—É –æ–∫—Ä–µ–º–æ
        activeRequests: new Map(), // Map<raffleId, {timestamp, status}>

        // –ß–∞—Å –æ—Å—Ç–∞–Ω–Ω—å–æ—ó —É—á–∞—Å—Ç—ñ (–¥–ª—è –∑–∞–ø–æ–±—ñ–≥–∞–Ω–Ω—è –Ω–∞–¥–º—ñ—Ä–Ω—ñ–π –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –∑–∞–ø–∏—Ç—ñ–≤)
        lastParticipationTime: 0,

        // –Ü–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –ø–æ—Ç–æ—á–Ω–æ–≥–æ –∑–∞–ø–∏—Ç—É
        currentRequestId: null,

        // –ß–µ—Ä–≥–∞ –∑–∞–ø–∏—Ç—ñ–≤ –¥–ª—è –∑–∞–ø–æ–±—ñ–≥–∞–Ω–Ω—è –≤—Ç—Ä–∞—Ç—ñ –¥–∞–Ω–∏—Ö
        pendingRequests: [],

        // –î–∞–Ω—ñ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è —Å—Ç–∞–Ω—É
        transactions: new Map(), // Map<transactionId, {raffleId, status, timestamp}>

        // –¢–∞–π–º–µ—Ä –¥–ª—è —ñ–Ω–¥–∏–∫–∞—Ü—ñ—ó –æ–±—Ä–æ–±–∫–∏ (–¥–ª—è –∫—Ä–∞—â–æ–≥–æ UX)
        processingTimers: {},

        // –û—Å—Ç–∞–Ω–Ω—î —Å–∫–∏–¥–∞–Ω–Ω—è —Å—Ç–∞–Ω—É
        lastStateReset: Date.now(),

        // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∂–µ—Ç–æ–Ω—ñ–≤ –¥–ª—è —É—á–∞—Å—Ç—ñ
        MAX_ENTRY_COUNT: 100,

        // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –º–æ–¥—É–ª—è
        init: function() {
            console.log('üéØ –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –º–æ–¥—É–ª—è —É—á–∞—Å—Ç—ñ –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à–∞—Ö...');

            // –ü—Ä–∏–º—É—Å–æ–≤–µ —Å–∫–∏–¥–∞–Ω–Ω—è —Å—Ç–∞–Ω—É –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ
            this.lastParticipationTime = 0;
            this.lastStateReset = Date.now();
            this.currentRequestId = null;
            this.activeRequests.clear();
            this.transactions.clear();

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∑–±–µ—Ä–µ–∂–µ–Ω–∏–π —Å—Ç–∞–Ω —É—á–∞—Å—Ç—ñ –≤ localStorage
            this._restoreParticipationFromStorage();

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–µ–∑–∞–≤–µ—Ä—à–µ–Ω—ñ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó
            this.checkPendingTransactions();

            // –°—Ç–≤–æ—Ä—é—î–º–æ –¥–æ–¥–∞—Ç–∫–æ–≤—ñ —Ä–µ—Å—É—Ä—Å–∏ –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó —Å—Ç–∞–Ω—ñ–≤
            this.setupSyncMechanisms();

            // –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            this.loadUserRaffles();

            // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π
            this.setupEventListeners();

            // –ó–∞–ø—É—Å–∫–∞—î–º–æ —Ç–∞–π–º–µ—Ä –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –±–ª–æ–∫—É–≤–∞–Ω–Ω—è
            this._startLockingMonitor();
        },

        // –î–æ–¥–∞—î–º–æ –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥ –∑–∞–≤–∏—Å–∞–Ω–Ω—è –∑–∞–ø–∏—Ç—ñ–≤
        _startLockingMonitor: function() {
            setInterval(() => {
                const now = Date.now();

                // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —ñ–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω—ñ –∑–∞–ø–∏—Ç–∏ –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
                for (const [raffleId, requestInfo] of this.activeRequests.entries()) {
                    if (now - requestInfo.timestamp > 15000) {
                        console.warn(`‚ö†Ô∏è –í–∏—è–≤–ª–µ–Ω–æ –∑–∞—Å—Ç—Ä—è–≥–ª–∏–π –∑–∞–ø–∏—Ç –¥–ª—è —Ä–æ–∑—ñ–≥—Ä–∞—à—É ${raffleId}, –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ —Å–∫–∏–¥–∞–Ω–Ω—è`);
                        this.activeRequests.delete(raffleId);
                        // –°–∫–∏–¥–∞—î–º–æ —Å—Ç–∞–Ω –∫–Ω–æ–ø–æ–∫ –¥–ª—è —Ü—å–æ–≥–æ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
                        this._clearPendingParticipationState(raffleId);
                    }
                }

                // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó, —è–∫—ñ –º–æ–≥–ª–∏ –∑–∞—Å—Ç—Ä—è–≥—Ç–∏
                for (const [transactionId, transactionInfo] of this.transactions.entries()) {
                    if (transactionInfo.status === 'pending' && now - transactionInfo.timestamp > 30000) {
                        console.warn(`‚ö†Ô∏è –í–∏—è–≤–ª–µ–Ω–æ –∑–∞—Å—Ç—Ä—è–≥–ª—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—é ${transactionId}, –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Å—Ç–∞—Ç—É—Å`);
                        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Å—Ç–∞—Ç—É—Å —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó —á–µ—Ä–µ–∑ API
                        this._checkTransactionStatus(transactionId, transactionInfo.raffleId);
                    }
                }
            }, 3000); // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∫–æ–∂–Ω—ñ 3 —Å–µ–∫—É–Ω–¥–∏
        },

        // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó
        _checkTransactionStatus: function(transactionId, raffleId) {
            // –Ø–∫—â–æ —î API –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π - –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –π–æ–≥–æ
            if (window.WinixAPI && typeof window.WinixAPI.apiRequest === 'function') {
                const userId = WinixRaffles.state.telegramId ||
                              (window.WinixAPI.getUserId ? window.WinixAPI.getUserId() : null);

                if (!userId) return;

                // –ó–∞–ø–∏—Ç –¥–æ API –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó
                window.WinixAPI.apiRequest(`user/${userId}/transaction/${transactionId}`, 'GET', null, {
                    suppressErrors: true,
                    hideLoader: true,
                    timeout: 5000
                }).then(response => {
                    if (response && response.status === 'success' && response.data) {
                        const transaction = response.data;

                        // –Ø–∫—â–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—è —É—Å–ø—ñ—à–Ω–∞ - –æ–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω
                        if (transaction.status === 'completed') {
                            console.log(`‚úÖ –¢—Ä–∞–Ω–∑–∞–∫—Ü—ñ—è ${transactionId} —É—Å–ø—ñ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞`);
                            // –î–æ–¥–∞—î–º–æ –¥–æ –º–Ω–æ–∂–∏–Ω–∏ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤, —É —è–∫–∏—Ö –±–µ—Ä–µ —É—á–∞—Å—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á
                            if (raffleId) {
                                this.participatingRaffles.add(raffleId);

                                // –û–Ω–æ–≤–ª—é—î–º–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –±—ñ–ª–µ—Ç—ñ–≤, —è–∫—â–æ –≤–æ–Ω–∞ —î –≤ –¥–∞–Ω–∏—Ö
                                if (transaction.entry_count) {
                                    this.userRaffleTickets[raffleId] = transaction.entry_count;
                                } else {
                                    // –Ü–Ω–∞–∫—à–µ —ñ–Ω–∫—Ä–µ–º–µ–Ω—Ç—É—î–º–æ –ø–æ—Ç–æ—á–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è
                                    this.userRaffleTickets[raffleId] = (this.userRaffleTickets[raffleId] || 0) + 1;
                                }

                                // –û–Ω–æ–≤–ª—é—î–º–æ –∫–Ω–æ–ø–∫–∏ —É—á–∞—Å—Ç—ñ
                                this.updateParticipationButtons();

                                // –û–Ω–æ–≤–ª—é—î–º–æ –¥–∞–Ω—ñ –≤ localStorage
                                this.saveSyncState();
                            }

                            // –í–∏–¥–∞–ª—è—î–º–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—é –∑ –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è
                            this.transactions.delete(transactionId);
                        } else if (transaction.status === 'failed') {
                            console.warn(`‚ö†Ô∏è –¢—Ä–∞–Ω–∑–∞–∫—Ü—ñ—è ${transactionId} –Ω–µ –≤–¥–∞–ª–∞—Å—è`);
                            // –í–∏–¥–∞–ª—è—î–º–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—é –∑ –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è
                            this.transactions.delete(transactionId);
                        }
                    }
                }).catch(err => {
                    console.error(`‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó ${transactionId}:`, err);
                });
            }
        },

        // –í—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞–Ω—É —É—á–∞—Å—Ç—ñ –∑ localStorage
        _restoreParticipationFromStorage: function() {
            try {
                const savedState = localStorage.getItem('winix_participation_state');
                if (savedState) {
                    const parsedState = JSON.parse(savedState);

                    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –¥–∞–Ω—ñ –Ω–µ –∑–∞—Å—Ç–∞—Ä—ñ–ª–∏
                    if (parsedState && parsedState.lastUpdate) {
                        const now = Date.now();
                        // –Ø–∫—â–æ –∫–µ—à —Å—Ç–∞—Ä—ñ—à–∏–π –∑–∞ 30 —Ö–≤–∏–ª–∏–Ω, –Ω–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –π–æ–≥–æ
                        if (now - parsedState.lastUpdate < 1800000) {
                            // –í—ñ–¥–Ω–æ–≤–ª—é—î–º–æ –º–Ω–æ–∂–∏–Ω—É —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
                            if (Array.isArray(parsedState.raffles)) {
                                this.participatingRaffles = new Set(parsedState.raffles);
                            }

                            // –í—ñ–¥–Ω–æ–≤–ª—é—î–º–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –±—ñ–ª–µ—Ç—ñ–≤
                            if (parsedState.tickets) {
                                this.userRaffleTickets = parsedState.tickets;
                            }

                            // –í—ñ–¥–Ω–æ–≤–ª—é—î–º–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó, —è–∫—â–æ –≤–æ–Ω–∏ —î
                            if (parsedState.transactions) {
                                this.transactions = new Map(parsedState.transactions);
                            }

                            console.log('‚úÖ –£—Å–ø—ñ—à–Ω–æ –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–æ –ª–æ–∫–∞–ª—å–Ω–∏–π —Å—Ç–∞–Ω —É—á–∞—Å—Ç—ñ');
                        } else {
                            console.log('‚ÑπÔ∏è –ö–µ—à —É—á–∞—Å—Ç—ñ –∑–∞—Å—Ç–∞—Ä—ñ–≤, –æ—á–∏—â–∞—î–º–æ');
                            localStorage.removeItem('winix_participation_state');
                        }
                    }
                }

                // –¢–∞–∫–æ–∂ –≤—ñ–¥–Ω–æ–≤–ª—é—î–º–æ –Ω–µ–≤–∞–ª—ñ–¥–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ
                const invalidRaffles = localStorage.getItem('winix_invalid_raffles');
                if (invalidRaffles) {
                    try {
                        this.invalidRaffleIds = new Set(JSON.parse(invalidRaffles));
                    } catch (e) {
                        console.warn('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –Ω–µ–≤–∞–ª—ñ–¥–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤:', e);
                    }
                }

                // –í—ñ–¥–Ω–æ–≤–ª—é—î–º–æ –Ω–µ–∑–∞–≤–µ—Ä—à–µ–Ω—ñ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó
                const pendingTransactions = localStorage.getItem('winix_pending_transactions');
                if (pendingTransactions) {
                    try {
                        const transactions = JSON.parse(pendingTransactions);
                        // –§—ñ–ª—å—Ç—Ä—É—î–º–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó, —è–∫—ñ –Ω–µ —Å—Ç–∞—Ä—ñ—à—ñ 30 —Ö–≤–∏–ª–∏–Ω
                        const now = Date.now();
                        const validTransactions = transactions.filter(t => now - t.timestamp < 1800000);

                        // –î–æ–¥–∞—î–º–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó –¥–æ –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è
                        validTransactions.forEach(t => {
                            if (t.raffleId && t.transactionId) {
                                this.transactions.set(t.transactionId, {
                                    raffleId: t.raffleId,
                                    status: 'pending',
                                    timestamp: t.timestamp
                                });
                            }
                        });

                        // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω–∏–π —Å–ø–∏—Å–æ–∫
                        if (validTransactions.length !== transactions.length) {
                            localStorage.setItem('winix_pending_transactions', JSON.stringify(validTransactions));
                        }
                    } catch (e) {
                        console.warn('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –Ω–µ–∑–∞–≤–µ—Ä—à–µ–Ω–∏—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π:', e);
                    }
                }
            } catch (e) {
                console.warn('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞–Ω—É —É—á–∞—Å—Ç—ñ:', e);
            }
        },

        // –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –º–µ—Ö–∞–Ω—ñ–∑–º—ñ–≤ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó
        setupSyncMechanisms: function() {
            // –û–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –ø–µ—Ä–µ–¥ –∑–∞–∫—Ä–∏—Ç—Ç—è–º —Å—Ç–æ—Ä—ñ–Ω–∫–∏
            window.addEventListener('beforeunload', () => {
                // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —Å—Ç–∞–Ω —É—á–∞—Å—Ç—ñ –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à–∞—Ö
                this.saveSyncState();

                // –ü—Ä–∏–º—É—Å–æ–≤–µ —Å–∫–∏–¥–∞–Ω–Ω—è —Å—Ç–∞–Ω—É –∑–∞–ø–∏—Ç—É –ø—Ä–∏ –∑–∞–∫—Ä–∏—Ç—Ç—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
                this.activeRequests.clear();
            });

            // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è —Å–∫–∏–¥–∞–Ω–Ω—è –∑–∞–≤–∏—Å–∞—é—á–∏—Ö –∑–∞–ø–∏—Ç—ñ–≤
            window.addEventListener('visibilitychange', () => {
                if (document.visibilityState === 'visible') {
                    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∞—Å –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ –∑–∞–ø–∏—Ç—É
                    const now = Date.now();

                    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —î –∞–∫—Ç–∏–≤–Ω—ñ –∑–∞–ø–∏—Ç–∏ —Å—Ç–∞—Ä—à—ñ 10 —Å–µ–∫—É–Ω–¥
                    let hasStaleRequests = false;
                    for (const [raffleId, requestInfo] of this.activeRequests.entries()) {
                        if (now - requestInfo.timestamp > 10000) {
                            hasStaleRequests = true;
                            break;
                        }
                    }

                    if (hasStaleRequests) {
                        console.warn('‚ö†Ô∏è –í–∏—è–≤–ª–µ–Ω–æ –∞–∫—Ç–∏–≤–Ω—ñ –∑–∞–ø–∏—Ç–∏ –ø—ñ—Å–ª—è –∑–º—ñ–Ω–∏ –≤–∫–ª–∞–¥–∫–∏, —Å–∫–∏–¥–∞—î–º–æ —Å—Ç–∞–Ω...');
                        this.resetState();
                    }

                    // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω—ñ –¥–∞–Ω—ñ –ø—Ä–∏ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—ñ –Ω–∞ –≤–∫–ª–∞–¥–∫—É
                    setTimeout(() => {
                        this.loadUserRaffles();
                    }, 1000);
                }
            });

            // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –æ—á–∏—â–µ–Ω–Ω—è invalid state –ø—Ä–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
            window.addEventListener('pageshow', (event) => {
                if (event.persisted) {
                    console.log("üìù –°—Ç–æ—Ä—ñ–Ω–∫–∞ –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–∞ –∑ –∫–µ—à—É, –æ–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω");
                    this.activeRequests.clear();
                    this.lastParticipationTime = 0;
                    this.loadUserRaffles();
                }
            });

            // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞–Ω—É –ø—Ä–∏ –∑–º—ñ–Ω—ñ –±–∞–ª–∞–Ω—Å—É
            document.addEventListener('balance-updated', (event) => {
                if (event.detail && event.detail.coins !== undefined) {
                    // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∂–µ—Ç–æ–Ω—ñ–≤
                    const coinsElement = document.getElementById('user-coins');
                    if (coinsElement) {
                        coinsElement.textContent = event.detail.coins;
                    }
                }
            });
        },

        // –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Å—Ç–∞–Ω—É —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó –≤ localStorage
        saveSyncState: function() {
            try {
                // –ü–µ—Ä–µ—Ç–≤–æ—Ä—é—î–º–æ Map –≤ –º–∞—Å–∏–≤ –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è
                const transactionsArray = Array.from(this.transactions.entries());

                const participationState = {
                    raffles: Array.from(this.participatingRaffles),
                    tickets: this.userRaffleTickets,
                    transactions: transactionsArray,
                    lastUpdate: Date.now()
                };
                localStorage.setItem('winix_participation_state', JSON.stringify(participationState));
            } catch (e) {
                console.warn('‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–±–µ—Ä–µ–≥—Ç–∏ —Å—Ç–∞–Ω —É—á–∞—Å—Ç—ñ:', e);
            }
        },

        // –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –ø–æ–¥—ñ–π
        setupEventListeners: function() {
            // –û–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –∫–Ω–æ–ø–æ–∫ —É—á–∞—Å—Ç—ñ —Ç–∞ –¥–µ—Ç–∞–ª–µ–π —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ –∑ –¥–µ–ª–µ–≥—É–≤–∞–Ω–Ω—è–º –ø–æ–¥—ñ–π
            document.addEventListener('click', (e) => {
                // –û–±—Ä–æ–±–∫–∞ –∫–Ω–æ–ø–æ–∫ —É—á–∞—Å—Ç—ñ
                const joinButton = e.target.closest('.join-button, .mini-raffle-button');
                if (joinButton && !joinButton.disabled && !joinButton.classList.contains('processing')) {
                    const raffleId = joinButton.getAttribute('data-raffle-id');

                    if (raffleId) {
                        e.preventDefault();

                        // –î–æ–¥–∞—î–º–æ –∫–ª–∞—Å –¥–ª—è —ñ–Ω–¥–∏–∫–∞—Ü—ñ—ó –ø—Ä–æ—Ü–µ—Å—É —ñ –±–ª–æ–∫—É—î–º–æ –∫–Ω–æ–ø–∫—É
                        joinButton.classList.add('processing');
                        joinButton.disabled = true;

                        // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –∫–Ω–æ–ø–∫—É –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞–Ω—É
                        const buttonRef = joinButton;

                        // –í–∏–∑–Ω–∞—á–∞—î–º–æ —Ç–∏–ø —Ä–æ–∑—ñ–≥—Ä–∞—à—É
                        const raffleType = joinButton.classList.contains('mini-raffle-button') ? 'daily' : 'main';

                        // –í–∏–∫–æ–Ω—É—î–º–æ –∑–∞–ø–∏—Ç —É—á–∞—Å—Ç—ñ –∑ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è–º –∫–Ω–æ–ø–∫–∏ –ø—ñ—Å–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è
                        this.participateInRaffle(raffleId, raffleType)
                            .then(result => {
                                // –û–±—Ä–æ–±–∫–∞ —É—Å–ø—ñ—à–Ω–æ—ó —É—á–∞—Å—Ç—ñ
                                if (result && result.success) {
                                    // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —Å—Ç–∞–Ω —É—á–∞—Å—Ç—ñ
                                    this.participatingRaffles.add(raffleId);

                                    // –û–Ω–æ–≤–ª—é—î–º–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –±—ñ–ª–µ—Ç—ñ–≤
                                    const newTicketCount = result.data?.total_entries ||
                                                        (this.userRaffleTickets[raffleId] || 0) + 1;
                                    this.userRaffleTickets[raffleId] = newTicketCount;

                                    // –û–Ω–æ–≤–ª—é—î–º–æ —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏
                                    const isMini = buttonRef.classList.contains('mini-raffle-button');
                                    buttonRef.textContent = isMini ?
                                        `–î–æ–¥–∞—Ç–∏ —â–µ –±—ñ–ª–µ—Ç (${newTicketCount})` :
                                        `–î–æ–¥–∞—Ç–∏ —â–µ –±—ñ–ª–µ—Ç (—É –≤–∞—Å: ${newTicketCount})`;

                                    buttonRef.classList.add('participating');

                                    // –û–Ω–æ–≤–ª—é—î–º–æ –±–∞–ª–∞–Ω—Å –∂–µ—Ç–æ–Ω—ñ–≤
                                    if (result.data && result.data.new_coins_balance !== undefined) {
                                        const coinsElement = document.getElementById('user-coins');
                                        if (coinsElement) {
                                            coinsElement.textContent = result.data.new_coins_balance;
                                        }

                                        // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –±–∞–ª–∞–Ω—Å –≤ localStorage
                                        localStorage.setItem('userCoins', result.data.new_coins_balance);
                                        localStorage.setItem('winix_coins', result.data.new_coins_balance);
                                    }

                                    // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω–∏–π —Å—Ç–∞–Ω
                                    this.saveSyncState();

                                    // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–¥—ñ—é –ø—Ä–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
                                    document.dispatchEvent(new CustomEvent('user-data-updated', {
                                        detail: {
                                            userData: {
                                                coins: result.data?.new_coins_balance,
                                                participations_count: this.participatingRaffles.size
                                            }
                                        },
                                        source: 'participation.js'
                                    }));

                                    // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å —É—á–∞—Å–Ω–∏–∫—ñ–≤ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
                                    this._updateParticipantsCount(raffleId);
                                }
                            })
                            .catch(error => {
                                console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ —É—á–∞—Å—Ç—ñ –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ:', error);

                                // –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É
                                if (typeof window.showToast === 'function') {
                                    window.showToast(error.message || '–ü–æ–º–∏–ª–∫–∞ —É—á–∞—Å—Ç—ñ –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ', 'error');
                                }
                            })
                            .finally(() => {
                                // –ó–±—ñ–ª—å—à–∏–ª–∏ –∑–∞—Ç—Ä–∏–º–∫—É –¥–ª—è –Ω–∞–¥—ñ–π–Ω–æ—Å—Ç—ñ
                                setTimeout(() => {
                                    buttonRef.classList.remove('processing');

                                    // –†–æ–∑–±–ª–æ–∫–æ–≤—É—î–º–æ –∫–Ω–æ–ø–∫—É —Ç—ñ–ª—å–∫–∏ —è–∫—â–æ —Ü–µ –Ω–µ –±—É–≤ —É—Å–ø—ñ—à–Ω–∏–π –∑–∞–ø–∏—Ç
                                    if (!this.participatingRaffles.has(raffleId)) {
                                        buttonRef.disabled = false;
                                    }
                                }, 500);
                            });
                    }
                }

                // –û–±—Ä–æ–±–∫–∞ –∫–Ω–æ–ø–æ–∫ –¥–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É –¥–µ—Ç–∞–ª–µ–π —Ä–æ–∑—ñ–≥—Ä–∞—à—É
                const detailsButton = e.target.closest('.raffle-details-button');
                if (detailsButton) {
                    const raffleId = detailsButton.getAttribute('data-raffle-id');
                    if (raffleId) {
                        e.preventDefault();
                        this.showRaffleDetails(raffleId);
                    }
                }
            });

            // –ì–ª–æ–±–∞–ª—å–Ω–∏–π –æ–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            document.addEventListener('user-data-updated', (event) => {
                // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –¥–∞–Ω–∏—Ö –ø—Ä–æ –∂–µ—Ç–æ–Ω–∏
                if (event.detail && event.detail.userData &&
                    typeof event.detail.userData.coins !== 'undefined') {

                    // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∂–µ—Ç–æ–Ω—ñ–≤
                    const coinsElement = document.getElementById('user-coins');
                    if (coinsElement) {
                        coinsElement.textContent = event.detail.userData.coins;
                    }

                    // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –∑–Ω–∞—á–µ–Ω–Ω—è –≤ localStorage –¥–ª—è –∑–∞–ø–æ–±—ñ–≥–∞–Ω–Ω—è –≤—Ç—Ä–∞—Ç—ñ
                    localStorage.setItem('userCoins', event.detail.userData.coins);
                    localStorage.setItem('winix_coins', event.detail.userData.coins);

                    console.log('üîÑ –û–Ω–æ–≤–ª–µ–Ω–æ –±–∞–ª–∞–Ω—Å –∂–µ—Ç–æ–Ω—ñ–≤:', event.detail.userData.coins);
                }

                // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —Ü–µ –Ω–µ –ø–æ–¥—ñ—è –≤—ñ–¥ –Ω–∞—à–æ–≥–æ –º–æ–¥—É–ª—è
                if (event.source !== 'participation.js') {
                    this.loadUserRaffles();
                }
            });
        },

        // –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        loadUserRaffles: async function() {
            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –∞–∫—Ç–∏–≤–Ω–∏–π –∑–∞–ø–∏—Ç –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—áa
            if (this._loadingUserRaffles) {
                console.log('‚è≥ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤–∂–µ –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è');
                return;
            }

            this._loadingUserRaffles = true;

            try {
                const userId = WinixRaffles.state.telegramId ||
                              (window.WinixAPI ? window.WinixAPI.getUserId() : null);

                if (!userId) {
                    console.warn('‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–∑–Ω–∞—á–∏—Ç–∏ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤');
                    return;
                }

                // –ü–µ—Ä–µ–¥ –≤—ñ–¥–ø—Ä–∞–≤–∫–æ—é –∑–∞–ø–∏—Ç—É —Å–ø–æ—á–∞—Ç–∫—É –ø–æ–∫–∞–∑—É—î–º–æ –∫–µ—à–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ
                this.updateParticipationButtons();

                // –î–æ–¥–∞–ª–∏ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É –Ω–∞ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –º–µ—Ç–æ–¥—É apiRequest
                if (!window.WinixAPI || typeof window.WinixAPI.apiRequest !== 'function') {
                    console.warn('‚ö†Ô∏è WinixAPI.apiRequest –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∏–π');
                    this._loadingUserRaffles = false;
                    return;
                }

                // –ó–∞–ø–∏—Ç –¥–æ API
                const response = await WinixAPI.apiRequest(`user/${userId}/raffles`, 'GET', null, {
                    suppressErrors: true,
                    hideLoader: true,
                    timeout: 8000, // –ó–±—ñ–ª—å—à—É—î–º–æ —Ç–∞–π–º–∞—É—Ç –¥–ª—è –∑–∞–ø–æ–±—ñ–≥–∞–Ω–Ω—è –ø–æ–º–∏–ª–æ–∫
                    allowParallel: true // –¶–µ–π –∑–∞–ø–∏—Ç –º–æ–∂–µ –≤–∏–∫–æ–Ω—É–≤–∞—Ç–∏—Å—å –ø–∞—Ä–∞–ª–µ–ª—å–Ω–æ –∑ —ñ–Ω—à–∏–º–∏
                });

                if (response && response.status === 'success' && Array.isArray(response.data)) {
                    // –û—á–∏—â–∞—î–º–æ —Ç–∞ –∑–∞–ø–æ–≤–Ω—é—î–º–æ –º–Ω–æ–∂–∏–Ω—É —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
                    const previousSize = this.participatingRaffles.size;
                    this.participatingRaffles.clear();
                    this.userRaffleTickets = {};

                    // –ó–∞–ø–æ–≤–Ω—é—î–º–æ –Ω–æ–≤–∏–º–∏ –¥–∞–Ω–∏–º–∏
                    response.data.forEach(raffle => {
                        if (raffle.raffle_id) {
                            // –î–æ–¥–∞—î–º–æ –¥–æ –º–Ω–æ–∂–∏–Ω–∏ —É—á–∞—Å—Ç—ñ
                            this.participatingRaffles.add(raffle.raffle_id);

                            // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –±—ñ–ª–µ—Ç—ñ–≤
                            this.userRaffleTickets[raffle.raffle_id] = raffle.entry_count || 1;
                        }
                    });

                    console.log(`‚úÖ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –±–µ—Ä–µ —É—á–∞—Å—Ç—å —É ${this.participatingRaffles.size} —Ä–æ–∑—ñ–≥—Ä–∞—à–∞—Ö`);

                    // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –¥–∞–Ω—ñ –≤ localStorage –¥–ª—è –∫—Ä–∞—â–æ—ó —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó
                    this.saveSyncState();

                    // –û–Ω–æ–≤–ª—é—î–º–æ –∫–Ω–æ–ø–∫–∏ —É—á–∞—Å—Ç—ñ —Ç—ñ–ª—å–∫–∏ —è–∫—â–æ –±—É–ª–∏ –∑–º—ñ–Ω–∏
                    if (previousSize !== this.participatingRaffles.size) {
                        this.updateParticipationButtons();
                    }
                } else if (response && response.status === 'error') {
                    console.warn(`‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤: ${response.message}`);

                    // –Ø–∫—â–æ –ø–æ–º–∏–ª–∫–∞ 429 (–∑–∞–Ω–∞–¥—Ç–æ –±–∞–≥–∞—Ç–æ –∑–∞–ø–∏—Ç—ñ–≤), —á–µ–∫–∞—î–º–æ —ñ –ø–æ–≤—Ç–æ—Ä—é—î–º–æ
                    if (response.message && response.message.includes('–∑–∞–Ω–∞–¥—Ç–æ –±–∞–≥–∞—Ç–æ –∑–∞–ø–∏—Ç—ñ–≤')) {
                        setTimeout(() => this.loadUserRaffles(), 5000);
                    }
                }
            } catch (error) {
                console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:', error);
            } finally {
                this._loadingUserRaffles = false;
            }
        },

        // –û–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–Ω–æ–ø–æ–∫ —É—á–∞—Å—Ç—ñ –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à–∞—Ö
        updateParticipationButtons: function() {
            try {
                // –°–ø–æ—á–∞—Ç–∫—É –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –¥–∞–Ω—ñ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Å—Ö–æ–≤–∏—â–∞
                try {
                    const savedState = localStorage.getItem('winix_participation_state');
                    if (savedState) {
                        const parsedState = JSON.parse(savedState);

                        // –í—ñ–¥–Ω–æ–≤–ª—é—î–º–æ –º–Ω–æ–∂–∏–Ω—É —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤, —è–∫—â–æ –≤–æ–Ω–∞ –ø–æ—Ä–æ–∂–Ω—è
                        if (parsedState && Array.isArray(parsedState.raffles) &&
                            (!this.participatingRaffles || this.participatingRaffles.size === 0)) {

                            this.participatingRaffles = new Set(parsedState.raffles);

                            // –í—ñ–¥–Ω–æ–≤–ª—é—î–º–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –±—ñ–ª–µ—Ç—ñ–≤
                            if (parsedState.tickets) {
                                this.userRaffleTickets = parsedState.tickets;
                            }

                            console.log(`‚úÖ –í—ñ–¥–Ω–æ–≤–ª–µ–Ω–æ –¥–∞–Ω—ñ —É—á–∞—Å—Ç—ñ –¥–ª—è ${this.participatingRaffles.size} —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤`);
                        }
                    }
                } catch (e) {
                    console.warn('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞–Ω—É —É—á–∞—Å—Ç—ñ:', e);
                }

                // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Å–µ–ª–µ–∫—Ç–æ—Ä–∏ –¥–ª—è –∫—Ä–∞—â–æ—ó –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ
                const buttons = document.querySelectorAll('.join-button, .mini-raffle-button');
                if (!buttons.length) return;

                // –ö–µ—à—É—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ –¥–ª—è —É–Ω–∏–∫–Ω–µ–Ω–Ω—è –ø–æ–≤—Ç–æ—Ä–Ω–∏—Ö –ø–µ—Ä–µ–≤—ñ—Ä–æ–∫
                const participatingMap = {};
                const invalidMap = {};

                // –ó–∞–ø–æ–≤–Ω—é—î–º–æ –∫–µ—à
                buttons.forEach(button => {
                    const raffleId = button.getAttribute('data-raffle-id');
                    if (!raffleId) return;

                    // –ü–∏—à–µ–º–æ –≤ –∫–µ—à –ª–∏—à–µ –æ–¥–∏–Ω —Ä–∞–∑ –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ raffleId
                    if (participatingMap[raffleId] === undefined) {
                        participatingMap[raffleId] = this.participatingRaffles.has(raffleId);
                    }

                    if (invalidMap[raffleId] === undefined) {
                        invalidMap[raffleId] = (this.invalidRaffleIds && this.invalidRaffleIds.has(raffleId)) ||
                                             (WinixRaffles.state.invalidRaffleIds && WinixRaffles.state.invalidRaffleIds.has(raffleId));
                    }
                });

                // –û–Ω–æ–≤–ª—é—î–º–æ –≤—Å—ñ –∫–Ω–æ–ø–∫–∏ –∑–∞ –æ–¥–∏–Ω –ø—Ä–æ—Ö—ñ–¥
                buttons.forEach(button => {
                    const raffleId = button.getAttribute('data-raffle-id');
                    if (!raffleId) return;

                    // –î–ª—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤, —É —è–∫–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –±–µ—Ä–µ —É—á–∞—Å—Ç—å, –∑–º—ñ–Ω—é—î–º–æ —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏
                    if (participatingMap[raffleId]) {
                        const ticketCount = this.userRaffleTickets ?
                                         (this.userRaffleTickets[raffleId] || 1) : 1;

                        // –û–Ω–æ–≤–ª—é—î–º–æ —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ –ª–∏—à–µ —è–∫—â–æ –≤—ñ–Ω –Ω–µ –±—É–≤ –æ–Ω–æ–≤–ª–µ–Ω–∏–π —Ä–∞–Ω—ñ—à–µ
                        if (!button.classList.contains('participating')) {
                            const isMini = button.classList.contains('mini-raffle-button');
                            button.textContent = isMini ?
                                `–î–æ–¥–∞—Ç–∏ —â–µ –±—ñ–ª–µ—Ç (${ticketCount})` :
                                `–î–æ–¥–∞—Ç–∏ —â–µ –±—ñ–ª–µ—Ç (—É –≤–∞—Å: ${ticketCount})`;

                            // –ó–º—ñ–Ω—é—î–º–æ –∫–ª–∞—Å, –∞–ª–µ –Ω–µ –¥–æ–¥–∞—î–º–æ disabled
                            button.classList.add('participating');
                            button.disabled = false;

                            // –í–∏–¥–∞–ª—è—î–º–æ —Å—Ç–∞—Ç—É—Å –æ–±—Ä–æ–±–∫–∏
                            button.removeAttribute('data-processing');
                            button.classList.remove('processing');
                        }
                    }

                    // –î–ª—è –Ω–µ–≤–∞–ª—ñ–¥–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
                    if (invalidMap[raffleId] && !button.classList.contains('disabled')) {
                        button.textContent = '–†–æ–∑—ñ–≥—Ä–∞—à –∑–∞–≤–µ—Ä—à–µ–Ω–æ';
                        button.classList.add('disabled');
                        button.disabled = true;
                    }
                });
            } catch (error) {
                console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—ñ –∫–Ω–æ–ø–æ–∫ —É—á–∞—Å—Ç—ñ:", error);
            }
        },

        // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ç–∞ –æ–±—Ä–æ–±–∫–∞ –Ω–µ–∑–∞–≤–µ—Ä—à–µ–Ω–∏—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π
        checkPendingTransactions: function() {
            console.log("üîç –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–µ–∑–∞–≤–µ—Ä—à–µ–Ω–∏—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π...");

            try {
                const transactions = JSON.parse(localStorage.getItem('winix_pending_transactions') || '[]');
                const now = Date.now();

                // –§—ñ–ª—å—Ç—Ä—É—î–º–æ –∞–∫—Ç—É–∞–ª—å–Ω—ñ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó (–Ω–µ —Å—Ç–∞—Ä—à—ñ 30 —Ö–≤–∏–ª–∏–Ω)
                const pendingTransactions = transactions.filter(
                    t => (now - t.timestamp) < 1800000 && t.status === 'pending'
                );

                // –Ø–∫—â–æ —î –Ω–µ–≤–∏—Ä—ñ—à–µ–Ω—ñ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó, –æ–Ω–æ–≤–ª—é—î–º–æ UI
                if (pendingTransactions.length > 0) {
                    console.log(`‚ö†Ô∏è –ó–Ω–∞–π–¥–µ–Ω–æ ${pendingTransactions.length} –Ω–µ–∑–∞–≤–µ—Ä—à–µ–Ω–∏—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π`);

                    // –ê–∫—Ç–∏–≤—É—î–º–æ –∑–∞–ø–∏—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Å—Ç–∞–Ω—É
                    setTimeout(() => this.loadUserRaffles(true), 1000);

                    // –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É
                    if (typeof window.showToast === 'function') {
                        window.showToast("–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–∞–Ω—É –Ω–µ–∑–∞–≤–µ—Ä—à–µ–Ω–∏—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π...", 'info');
                    }

                    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∫–æ–∂–Ω—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—é
                    pendingTransactions.forEach(transaction => {
                        if (transaction.transactionId) {
                            this._checkTransactionStatus(transaction.transactionId, transaction.raffleId);
                        }
                    });
                }

                // –û—á–∏—â–∞—î–º–æ —Å—Ç–∞—Ä—ñ –∑–∞–ø–∏—Å–∏ –≤ –±—É–¥—å-—è–∫–æ–º—É –≤–∏–ø–∞–¥–∫—É
                const validTransactions = transactions.filter(
                    t => (now - t.timestamp) < 1800000
                );

                if (validTransactions.length !== transactions.length) {
                    localStorage.setItem('winix_pending_transactions', JSON.stringify(validTransactions));
                }
            } catch (e) {
                console.warn('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –Ω–µ–∑–∞–≤–µ—Ä—à–µ–Ω–∏—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π:', e);
            }
        },

        /**
         * –í–∏–ø—Ä–∞–≤–ª–µ–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è —É—á–∞—Å—Ç—ñ –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ –∑ –Ω–∞–ª–µ–∂–Ω–æ—é –æ–±—Ä–æ–±–∫–æ—é –ø–æ–º–∏–ª–æ–∫
         * @param {string} raffleId - ID —Ä–æ–∑—ñ–≥—Ä–∞—à—É
         * @param {string} raffleType - –¢–∏–ø —Ä–æ–∑—ñ–≥—Ä–∞—à—É ('main' –∞–±–æ 'daily')
         * @param {number} entryCount - –ö—ñ–ª—å–∫—ñ—Å—Ç—å –±—ñ–ª–µ—Ç—ñ–≤ (–∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º 1)
         * @returns {Promise<Object>} - –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–ø–µ—Ä–∞—Ü—ñ—ó
         */
        participateInRaffle: async function(raffleId, raffleType, entryCount = 1) {
            const userId = WinixRaffles.state.telegramId ||
                          (window.WinixAPI ? window.WinixAPI.getUserId() : null);

            if (!userId) {
                return Promise.reject(new Error('–ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–∑–Ω–∞—á–∏—Ç–∏ –≤–∞—à ID'));
            }

            // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –≤–∞–ª—ñ–¥–Ω–æ—Å—Ç—ñ raffleId
            if (!this.isValidUUID(raffleId)) {
                return Promise.reject(new Error('–ù–µ–≤–∞–ª—ñ–¥–Ω–∏–π —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä —Ä–æ–∑—ñ–≥—Ä–∞—à—É'));
            }

            // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ –≤–∂–µ —î –∞–∫—Ç–∏–≤–Ω–∏–π –∑–∞–ø–∏—Ç –¥–ª—è —Ü—å–æ–≥–æ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
            if (this.activeRequests.has(raffleId)) {
                const requestInfo = this.activeRequests.get(raffleId);
                const now = Date.now();

                // –Ø–∫—â–æ –∑–∞–ø–∏—Ç –∞–∫—Ç–∏–≤–Ω–∏–π –º–µ–Ω—à–µ 4 —Å–µ–∫—É–Ω–¥ - –æ–¥–Ω–æ–∑–Ω–∞—á–Ω–æ –±–ª–æ–∫—É—î–º–æ
                if (now - requestInfo.timestamp < 4000) {
                    console.warn(`‚ö†Ô∏è –ó–∞–ø–∏—Ç –¥–ª—è —Ä–æ–∑—ñ–≥—Ä–∞—à—É ${raffleId} –æ–±—Ä–æ–±–ª—è—î—Ç—å—Å—è, –æ—á—ñ–∫—É–π—Ç–µ`);
                    return {
                        success: false,
                        message: '–ë—É–¥—å –ª–∞—Å–∫–∞, –∑–∞—á–µ–∫–∞–π—Ç–µ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ–≥–æ –∑–∞–ø–∏—Ç—É'
                    };
                }

                // –Ø–∫—â–æ –∑–∞–ø–∏—Ç "–∑–∞–≤–∏—Å" (–±—ñ–ª—å—à–µ 10 —Å–µ–∫—É–Ω–¥), —Å–∫–∏–¥–∞—î–º–æ –π–æ–≥–æ
                if (now - requestInfo.timestamp > 10000) {
                    console.warn(`‚ö†Ô∏è –°–∫–∏–¥–∞–Ω–Ω—è –∑–∞—Å—Ç—Ä—è–≥–ª–æ–≥–æ –∑–∞–ø–∏—Ç—É –¥–ª—è —Ä–æ–∑—ñ–≥—Ä–∞—à—É ${raffleId}`);
                    this.activeRequests.delete(raffleId);
                    this._clearPendingParticipationState(raffleId);
                } else {
                    // –Ü–Ω–∞–∫—à–µ –ø—Ä–æ—Å–∏–º–æ –∑–∞—á–µ–∫–∞—Ç–∏, –∞–ª–µ –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ –∑–≤–∏—á–∞–π–Ω–∏–π –æ–±'—î–∫—Ç (–Ω–µ Promise.reject)
                    return {
                        success: false,
                        message: '–í–∞—à –∑–∞–ø–∏—Ç –≤–∂–µ –æ–±—Ä–æ–±–ª—è—î—Ç—å—Å—è. –ó–∞—á–µ–∫–∞–π—Ç–µ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è.'
                    };
                }
            }

            // –ó–º–µ–Ω—à–µ–Ω–æ –æ–±–º–µ–∂–µ–Ω–Ω—è —á–∞—Å—É –º—ñ–∂ –∑–∞–ø–∏—Ç–∞–º–∏ –¥–æ 1.5 —Å–µ–∫—É–Ω–¥–∏ –¥–ª—è –≤—Å—ñ—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
            const now = Date.now();
            const timeSinceLastRequest = now - this.lastParticipationTime;
            if (timeSinceLastRequest < 1500) {
                console.warn("‚ö†Ô∏è –ó–∞–Ω–∞–¥—Ç–æ —á–∞—Å—Ç–∏–π –∑–∞–ø–∏—Ç, –ø–æ—Ç—Ä—ñ–±–Ω–æ –∑–∞—á–µ–∫–∞—Ç–∏");
                return {
                    success: false,
                    message: '–ë—É–¥—å –ª–∞—Å–∫–∞, –∑–∞—á–µ–∫–∞–π—Ç–µ —Å–µ–∫—É–Ω–¥—É –ø–µ—Ä–µ–¥ –Ω–∞—Å—Ç—É–ø–Ω–æ—é —Å–ø—Ä–æ–±–æ—é'
                };
            }

            // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–µ–≤–∞–ª—ñ–¥–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
            if (this.invalidRaffleIds && this.invalidRaffleIds.has(raffleId)) {
                console.warn(`‚ö†Ô∏è –°–ø—Ä–æ–±–∞ —É—á–∞—Å—Ç—ñ –≤ –Ω–µ–≤–∞–ª—ñ–¥–Ω–æ–º—É —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ: ${raffleId}`);
                return {
                    success: false,
                    message: '–†–æ–∑—ñ–≥—Ä–∞—à –≤–∂–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ –∞–±–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π'
                };
            }

            // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —á–∞—Å –∑–∞–ø–∏—Ç—É
            this.lastParticipationTime = now;

            // –î–æ–¥–∞—î–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ —Ü–µ–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω–∏–π –∑–∞–ø–∏—Ç
            this.activeRequests.set(raffleId, {
                timestamp: now,
                type: raffleType,
                entryCount: entryCount
            });

            // –ó–∞–ø–∞–º'—è—Ç–æ–≤—É—î–º–æ ID –ø–æ—Ç–æ—á–Ω–æ–≥–æ –∑–∞–ø–∏—Ç—É –¥–ª—è —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó
            this.currentRequestId = raffleId + '_' + now;
            const currentRequestId = this.currentRequestId;

            // –î–æ–¥–∞—î–º–æ –≤–ª–∞—Å–Ω–∏–π —Ç–∞–π–º–∞—É—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ–≥–æ —Å–∫–∏–¥–∞–Ω–Ω—è - 12 —Å–µ–∫—É–Ω–¥
            const safetyTimeout = setTimeout(() => {
                if (this.currentRequestId === currentRequestId) {
                    console.warn("‚ö†Ô∏è –í–∏—è–≤–ª–µ–Ω–æ –¥–æ–≤–≥–æ—Ç—Ä–∏–≤–∞–ª–∏–π –∑–∞–ø–∏—Ç, –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ —Å–∫–∏–¥–∞—î–º–æ —Å—Ç–∞–Ω");
                    this.currentRequestId = null;
                    this.activeRequests.delete(raffleId);
                    this._clearPendingParticipationState(raffleId);
                }
            }, 12000);

            // –î–æ–¥–∞—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø—Ä–æ—Ü–µ—Å—É –¥–ª—è UI (—á–µ—Ä–µ–∑ 500–º—Å)
            this.processingTimers[raffleId] = setTimeout(() => {
                const buttons = document.querySelectorAll(`.join-button[data-raffle-id="${raffleId}"], .mini-raffle-button[data-raffle-id="${raffleId}"]`);
                buttons.forEach(button => {
                    if (!button.classList.contains('processing')) {
                        button.classList.add('processing');
                        button.setAttribute('data-original-text', button.textContent);
                        button.textContent = '–û–±—Ä–æ–±–∫–∞...';
                    }
                });
            }, 500);

            // –ì–µ–Ω–µ—Ä—É—î–º–æ —É–Ω—ñ–∫–∞–ª—å–Ω–∏–π ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó
            const transactionId = `${raffleId}_${now}_${Math.floor(Math.random() * 1000000)}`;

            // –û—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–æ—á–∞—Ç–∫–æ–≤–∏—Ö –¥–∞–Ω–∏—Ö –¥–ª—è –∞–Ω–∞–ª—ñ–∑—É –∑–º—ñ–Ω
            const initialCoins = parseInt(document.getElementById('user-coins')?.textContent ||
                                      localStorage.getItem('userCoins') || '0');

            // –°—Ç–≤–æ—Ä—é—î–º–æ –∑–∞–ø–∏—Å –ø—Ä–æ –ø–æ—Ç–æ—á–Ω—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—é –≤ localStorage –¥–ª—è –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ
            try {
                // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –¥–∞–Ω—ñ –ø—Ä–æ –ø–æ—Ç–æ—á–Ω—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—é
                const pendingTransaction = {
                    raffleId: raffleId,
                    timestamp: now,
                    entryCount: entryCount,
                    initialCoins: initialCoins,
                    status: 'pending',
                    transactionId: transactionId
                };

                // –î–æ–¥–∞—î–º–æ –¥–æ –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π
                this.transactions.set(transactionId, {
                    raffleId: raffleId,
                    status: 'pending',
                    timestamp: now
                });

                // –û—Ç—Ä–∏–º—É—î–º–æ —ñ—Å–Ω—É—é—á—ñ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó –∞–±–æ —Å—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤–∏–π –º–∞—Å–∏–≤
                const existingTransactions = JSON.parse(localStorage.getItem('winix_pending_transactions') || '[]');

                // –û—á–∏—â–∞—î–º–æ —Å—Ç–∞—Ä—ñ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó (—Å—Ç–∞—Ä—à—ñ 1 –≥–æ–¥–∏–Ω–∏)
                const validTransactions = existingTransactions.filter(
                    t => (now - t.timestamp) < 3600000 && t.status === 'pending'
                );

                // –î–æ–¥–∞—î–º–æ –Ω–æ–≤—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—é
                validTransactions.push(pendingTransaction);

                // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω–∏–π —Å–ø–∏—Å–æ–∫
                localStorage.setItem('winix_pending_transactions', JSON.stringify(validTransactions));
            } catch (e) {
                console.warn('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó:', e);
            }

            try {
                if (typeof window.showLoading === 'function') {
                    window.showLoading();
                }

                // –í–∏–∑–Ω–∞—á–µ–Ω–Ω—è –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –∂–µ—Ç–æ–Ω—ñ–≤ –¥–ª—è —É—á–∞—Å—Ç—ñ
                entryCount = entryCount || 1;

                // –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞–Ω—É –∫–Ω–æ–ø–æ–∫ –ø–µ—Ä–µ–¥ –∑–∞–ø–∏—Ç–æ–º
                this._updateButtonsForPendingParticipation(raffleId);

                // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ API
                if (!window.WinixAPI || typeof window.WinixAPI.apiRequest !== 'function') {
                    throw new Error('API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π. –û–Ω–æ–≤—ñ—Ç—å —Å—Ç–æ—Ä—ñ–Ω–∫—É —ñ —Å–ø—Ä–æ–±—É–π—Ç–µ –∑–Ω–æ–≤—É.');
                }

                // –ü–æ–∫—Ä–∞—â–µ–Ω–∏–π –∑–∞–ø–∏—Ç –∑ –±—ñ–ª—å—à–æ—é –∫—ñ–ª—å–∫—ñ—Å—Ç—é –æ–ø—Ü—ñ–π —ñ —É–Ω—ñ–∫–∞–ª—å–Ω–∏–º —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–æ–º
                const response = await WinixAPI.apiRequest(`user/${userId}/participate-raffle`, 'POST', {
                    raffle_id: raffleId,
                    entry_count: entryCount,
                    transaction_ref: transactionId, // –î–æ–¥–∞—î–º–æ ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è
                    _timestamp: now, // –ó–∞–ø–æ–±—ñ–≥–∞—î –∫–µ—à—É–≤–∞–Ω–Ω—é
                    _request_id: currentRequestId // –£–Ω—ñ–∫–∞–ª—å–Ω–∏–π —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –∑–∞–ø–∏—Ç—É
                }, {
                    timeout: 15000,           // –¢–∞–π–º–∞—É—Ç 15 —Å–µ–∫—É–Ω–¥
                    retries: 1,               // –û–¥–Ω–∞ –ø–æ–≤—Ç–æ—Ä–Ω–∞ —Å–ø—Ä–æ–±–∞
                    bypassThrottle: true,     // –û–±—Ö–æ–¥–∏–º–æ –∑–∞–≥–∞–ª—å–Ω–µ –æ–±–º–µ–∂–µ–Ω–Ω—è —à–≤–∏–¥–∫–æ—Å—Ç—ñ
                    allowParallel: false      // –ó–∞–±–æ—Ä–æ–Ω–∞ –ø–∞—Ä–∞–ª–µ–ª—å–Ω–∏—Ö –∑–∞–ø–∏—Ç—ñ–≤
                });

                if (typeof window.hideLoading === 'function') {
                    window.hideLoading();
                }

                if (response.status === 'success') {
                    // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞—Ç—É—Å —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó –Ω–∞ 'completed'
                    try {
                        const transactions = JSON.parse(localStorage.getItem('winix_pending_transactions') || '[]');
                        const updatedTransactions = transactions.map(t => {
                            if (t.transactionId === transactionId) {
                                return {...t, status: 'completed'};
                            }
                            return t;
                        });
                        localStorage.setItem('winix_pending_transactions', JSON.stringify(updatedTransactions));

                        // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞—Ç—É—Å —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó —É –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—ñ
                        if (this.transactions.has(transactionId)) {
                            this.transactions.set(transactionId, {
                                ...this.transactions.get(transactionId),
                                status: 'completed'
                            });
                        }
                    } catch (e) {
                        console.warn('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞—Ç—É—Å—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó:', e);
                    }

                    // –ë–µ–∑–ø–µ—á–Ω–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –∂–µ—Ç–æ–Ω—ñ–≤
                    const newCoinsBalance = response.data?.new_coins_balance !== undefined
                        ? response.data.new_coins_balance
                        : (initialCoins - entryCount);

                    // –û–Ω–æ–≤–ª—é—î–º–æ DOM –Ω–µ–≥–∞–π–Ω–æ
                    const userCoinsElement = document.getElementById('user-coins');
                    if (userCoinsElement) {
                        userCoinsElement.textContent = newCoinsBalance;
                    }

                    // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —á–∞—Å –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É
                    const balanceUpdateTime = Date.now();

                    // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –≤ localStorage –∑ —á–∞—Å–æ–º –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
                    localStorage.setItem('userCoins', newCoinsBalance.toString());
                    localStorage.setItem('winix_coins', newCoinsBalance.toString());
                    localStorage.setItem('winix_balance_update_time', balanceUpdateTime.toString());

                    // –û–Ω–æ–≤–ª—é—î–º–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –±—ñ–ª–µ—Ç—ñ–≤ —ñ —Å—Ç–∞–Ω
                    this.participatingRaffles.add(raffleId);
                    const previousTickets = this.userRaffleTickets[raffleId] || 0;
                    const newTickets = response.data?.total_entries || (previousTickets + 1);
                    this.userRaffleTickets[raffleId] = newTickets;

                    // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω–∏–π —Å—Ç–∞–Ω —É localStorage –∑ —á–∞—Å–æ–º –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
                    this.saveSyncState();

                    // –û–Ω–æ–≤–ª—é—î–º–æ –∫–Ω–æ–ø–∫–∏ —É—á–∞—Å—Ç—ñ –≤—ñ–¥—Ä–∞–∑—É
                    this.updateParticipationButtons();

                    // –í–∏–∑–Ω–∞—á–∞—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ —É—Å–ø—ñ—Ö
                    const ticketCount = this.userRaffleTickets[raffleId];
                    let message = previousTickets > 0
                        ? `–î–æ–¥–∞–Ω–æ —â–µ –æ–¥–∏–Ω –±—ñ–ª–µ—Ç! –¢–µ–ø–µ—Ä —É –≤–∞—Å ${ticketCount} –±—ñ–ª–µ—Ç—ñ–≤`
                        : '–í–∏ —É—Å–ø—ñ—à–Ω–æ –≤–∑—è–ª–∏ —É—á–∞—Å—Ç—å —É —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ';

                    // –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
                    if (typeof window.showToast === 'function') {
                        window.showToast(message, 'success');
                    } else {
                        console.log(`‚úÖ ${message}`);
                    }

                    // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –≥–ª–æ–±–∞–ª—å–Ω—É –ø–æ–¥—ñ—é –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
                    document.dispatchEvent(new CustomEvent('user-data-updated', {
                        detail: {
                            userData: {
                                coins: newCoinsBalance,
                                participations_count: this.participatingRaffles.size,
                                last_update: balanceUpdateTime
                            }
                        },
                        source: 'participation.js'
                    }));

                    // –û–Ω–æ–≤–ª—é—î–º–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —É—á–∞—Å–Ω–∏–∫—ñ–≤ —É DOM
                    this._updateParticipantsCount(raffleId);

                    return { success: true, data: response.data, message };
                } else {
                    // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞—Ç—É—Å —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó –Ω–∞ 'failed'
                    try {
                        const transactions = JSON.parse(localStorage.getItem('winix_pending_transactions') || '[]');
                        const updatedTransactions = transactions.map(t => {
                            if (t.transactionId === transactionId) {
                                return {...t, status: 'failed', error: response.message};
                            }
                            return t;
                        });
                        localStorage.setItem('winix_pending_transactions', JSON.stringify(updatedTransactions));

                        // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞—Ç—É—Å —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó —É –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—ñ
                        if (this.transactions.has(transactionId)) {
                            this.transactions.set(transactionId, {
                                ...this.transactions.get(transactionId),
                                status: 'failed',
                                error: response.message
                            });
                        }
                    } catch (e) {
                        console.warn('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞—Ç—É—Å—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó:', e);
                    }

                    // –û–±—Ä–æ–±–∫–∞ —Å–ø–µ—Ü—ñ–∞–ª—å–Ω–∏—Ö –ø–æ–º–∏–ª–æ–∫
                    if (response.message && response.message.includes('–∑–∞–Ω–∞–¥—Ç–æ –±–∞–≥–∞—Ç–æ –∑–∞–ø–∏—Ç—ñ–≤')) {
                        return {
                            success: false,
                            message: '–ó–∞–±–∞–≥–∞—Ç–æ –∑–∞–ø–∏—Ç—ñ–≤. –°–ø—Ä–æ–±—É–π—Ç–µ —á–µ—Ä–µ–∑ 15 —Å–µ–∫—É–Ω–¥'
                        };
                    } else if (response.message && (response.message.includes('raffle_not_found') ||
                               response.message.includes('–∑–∞–≤–µ—Ä—à–µ–Ω–æ'))) {
                        // –î–æ–¥–∞—î–º–æ –¥–æ –Ω–µ–≤–∞–ª—ñ–¥–Ω–∏—Ö
                        this.addInvalidRaffleId(raffleId);
                        return {
                            success: false,
                            message: '–†–æ–∑—ñ–≥—Ä–∞—à –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∞–±–æ –≤–∂–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ'
                        };
                    } else {
                        return {
                            success: false,
                            message: response.message || "–ü–æ–º–∏–ª–∫–∞ —É—á–∞—Å—Ç—ñ –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ"
                        };
                    }
                }
            } catch (error) {
                if (typeof window.hideLoading === 'function') {
                    window.hideLoading();
                }

                console.error(`‚ùå –ü–æ–º–∏–ª–∫–∞ —É—á–∞—Å—Ç—ñ –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ ${raffleId}:`, error);

                // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞—Ç—É—Å —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó –Ω–∞ 'failed'
                try {
                    const transactions = JSON.parse(localStorage.getItem('winix_pending_transactions') || '[]');
                    const updatedTransactions = transactions.map(t => {
                        if (t.transactionId === transactionId) {
                            return {...t, status: 'failed', error: error.message || '–ù–µ–≤—ñ–¥–æ–º–∞ –ø–æ–º–∏–ª–∫–∞'};
                        }
                        return t;
                    });
                    localStorage.setItem('winix_pending_transactions', JSON.stringify(updatedTransactions));

                    // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞—Ç—É—Å —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó —É –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—ñ
                    if (this.transactions.has(transactionId)) {
                        this.transactions.delete(transactionId);
                    }
                } catch (e) {
                    console.warn('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞—Ç—É—Å—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó:', e);
                }

                // –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É
                if (typeof window.showToast === 'function') {
                    window.showToast(error.message || "–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Å–ø—Ä–æ–±—ñ —É—á–∞—Å—Ç—ñ –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ", 'error');
                }

                // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –ø–æ–º–∏–ª–∫–∞ —Å—Ç–æ—Å—É—î—Ç—å—Å—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ–≥–æ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
                if (error.message && (error.message.includes('–∑–∞–≤–µ—Ä—à–µ–Ω–æ') ||
                                     error.message.includes('not found') ||
                                     error.message.includes('–Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ'))) {
                    this.addInvalidRaffleId(raffleId);
                }

                return Promise.reject(error);
            } finally {
                // –í–∏–¥–∞–ª—è—î–º–æ —Ç–∞–π–º–µ—Ä —ñ–Ω–¥–∏–∫–∞—Ü—ñ—ó
                if (this.processingTimers[raffleId]) {
                    clearTimeout(this.processingTimers[raffleId]);
                    delete this.processingTimers[raffleId];
                }

                // –û—á–∏—â–∞—î–º–æ —Ç–∞–π–º–∞—É—Ç –≤ –±—É–¥—å-—è–∫–æ–º—É –≤–∏–ø–∞–¥–∫—É
                clearTimeout(safetyTimeout);

                // –û—á–∏—â–∞—î–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –∑–∞–ø–∏—Ç –∑ –∫–∞—Ä—Ç–∏ –∞–∫—Ç–∏–≤–Ω–∏—Ö –∑–∞–ø–∏—Ç—ñ–≤
                this.activeRequests.delete(raffleId);

                // –û—á–∏—â–∞—î–º–æ ID –ø–æ—Ç–æ—á–Ω–æ–≥–æ –∑–∞–ø–∏—Ç—É
                if (this.currentRequestId === currentRequestId) {
                    this.currentRequestId = null;
                }

                // –í–∏–¥–∞–ª—è—î–º–æ —Å—Ç–∞—Ç—É—Å –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è –∑ –∫–Ω–æ–ø–æ–∫
                setTimeout(() => {
                    this._clearPendingParticipationState(raffleId);
                }, 300);
            }
        },

        /**
         * –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –¥–µ—Ç–∞–ª–µ–π —Ä–æ–∑—ñ–≥—Ä–∞—à—É
         * –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î –≥–ª–æ–±–∞–ª—å–Ω—É —Ñ—É–Ω–∫—Ü—ñ—é –ø–æ–∫–∞–∑—É –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞
         * @param {string} raffleId - ID —Ä–æ–∑—ñ–≥—Ä–∞—à—É
         */
        showRaffleDetails: function(raffleId) {
            try {
                // –ü–æ—à—É–∫ —Ä–æ–∑—ñ–≥—Ä–∞—à—É –≤ –Ω–∞—à–∏—Ö –¥–∞–Ω–∏—Ö
                const raffle = this.raffles ? this.raffles.find(r => r.id === raffleId) : null;

                // –Ø–∫—â–æ —Ä–æ–∑—ñ–≥—Ä–∞—à –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ
                if (!raffle) {
                    // –°–ø—Ä–æ–±—É—î–º–æ –∑–Ω–∞–π—Ç–∏ –≤ –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à–∞—Ö
                    if (WinixRaffles.active && WinixRaffles.active.raffles) {
                        const activeRaffle = WinixRaffles.active.raffles.find(r => r.id === raffleId);
                        if (activeRaffle) {
                            // –í–∏–∑–Ω–∞—á–∞—î–º–æ —á–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –±–µ—Ä–µ —É—á–∞—Å—Ç—å —É —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ
                            const isParticipating = this.participatingRaffles &&
                                this.participatingRaffles.has(raffleId);

                            // –û—Ç—Ä–∏–º–∞–Ω–Ω—è –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –±—ñ–ª–µ—Ç—ñ–≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
                            const ticketCount = isParticipating && this.userRaffleTickets ?
                                (this.userRaffleTickets[raffleId] || 1) : 0;

                            // –í–∏–∫–ª–∏–∫–∞—î–º–æ –≥–ª–æ–±–∞–ª—å–Ω—É —Ñ—É–Ω–∫—Ü—ñ—é
                            window.showRaffleDetailsModal(activeRaffle, isParticipating, ticketCount);
                            return;
                        }
                    }

                    window.showToast('–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–Ω–∞–π—Ç–∏ –¥–µ—Ç–∞–ª—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—É', 'error');
                    return;
                }

                // –í–∏–∑–Ω–∞—á–∞—î–º–æ —á–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –±–µ—Ä–µ —É—á–∞—Å—Ç—å —É —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ
                const isParticipating = this.participatingRaffles &&
                    this.participatingRaffles.has(raffleId);

                // –û—Ç—Ä–∏–º–∞–Ω–Ω—è –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –±—ñ–ª–µ—Ç—ñ–≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
                const ticketCount = isParticipating && this.userRaffleTickets ?
                    (this.userRaffleTickets[raffleId] || 1) : 0;

                // –í–∏–∫–ª–∏–∫–∞—î–º–æ –≥–ª–æ–±–∞–ª—å–Ω—É —Ñ—É–Ω–∫—Ü—ñ—é
                window.showRaffleDetailsModal(raffle, isParticipating, ticketCount);
            } catch (error) {
                console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –¥–µ—Ç–∞–ª–µ–π —Ä–æ–∑—ñ–≥—Ä–∞—à—É:', error);
                window.showToast('–ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –¥–µ—Ç–∞–ª–µ–π —Ä–æ–∑—ñ–≥—Ä–∞—à—É', 'error');
            }
        },

        // –û—á–∏—â–µ–Ω–Ω—è —Å–ø–∏—Å–∫—É –Ω–µ–¥—ñ–π—Å–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
        clearInvalidRaffleIds: function() {
            this.invalidRaffleIds.clear();
            console.log('üßπ –û—á–∏—â–µ–Ω–æ —Å–ø–∏—Å–æ–∫ –Ω–µ–¥—ñ–π—Å–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤');

            // –¢–∞–∫–æ–∂ –æ—á–∏—â–∞—î–º–æ –ª–æ–∫–∞–ª—å–Ω–µ —Å—Ö–æ–≤–∏—â–µ
            try {
                localStorage.removeItem('winix_invalid_raffles');
            } catch (e) {
                console.warn('‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—á–∏—Å—Ç–∏—Ç–∏ –∫–µ—à –Ω–µ–≤–∞–ª—ñ–¥–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤:', e);
            }
        },

        // –î–æ–¥–∞—î —Ä–æ–∑—ñ–≥—Ä–∞—à –¥–æ –Ω–µ–¥—ñ–π—Å–Ω–∏—Ö
        addInvalidRaffleId: function(raffleId) {
            if (!raffleId) return;

            this.invalidRaffleIds.add(raffleId);

            // –¢–∞–∫–æ–∂ –¥–æ–¥–∞—î–º–æ –¥–æ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ —Å–ø–∏—Å–∫—É
            if (WinixRaffles.state.invalidRaffleIds) {
                WinixRaffles.state.invalidRaffleIds.add(raffleId);
            }

            // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –≤ localStorage
            try {
                localStorage.setItem('winix_invalid_raffles', JSON.stringify(Array.from(this.invalidRaffleIds)));
            } catch (e) {
                console.warn('‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–±–µ—Ä–µ–≥—Ç–∏ –Ω–µ–≤–∞–ª—ñ–¥–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ:', e);
            }

            console.log(`‚ö†Ô∏è –î–æ–¥–∞–Ω–æ —Ä–æ–∑—ñ–≥—Ä–∞—à ${raffleId} –¥–æ —Å–ø–∏—Å–∫—É –Ω–µ–¥—ñ–π—Å–Ω–∏—Ö`);
            this.updateParticipationButtons();
        },

        /**
         * –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –≤–∞–ª—ñ–¥–Ω–æ—Å—Ç—ñ UUID
         * @param {string} id - UUID –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏
         * @returns {boolean} –ß–∏ –≤–∞–ª—ñ–¥–Ω–∏–π UUID
         */
        isValidUUID: function(id) {
            // –°–ø–æ—á–∞—Ç–∫—É –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å UUID –≤–∞–ª—ñ–¥–∞—Ç–æ—Ä–∞ —É WinixRaffles
            if (WinixRaffles.validators && typeof WinixRaffles.validators.isValidUUID === 'function') {
                return WinixRaffles.validators.isValidUUID(id);
            }

            // –ü–æ—Ç—ñ–º –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –≤–∞–ª—ñ–¥–∞—Ç–æ—Ä —É WinixAPI
            if (window.WinixAPI && typeof window.WinixAPI.isValidUUID === 'function') {
                return window.WinixAPI.isValidUUID(id);
            }

            // –ó–∞–ø–∞—Å–Ω–∏–π –≤–∞–ª—ñ–¥–∞—Ç–æ—Ä, —è–∫—â–æ —ñ–Ω—à—ñ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ñ
            if (!id || typeof id !== 'string') return false;
            const fullUUIDRegex = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;
            return fullUUIDRegex.test(id);
        },

        /**
         * –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞–Ω—É –∫–Ω–æ–ø–æ–∫ –ø—ñ–¥ —á–∞—Å –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è
         * @param {string} raffleId - ID —Ä–æ–∑—ñ–≥—Ä–∞—à—É
         */
        _updateButtonsForPendingParticipation: function(raffleId) {
            try {
                const buttons = document.querySelectorAll(`.join-button[data-raffle-id="${raffleId}"], .mini-raffle-button[data-raffle-id="${raffleId}"]`);
                buttons.forEach(button => {
                    button.setAttribute('data-processing', 'true');
                    button.classList.add('processing');
                    const originalText = button.textContent;
                    button.setAttribute('data-original-text', originalText);
                    button.textContent = '–û–±—Ä–æ–±–∫–∞...';
                });
            } catch (e) {
                console.warn('–ù–µ –≤–¥–∞–ª–æ—Å—è –æ–Ω–æ–≤–∏—Ç–∏ —Å—Ç–∞–Ω –∫–Ω–æ–ø–æ–∫:', e);
            }
        },

        /**
         * –û—á–∏—â–µ–Ω–Ω—è —Å—Ç–∞–Ω—É –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è
         * @param {string} raffleId - ID —Ä–æ–∑—ñ–≥—Ä–∞—à—É
         */
        _clearPendingParticipationState: function(raffleId) {
            try {
                const buttons = document.querySelectorAll(`.join-button[data-raffle-id="${raffleId}"], .mini-raffle-button[data-raffle-id="${raffleId}"]`);
                buttons.forEach(button => {
                    button.removeAttribute('data-processing');
                    button.classList.remove('processing');

                    // –í—ñ–¥–Ω–æ–≤–ª—é—î–º–æ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–∏–π —Ç–µ–∫—Å—Ç, —è–∫—â–æ –∫–Ω–æ–ø–∫–∞ –Ω–µ –ø–æ–∫–∞–∑—É—î —É—á–∞—Å—Ç—å
                    if (!button.classList.contains('participating')) {
                        const originalText = button.getAttribute('data-original-text');
                        if (originalText) {
                            button.textContent = originalText;
                        }
                        button.disabled = false;
                    }
                });
            } catch (e) {
                console.warn('–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—á–∏—Å—Ç–∏—Ç–∏ —Å—Ç–∞–Ω –∫–Ω–æ–ø–æ–∫:', e);
            }
        },

        /**
         * –û–Ω–æ–≤–ª–µ–Ω–Ω—è –∫—ñ–ª—å–∫–æ—Å—Ç—ñ —É—á–∞—Å–Ω–∏–∫—ñ–≤ —Ä–æ–∑—ñ–≥—Ä–∞—à—É –≤ DOM
         * @param {string} raffleId - ID —Ä–æ–∑—ñ–≥—Ä–∞—à—É
         */
        _updateParticipantsCount: function(raffleId) {
            try {
                // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –µ–ª–µ–º–µ–Ω—Ç –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∫—ñ–ª—å–∫–æ—Å—Ç—ñ —É—á–∞—Å–Ω–∏–∫—ñ–≤
                const participantsCountElement = document.querySelector(
                    `.raffle-card[data-raffle-id="${raffleId}"] .participants-count .count, ` +
                    `.main-raffle .participants-info .participants-count`
                );

                if (participantsCountElement) {
                    // –û—Ç—Ä–∏–º—É—î–º–æ –ø–æ—Ç–æ—á–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è —ñ –∑–±—ñ–ª—å—à—É—î–º–æ –π–æ–≥–æ
                    const currentCount = parseInt(participantsCountElement.textContent.replace(/\s+/g, '')) || 0;
                    participantsCountElement.textContent = (currentCount + 1).toString()
                        .replace(/\B(?=(\d{3})+(?!\d))/g, " "); // –§–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è –∑ –ø—Ä–æ–±—ñ–ª–∞–º–∏ –º—ñ–∂ —Ä–æ–∑—Ä—è–¥–∞–º–∏
                }
            } catch (e) {
                console.warn("‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –æ–Ω–æ–≤–∏—Ç–∏ –ª—ñ—á–∏–ª—å–Ω–∏–∫ —É—á–∞—Å–Ω–∏–∫—ñ–≤:", e);
            }
        },

        /**
         * –ê–≤–∞—Ä—ñ–π–Ω–µ —Å–∫–∏–¥–∞–Ω–Ω—è —Å—Ç–∞–Ω—É
         */
        resetState: function() {
            console.log('üîÑ –í–∏–∫–æ–Ω—É—î—Ç—å—Å—è —Å–∫–∏–¥–∞–Ω–Ω—è —Å—Ç–∞–Ω—É participation...');

            // –°–∫–∏–¥–∞—î–º–æ –≤—Å—ñ –ø—Ä–∞–ø–æ—Ä—Ü—ñ
            this.lastParticipationTime = 0;
            this.lastStateReset = Date.now();
            this.currentRequestId = null;

            // –û—á–∏—â–∞—î–º–æ –≤—Å—ñ –∞–∫—Ç–∏–≤–Ω—ñ –∑–∞–ø–∏—Ç–∏
            this.activeRequests.clear();

            // –û—á–∏—â–∞—î–º–æ —á–µ—Ä–≥—É –∑–∞–ø–∏—Ç—ñ–≤
            this.pendingRequests = [];

            // –í–∏–¥–∞–ª—è—î–º–æ —Ç–∞–π–º–µ—Ä–∏ —ñ–Ω–¥–∏–∫–∞—Ü—ñ—ó
            for (const raffleId in this.processingTimers) {
                clearTimeout(this.processingTimers[raffleId]);
            }
            this.processingTimers = {};

            // –í–∏–¥–∞–ª—è—î–º–æ —Å—Ç–∞—Ç—É—Å –æ–±—Ä–æ–±–∫–∏ –∑ —É—Å—ñ—Ö –∫–Ω–æ–ø–æ–∫
            try {
                const buttons = document.querySelectorAll('.join-button.processing, .mini-raffle-button.processing');
                buttons.forEach(button => {
                    button.removeAttribute('data-processing');
                    button.classList.remove('processing');
                    button.disabled = false;

                    // –í—ñ–¥–Ω–æ–≤–ª—é—î–º–æ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–∏–π —Ç–µ–∫—Å—Ç
                    const originalText = button.getAttribute('data-original-text');
                    if (originalText && !button.classList.contains('participating')) {
                        button.textContent = originalText;
                    }
                });
            } catch (e) {
                console.warn('–ù–µ –≤–¥–∞–ª–æ—Å—è —Å–∫–∏–Ω—É—Ç–∏ —Å—Ç–∞–Ω –∫–Ω–æ–ø–æ–∫:', e);
            }

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –≤—Å—ñ –Ω–µ–∑–∞–≤–µ—Ä—à–µ–Ω—ñ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó
            this.checkPendingTransactions();

            console.log('‚úÖ –°—Ç–∞–Ω –º–æ–¥—É–ª—è —É—á–∞—Å—Ç—ñ —É—Å–ø—ñ—à–Ω–æ —Å–∫–∏–Ω—É—Ç–æ');
            return true;
        }
    };

    // –î–æ–¥–∞—î–º–æ –º–æ–¥—É–ª—å —É—á–∞—Å—Ç—ñ –¥–æ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–æ–¥—É–ª—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
    WinixRaffles.participation = participation;

    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –º–æ–¥—É–ª—è –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
    document.addEventListener('DOMContentLoaded', function() {
        // –°–∫–∏–¥–∞—î–º–æ —Å—Ç–∞–Ω –∑–∞–ø–∏—Ç—É –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
        if (window.WinixRaffles && window.WinixRaffles.participation) {
            window.WinixRaffles.participation.lastParticipationTime = 0;
            window.WinixRaffles.participation.activeRequests.clear();
        }

        if (WinixRaffles.state.isInitialized) {
            participation.init();
        } else {
            // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ—ó —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
            document.addEventListener('winix-raffles-initialized', function() {
                participation.init();
            });
        }
    });

    // –î–æ–¥–∞–ª–∏ –≥–ª–æ–±–∞–ª—å–Ω–∏–π –æ–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –≤—ñ–∫–Ω–∞, —â–æ–± –æ–±—Ä–æ–±–ª—è—Ç–∏ –ø–æ–º–∏–ª–∫–∏ —Ç–∞ —Å–∫–∏–¥–∞—Ç–∏ —Å—Ç–∞–Ω
    window.addEventListener('error', function(event) {
        console.error('üö® –ì–ª–æ–±–∞–ª—å–Ω–∞ –ø–æ–º–∏–ª–∫–∞ –≤ participation:', event.error);
        if (participation && participation.activeRequests.size > 0) {
            console.warn('‚ö†Ô∏è –í–∏—è–≤–ª–µ–Ω–æ –∞–∫—Ç–∏–≤–Ω—ñ –∑–∞–ø–∏—Ç–∏ –ø—ñ–¥ —á–∞—Å –ø–æ–º–∏–ª–∫–∏. –°–∫–∏–¥–∞—î–º–æ —Å—Ç–∞–Ω...');
            participation.resetState();
        }

        // –Ø–∫—â–æ —î —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è, —Ö–æ–≤–∞—î–º–æ –π–æ–≥–æ
        if (typeof window.hideLoading === 'function') {
            window.hideLoading();
        }
    });

    // –î–æ–¥–∞–ª–∏ –æ–±—Ä–æ–±–Ω–∏–∫ –Ω–µ–æ–±—Ä–æ–±–ª–µ–Ω–∏—Ö –ø–æ–º–∏–ª–æ–∫
    window.addEventListener('unhandledrejection', function(event) {
        if (participation && participation.activeRequests.size > 0) {
            console.warn('‚ö†Ô∏è –í–∏—è–≤–ª–µ–Ω–æ –Ω–µ–æ–±—Ä–æ–±–ª–µ–Ω—É Promise –ø–æ–º–∏–ª–∫—É –ø—Ä–∏ —É—á–∞—Å—Ç—ñ, —Å–∫–∏–¥–∞—î–º–æ —Å—Ç–∞–Ω...');
            participation.resetState();
        }
    });

    console.log('‚úÖ –ú–æ–¥—É–ª—å —É—á–∞—Å—Ç—ñ —É—Å–ø—ñ—à–Ω–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ');
})();