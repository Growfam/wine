/**
 * WINIX - –°–∏—Å—Ç–µ–º–∞ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ (participation.js)
 * –û–ø—Ç–∏–º—ñ–∑–æ–≤–∞–Ω–∏–π —Ç–∞ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–∏–π –º–æ–¥—É–ª—å –¥–ª—è –æ–±—Ä–æ–±–∫–∏ —É—á–∞—Å—Ç—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à–∞—Ö
 * –í–∏–ø—Ä–∞–≤–ª–µ–Ω–æ –ø—Ä–æ–±–ª–µ–º–∏ –∑ —É–º–æ–≤–∞–º–∏ –≥–æ–Ω–∫–∏, —Å–ø–∏—Å–∞–Ω–Ω—è–º –∂–µ—Ç–æ–Ω—ñ–≤ —Ç–∞ –æ–±—Ä–æ–±–∫–æ—é –ø–æ–º–∏–ª–æ–∫
 * @version 3.6.0
 */

(function() {
    'use strict';
// –¢—Ä–µ–∫–µ—Ä –ø–æ–∫–∞–∑–∞–Ω–∏—Ö —Å–ø–æ–≤—ñ—â–µ–Ω—å –¥–ª—è –∑–∞–ø–æ–±—ñ–≥–∞–Ω–Ω—è –¥—É–±–ª—é–≤–∞–Ω–Ω—é
const shownNotifications = new Set();
if (typeof window.showToast === 'function') {
    const originalShowToast = window.showToast;
    window.showToast = function(message, type) {
        // –°—Ç–≤–æ—Ä—é—î–º–æ —É–Ω—ñ–∫–∞–ª—å–Ω–∏–π –∫–ª—é—á –¥–ª—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        const messageKey = message + (type || '');

        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –Ω–µ –ø–æ–∫–∞–∑—É–≤–∞–ª–∏ —Ü–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–µ—â–æ–¥–∞–≤–Ω–æ
        if (shownNotifications.has(messageKey)) {
            console.log(`üí¨ –ü—Ä–æ–ø—É—â–µ–Ω–æ –¥—É–±–ª—ñ–∫–∞—Ç —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è: ${message}`);
            return;
        }

        // –î–æ–¥–∞—î–º–æ –¥–æ —Å–ø–∏—Å–∫—É –ø–æ–∫–∞–∑–∞–Ω–∏—Ö
        shownNotifications.add(messageKey);

        // –í–∏–¥–∞–ª—è—î–º–æ –∑—ñ —Å–ø–∏—Å–∫—É —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
        setTimeout(() => {
            shownNotifications.delete(messageKey);
        }, 5000);

        // –í–∏–∫–ª–∏–∫–∞—î–º–æ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω—É —Ñ—É–Ω–∫—Ü—ñ—é
        return originalShowToast.call(this, message, type);
    };
    console.log('‚úÖ –§—É–Ω–∫—Ü—ñ—é showToast —É—Å–ø—ñ—à–Ω–æ –ø–∞—Ç—á–µ–Ω–æ –¥–ª—è –¥–µ–¥—É–ø–ª—ñ–∫–∞—Ü—ñ—ó —Å–ø–æ–≤—ñ—â–µ–Ω—å');
}

    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–æ–¥—É–ª—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
    if (typeof window.WinixRaffles === 'undefined') {
        console.error('‚ùå WinixRaffles –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ! –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—è, —â–æ core.js –ø—ñ–¥–∫–ª—é—á–µ–Ω–æ —Ä–∞–Ω—ñ—à–µ participation.js');
        return;
    }

    // –ü—ñ–¥–º–æ–¥—É–ª—å –¥–ª—è —É—á–∞—Å—Ç—ñ –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à–∞—Ö
    const participation = {
        // –°–¢–†–û–ì–û –ö–û–ù–¢–†–û–õ–¨–û–í–ê–ù–ò–ô –†–ï–ñ–ò–ú –£–ß–ê–°–¢–Ü
        safeModeEnabled: true, // –£–≤—ñ–º–∫–Ω–µ–Ω–Ω—è –±–µ–∑–ø–µ—á–Ω–æ–≥–æ —Ä–µ–∂–∏–º—É —É—á–∞—Å—Ç—ñ
        requestLock: false, // –ì–ª–æ–±–∞–ª—å–Ω–µ –±–ª–æ–∫—É–≤–∞–Ω–Ω—è –≤—Å—ñ—Ö –∑–∞–ø–∏—Ç—ñ–≤ —É—á–∞—Å—Ç—ñ
        totalRequestCount: 0, // –õ—ñ—á–∏–ª—å–Ω–∏–∫ —É—Å—ñ—Ö –∑–∞–ø–∏—Ç—ñ–≤
        pendingRequests: {}, // –ó–∞–ø–∏—Ç–∏ –≤ –æ—á—ñ–∫—É–≤–∞–Ω–Ω—ñ –∑–∞ raffleId
        serverSyncInterval: null, // –Ü–Ω—Ç–µ—Ä–≤–∞–ª —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó –∑ —Å–µ—Ä–≤–µ—Ä–æ–º
        lastServerState: {}, // –û—Å—Ç–∞–Ω–Ω—ñ–π –≤—ñ–¥–æ–º–∏–π —Å—Ç–∞–Ω —Å–µ—Ä–≤–µ—Ä–∞
        localOperations: [], // –°–ø–∏—Å–æ–∫ –ª–æ–∫–∞–ª—å–Ω–∏—Ö –æ–ø–µ—Ä–∞—Ü—ñ–π –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂—É–≤–∞–Ω–Ω—è

        // –ú–Ω–æ–∂–∏–Ω–∞ ID —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤, —É —è–∫–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á —É–∂–µ –±–µ—Ä–µ —É—á–∞—Å—Ç—å
        participatingRaffles: new Set(),

        // –ö—ñ–ª—å–∫—ñ—Å—Ç—å –±—ñ–ª–µ—Ç—ñ–≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
        userRaffleTickets: {},

        // –û—Å—Ç–∞–Ω–Ω—ñ–π –≤—ñ–¥–æ–º–∏–π –±–∞–ª–∞–Ω—Å –∂–µ—Ç–æ–Ω—ñ–≤ –∑ —Å–µ—Ä–≤–µ—Ä–∞
        lastKnownBalance: null,
        lastBalanceUpdateTime: 0,

        // –ö–µ—à –Ω–µ–≤–∞–ª—ñ–¥–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ (–¥–ª—è –∫—Ä–∞—â–æ—ó —Ä–æ–±–æ—Ç–∏ UI)
        invalidRaffleIds: new Set(),

        // –ö–∞—Ä—Ç–∞ –∞–∫—Ç–∏–≤–Ω–∏—Ö –∑–∞–ø–∏—Ç—ñ–≤ –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ —Ä–æ–∑—ñ–≥—Ä–∞—à—É –∑ —É–Ω—ñ–∫–∞–ª—å–Ω–∏–º–∏ ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π
        activeTransactions: new Map(),

        // –ß–∞—Å–æ–≤—ñ –º—ñ—Ç–∫–∏ –æ—Å—Ç–∞–Ω–Ω—ñ—Ö –∑–∞–ø–∏—Ç—ñ–≤ –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
        lastRequestTimes: {},

        // –ñ—É—Ä–Ω–∞–ª —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π –¥–ª—è –≤—ñ–¥—Å–ª—ñ–¥–∫–æ–≤—É–≤–∞–Ω–Ω—è —Ç–∞ –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
        transactionLog: [],

        // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∑–∞–ø–∏—Å—ñ–≤ —É –∂—É—Ä–Ω–∞–ª—ñ
        maxLogSize: 50,

        // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∂–µ—Ç–æ–Ω—ñ–≤ –¥–ª—è —É—á–∞—Å—Ç—ñ
        MAX_ENTRY_COUNT: 100,

        // –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–π —ñ–Ω—Ç–µ—Ä–≤–∞–ª –º—ñ–∂ –∑–∞–ø–∏—Ç–∞–º–∏ (–º—Å)
        MIN_REQUEST_INTERVAL: 2000, // 2 —Å–µ–∫—É–Ω–¥–∏ –º—ñ–∂ –∑–∞–ø–∏—Ç–∞–º–∏

        // –¢–∞–π–º–∞—É—Ç –¥–ª—è –≤–∏—è–≤–ª–µ–Ω–Ω—è "–∑–∞–≤–∏—Å–∞—é—á–∏—Ö" –∑–∞–ø–∏—Ç—ñ–≤ (–º—Å)
        REQUEST_TIMEOUT: 15000,

        // –°—Ç–∞–Ω –æ–±—Ä–æ–±–Ω–∏–∫–∞ –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π
        transactionMonitorActive: false,

        // –ß–∞—Å –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó
        lastSyncTime: 0,

        // –õ—ñ—á–∏–ª—å–Ω–∏–∫ –¥–ª—è –¥–µ–±–∞–≥—É –ø—Ä–æ–±–ª–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó
        syncCounter: 0,

        // –¢–∞–π–º–µ—Ä –¥–ª—è –≤—ñ–¥–∫–ª–∞–¥–µ–Ω–æ—ó —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó
        syncTimer: null,

        // –ü—Ä–∞–ø–æ—Ä–µ—Ü—å –¥–ª—è –∑–∞–ø–æ–±—ñ–≥–∞–Ω–Ω—è –ø–æ–≤—Ç–æ—Ä–Ω–∏–º —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è–º
        isSyncInProgress: false,

        // –ü—Ä–∞–ø–æ—Ä–µ—Ü—å –¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª—é —Å—Ç–∞–Ω—É –æ–±—Ä–æ–±–∫–∏ –∑–∞–ø–∏—Ç—É
        requestInProgress: false,

        // –ß–∞—Å –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ –∑–∞–ø–∏—Ç—É —É—á–∞—Å—Ç—ñ
        lastParticipationTime: 0,

        // –î–û–î–ê–ù–û: –ü—Ä–∞–ø–æ—Ä–µ—Ü—å –ø—Ä–∏–º—É—Å–æ–≤–æ—ó —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó –ø—ñ—Å–ª—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –∑–∞–ø–∏—Ç—É
        needsForcedSync: false,

        // –î–û–î–ê–ù–û: –¢–∞–π–º–µ—Ä –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∑ —Å–µ—Ä–≤–µ—Ä–∞ –ø—ñ—Å–ª—è –∑–∞–ø–∏—Ç—É
        serverCheckTimer: null,

        // –î–û–î–ê–ù–û: –ö–µ—à —Ä–µ–∞–ª—å–Ω–∏—Ö –¥–∞–Ω–∏—Ö –∑ —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è –∑–∞–ø–æ–±—ñ–≥–∞–Ω–Ω—è –¥–µ—Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó
        serverDataCache: {
            // –ß–∞—Å –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–µ—à—É
            lastUpdate: 0,
            // –†–æ–∑—ñ–≥—Ä–∞—à—ñ, –≤ —è–∫–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –±–µ—Ä–µ —É—á–∞—Å—Ç—å –∑–∞ –¥–∞–Ω–∏–º–∏ —Å–µ—Ä–≤–µ—Ä–∞
            participatingRaffles: new Set(),
            // –ö—ñ–ª—å–∫—ñ—Å—Ç—å –±—ñ–ª–µ—Ç—ñ–≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ —Ä–æ–∑—ñ–≥—Ä–∞—à—É –∑–∞ –¥–∞–Ω–∏–º–∏ —Å–µ—Ä–≤–µ—Ä–∞
            userRaffleTickets: {}
        },

        // –î–û–î–ê–ù–û: –ü—Ä–∞–ø–æ—Ä–µ—Ü—å –±–ª–æ–∫—É–≤–∞–Ω–Ω—è –¥–ª—è –∑–∞–ø–æ–±—ñ–≥–∞–Ω–Ω—è race condition
        syncLock: false,

        // –î–û–î–ê–ù–û: –ü—Ä–∞–ø–æ—Ä–µ—Ü—å –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ—Å—Ç—ñ –≤—ñ–¥–∫–ª–∞–¥–µ–Ω–æ—ó —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó
        pendingSyncRequested: false,

        // –î–û–î–ê–ù–û: –õ—ñ—á–∏–ª—å–Ω–∏–∫ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π
        transactionCounter: 0,

        /**
         * –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –º–æ–¥—É–ª—è
         */
        init: function() {
            console.log('üéØ –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –º–æ–¥—É–ª—è —É—á–∞—Å—Ç—ñ –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à–∞—Ö...');

            // –û—á–∏—â–µ–Ω–Ω—è —Å—Ç–∞–Ω—É –ø–µ—Ä–µ–¥ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—î—é
            this._cleanupState();

            // –ó–ú–Ü–ù–ï–ù–û: –°–ø–æ—á–∞—Ç–∫—É –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –¥–∞–Ω—ñ –∑ —Å–µ—Ä–≤–µ—Ä–∞, –∞ –ø–æ—Ç—ñ–º –≤—ñ–¥–Ω–æ–≤–ª—é—î–º–æ –∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Å—Ö–æ–≤–∏—â–∞
            // —è–∫—â–æ —Å–µ—Ä–≤–µ—Ä –ø–æ–≤–µ—Ä–Ω—É–≤ –ø–æ–º–∏–ª–∫—É
            this.loadUserRaffles(true)
                .then(() => {
                    console.log('‚úÖ –£—Å–ø—ñ—à–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ –¥–∞–Ω—ñ –ø—Ä–æ —É—á–∞—Å—Ç—å –∑ —Å–µ—Ä–≤–µ—Ä–∞');
                })
                .catch(error => {
                    console.warn('‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –¥–∞–Ω—ñ –∑ —Å–µ—Ä–≤–µ—Ä–∞, –≤—ñ–¥–Ω–æ–≤–ª—é—î–º–æ –∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Å—Ö–æ–≤–∏—â–∞:', error);
                    // –¢–µ–ø–µ—Ä –≤—ñ–¥–Ω–æ–≤–ª—é—î–º–æ –∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Å—Ö–æ–≤–∏—â–∞ —Ç—ñ–ª—å–∫–∏ —è–∫—â–æ —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π
                    this._restoreParticipationFromStorage();
                });

            // –ó–∞–ø—É—Å–∫ –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É —Å—Ç–∞–Ω—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π
            this._startTransactionMonitor();

            // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–µ–∑–∞–≤–µ—Ä—à–µ–Ω–∏—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π
            this._checkPendingTransactions();

            // –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –º–µ—Ö–∞–Ω—ñ–∑–º—ñ–≤ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó –¥–∞–Ω–∏—Ö
            this._setupSyncMechanisms();

            // –î–æ–¥–∞–≤–∞–Ω–Ω—è –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –ø–æ–¥—ñ–π
            this._setupEventHandlers();

            // –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è –∑ –ª–æ–∫–∞–ª—å–Ω–æ—é –±–∞–∑–æ—é –¥–∞–Ω–∏—Ö
            this._syncWithIndexedDB();

            console.log('‚úÖ –ú–æ–¥—É–ª—å —É—á–∞—Å—Ç—ñ –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à–∞—Ö —É—Å–ø—ñ—à–Ω–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ');

            // –ó–∞–ø—É—Å–∫–∞—î–º–æ –ø–µ—Ä—ñ–æ–¥–∏—á–Ω—É –ø–µ—Ä–µ–≤—ñ—Ä–∫—É —Å—Ç–∞–Ω—É —É—á–∞—Å—Ç—ñ
            if (!this.serverSyncInterval) {
                this.serverSyncInterval = setInterval(() => {
                    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ç–∞ –≤–∏–ø—Ä–∞–≤–ª—è—î–º–æ —Å—Ç–∞–Ω —É—á–∞—Å—Ç—ñ –∫–æ–∂–Ω—ñ 3 —Ö–≤–∏–ª–∏–Ω–∏
                    if (document.visibilityState === 'visible') {
                        this.verifyAndFixParticipationState()
                            .catch(e => console.warn('–ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Å—Ç–∞–Ω—É:', e));
                    }
                }, 3 * 60 * 1000); // 3 —Ö–≤–∏–ª–∏–Ω–∏

                console.log('üîÑ –ó–∞–ø—É—â–µ–Ω–æ –ø–µ—Ä—ñ–æ–¥–∏—á–Ω—É –ø–µ—Ä–µ–≤—ñ—Ä–∫—É —Ç–∞ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è —Å—Ç–∞–Ω—É —É—á–∞—Å—Ç—ñ');
            }

            // –î–û–î–ê–ù–û: –ó–∞–ø—É—Å–∫ –¥–æ–¥–∞—Ç–∫–æ–≤–æ–≥–æ —Ç–∞–π–º–µ—Ä–∞ –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Å—Ç–∞–Ω—É —Å–µ—Ä–≤–µ—Ä–∞
            this._startServerCheckTimer();

            // –û–¥—Ä–∞–∑—É –∑–∞–ø—É—Å–∫–∞—î–º–æ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—é –±–∞–ª–∞–Ω—Å—É
            this._getServerBalance();
        },

        /**
         * –û—á–∏—â–µ–Ω–Ω—è —Å—Ç–∞–Ω—É –ø–µ—Ä–µ–¥ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—î—é
         * @private
         */
        _cleanupState: function() {
            // –û—á–∏—â–µ–Ω–Ω—è –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π
            this.activeTransactions.clear();

            // –°–∫–∏–¥–∞–Ω–Ω—è —Ç–∞–π–º–µ—Ä—É —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó
            if (this.syncTimer) {
                clearTimeout(this.syncTimer);
                this.syncTimer = null;
            }

            // –î–û–î–ê–ù–û: –°–∫–∏–¥–∞–Ω–Ω—è —Ç–∞–π–º–µ—Ä–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Å—Ç–∞–Ω—É —Å–µ—Ä–≤–µ—Ä–∞
            if (this.serverCheckTimer) {
                clearInterval(this.serverCheckTimer);
                this.serverCheckTimer = null;
            }

            // –°–∫–∏–¥–∞–Ω–Ω—è –ø—Ä–∞–ø–æ—Ä—Ü—è —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó
            this.isSyncInProgress = false;

            // –°–∫–∏–¥–∞–Ω–Ω—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –±–ª–æ–∫—É–≤–∞–Ω–Ω—è
            this.requestLock = false;

            // –°–∫–∏–¥–∞–Ω–Ω—è —Å—Ç–∞—Ç—É—Å—É –æ–±—Ä–æ–±–∫–∏ –∑–∞–ø–∏—Ç—É
            this.requestInProgress = false;

            // –°–∫–∏–¥–∞–Ω–Ω—è –ø—Ä–∞–ø–æ—Ä—Ü—è –ø—Ä–∏–º—É—Å–æ–≤–æ—ó —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó
            this.needsForcedSync = false;

            // –î–û–î–ê–ù–û: –°–∫–∏–¥–∞–Ω–Ω—è –ø—Ä–∞–ø–æ—Ä—Ü—è –±–ª–æ–∫—É–≤–∞–Ω–Ω—è —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó
            this.syncLock = false;

            // –î–û–î–ê–ù–û: –°–∫–∏–¥–∞–Ω–Ω—è –ø—Ä–∞–ø–æ—Ä—Ü—è –≤—ñ–¥–∫–ª–∞–¥–µ–Ω–æ—ó —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó
            this.pendingSyncRequested = false;

            // –û—á–∏—â–µ–Ω–Ω—è —Å—Ç–∞—Ä–∏—Ö –∑–∞–ø–∏—Å—ñ–≤ –Ω–µ–∑–∞–≤–µ—Ä—à–µ–Ω–∏—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π —É localStorage
            try {
                const pendingTransactions = JSON.parse(localStorage.getItem('winix_pending_transactions') || '[]');
                if (Array.isArray(pendingTransactions) && pendingTransactions.length > 0) {
                    const now = Date.now();
                    // –ó–∞–ª–∏—à–∞—î–º–æ —Ç—ñ–ª—å–∫–∏ –Ω–µ—â–æ–¥–∞–≤–Ω—ñ (–Ω–µ —Å—Ç–∞—Ä—à—ñ 10 —Ö–≤–∏–ª–∏–Ω)
                    const recentTransactions = pendingTransactions.filter(
                        t => (now - t.timestamp < 10 * 60 * 1000)
                    );
                    localStorage.setItem('winix_pending_transactions', JSON.stringify(recentTransactions));
                }
            } catch (e) {
                console.warn('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –æ—á–∏—â–µ–Ω–Ω—è –Ω–µ–∑–∞–≤–µ—Ä—à–µ–Ω–∏—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π:', e);
                // –Ø–∫—â–æ –ø–æ–º–∏–ª–∫–∞, –ø—Ä–æ—Å—Ç–æ –æ—á–∏—â–∞—î–º–æ –≤–µ—Å—å —Å–ø–∏—Å–æ–∫
                localStorage.removeItem('winix_pending_transactions');
            }

            // –ü–æ–∫—Ä–∞—â—É—î–º–æ –æ—á–∏—â–µ–Ω–Ω—è –∫–Ω–æ–ø–æ–∫, —è–∫—ñ –º–æ–≥–ª–∏ –∑–∞–ª–∏—à–∏—Ç–∏—Å—è –≤ —Å—Ç–∞–Ω—ñ "processing"
            document.querySelectorAll('.join-button.processing, .mini-raffle-button.processing').forEach(button => {
                button.classList.remove('processing');
                button.disabled = false;

                // –í—ñ–¥–Ω–æ–≤–ª—é—î–º–æ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–∏–π —Ç–µ–∫—Å—Ç
                const originalText = button.getAttribute('data-original-text');
                if (originalText) {
                    button.textContent = originalText;
                } else {
                    // –Ø–∫—â–æ –Ω–µ–º–∞—î –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç—É, –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏–π
                    const isMini = button.classList.contains('mini-raffle-button');
                    const entryFee = button.getAttribute('data-entry-fee') || '1';
                    button.textContent = isMini ?
                        '–í–∑—è—Ç–∏ —É—á–∞—Å—Ç—å' :
                        `–í–∑—è—Ç–∏ —É—á–∞—Å—Ç—å –∑–∞ ${entryFee} –∂–µ—Ç–æ–Ω${parseInt(entryFee) > 1 ? '–∏' : ''}`;
                }
            });
        },

        /**
         * –û—á–∏—â–µ–Ω–Ω—è –≤—Å—ñ—Ö –∫–µ—à—ñ–≤ —Ç–∞ –¥–∞–Ω–∏—Ö —É—á–∞—Å—Ç—ñ
         * –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –¥–ª—è –ø—Ä–∏–º—É—Å–æ–≤–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞–Ω—É
         * @private
         */
        _clearAllCaches: function() {
            console.log('üßπ –û—á–∏—â–µ–Ω–Ω—è –≤—Å—ñ—Ö –∫–µ—à—ñ–≤ —Ç–∞ –¥–∞–Ω–∏—Ö —É—á–∞—Å—Ç—ñ...');

            // –û—á–∏—â–∞—î–º–æ –ª–æ–∫–∞–ª—å–Ω—ñ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏ –¥–∞–Ω–∏—Ö
            this.participatingRaffles.clear();
            this.userRaffleTickets = {};
            this.invalidRaffleIds.clear();

            // –û—á–∏—â–∞—î–º–æ –∫–µ—à —Å–µ—Ä–≤–µ—Ä–Ω–∏—Ö –¥–∞–Ω–∏—Ö
            this.serverDataCache.participatingRaffles.clear();
            this.serverDataCache.userRaffleTickets = {};
            this.serverDataCache.lastUpdate = 0;

            // –û—á–∏—â–∞—î–º–æ –¥–∞–Ω—ñ –≤ localStorage, –ø–æ–≤'—è–∑–∞–Ω—ñ –∑ —É—á–∞—Å—Ç—é
            try {
                localStorage.removeItem('winix_participation_state');

                // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –≤—Å—ñ –∫–ª—é—á—ñ, –ø–æ–≤'—è–∑–∞–Ω—ñ –∑ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ—é —É—á–∞—Å—Ç—é
                const keysToRemove = [];
                for (let i = 0; i < localStorage.length; i++) {
                    const key = localStorage.key(i);
                    if (key && (
                        key.startsWith('winix_confirmed_participation_') ||
                        key === 'winix_last_transaction' ||
                        key === 'winix_pending_transactions' ||
                        key === 'winix_invalid_raffles' ||
                        key === 'winix_user_tickets'
                    )) {
                        keysToRemove.push(key);
                    }
                }

                // –í–∏–¥–∞–ª—è—î–º–æ –≤—Å—ñ –∑–Ω–∞–π–¥–µ–Ω—ñ –∫–ª—é—á—ñ
                keysToRemove.forEach(key => {
                    localStorage.removeItem(key);
                    console.log(`üßπ –í–∏–¥–∞–ª–µ–Ω–æ –∫–µ—à: ${key}`);
                });
            } catch (e) {
                console.warn('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –æ—á–∏—â–µ–Ω–Ω—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Å—Ö–æ–≤–∏—â–∞:', e);
            }

            // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –ø—Ä–∞–ø–æ—Ä–µ—Ü—å –ø—Ä–∏–º—É—Å–æ–≤–æ—ó —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó –∑ —Å–µ—Ä–≤–µ—Ä–æ–º
            this.needsForcedSync = true;

            console.log('‚úÖ –í—Å—ñ –∫–µ—à—ñ —Ç–∞ –¥–∞–Ω—ñ —É—á–∞—Å—Ç—ñ –æ—á–∏—â–µ–Ω–æ');
        },

        /**
         * –ó–∞–ø—É—Å–∫ —Ç–∞–π–º–µ—Ä–∞ –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Å—Ç–∞–Ω—É —Å–µ—Ä–≤–µ—Ä–∞
         * @private
         */
        _startServerCheckTimer: function() {
            // –°–∫–∏–¥–∞—î–º–æ —Ç–∞–π–º–µ—Ä, —è–∫—â–æ –≤—ñ–Ω —î
            if (this.serverCheckTimer) {
                clearInterval(this.serverCheckTimer);
            }

            // –ó–∞–ø—É—Å–∫–∞—î–º–æ –Ω–æ–≤–∏–π —Ç–∞–π–º–µ—Ä
            this.serverCheckTimer = setInterval(() => {
                // –í–∏–∫–æ–Ω—É—î–º–æ, —Ç—ñ–ª—å–∫–∏ —è–∫—â–æ —Å—Ç–æ—Ä—ñ–Ω–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞
                if (document.visibilityState === 'visible') {
                    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –ø–æ—Ç—Ä—ñ–±–Ω–∞ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è
                    const now = Date.now();

                    // –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑—É—î–º–æ –∑ —Å–µ—Ä–≤–µ—Ä–æ–º, —è–∫—â–æ:
                    // 1. –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –ø—Ä–∞–ø–æ—Ä–µ—Ü—å –ø—Ä–∏–º—É—Å–æ–≤–æ—ó —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó
                    // 2. –ê–±–æ –º–∏–Ω—É–ª–æ –±—ñ–ª—å—à–µ 5 —Ö–≤–∏–ª–∏–Ω –∑ –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–µ—à—É
                    if (this.needsForcedSync || now - this.serverDataCache.lastUpdate > 5 * 60 * 1000) {
                        console.log('üîÑ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–∞–Ω—É —Å–µ—Ä–≤–µ—Ä–∞...');
                        this._updateServerDataCache()
                            .then(changed => {
                                if (changed) {
                                    console.log('üìä –í–∏—è–≤–ª–µ–Ω–æ –∑–º—ñ–Ω–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ, –æ–Ω–æ–≤–ª—é—î–º–æ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å');
                                    this.updateParticipationButtons();
                                }
                                // –°–∫–∏–¥–∞—î–º–æ –ø—Ä–∞–ø–æ—Ä–µ—Ü—å –Ω–µ–∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É
                                this.needsForcedSync = false;
                            })
                            .catch(err => {
                                console.warn('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–µ—à—É —Å–µ—Ä–≤–µ—Ä–∞:', err);
                                // –ó–∞–ª–∏—à–∞—î–º–æ –ø—Ä–∞–ø–æ—Ä–µ—Ü—å –¥–ª—è –Ω–∞—Å—Ç—É–ø–Ω–æ—ó —Å–ø—Ä–æ–±–∏
                            });
                    }
                }
            }, 20000); // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∫–æ–∂–Ω—ñ 20 —Å–µ–∫—É–Ω–¥

            console.log('üîÑ –ó–∞–ø—É—â–µ–Ω–æ —Ç–∞–π–º–µ—Ä –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Å—Ç–∞–Ω—É —Å–µ—Ä–≤–µ—Ä–∞');
        },

        /**
         * –û–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–µ—à—É –¥–∞–Ω–∏—Ö —Å–µ—Ä–≤–µ—Ä–∞
         * @returns {Promise<boolean>} true, —è–∫—â–æ –¥–∞–Ω—ñ –∑–º—ñ–Ω–∏–ª–∏—Å—è
         * @private
         */
        _updateServerDataCache: async function() {
            // –ó–∞–ø–æ–±—ñ–≥–∞—î–º–æ –ø–∞—Ä–∞–ª–µ–ª—å–Ω–∏–º –∑–∞–ø–∏—Ç–∞–º
            if (this.isSyncInProgress) {
                return false;
            }

            this.isSyncInProgress = true;

            try {
                // –û—Ç—Ä–∏–º–∞–Ω–Ω—è ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
                const userId = WinixRaffles.state.telegramId ||
                              (window.WinixAPI ? window.WinixAPI.getUserId() : null);

                if (!userId) {
                    console.warn('‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–∑–Ω–∞—á–∏—Ç–∏ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–µ—à—É');
                    return false;
                }

                // –î–æ–¥–∞—î–º–æ –ø–∞—Ä–∞–º–µ—Ç—Ä –∑–∞–ø–æ–±—ñ–≥–∞–Ω–Ω—è –∫–µ—à—É–≤–∞–Ω–Ω—é
                const nocache = Date.now();

                // –í–∏–∫–æ–Ω—É—î–º–æ –∑–∞–ø–∏—Ç –¥–æ —Å–µ—Ä–≤–µ—Ä–∞
                const response = await WinixAPI.apiRequest(
                    `user/${userId}/raffles?nocache=${nocache}`,
                    'GET',
                    null,
                    {
                        suppressErrors: true,
                        hideLoader: true,
                        timeout: 10000,
                        allowParallel: true,
                        retries: 1
                    }
                );

                if (response && response.status === 'success' && Array.isArray(response.data)) {
                    // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –º–∏–Ω—É–ª–∏–π —Å—Ç–∞–Ω –¥–ª—è –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è
                    const prevRaffles = new Set(this.serverDataCache.participatingRaffles);
                    const prevTickets = {...this.serverDataCache.userRaffleTickets};

                    // –û—á–∏—â–∞—î–º–æ –¥–∞–Ω—ñ –ø–µ—Ä–µ–¥ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è–º
                    this.serverDataCache.participatingRaffles = new Set();
                    this.serverDataCache.userRaffleTickets = {};

                    // –ó–∞–ø–æ–≤–Ω—é—î–º–æ –∫–µ—à –Ω–æ–≤–∏–º–∏ –¥–∞–Ω–∏–º–∏
                    response.data.forEach(raffle => {
                        if (raffle.raffle_id) {
                            this.serverDataCache.participatingRaffles.add(raffle.raffle_id);
                            this.serverDataCache.userRaffleTickets[raffle.raffle_id] = raffle.entry_count || 1;
                        }
                    });

                    // –û–Ω–æ–≤–ª—é—î–º–æ —á–∞—Å –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
                    this.serverDataCache.lastUpdate = Date.now();

                    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –¥–∞–Ω—ñ –∑–º—ñ–Ω–∏–ª–∏—Å—è
                    let hasChanges = false;

                    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–æ–≤—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ
                    for (const raffleId of this.serverDataCache.participatingRaffles) {
                        if (!prevRaffles.has(raffleId) ||
                            this.serverDataCache.userRaffleTickets[raffleId] !== prevTickets[raffleId]) {
                            hasChanges = true;
                            break;
                        }
                    }

                    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –≤–∏–¥–∞–ª–µ–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ
                    if (!hasChanges) {
                        for (const raffleId of prevRaffles) {
                            if (!this.serverDataCache.participatingRaffles.has(raffleId)) {
                                hasChanges = true;
                                break;
                            }
                        }
                    }

                    // –Ø–∫—â–æ —î –∑–º—ñ–Ω–∏, –æ–Ω–æ–≤–ª—é—î–º–æ –ª–æ–∫–∞–ª—å–Ω–∏–π —Å—Ç–∞–Ω
                    if (hasChanges) {
                        console.log('üîÑ –í–∏—è–≤–ª–µ–Ω–æ —Ä–æ–∑–±—ñ–∂–Ω–æ—Å—Ç—ñ –∑ —Å–µ—Ä–≤–µ—Ä–æ–º, –æ–Ω–æ–≤–ª—é—î–º–æ –¥–∞–Ω—ñ —É—á–∞—Å—Ç—ñ');

                        // –û–Ω–æ–≤–ª—é—î–º–æ –¥–∞–Ω—ñ —É—á–∞—Å—Ç—ñ
                        this.participatingRaffles = new Set(this.serverDataCache.participatingRaffles);
                        this.userRaffleTickets = {...this.serverDataCache.userRaffleTickets};

                        // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω—ñ –¥–∞–Ω—ñ
                        this._saveParticipationToStorage();

                        return true;
                    }

                    return false;
                }

                return false;
            } catch (error) {
                console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–µ—à—É —Å–µ—Ä–≤–µ—Ä–∞:', error);
                return false;
            } finally {
                this.isSyncInProgress = false;
            }
        },

        /**
         * –ó–∞–ø—É—Å–∫ –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π –¥–ª—è –≤–∏—è–≤–ª–µ–Ω–Ω—è "–∑–∞–≤–∏—Å–∞—é—á–∏—Ö" –∑–∞–ø–∏—Ç—ñ–≤
         * @private
         */
        _startTransactionMonitor: function() {
            if (this.transactionMonitorActive) return;

            // –§—É–Ω–∫—Ü—ñ—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Å—Ç–∞–Ω—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π
            const checkTransactions = () => {
                const now = Date.now();

                // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –≤—Å—ñ—Ö –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π
                for (const [raffleId, transaction] of this.activeTransactions.entries()) {
                    const elapsed = now - transaction.timestamp;

                    // –Ø–∫—â–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—è –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è –±—ñ–ª—å—à–µ –∑–∞–¥–∞–Ω–æ–≥–æ —á–∞—Å—É, –≤–≤–∞–∂–∞—î–º–æ —ó—ó "–∑–∞–≤–∏—Å–∞—é—á–æ—é"
                    if (elapsed > this.REQUEST_TIMEOUT) {
                        console.warn(`‚ö†Ô∏è –í–∏—è–≤–ª–µ–Ω–æ "–∑–∞–≤–∏—Å–∞—é—á—É" —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—é –¥–ª—è —Ä–æ–∑—ñ–≥—Ä–∞—à—É ${raffleId}. –°–∫–∏–¥–∞—î–º–æ —Å—Ç–∞–Ω.`);

                        // –õ–æ–≥—É—î–º–æ –¥–µ—Ç–∞–ª—ñ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó –¥–ª—è –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
                        this._logTransaction({
                            type: 'timeout',
                            raffleId: raffleId,
                            transactionId: transaction.id,
                            elapsed: elapsed,
                            timestamp: now
                        });

                        // –í–∏–¥–∞–ª—è—î–º–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—é –∑ –∞–∫—Ç–∏–≤–Ω–∏—Ö
                        this.activeTransactions.delete(raffleId);

                        // –°–∫–∏–¥–∞—î–º–æ —Å—Ç–∞–Ω –∫–Ω–æ–ø–æ–∫ –¥–ª—è —Ü—å–æ–≥–æ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
                        this._resetButtonState(raffleId);

                        // –Ü–Ω—ñ—Ü—ñ—é—î–º–æ –ø—Ä–∏–º—É—Å–æ–≤—É —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—é –∑ —Å–µ—Ä–≤–µ—Ä–æ–º
                        this._scheduleForcedSync();
                    }
                }

                // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –±–ª–æ–∫—É–≤–∞–Ω–Ω—è –∑–∞–ø–∏—Ç—ñ–≤ (–≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ)
                if (this.requestLock) {
                    console.warn('‚ö†Ô∏è –í–∏—è–≤–ª–µ–Ω–æ –∞–∫—Ç–∏–≤–Ω–µ –≥–ª–æ–±–∞–ª—å–Ω–µ –±–ª–æ–∫—É–≤–∞–Ω–Ω—è. –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–∏—Ö –∑–∞–ø–∏—Ç—ñ–≤...');

                    // –Ø–∫—â–æ –Ω–µ–º–∞—î –∞–∫—Ç–∏–≤–Ω–∏—Ö –∑–∞–ø–∏—Ç—ñ–≤, –∑–Ω—ñ–º–∞—î–º–æ –±–ª–æ–∫—É–≤–∞–Ω–Ω—è
                    if (Object.keys(this.pendingRequests).length === 0 && this.activeTransactions.size === 0) {
                        console.log('üîì –ó–Ω—ñ–º–∞—î–º–æ –≥–ª–æ–±–∞–ª—å–Ω–µ –±–ª–æ–∫—É–≤–∞–Ω–Ω—è, –∞–∫—Ç–∏–≤–Ω–∏—Ö –∑–∞–ø–∏—Ç—ñ–≤ –Ω–µ–º–∞—î');
                        this.requestLock = false;
                    }
                }

                // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑–∞–≤–∏—Å–∞—é—á–æ–≥–æ —Å—Ç–∞–Ω—É requestInProgress
                if (this.requestInProgress) {
                    const timeSinceLastRequest = now - this.lastParticipationTime;
                    if (timeSinceLastRequest > 15000) { // 15 —Å–µ–∫—É–Ω–¥
                        console.warn('‚ö†Ô∏è –í–∏—è–≤–ª–µ–Ω–æ –∞–∫—Ç–∏–≤–Ω–∏–π —Å—Ç–∞–Ω requestInProgress –±—ñ–ª—å—à–µ 15 —Å–µ–∫—É–Ω–¥. –°–∫–∏–¥–∞—î–º–æ —Å—Ç–∞–Ω.');
                        this.requestInProgress = false;

                        // –í—ñ–¥–Ω–æ–≤–ª—é—î–º–æ –≤—Å—ñ –∫–Ω–æ–ø–∫–∏ –≤ —Å—Ç–∞–Ω—ñ –æ–±—Ä–æ–±–∫–∏
                        document.querySelectorAll('.join-button.processing, .mini-raffle-button.processing').forEach(button => {
                            const raffleId = button.getAttribute('data-raffle-id');
                            if (raffleId) {
                                this._resetButtonState(raffleId);
                            }
                        });

                        // –•–æ–≤–∞—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
                        if (typeof window.hideLoading === 'function') {
                            window.hideLoading();
                        }
                    }
                }

                // –î–û–î–ê–ù–û: –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ—Å—Ç—ñ –≤—ñ–¥–∫–ª–∞–¥–µ–Ω–æ—ó —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó
                if (this.pendingSyncRequested && !this.isSyncInProgress && !this.syncLock) {
                    this.pendingSyncRequested = false;
                    this.syncWithServer(false).catch(err => {
                        console.warn('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–∫–ª–∞–¥–µ–Ω–æ—ó —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó:', err);
                    });
                }

                // –î–û–î–ê–ù–û: –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ—Å—Ç—ñ –ø—Ä–∏–º—É—Å–æ–≤–æ—ó —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó
                if (this.needsForcedSync && !this.isSyncInProgress && !this.syncLock) {
                    if (now - this.lastSyncTime > 5000) { // –Ø–∫—â–æ –º–∏–Ω—É–ª–æ –±—ñ–ª—å—à–µ 5 —Å–µ–∫—É–Ω–¥ –∑ –æ—Å—Ç–∞–Ω–Ω—å–æ—ó —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó
                        this._updateServerDataCache().catch(err => {
                            console.warn('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏–º—É—Å–æ–≤–æ—ó —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó:', err);
                        });
                    }
                }
            };

            // –ó–∞–ø—É—Å–∫–∞—î–º–æ –ø–µ—Ä—ñ–æ–¥–∏—á–Ω—É –ø–µ—Ä–µ–≤—ñ—Ä–∫—É –∫–æ–∂–Ω—ñ 5 —Å–µ–∫—É–Ω–¥
            setInterval(checkTransactions, 5000);
            this.transactionMonitorActive = true;
        },

        /**
         * –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ –Ω–µ–∑–∞–≤–µ—Ä—à–µ–Ω–∏—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π
         * @private
         */
        _checkPendingTransactions: function() {
            try {
                // –û—Ç—Ä–∏–º—É—î–º–æ –Ω–µ–∑–∞–≤–µ—Ä—à–µ–Ω—ñ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó –∑ localStorage
                const pendingTransactions = JSON.parse(localStorage.getItem('winix_pending_transactions') || '[]');

                if (!Array.isArray(pendingTransactions) || pendingTransactions.length === 0) {
                    return;
                }

                console.log(`üîç –í–∏—è–≤–ª–µ–Ω–æ ${pendingTransactions.length} –Ω–µ–∑–∞–≤–µ—Ä—à–µ–Ω–∏—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π`);

                // –§—ñ–ª—å—Ç—Ä—É—î–º–æ –ª–∏—à–µ –Ω–µ–¥–∞–≤–Ω—ñ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó (–Ω–µ —Å—Ç–∞—Ä—à—ñ 30 —Ö–≤–∏–ª–∏–Ω)
                const now = Date.now();
                const recentTransactions = pendingTransactions.filter(
                    t => t.status === 'pending' && (now - t.timestamp < 30 * 60 * 1000)
                );

                if (recentTransactions.length > 0) {
                    console.log(`‚ö†Ô∏è –ù–∞—è–≤–Ω—ñ ${recentTransactions.length} –Ω–µ—â–æ–¥–∞–≤–Ω—ñ—Ö –Ω–µ–∑–∞–≤–µ—Ä—à–µ–Ω–∏—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π`);

                    // –ó–∞–ø—É—Å–∫–∞—î–º–æ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É —Å—Ç–∞–Ω—É —É—á–∞—Å—Ç—ñ
                    setTimeout(() => {
                        this.loadUserRaffles(true);

                        // –î—Ä—É–≥–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥–∏
                        setTimeout(() => {
                            this.loadUserRaffles(true);
                        }, 3000);
                    }, 1000);

                    // –ü–æ–∫–∞–∑—É—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
                    if (typeof window.showToast === 'function') {
                        window.showToast('–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–∞–Ω—É –Ω–µ–∑–∞–≤–µ—Ä—à–µ–Ω–∏—Ö –æ–ø–µ—Ä–∞—Ü—ñ–π...', 'info');
                    }
                }

                // –û–Ω–æ–≤–ª—é—î–º–æ —Å–ø–∏—Å–æ–∫ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π (–≤–∏–¥–∞–ª—è—î–º–æ —Å—Ç–∞—Ä—ñ)
                const validTransactions = pendingTransactions.filter(
                    t => (now - t.timestamp < 30 * 60 * 1000)
                );

                localStorage.setItem('winix_pending_transactions', JSON.stringify(validTransactions));
            } catch (error) {
                console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –Ω–µ–∑–∞–≤–µ—Ä—à–µ–Ω–∏—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π:', error);

                // –ü—Ä–∏ –ø–æ–º–∏–ª—Ü—ñ –æ—á–∏—â–∞—î–º–æ —Å–ø–∏—Å–æ–∫ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π
                localStorage.removeItem('winix_pending_transactions');
            }
        },

        /**
         * –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –º–µ—Ö–∞–Ω—ñ–∑–º—ñ–≤ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó
         * @private
         */
        _setupSyncMechanisms: function() {
            // –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –ø–µ—Ä–µ–¥ –∑–∞–∫—Ä–∏—Ç—Ç—è–º —Å—Ç–æ—Ä—ñ–Ω–∫–∏
            window.addEventListener('beforeunload', () => {
                this._saveParticipationToStorage();
            });

            // –°–∫–∏–¥–∞–Ω–Ω—è –∑–∞–≤–∏—Å–∞—é—á–∏—Ö –∑–∞–ø–∏—Ç—ñ–≤ –ø—Ä–∏ –∑–º—ñ–Ω—ñ –≤–∏–¥–∏–º–æ—Å—Ç—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
            window.addEventListener('visibilitychange', () => {
                if (document.visibilityState === 'visible') {
                    // –ü—Ä–∏ –∞–∫—Ç–∏–≤–∞—Ü—ñ—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –∑–∞–≤–∏—Å–∞—é—á–∏—Ö –∑–∞–ø–∏—Ç—ñ–≤
                    const now = Date.now();
                    let hasStaleRequests = false;

                    for (const [raffleId, transaction] of this.activeTransactions.entries()) {
                        if (now - transaction.timestamp > 10000) {
                            hasStaleRequests = true;
                            this.activeTransactions.delete(raffleId);
                            this._resetButtonState(raffleId);
                        }
                    }

                    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑–∞–≤–∏—Å–∞—é—á–æ–≥–æ —Å—Ç–∞–Ω—É requestInProgress
                    if (this.requestInProgress && (now - this.lastParticipationTime > 10000)) {
                        console.warn('‚ö†Ô∏è –í–∏—è–≤–ª–µ–Ω–æ –∞–∫—Ç–∏–≤–Ω–∏–π —Å—Ç–∞–Ω requestInProgress –ø—ñ—Å–ª—è –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É. –°–∫–∏–¥–∞—î–º–æ —Å—Ç–∞–Ω.');
                        this.requestInProgress = false;
                        hasStaleRequests = true;
                    }

                    if (hasStaleRequests) {
                        console.warn('‚ö†Ô∏è –í–∏—è–≤–ª–µ–Ω–æ –∑–∞–≤–∏—Å–∞—é—á—ñ –∑–∞–ø–∏—Ç–∏ –ø—ñ—Å–ª—è –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É');

                        // –ü—Ä–∏–º—É—Å–æ–≤–∞ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è –ø—Ä–∏ –≤–∏—è–≤–ª–µ–Ω–Ω—ñ –∑–∞–≤–∏—Å–∞—é—á–∏—Ö –∑–∞–ø–∏—Ç—ñ–≤
                        this._scheduleForcedSync();
                    }

                    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, –∫–æ–ª–∏ –æ—Å—Ç–∞–Ω–Ω—ñ–π —Ä–∞–∑ –æ–Ω–æ–≤–ª—é–≤–∞–ª–∏—Å—å –¥–∞–Ω—ñ
                    if (now - this.lastSyncTime > 30000) { // 30 —Å–µ–∫—É–Ω–¥
                        // –Ø–∫—â–æ –¥–∞–≤–Ω–æ –Ω–µ –æ–Ω–æ–≤–ª—é–≤–∞–ª–∏, –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —Å–≤—ñ–∂—ñ –¥–∞–Ω—ñ
                        setTimeout(() => {
                            this.loadUserRaffles(true);
                            this.lastSyncTime = now;

                            // –¢–∞–∫–æ–∂ –æ–Ω–æ–≤–ª—é—î–º–æ –±–∞–ª–∞–Ω—Å –ø—Ä–∏ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—ñ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É
                            this._getServerBalance();
                        }, 1000);
                    }
                }
            });

            // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –∑ –∫–µ—à—É –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
            window.addEventListener('pageshow', (event) => {
                if (event.persisted) {
                    console.log("üìù –°—Ç–æ—Ä—ñ–Ω–∫–∞ –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–∞ –∑ –∫–µ—à—É, –æ–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω");
                    this.activeTransactions.clear();
                    this.requestLock = false;

                    // –°–∫–∏–¥–∞—î–º–æ —Å—Ç–∞—Ç—É—Å –æ–±—Ä–æ–±–∫–∏ –∑–∞–ø–∏—Ç—É
                    this.requestInProgress = false;

                    // –ü—Ä–∏–º—É—Å–æ–≤–∞ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è –ø—Ä–∏ –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—ñ –∑ –∫–µ—à—É
                    setTimeout(() => {
                        this.loadUserRaffles(true);

                        // –¢–∞–∫–æ–∂ –æ–Ω–æ–≤–ª—é—î–º–æ –±–∞–ª–∞–Ω—Å –ø—Ä–∏ –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
                        this._getServerBalance();
                    }, 500);
                }
            });

            // –î–æ–¥–∞–Ω–æ –ø–µ—Ä—ñ–æ–¥–∏—á–Ω–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –ø—Ä–æ —É—á–∞—Å—Ç—å
            // –¶–µ –≤–∞–∂–ª–∏–≤–æ –¥–ª—è –±–∞–≥–∞—Ç—å–æ—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤, —è–∫—ñ —Ç—Ä–∏–º–∞—é—Ç—å –≤–∫–ª–∞–¥–∫—É –≤—ñ–¥–∫—Ä–∏—Ç–æ—é –¥–æ–≤–≥–∏–π —á–∞—Å
            setInterval(() => {
                if (document.visibilityState === 'visible' && !this.isSyncInProgress) {
                    const now = Date.now();
                    if (now - this.lastSyncTime > 5 * 60 * 1000) { // 5 —Ö–≤–∏–ª–∏–Ω
                        console.log('üîÑ –ü–µ—Ä—ñ–æ–¥–∏—á–Ω–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö —É—á–∞—Å—Ç—ñ');
                        this.loadUserRaffles(true);

                        // –¢–∞–∫–æ–∂ –æ–Ω–æ–≤–ª—é—î–º–æ –±–∞–ª–∞–Ω—Å –ø—Ä–∏ –ø–µ—Ä—ñ–æ–¥–∏—á–Ω–æ–º—É –æ–Ω–æ–≤–ª–µ–Ω–Ω—ñ
                        this._getServerBalance();
                    }
                }
            }, 5 * 60 * 1000); // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫–æ–∂–Ω—ñ 5 —Ö–≤–∏–ª–∏–Ω

            // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ—ó –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É
            document.addEventListener('balance-updated', (event) => {
                if (event.detail && typeof event.detail.newBalance === 'number' && event.detail.source !== 'participation.js') {
                    // –ó–∞–ø–∞–º'—è—Ç–æ–≤—É—î–º–æ –Ω–æ–≤–∏–π –±–∞–ª–∞–Ω—Å
                    this.lastKnownBalance = event.detail.newBalance;
                    this.lastBalanceUpdateTime = Date.now();

                    console.log(`üìä –û—Ç—Ä–∏–º–∞–Ω–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É: ${this.lastKnownBalance} –∂–µ—Ç–æ–Ω—ñ–≤ (–¥–∂–µ—Ä–µ–ª–æ: ${event.detail.source})`);
                }
            });
        },

        /**
 * –û—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–æ—Ç–æ—á–Ω–æ–≥–æ –±–∞–ª–∞–Ω—Å—É –∑ —Å–µ—Ä–≤–µ—Ä–∞
 * @private
 */
_getServerBalance: async function() {
    try {
        // –ü—Ä–æ–ø—É—Å–∫–∞—î–º–æ, —è–∫—â–æ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è –≤–∂–µ –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è
        if (this.isSyncInProgress) return;

        console.log("üîÑ –ó–∞–ø–∏—Ç –∞–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ –±–∞–ª–∞–Ω—Å—É –∑ —Å–µ—Ä–≤–µ—Ä–∞...");

        if (window.WinixAPI && typeof window.WinixAPI.getBalance === 'function') {
            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –æ—Å—Ç–∞–Ω–Ω—å–æ—ó —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó –ø–µ—Ä–µ–¥ –∑–∞–ø–∏—Ç–æ–º
            const lastTxData = localStorage.getItem('winix_last_transaction');
            let lastTx = null;

            if (lastTxData) {
                try {
                    lastTx = JSON.parse(lastTxData);
                    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—è –¥–æ—Å–∏—Ç—å –Ω–æ–≤–∞ (–º–µ–Ω—à–µ 2 —Ö–≤–∏–ª–∏–Ω)
                    const txAge = Date.now() - lastTx.timestamp;
                    if (txAge < 120000) {
                        console.log('üìù –ó–Ω–∞–π–¥–µ–Ω–æ –Ω–µ–¥–∞–≤–Ω—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—é:',
                            lastTx.type, '–±–∞–ª–∞–Ω—Å:', lastTx.newBalance,
                            '–≤—ñ–∫:', Math.round(txAge/1000) + '—Å');
                    }
                } catch (e) {
                    console.warn('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥—É –¥–∞–Ω–∏—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó:', e);
                }
            }

            // –ó–∞–ø–∏—Ç –±–∞–ª–∞–Ω—Å—É –∑ —Å–µ—Ä–≤–µ—Ä–∞
            const response = await window.WinixAPI.getBalance();

            if (response && response.status === 'success' && response.data) {
                let newBalance = response.data.coins;
                const oldBalance = parseInt(localStorage.getItem('userCoins') || '0');
                let shouldUpdate = true;

                // –ó–∞–ø–∞–º'—è—Ç–æ–≤—É—î–º–æ –±–∞–ª–∞–Ω—Å –≤—ñ–¥ —Å–µ—Ä–≤–µ—Ä–∞
                this.lastKnownBalance = newBalance;
                this.lastBalanceUpdateTime = Date.now();

                console.log(`üìä –û—Ç—Ä–∏–º–∞–Ω–æ –±–∞–ª–∞–Ω—Å –∑ —Å–µ—Ä–≤–µ—Ä–∞: ${newBalance} –∂–µ—Ç–æ–Ω—ñ–≤`);

                // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –∫–æ–Ω—Ñ–ª—ñ–∫—Ç –∑ –Ω–µ–¥–∞–≤–Ω—å–æ—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—î—é
                if (lastTx && lastTx.confirmed && lastTx.type === 'participation') {
                    const txAge = Date.now() - lastTx.timestamp;

                    // –Ø–∫—â–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—è –≤—ñ–¥–±—É–ª–∞—Å—å –º–µ–Ω—à–µ 2 —Ö–≤–∏–ª–∏–Ω —Ç–æ–º—É —ñ –±–∞–ª–∞–Ω—Å —Å–µ—Ä–≤–µ—Ä–∞ –Ω–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î –ª–æ–∫–∞–ª—å–Ω–æ–º—É
                    if (txAge < 120000 && newBalance !== lastTx.newBalance) {
                        console.warn(`‚ö†Ô∏è –í–∏—è–≤–ª–µ–Ω–æ –∫–æ–Ω—Ñ–ª—ñ–∫—Ç –±–∞–ª–∞–Ω—Å—É –ø—ñ—Å–ª—è –Ω–µ–¥–∞–≤–Ω—å–æ—ó —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó:
                            - –õ–æ–∫–∞–ª—å–Ω–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—è (${Math.round(txAge/1000)}—Å —Ç–æ–º—É): ${lastTx.newBalance} –∂–µ—Ç–æ–Ω—ñ–≤
                            - –°–µ—Ä–≤–µ—Ä –ø–æ–≤–µ—Ä–Ω—É–≤: ${newBalance} –∂–µ—Ç–æ–Ω—ñ–≤`);

                        // –Ø–∫—â–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—è –¥—É–∂–µ –Ω–æ–≤–∞ (–º–µ–Ω—à–µ 60 —Å–µ–∫—É–Ω–¥), –¥–æ–≤—ñ—Ä—è—î–º–æ —ó–π –±—ñ–ª—å—à–µ
                        if (txAge < 60000) {
                            console.log(`üõ°Ô∏è –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –ª–æ–∫–∞–ª—å–Ω–∏–π –±–∞–ª–∞–Ω—Å –∑–∞–º—ñ—Å—Ç—å —Å–µ—Ä–≤–µ—Ä–Ω–æ–≥–æ`);
                            shouldUpdate = false; // –ù–µ –æ–Ω–æ–≤–ª—é—î–º–æ –¥–∞–Ω—ñ –∑ —Å–µ—Ä–≤–µ—Ä–∞

                            // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –ª–æ–∫–∞–ª—å–Ω–∏–π –±–∞–ª–∞–Ω—Å —è–∫ –∞–∫—Ç—É–∞–ª—å–Ω–∏–π
                            newBalance = lastTx.newBalance;
                        }
                    }
                }

                // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è
                const userCoinsElement = document.getElementById('user-coins');
                if (userCoinsElement) {
                    // –î–æ–¥–∞—î–º–æ –∞–Ω—ñ–º–∞—Ü—ñ—é –≤ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –≤—ñ–¥ –∑–º—ñ–Ω–∏
                    if (newBalance < oldBalance) {
                        userCoinsElement.classList.add('decreasing');
                        setTimeout(() => {
                            userCoinsElement.classList.remove('decreasing');
                        }, 1000);
                    } else if (newBalance > oldBalance) {
                        userCoinsElement.classList.add('increasing');
                        setTimeout(() => {
                            userCoinsElement.classList.remove('increasing');
                        }, 1000);
                    }

                    userCoinsElement.textContent = newBalance;
                }

                // –û–Ω–æ–≤–ª—é—î–º–æ –ª–æ–∫–∞–ª—å–Ω–µ —Å—Ö–æ–≤–∏—â–µ
                localStorage.setItem('userCoins', newBalance.toString());
                localStorage.setItem('winix_coins', newBalance.toString());
                localStorage.setItem('winix_balance_update_time', Date.now().toString());
                localStorage.setItem('winix_server_balance', newBalance.toString());

                // –ì–µ–Ω–µ—Ä—É—î–º–æ –ø–æ–¥—ñ—é –¥–ª—è —ñ–Ω—à–∏—Ö –º–æ–¥—É–ª—ñ–≤
                document.dispatchEvent(new CustomEvent('balance-updated', {
                    detail: {
                        oldBalance: oldBalance,
                        newBalance: newBalance,
                        source: 'participation.js'
                    }
                }));
            }
        }
    } catch (error) {
        console.warn('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É –∑ —Å–µ—Ä–≤–µ—Ä–∞:', error);
    }
},

        /**
         * –ü–ª–∞–Ω—É–≤–∞–Ω–Ω—è –ø—Ä–∏–º—É—Å–æ–≤–æ—ó —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó –∑ —Å–µ—Ä–≤–µ—Ä–æ–º
         * –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –¥–ª—è —É—Å—É–Ω–µ–Ω–Ω—è —Ä–æ–∑–±—ñ–∂–Ω–æ—Å—Ç–µ–π –º—ñ–∂ –ª–æ–∫–∞–ª—å–Ω–∏–º —Å—Ç–∞–Ω–æ–º —ñ —Å–µ—Ä–≤–µ—Ä–æ–º
         * @private
         */
        _scheduleForcedSync: function() {
            // –Ø–∫—â–æ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è –≤–∂–µ –∑–∞–ø–ª–∞–Ω–æ–≤–∞–Ω–∞, –Ω–µ –ø–ª–∞–Ω—É—î–º–æ —â–µ –æ–¥–Ω—É
            if (this.syncTimer) {
                return;
            }

            // –°–∫–∞—Å–æ–≤—É—î–º–æ –Ω–∞—è–≤–Ω–∏–π —Ç–∞–π–º–µ—Ä, —è–∫—â–æ —î
            if (this.syncTimer) {
                clearTimeout(this.syncTimer);
            }

            // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –Ω–æ–≤–∏–π —Ç–∞–π–º–µ—Ä –∑ –Ω–µ–≤–µ–ª–∏–∫–æ—é –∑–∞—Ç—Ä–∏–º–∫–æ—é
            this.syncTimer = setTimeout(() => {
                this.syncTimer = null;

                // –Ø–∫—â–æ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è –≤–∂–µ –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è, –Ω–µ –ø–æ—á–∏–Ω–∞—î–º–æ –Ω–æ–≤—É
                if (this.isSyncInProgress) {
                    return;
                }

                console.log('üîÑ –í–∏–∫–æ–Ω—É—î–º–æ –ø—Ä–∏–º—É—Å–æ–≤—É —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—é –∑ —Å–µ—Ä–≤–µ—Ä–æ–º');
                this.syncWithServer()
                    .then(() => {
                        console.log('‚úÖ –ü—Ä–∏–º—É—Å–æ–≤–∞ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
                    })
                    .catch(err => {
                        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏–º—É—Å–æ–≤–æ—ó —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó:', err);
                    });
            }, 1500);
        },

        /**
         * –í—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –ø—Ä–æ —É—á–∞—Å—Ç—å –∑ localStorage
         * @private
         */
        _restoreParticipationFromStorage: function() {
            try {
                // –°–ø–æ—á–∞—Ç–∫—É –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —î —Å–≤—ñ–∂—ñ –¥–∞–Ω—ñ –ø—Ä–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó
                const lastTxData = localStorage.getItem('winix_last_transaction');
                let prioritizeServerData = false;

                if (lastTxData) {
                    try {
                        const lastTx = JSON.parse(lastTxData);
                        const txAge = Date.now() - lastTx.timestamp;
                        // –Ø–∫—â–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—è —Å—Ç–∞—Ä—à–∞ –∑–∞ 10 —Ö–≤–∏–ª–∏–Ω, –ø—Ä—ñ–æ—Ä–∏—Ç–µ—Ç –≤—ñ–¥–¥–∞—î–º–æ —Å–µ—Ä–≤–µ—Ä—É
                        if (txAge > 10 * 60 * 1000) {
                            prioritizeServerData = true;
                            console.log('üìä –ü—Ä—ñ–æ—Ä–∏—Ç–µ—Ç –≤—ñ–¥–¥–∞–Ω–æ —Å–µ—Ä–≤–µ—Ä–Ω–∏–º –¥–∞–Ω–∏–º —á–µ—Ä–µ–∑ –≤—ñ–∫ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó');
                        }
                    } catch (e) {
                        console.warn('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –æ–±—Ä–æ–±–∫–∏ –¥–∞–Ω–∏—Ö –æ—Å—Ç–∞–Ω–Ω—å–æ—ó —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó:', e);
                    }
                }

                // –í—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö —É—á–∞—Å—Ç—ñ - —Ç–µ–ø–µ—Ä –∑—ñ –ó–ù–ò–ñ–ï–ù–ò–ú –ø—Ä—ñ–æ—Ä–∏—Ç–µ—Ç–æ–º
                // –¥–ª—è —É–Ω–∏–∫–Ω–µ–Ω–Ω—è –∑–∞–º—ñ—â–µ–Ω–Ω—è —Å–µ—Ä–≤–µ—Ä–Ω–∏—Ö –¥–∞–Ω–∏—Ö
                if (!prioritizeServerData) {
                    const savedState = localStorage.getItem('winix_participation_state');
                    if (savedState) {
                        const parsedState = JSON.parse(savedState);

                        // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—ñ –¥–∞–Ω–∏—Ö (–Ω–µ —Å—Ç–∞—Ä—ñ—à—ñ 10 —Ö–≤–∏–ª–∏–Ω - –ó–ú–ï–ù–®–ï–ù–û –∑ 30 —Ö–≤–∏–ª–∏–Ω)
                        if (parsedState && parsedState.lastUpdate) {
                            const now = Date.now();
                            const cacheAge = now - parsedState.lastUpdate;

                            if (cacheAge < 10 * 60 * 1000) { // 10 —Ö–≤–∏–ª–∏–Ω –∑–∞–º—ñ—Å—Ç—å 30
                                // –í—ñ–¥–Ω–æ–≤–ª—é—î–º–æ —Å–ø–∏—Å–æ–∫ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ –∑ —É—á–∞—Å—Ç—é
                                if (Array.isArray(parsedState.raffles)) {
                                    this.participatingRaffles = new Set(parsedState.raffles);
                                }

                                // –í—ñ–¥–Ω–æ–≤–ª—é—î–º–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –±—ñ–ª–µ—Ç—ñ–≤
                                if (parsedState.tickets) {
                                    this.userRaffleTickets = parsedState.tickets;
                                }

                                // –î–û–î–ê–ù–û: –í—ñ–¥–Ω–æ–≤–ª—é—î–º–æ –±–∞–ª–∞–Ω—Å
                                if (parsedState.balance !== undefined) {
                                    this.lastKnownBalance = parsedState.balance;
                                    this.lastBalanceUpdateTime = parsedState.lastBalanceUpdateTime || now;
                                }

                                console.log('‚úÖ –£—Å–ø—ñ—à–Ω–æ –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–æ –¥–∞–Ω—ñ –ø—Ä–æ —É—á–∞—Å—Ç—å —ñ–∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Å—Ö–æ–≤–∏—â–∞');

                                // –î–û–î–ê–ù–û: –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –ø—Ä–∞–ø–æ—Ä–µ—Ü—å –¥–ª—è –ø—Ä–∏–º—É—Å–æ–≤–æ—ó –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –∑ —Å–µ—Ä–≤–µ—Ä–æ–º
                                this.needsForcedSync = true;
                            } else {
                                console.log('‚ÑπÔ∏è –ö–µ—à —É—á–∞—Å—Ç—ñ –∑–∞—Å—Ç–∞—Ä—ñ–≤, –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è –æ—á–∏—â–µ–Ω–Ω—è');
                                localStorage.removeItem('winix_participation_state');
                            }
                        }
                    }
                } else {
                    console.log('üîÑ –ü—Ä–æ–ø—É—Å–∫–∞—î–º–æ –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Å—Ö–æ–≤–∏—â–∞ –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Å–≤—ñ–∂–∏—Ö –¥–∞–Ω–∏—Ö –∑ —Å–µ—Ä–≤–µ—Ä–∞');
                }

                // –í—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è —Å–ø–∏—Å–∫—É –Ω–µ–≤–∞–ª—ñ–¥–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
                const invalidRaffles = localStorage.getItem('winix_invalid_raffles');
                if (invalidRaffles) {
                    try {
                        this.invalidRaffleIds = new Set(JSON.parse(invalidRaffles));
                    } catch (e) {
                        console.warn('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è —Å–ø–∏—Å–∫—É –Ω–µ–¥—ñ–π—Å–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤:', e);
                    }
                }

                // –î–û–î–ê–ù–û: –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –ø—Ä–∞–ø–æ—Ä–µ—Ü—å –¥–ª—è –ø—Ä–∏–º—É—Å–æ–≤–æ—ó —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó –∑ —Å–µ—Ä–≤–µ—Ä–æ–º
                this.needsForcedSync = true;
            } catch (error) {
                console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –ø—Ä–æ —É—á–∞—Å—Ç—å:', error);
            }
        },

        /**
         * –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –ø—Ä–æ —É—á–∞—Å—Ç—å —É localStorage
         * @private
         */
        _saveParticipationToStorage: function() {
            try {
                const participationState = {
                    raffles: Array.from(this.participatingRaffles),
                    tickets: this.userRaffleTickets,
                    lastUpdate: Date.now(),
                    balance: this.lastKnownBalance,
                    lastBalanceUpdateTime: this.lastBalanceUpdateTime
                };

                localStorage.setItem('winix_participation_state', JSON.stringify(participationState));

                // –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Å–ø–∏—Å–∫—É –Ω–µ–¥—ñ–π—Å–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
                localStorage.setItem('winix_invalid_raffles', JSON.stringify(Array.from(this.invalidRaffleIds)));
            } catch (error) {
                console.warn('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –ø—Ä–æ —É—á–∞—Å—Ç—å:', error);
            }
        },

        /**
         * –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è –¥–∞–Ω–∏—Ö –∑ IndexedDB –¥–ª—è –¥–æ–¥–∞—Ç–∫–æ–≤–æ—ó –Ω–∞–¥—ñ–π–Ω–æ—Å—Ç—ñ
         * @private
         */
        _syncWithIndexedDB: function() {
            // –¶–µ–π –º–µ—Ç–æ–¥ –º–æ–∂–Ω–∞ —Ä–æ–∑—à–∏—Ä–∏—Ç–∏ –¥–ª—è –¥–æ–¥–∞—Ç–∫–æ–≤–æ–≥–æ –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö —É IndexedDB
            // –¶–µ –∑–∞–±–µ–∑–ø–µ—á–∏—Ç—å –±—ñ–ª—å—à—É –Ω–∞–¥—ñ–π–Ω—ñ—Å—Ç—å –ø–æ—Ä—ñ–≤–Ω—è–Ω–æ –∑ localStorage
            try {
                if (!window.indexedDB) {
                    // IndexedDB –Ω–µ –ø—ñ–¥—Ç—Ä–∏–º—É—î—Ç—å—Å—è, –Ω—ñ—á–æ–≥–æ –Ω–µ —Ä–æ–±–∏–º–æ
                    return;
                }

                // –ë–∞–∑–æ–≤–∞ —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—è –∑ IndexedDB –º–æ–∂–µ –±—É—Ç–∏ –¥–æ–¥–∞–Ω–∞ —Ç—É—Ç
                // ...
            } catch (error) {
                // –Ü–≥–Ω–æ—Ä—É—î–º–æ –ø–æ–º–∏–ª–∫–∏, —Ü–µ –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω—ñ—Å—Ç—å
                console.warn('‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑—É–≤–∞—Ç–∏ –¥–∞–Ω—ñ –∑ IndexedDB:', error);
            }
        },

        /**
         * –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –ø–æ–¥—ñ–π
         * @private
         */
        _setupEventHandlers: function() {
            // –û–±—Ä–æ–±–Ω–∏–∫ –∫–ª—ñ–∫—ñ–≤ –Ω–∞ –∫–Ω–æ–ø–∫–∏ —É—á–∞—Å—Ç—ñ (–∑ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è–º –¥–µ–ª–µ–≥—É–≤–∞–Ω–Ω—è –ø–æ–¥—ñ–π)
            document.addEventListener('click', (event) => {
                // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –±–ª–∏–∂—á—É –∫–Ω–æ–ø–∫—É —É—á–∞—Å—Ç—ñ
                const participateButton = event.target.closest('.join-button, .mini-raffle-button');

                // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —â–æ —Ü–µ –∫–Ω–æ–ø–∫–∞ —É—á–∞—Å—Ç—ñ —Ç–∞ –≤–æ–Ω–∞ –Ω–µ –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–∞
                if (participateButton && !participateButton.disabled && !participateButton.classList.contains('processing')) {
                    const raffleId = participateButton.getAttribute('data-raffle-id');

                    if (!raffleId) return;

                    event.preventDefault();

                    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ —á–∞—Å—Ç—ñ –∫–ª—ñ–∫–∏
                    const now = Date.now();
                    const lastRequestTime = this.lastRequestTimes[raffleId] || 0;
                    if (now - lastRequestTime < this.MIN_REQUEST_INTERVAL) {
                        if (typeof window.showToast === 'function') {
                            window.showToast('–ë—É–¥—å –ª–∞—Å–∫–∞, –∑–∞—á–µ–∫–∞–π—Ç–µ –ø–µ—Ä–µ–¥ –Ω–∞—Å—Ç—É–ø–Ω–æ—é —Å–ø—Ä–æ–±–æ—é', 'info');
                        }
                        return;
                    }

                    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –±–ª–æ–∫—É–≤–∞–Ω–Ω—è
                    if (this.requestLock) {
                        if (typeof window.showToast === 'function') {
                            window.showToast('–°–∏—Å—Ç–µ–º–∞ —Ç–∏–º—á–∞—Å–æ–≤–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞, —Å–ø—Ä–æ–±—É–π—Ç–µ –∑–∞ –∫—ñ–ª—å–∫–∞ —Å–µ–∫—É–Ω–¥', 'warning');
                        }
                        return;
                    }

                    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–∞–Ω—É –æ–±—Ä–æ–±–∫–∏ –∑–∞–ø–∏—Ç—É
                    if (this.requestInProgress) {
                        if (typeof window.showToast === 'function') {
                            window.showToast('–ó–∞—á–µ–∫–∞–π—Ç–µ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ–≥–æ –∑–∞–ø–∏—Ç—É', 'warning');
                        }
                        return;
                    }

                    // –í–∏–∑–Ω–∞—á–∞—î–º–æ —Ç–∏–ø —Ä–æ–∑—ñ–≥—Ä–∞—à—É
                    const raffleType = participateButton.classList.contains('mini-raffle-button') ? 'daily' : 'main';

                    // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω –∫–Ω–æ–ø–∫–∏
                    participateButton.classList.add('processing');
                    participateButton.disabled = true;

                    // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–∏–π —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏, —è–∫—â–æ –π–æ–≥–æ –Ω–µ–º–∞—î
                    if (!participateButton.getAttribute('data-original-text')) {
                        participateButton.setAttribute('data-original-text', participateButton.textContent);
                    }

                    // –ó–º—ñ–Ω—é—î–º–æ —Ç–µ–∫—Å—Ç –Ω–∞ "–û–±—Ä–æ–±–∫–∞..."
                    participateButton.textContent = '–û–±—Ä–æ–±–∫–∞...';

                    // –í–ò–ü–†–ê–í–õ–ï–ù–û: –°–ø–æ—á–∞—Ç–∫—É –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –¥–æ—Å—Ç–∞—Ç–Ω—ñ—Å—Ç—å –∂–µ—Ç–æ–Ω—ñ–≤
                    const entryFee = parseInt(participateButton.getAttribute('data-entry-fee') || '1');
                    const userCoins = this._getCurrentCoins();

                    if (userCoins < entryFee) {
                        // –í—ñ–¥–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω –∫–Ω–æ–ø–∫–∏
                        this._resetButtonState(raffleId);

                        // –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –Ω–µ–¥–æ—Å—Ç–∞—Ç–Ω—ñ—Å—Ç—å –∂–µ—Ç–æ–Ω—ñ–≤
                        if (typeof window.showToast === 'function') {
                            window.showToast(`–ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –∂–µ—Ç–æ–Ω—ñ–≤. –ü–æ—Ç—Ä—ñ–±–Ω–æ: ${entryFee}, —É –≤–∞—Å: ${userCoins}`, 'warning');
                        }
                        return;
                    }

                    // –ó–∞–ø—É—Å–∫–∞—î–º–æ —É—á–∞—Å—Ç—å —É —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ
                    this.participateInRaffle(raffleId, raffleType)
                        .then(result => {
                            if (result.success) {
                                // –ö–Ω–æ–ø–∫–∞ –±—É–¥–µ –æ–Ω–æ–≤–ª–µ–Ω–∞ —á–µ—Ä–µ–∑ updateParticipationButtons
                                console.log(`‚úÖ –£—Å–ø—ñ—à–Ω–∞ —É—á–∞—Å—Ç—å —É —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ ${raffleId}`);
                            } else {
                                console.warn(`‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ —É—á–∞—Å—Ç—ñ: ${result.message}`);

                                // –í—ñ–¥–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω –∫–Ω–æ–ø–∫–∏
                                this._resetButtonState(raffleId);

                                // –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É
                                if (typeof window.showToast === 'function') {
                                    window.showToast(result.message, 'warning');
                                }
                            }
                        })
                        .catch(error => {
                            console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ —É—á–∞—Å—Ç—ñ –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ:', error);

                            // –í—ñ–¥–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω –∫–Ω–æ–ø–∫–∏
                            this._resetButtonState(raffleId);

                            // –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É
                            if (typeof window.showToast === 'function') {
                                window.showToast(error.message || '–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Å–ø—Ä–æ–±—ñ —É—á–∞—Å—Ç—ñ –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ', 'error');
                            }
                        });
                }
            });

            // –û–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ—ó –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            document.addEventListener('user-data-updated', (event) => {
                // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —Ü–µ –Ω–µ –Ω–∞—à–∞ –≤–ª–∞—Å–Ω–∞ –ø–æ–¥—ñ—è
                if (event.source === 'participation.js') return;

                // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –¥–∞–Ω–∏—Ö –ø—Ä–æ –∂–µ—Ç–æ–Ω–∏
                if (event.detail && event.detail.userData &&
                    typeof event.detail.userData.coins !== 'undefined') {

                    // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∂–µ—Ç–æ–Ω—ñ–≤
                    const coinsElement = document.getElementById('user-coins');
                    if (coinsElement) {
                        coinsElement.textContent = event.detail.userData.coins;
                    }

                    // –û–Ω–æ–≤–ª—é—î–º–æ –∫–µ—à
                    localStorage.setItem('userCoins', event.detail.userData.coins);
                    localStorage.setItem('winix_coins', event.detail.userData.coins);

                    // –ó–∞–ø–∞–º'—è—Ç–æ–≤—É—î–º–æ –æ—Å—Ç–∞–Ω–Ω—î –≤—ñ–¥–æ–º–µ –∑–Ω–∞—á–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É
                    this.lastKnownBalance = event.detail.userData.coins;
                    this.lastBalanceUpdateTime = Date.now();
                }

                // –û–Ω–æ–≤–ª—é—î–º–æ —Å–ø–∏—Å–æ–∫ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ –∑ —É—á–∞—Å—Ç—é –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
                setTimeout(() => {
                    this.loadUserRaffles(true);
                }, 500);
            });

            // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –ø–æ–¥—ñ—ó raffle-participation
            document.addEventListener('raffle-participation', (event) => {
                if (event.detail && event.detail.successful && event.detail.raffleId) {
                    // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –ø—Ä–∞–ø–æ—Ä–µ—Ü—å –∞–∫—Ç–∏–≤–Ω–æ—ó —É—á–∞—Å—Ç—ñ –¥–ª—è —Ü—å–æ–≥–æ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
                    this.participatingRaffles.add(event.detail.raffleId);

                    // –û–Ω–æ–≤–ª—é—î–º–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –±—ñ–ª–µ—Ç—ñ–≤
                    if (event.detail.ticketCount) {
                        this.userRaffleTickets[event.detail.raffleId] = event.detail.ticketCount;

                        // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –≤ localStorage
                        this._saveParticipationToStorage();

                        // –û–Ω–æ–≤–ª—é—î–º–æ –∫–Ω–æ–ø–∫–∏ —É—á–∞—Å—Ç—ñ
                        this.updateParticipationButtons();
                    }

                    // –î–û–î–ê–ù–û: –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –ø—Ä–∞–ø–æ—Ä–µ—Ü—å –¥–ª—è –ø—ñ–∑–Ω—ñ—à–æ—ó —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó –∑ —Å–µ—Ä–≤–µ—Ä–æ–º
                    this.needsForcedSync = true;

                    // –ü–ª–∞–Ω—É–≤–∞–Ω–Ω—è –¥–æ–¥–∞—Ç–∫–æ–≤–æ—ó —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏
                    setTimeout(() => {
                        this.loadUserRaffles(true);
                    }, 3000);
                }
            });
        },

        /**
         * –û—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–æ—Ç–æ—á–Ω–æ—ó –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –∂–µ—Ç–æ–Ω—ñ–≤
         * @private
         * @returns {number} –ö—ñ–ª—å–∫—ñ—Å—Ç—å –∂–µ—Ç–æ–Ω—ñ–≤
         */
        _getCurrentCoins: function() {
            // –°–ø–æ—á–∞—Ç–∫—É –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ DOM
            const userCoinsElement = document.getElementById('user-coins');
            if (userCoinsElement) {
                return parseInt(userCoinsElement.textContent) || 0;
            }

            // –ü–æ—Ç—ñ–º –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∫–µ—à
            if (this.lastKnownBalance !== null) {
                return this.lastKnownBalance;
            }

            // –ù–∞—Ä–µ—à—Ç—ñ –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ localStorage
            return parseInt(localStorage.getItem('userCoins') ||
                            localStorage.getItem('winix_coins')) || 0;
        },

        /**
         * –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è —É–Ω—ñ–∫–∞–ª—å–Ω–æ–≥–æ ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó
         * @returns {string} –£–Ω—ñ–∫–∞–ª—å–Ω–∏–π ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó
         * @private
         */
        _generateTransactionId: function() {
            // –ü–æ–∫—Ä–∞—â–µ–Ω–æ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—é —É–Ω—ñ–∫–∞–ª—å–Ω–æ–≥–æ ID
            const timestamp = Date.now();
            const random = Math.random().toString(36).substring(2, 11);
            const counter = (this.transactionCounter = (this.transactionCounter || 0) + 1);
            return `txn_${timestamp}_${random}_${counter}`;
        },

        /**
         * –ó–∞–ø–∏—Å —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó –≤ –∂—É—Ä–Ω–∞–ª –¥–ª—è –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
         * @param {Object} transaction - –î–∞–Ω—ñ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó
         * @private
         */
        _logTransaction: function(transaction) {
            // –î–æ–¥–∞—î–º–æ —á–∞—Å–æ–≤—É –º—ñ—Ç–∫—É, —è–∫—â–æ —ó—ó –Ω–µ–º–∞—î
            if (!transaction.timestamp) {
                transaction.timestamp = Date.now();
            }

            // –î–æ–¥–∞—î–º–æ –∑–∞–ø–∏—Å —É –∂—É—Ä–Ω–∞–ª
            this.transactionLog.unshift(transaction);

            // –û–±–º–µ–∂—É—î–º–æ —Ä–æ–∑–º—ñ—Ä –∂—É—Ä–Ω–∞–ª—É
            if (this.transactionLog.length > this.maxLogSize) {
                this.transactionLog = this.transactionLog.slice(0, this.maxLogSize);
            }

            // –°–ø—Ä–æ–±–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –∂—É—Ä–Ω–∞–ª—É –¥–ª—è –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
            try {
                localStorage.setItem('winix_transaction_log', JSON.stringify(this.transactionLog.slice(0, 10)));
            } catch (e) {
                // –Ü–≥–Ω–æ—Ä—É—î–º–æ –ø–æ–º–∏–ª–∫–∏
            }
        },

        /**
         * –°–∫–∏–¥–∞–Ω–Ω—è —Å—Ç–∞–Ω—É –∫–Ω–æ–ø–∫–∏ —É—á–∞—Å—Ç—ñ
         * @param {string} raffleId - ID —Ä–æ–∑—ñ–≥—Ä–∞—à—É
         * @private
         */
        _resetButtonState: function(raffleId) {
            const buttons = document.querySelectorAll(`.join-button[data-raffle-id="${raffleId}"], .mini-raffle-button[data-raffle-id="${raffleId}"]`);

            buttons.forEach(button => {
                // –í–∏–¥–∞–ª—è—î–º–æ –∫–ª–∞—Å –æ–±—Ä–æ–±–∫–∏
                button.classList.remove('processing');
                button.removeAttribute('data-processing');
                button.disabled = false;

                // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —É—á–∞—Å—Ç—å —É —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ —á–µ—Ä–µ–∑ –º–æ–¥—É–ª—å participation
                const isParticipating = this.participatingRaffles.has(raffleId);

                if (isParticipating) {
                    // –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á —É–∂–µ –±–µ—Ä–µ —É—á–∞—Å—Ç—å, –≤—ñ–¥–æ–±—Ä–∞–∂–∞—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–∏–π —Å—Ç–∞–Ω
                    const ticketCount = this.userRaffleTickets[raffleId] || 1;
                    const isMini = button.classList.contains('mini-raffle-button');

                    button.textContent = isMini ?
                        `–î–æ–¥–∞—Ç–∏ —â–µ –±—ñ–ª–µ—Ç (${ticketCount})` :
                        `–î–æ–¥–∞—Ç–∏ —â–µ –±—ñ–ª–µ—Ç (—É –≤–∞—Å: ${ticketCount})`;

                    button.classList.add('participating');
                } else {
                    // –í—ñ–¥–Ω–æ–≤–ª—é—î–º–æ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–∏–π —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏
                    const originalText = button.getAttribute('data-original-text');

                    if (originalText) {
                        button.textContent = originalText;
                    } else {
                        // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏–π —Ç–µ–∫—Å—Ç, —è–∫—â–æ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–∏–π –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ
                        const entryFee = button.getAttribute('data-entry-fee') || '1';
                        button.textContent = button.classList.contains('mini-raffle-button') ?
                            '–í–∑—è—Ç–∏ —É—á–∞—Å—Ç—å' :
                            `–í–∑—è—Ç–∏ —É—á–∞—Å—Ç—å –∑–∞ ${entryFee} –∂–µ—Ç–æ–Ω${parseInt(entryFee) > 1 ? '–∏' : ''}`;
                    }

                    button.classList.remove('participating');
                }
            });
        },

        /**
         * –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞—Ç—É—Å—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó –≤ localStorage
         * @param {string} raffleId - ID —Ä–æ–∑—ñ–≥—Ä–∞—à—É
         * @param {string} transactionId - ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó
         * @param {string} status - –ù–æ–≤–∏–π —Å—Ç–∞—Ç—É—Å —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó
         * @param {string} [message] - –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É (–æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ)
         * @private
         */
        _updateTransactionStatus: function(raffleId, transactionId, status, message) {
            try {
                const transactions = JSON.parse(localStorage.getItem('winix_pending_transactions') || '[]');
                const updatedTransactions = transactions.map(t => {
                    if (t.raffleId === raffleId && t.transactionId === transactionId) {
                        return {
                            ...t,
                            status: status,
                            message: message,
                            completedAt: Date.now()
                        };
                    }
                    return t;
                });

                localStorage.setItem('winix_pending_transactions', JSON.stringify(updatedTransactions));
            } catch (e) {
                console.warn('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞—Ç—É—Å—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó:', e);
            }
        },

        /**
         * –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –ø–æ–¥—ñ—ó –ø—Ä–æ —É—Å–ø—ñ—à–Ω—É —É—á–∞—Å—Ç—å —É —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ
         * @param {string} raffleId - ID —Ä–æ–∑—ñ–≥—Ä–∞—à—É
         * @param {number} ticketCount - –ö—ñ–ª—å–∫—ñ—Å—Ç—å –±—ñ–ª–µ—Ç—ñ–≤
         * @private
         */
        _triggerParticipationEvent: function(raffleId, ticketCount) {
            document.dispatchEvent(new CustomEvent('raffle-participation', {
                detail: {
                    successful: true,
                    raffleId: raffleId,
                    ticketCount: ticketCount
                }
            }));
        },

        /**
         * –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ –∑ —É—á–∞—Å—Ç—é –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
         * @param {boolean} forceRefresh - –ü—Ä–∏–º—É—Å–æ–≤–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
         * @returns {Promise<Object>} –†–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
         */
        loadUserRaffles: async function(forceRefresh = false) {
            // –í—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è —Å—Ç–∞–Ω—É –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
            if (this._loadingUserRaffles && !forceRefresh) {
                console.log('‚è≥ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤–∂–µ –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è');
                return;
            }

            // –ó–∞—Ö–∏—Å—Ç –≤—ñ–¥ —á–∞—Å—Ç–∏—Ö –∑–∞–ø–∏—Ç—ñ–≤
            const now = Date.now();
            if (!forceRefresh && now - this.lastSyncTime < 5000) {
                console.log('‚è≥ –ó–∞–Ω–∞–¥—Ç–æ —á–∞—Å—Ç–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è, –ø—Ä–æ–ø—É—Å–∫–∞—î–º–æ –∑–∞–ø–∏—Ç');
                return;
            }

            this._loadingUserRaffles = true;
            this.isSyncInProgress = true;

            // –Ü–Ω–∫—Ä–µ–º–µ–Ω—Ç—É—î–º–æ –ª—ñ—á–∏–ª—å–Ω–∏–∫ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ–π –¥–ª—è –¥–µ–±–∞–≥—É
            this.syncCounter++;
            const syncId = this.syncCounter;
            console.log(`üîÑ –ü–æ—á–∞—Ç–æ–∫ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó #${syncId}`);

            try {
                // –û—Ç—Ä–∏–º–∞–Ω–Ω—è ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
                const userId = WinixRaffles.state.telegramId ||
                              (window.WinixAPI ? window.WinixAPI.getUserId() : null);

                if (!userId) {
                    console.warn('‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–∑–Ω–∞—á–∏—Ç–∏ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤');
                    return;
                }

                // –ü–µ—Ä–µ–¥ –∑–∞–ø–∏—Ç–æ–º —Å–ø–æ—á–∞—Ç–∫—É –æ–Ω–æ–≤–ª—é—î–º–æ UI –Ω–∞ –æ—Å–Ω–æ–≤—ñ –∫–µ—à–æ–≤–∞–Ω–∏—Ö –¥–∞–Ω–∏—Ö
                this.updateParticipationButtons();

                // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ API
                if (!window.WinixAPI || typeof window.WinixAPI.apiRequest !== 'function') {
                    console.warn('‚ö†Ô∏è WinixAPI.apiRequest –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∏–π');
                    this._loadingUserRaffles = false;
                    this.isSyncInProgress = false;
                    return;
                }

                // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ–π —Å—Ç–∞–Ω –¥–ª—è –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è
                const prevParticipatingRaffles = new Set(this.participatingRaffles);
                const prevTickets = {...this.userRaffleTickets};

                // –í–ò–ü–†–ê–í–õ–ï–ù–û: –î–æ–¥–∞—î–º–æ –ø–∞—Ä–∞–º–µ—Ç—Ä –∑–∞–ø–æ–±—ñ–≥–∞–Ω–Ω—è –∫–µ—à—É–≤–∞–Ω–Ω—é –¥–ª—è –≥–∞—Ä–∞–Ω—Ç–æ–≤–∞–Ω–æ–≥–æ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Å–≤—ñ–∂–∏—Ö –¥–∞–Ω–∏—Ö
                const nocache = now;

                // –ó–∞–ø–∏—Ç –¥–æ API –∑ –¥–æ–¥–∞—Ç–∫–æ–≤–∏–º–∏ –æ–ø—Ü—ñ—è–º–∏ –¥–ª—è –Ω–∞–¥—ñ–π–Ω–æ—Å—Ç—ñ
                const response = await WinixAPI.apiRequest(`user/${userId}/raffles?nocache=${nocache}`, 'GET', null, {
                    suppressErrors: true,
                    hideLoader: true,
                    timeout: 10000,
                    allowParallel: true,
                    retries: 2
                });

                if (response && response.status === 'success' && Array.isArray(response.data)) {
                    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —î –∑–º—ñ–Ω–∏
                    let hasChanges = false;

                    // –°—Ç–≤–æ—Ä—é—î–º–æ –ø—Ä–æ–º—ñ–∂–Ω—ñ –æ–±'—î–∫—Ç–∏ –¥–ª—è –∫–æ—Ä–µ–∫—Ç–Ω–æ–≥–æ –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è
                    const newParticipating = new Set();
                    const newTickets = {};

                    // –û–±—Ä–æ–±–ª—è—î–º–æ –Ω–æ–≤—ñ –¥–∞–Ω—ñ
                    response.data.forEach(raffle => {
                        if (raffle.raffle_id) {
                            // –î–æ–¥–∞—î–º–æ –¥–æ —Ç–∏–º—á–∞—Å–æ–≤–æ—ó –º–Ω–æ–∂–∏–Ω–∏ —É—á–∞—Å—Ç—ñ
                            newParticipating.add(raffle.raffle_id);

                            // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –±—ñ–ª–µ—Ç—ñ–≤ —É –ø—Ä–æ–º—ñ–∂–Ω–æ–º—É –æ–±'—î–∫—Ç—ñ
                            newTickets[raffle.raffle_id] = raffle.entry_count || 1;

                            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —î –∑–º—ñ–Ω–∏
                            if (!prevParticipatingRaffles.has(raffle.raffle_id) ||
                                prevTickets[raffle.raffle_id] !== (raffle.entry_count || 1)) {
                                hasChanges = true;
                            }
                        }
                    });

                    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞ –≤–∏–¥–∞–ª–µ–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ
                    prevParticipatingRaffles.forEach(raffleId => {
                        if (!newParticipating.has(raffleId)) {
                            hasChanges = true;
                        }
                    });

                    // –í–ò–ü–†–ê–í–õ–ï–ù–û: –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ª–æ–∫–∞–ª—å–Ω–∏—Ö –¥–∞–Ω–∏—Ö –Ω–∞ –ø—Ä—ñ–æ—Ä–∏—Ç–µ—Ç–Ω—ñ—Å—Ç—å
                    // –Ø–∫—â–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –±—ñ–ª–µ—Ç—ñ–≤ —É –Ω–∞—Å –±—ñ–ª—å—à–∞, –Ω—ñ–∂ —É –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ, –∑–±–µ—Ä—ñ–≥–∞—î–º–æ –Ω–∞—à—ñ –¥–∞–Ω—ñ
                    Array.from(this.participatingRaffles).forEach(raffleId => {
                        if (newParticipating.has(raffleId)) {
                            const localTickets = this.userRaffleTickets[raffleId] || 0;
                            const serverTickets = newTickets[raffleId] || 0;

                            // –Ø–∫—â–æ –ª–æ–∫–∞–ª—å–Ω—ñ –¥–∞–Ω—ñ –Ω–æ–≤—ñ—à—ñ (–±—ñ–ª—å—à–µ –±—ñ–ª–µ—Ç—ñ–≤), –∑–±–µ—Ä—ñ–≥–∞—î–º–æ –Ω–∞—à–µ –∑–Ω–∞—á–µ–Ω–Ω—è
                            if (localTickets > serverTickets) {
                                console.log(`üîç –í–∏—è–≤–ª–µ–Ω–æ —Ä–æ–∑–±—ñ–∂–Ω—ñ—Å—Ç—å –≤ –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –±—ñ–ª–µ—Ç—ñ–≤ –¥–ª—è —Ä–æ–∑—ñ–≥—Ä–∞—à—É ${raffleId}: –ª–æ–∫–∞–ª—å–Ω–æ ${localTickets}, –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ ${serverTickets}. –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ª–æ–∫–∞–ª—å–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è.`);
                                newTickets[raffleId] = localTickets;
                                hasChanges = true;

                                // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –ø—Ä–∞–ø–æ—Ä–µ—Ü—å –ø—Ä–∏–º—É—Å–æ–≤–æ—ó —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó, —â–æ–± –ø—ñ–∑–Ω—ñ—à–µ –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏
                                this.needsForcedSync = true;
                            }
                        }
                    });

                    // –û—á–∏—â–∞—î–º–æ –ø–æ—Ç–æ—á–Ω—ñ –¥–∞–Ω—ñ —Ç–∞ –∑–∞—Å—Ç–æ—Å–æ–≤—É—î–º–æ –Ω–æ–≤—ñ
                    this.participatingRaffles.clear();
                    this.userRaffleTickets = {};

                    // –û–±—Ä–æ–±–ª—è—î–º–æ –Ω–æ–≤—ñ –¥–∞–Ω—ñ
                    response.data.forEach(raffle => {
                        if (raffle.raffle_id) {
                            // –î–æ–¥–∞—î–º–æ –¥–æ –º–Ω–æ–∂–∏–Ω–∏ —É—á–∞—Å—Ç—ñ
                            this.participatingRaffles.add(raffle.raffle_id);

                            // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –±—ñ–ª–µ—Ç—ñ–≤
                            this.userRaffleTickets[raffle.raffle_id] = newTickets[raffle.raffle_id] || raffle.entry_count || 1;
                        }
                    });

                    // –î–û–î–ê–ù–û: –û–Ω–æ–≤–ª—é—î–º–æ –∫–µ—à —Å–µ—Ä–≤–µ—Ä–Ω–∏—Ö –¥–∞–Ω–∏—Ö
                    this.serverDataCache.participatingRaffles = new Set(this.participatingRaffles);
                    this.serverDataCache.userRaffleTickets = {...this.userRaffleTickets};
                    this.serverDataCache.lastUpdate = now;

                    // –°–∫–∏–¥–∞—î–º–æ –ø—Ä–∞–ø–æ—Ä–µ—Ü—å –ø—Ä–∏–º—É—Å–æ–≤–æ—ó —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó, —Ç–∞–∫ —è–∫ –¥–∞–Ω—ñ –æ–Ω–æ–≤–ª–µ–Ω–æ
                    this.needsForcedSync = false;

                    console.log(`‚úÖ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –±–µ—Ä–µ —É—á–∞—Å—Ç—å —É ${this.participatingRaffles.size} —Ä–æ–∑—ñ–≥—Ä–∞—à–∞—Ö (—Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è #${syncId})`);

                    // –Ø–∫—â–æ –±—É–ª–∏ –∑–º—ñ–Ω–∏, –ª–æ–≥—É—î–º–æ —ó—Ö
                    if (hasChanges) {
                        console.log('üîÑ –í–∏—è–≤–ª–µ–Ω–æ –∑–º—ñ–Ω–∏ –≤ —É—á–∞—Å—Ç—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –ø—ñ–¥ —á–∞—Å —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó #' + syncId);
                    }

                    // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –¥–∞–Ω—ñ –≤ localStorage
                    this._saveParticipationToStorage();

                    // –û–Ω–æ–≤–ª—é—î–º–æ —á–∞—Å –æ—Å—Ç–∞–Ω–Ω—å–æ—ó —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó
                    this.lastSyncTime = now;

                    // –û–Ω–æ–≤–ª—é—î–º–æ –∫–Ω–æ–ø–∫–∏ —É—á–∞—Å—Ç—ñ —Ç—ñ–ª—å–∫–∏ —è–∫—â–æ –±—É–ª–∏ –∑–º—ñ–Ω–∏
                    if (hasChanges) {
                        this.updateParticipationButtons();
                    }
                } else if (response && response.status === 'error') {
                    console.warn(`‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤: ${response.message}`);

                    // –Ø–∫—â–æ –ø–æ–º–∏–ª–∫–∞ 429 (–∑–∞–Ω–∞–¥—Ç–æ –±–∞–≥–∞—Ç–æ –∑–∞–ø–∏—Ç—ñ–≤), –ø–æ–≤—Ç–æ—Ä—é—î–º–æ –∑–∞–ø–∏—Ç –ø—ñ–∑–Ω—ñ—à–µ
                    if (response.message && response.message.includes('–∑–∞–Ω–∞–¥—Ç–æ –±–∞–≥–∞—Ç–æ –∑–∞–ø–∏—Ç—ñ–≤')) {
                        setTimeout(() => this.loadUserRaffles(), 5000);
                    }
                }
            } catch (error) {
                console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:', error);
            } finally {
                console.log(`‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—è —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó #${syncId}`);
                this._loadingUserRaffles = false;
                this.isSyncInProgress = false;
            }
        },

        /**
         * –û–Ω–æ–≤–ª–µ–Ω–Ω—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∫–Ω–æ–ø–æ–∫ —É—á–∞—Å—Ç—ñ
         */
        updateParticipationButtons: function() {
            try {
                console.log('üîÑ –û–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–Ω–æ–ø–æ–∫ —É—á–∞—Å—Ç—ñ...');

                // –ù–û–í–ò–ô –ö–û–î: –í—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –∑ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–∏—Ö –¥–∞–Ω–∏—Ö —É—á–∞—Å—Ç—ñ
                try {
                    // –ó–±–∏—Ä–∞—î–º–æ –≤—Å—ñ –∑–∞–ø–∏—Å–∏ –ø—Ä–æ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω—É —É—á–∞—Å—Ç—å
                    const storageKeys = Object.keys(localStorage);
                    const participationKeys = storageKeys.filter(key => key.startsWith('winix_confirmed_participation_'));

                    if (participationKeys.length > 0) {
                        console.log(`üìã –ó–Ω–∞–π–¥–µ–Ω–æ ${participationKeys.length} –∑–∞–ø–∏—Å—ñ–≤ –ø—Ä–æ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω—É —É—á–∞—Å—Ç—å`);

                        participationKeys.forEach(key => {
                            try {
                                const data = JSON.parse(localStorage.getItem(key));
                                const raffleId = data.raffleId;
                                const ticketCount = data.ticketCount || 1;
                                const age = Date.now() - data.validatedAt;

                                // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω—ñ –¥–∞–Ω—ñ, —è–∫—ñ –Ω–µ —Å—Ç–∞—Ä—ñ—à—ñ 30 —Ö–≤–∏–ª–∏–Ω
                                if (age < 30 * 60 * 1000 && raffleId) {
                                    this.participatingRaffles.add(raffleId);
                                    this.userRaffleTickets[raffleId] = ticketCount;
                                }
                            } catch (e) {
                                console.warn(`‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –æ–±—Ä–æ–±–∫–∏ –∑–∞–ø–∏—Å—É ${key}:`, e);
                            }
                        });
                    }
                } catch (e) {
                    console.warn('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –∑ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–∏—Ö –¥–∞–Ω–∏—Ö:', e);
                }

                // –°–ø–æ—á–∞—Ç–∫—É –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –¥–∞–Ω—ñ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Å—Ö–æ–≤–∏—â–∞
                try {
                    const savedState = localStorage.getItem('winix_participation_state');
                    if (savedState) {
                        const parsedState = JSON.parse(savedState);

                        // –í—ñ–¥–Ω–æ–≤–ª—é—î–º–æ –º–Ω–æ–∂–∏–Ω—É —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤, —è–∫—â–æ –≤–æ–Ω–∞ –ø–æ—Ä–æ–∂–Ω—è
                        if (parsedState && Array.isArray(parsedState.raffles) &&
                            (!this.participatingRaffles || this.participatingRaffles.size === 0)) {

                            this.participatingRaffles = new Set(parsedState.raffles);

                            // –í—ñ–¥–Ω–æ–≤–ª—é—î–º–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –±—ñ–ª–µ—Ç—ñ–≤
                            if (parsedState.tickets) {
                                this.userRaffleTickets = parsedState.tickets;
                            }
                        }
                    }
                } catch (e) {
                    console.warn('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞–Ω—É —É—á–∞—Å—Ç—ñ:', e);
                }

                // –ù–û–í–ò–ô –ö–û–î: –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–µ–¥–∞–≤–Ω—ñ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó
                try {
                    const lastTxData = localStorage.getItem('winix_last_transaction');
                    if (lastTxData) {
                        const lastTx = JSON.parse(lastTxData);
                        const txAge = Date.now() - lastTx.timestamp;

                        // –î–ª—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π –º–æ–ª–æ–¥—à–∏—Ö –∑–∞ 3 —Ö–≤–∏–ª–∏–Ω–∏, –¥–æ–¥–∞—î–º–æ —Ä–æ–∑—ñ–≥—Ä–∞—à —É —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç—ñ
                        if (txAge < 180000 && lastTx.confirmed && lastTx.type === 'participation' && lastTx.raffleId) {
                            console.log(`üìù –ó–∞—Å—Ç–æ—Å–æ–≤—É—î–º–æ –¥–∞–Ω—ñ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó –¥–ª—è —Ä–æ–∑—ñ–≥—Ä–∞—à—É ${lastTx.raffleId} (${Math.round(txAge/1000)}—Å —Ç–æ–º—É)`);

                            // –î–æ–¥–∞—î–º–æ —Ä–æ–∑—ñ–≥—Ä–∞—à, —è–∫—â–æ –≤—ñ–Ω –≤—ñ–¥—Å—É—Ç–Ω—ñ–π
                            this.participatingRaffles.add(lastTx.raffleId);

                            // –û–Ω–æ–≤–ª—é—î–º–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –±—ñ–ª–µ—Ç—ñ–≤, —è–∫—â–æ –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∞–±–æ –º–µ–Ω—à–∞
                            const currentTickets = this.userRaffleTickets[lastTx.raffleId] || 0;
                            if (lastTx.ticketCount && lastTx.ticketCount > currentTickets) {
                                this.userRaffleTickets[lastTx.raffleId] = lastTx.ticketCount;
                            }
                        }
                    }
                } catch (e) {
                    console.warn('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –æ–±—Ä–æ–±–∫–∏ –æ—Å—Ç–∞–Ω–Ω—å–æ—ó —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó:', e);
                }

                // –û—Ç—Ä–∏–º—É—î–º–æ –≤—Å—ñ –∫–Ω–æ–ø–∫–∏ —É—á–∞—Å—Ç—ñ
                const buttons = document.querySelectorAll('.join-button, .mini-raffle-button');
                if (!buttons.length) return;

                // –°—Ç–≤–æ—Ä—é—î–º–æ –∫–µ—à –¥–ª—è –æ–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—ó
                const participatingCache = {};
                this.participatingRaffles.forEach(id => {
                    participatingCache[id] = true;
                });

                const invalidCache = {};
                this.invalidRaffleIds.forEach(id => {
                    invalidCache[id] = true;
                });

                const activeRequestsCache = {};
                this.activeTransactions.forEach((value, key) => {
                    activeRequestsCache[key] = true;
                });

                // –ù–û–í–ò–ô –ö–û–î: –õ–æ–≥—É–≤–∞–Ω–Ω—è –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –∫–Ω–æ–ø–æ–∫ —Ç–∞ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ –¥–ª—è –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
                console.log(`üéÆ –û–Ω–æ–≤–ª–µ–Ω–Ω—è ${buttons.length} –∫–Ω–æ–ø–æ–∫, —É—á–∞—Å—Ç—å —É ${this.participatingRaffles.size} —Ä–æ–∑—ñ–≥—Ä–∞—à–∞—Ö`);

                // –û–±—Ä–æ–±–ª—è—î–º–æ –∫–æ–∂–Ω—É –∫–Ω–æ–ø–∫—É
                buttons.forEach(button => {
                    const raffleId = button.getAttribute('data-raffle-id');
                    if (!raffleId) return;

                    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –±–µ—Ä–µ —É—á–∞—Å—Ç—å —É —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ
                    const isParticipating = participatingCache[raffleId];

                    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —Ä–æ–∑—ñ–≥—Ä–∞—à –Ω–µ–¥—ñ–π—Å–Ω–∏–π
                    const isInvalid = invalidCache[raffleId] ||
                                     (WinixRaffles.state.invalidRaffleIds &&
                                      WinixRaffles.state.invalidRaffleIds.has(raffleId));

                    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –∫–Ω–æ–ø–∫–∞ –≤ –ø—Ä–æ—Ü–µ—Å—ñ –æ–±—Ä–æ–±–∫–∏
                    const isProcessing = activeRequestsCache[raffleId] ||
                                        this.pendingRequests[raffleId];

                    // –ù–û–í–ò–ô –ö–û–î: –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ø–æ—Ç–æ—á–Ω–∏–π —Å—Ç–∞–Ω –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è –ø—ñ—Å–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
                    const wasParticipating = button.classList.contains('participating');
                    const wasDisabled = button.disabled;
                    const previousText = button.textContent;

                    // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω –∫–Ω–æ–ø–∫–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ –¥–æ –ø–µ—Ä–µ–≤—ñ—Ä–æ–∫
                    if (isInvalid) {
                        // –î–ª—è –Ω–µ–¥—ñ–π—Å–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
                        button.textContent = '–†–æ–∑—ñ–≥—Ä–∞—à –∑–∞–≤–µ—Ä—à–µ–Ω–æ';
                        button.classList.add('disabled');
                        button.disabled = true;
                    } else if (isProcessing) {
                        // –î–ª—è –∫–Ω–æ–ø–æ–∫ —É –ø—Ä–æ—Ü–µ—Å—ñ –æ–±—Ä–æ–±–∫–∏
                        button.textContent = '–û–±—Ä–æ–±–∫–∞...';
                        button.classList.add('processing');
                        button.disabled = true;
                    } else if (isParticipating) {
                        // –î–ª—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ –∑ —É—á–∞—Å—Ç—é
                        const ticketCount = this.userRaffleTickets[raffleId] || 1;
                        const isMini = button.classList.contains('mini-raffle-button');

                        // –ù–û–í–ò–ô –ö–û–î: –ó–º—ñ–Ω–∞ —Ç–µ–∫—Å—Ç—É —Ç—ñ–ª—å–∫–∏ —è–∫—â–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –±—ñ–ª–µ—Ç—ñ–≤ –∑–º—ñ–Ω–∏–ª–∞—Å—è
                        const newText = isMini ?
                            `–î–æ–¥–∞—Ç–∏ —â–µ –±—ñ–ª–µ—Ç (${ticketCount})` :
                            `–î–æ–¥–∞—Ç–∏ —â–µ –±—ñ–ª–µ—Ç (—É –≤–∞—Å: ${ticketCount})`;

                        if (!wasParticipating || previousText !== newText) {
                            button.textContent = newText;

                            // –ù–û–í–ò–ô –ö–û–î: –î–æ–¥–∞—î–º–æ –∞–Ω—ñ–º–∞—Ü—ñ—é –ø—Ä–∏ –∑–º—ñ–Ω—ñ –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –±—ñ–ª–µ—Ç—ñ–≤
                            if (wasParticipating && previousText !== newText) {
                                button.classList.add('ticket-updated');
                                setTimeout(() => button.classList.remove('ticket-updated'), 1000);
                            }
                        }

                        button.classList.add('participating');
                        button.classList.remove('processing');
                        button.disabled = false;

                        // –ù–û–í–ò–ô –ö–û–î: –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –±—ñ–ª–µ—Ç—ñ–≤ —É –∞—Ç—Ä–∏–±—É—Ç—ñ –¥–ª—è –ª–µ–≥–∫–æ–≥–æ –¥–æ—Å—Ç—É–ø—É
                        button.setAttribute('data-ticket-count', ticketCount);
                    } else {
                        // –î–ª—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ –±–µ–∑ —É—á–∞—Å—Ç—ñ
                        const entryFee = button.getAttribute('data-entry-fee') || '1';

                        // –í—ñ–¥–Ω–æ–≤–ª—é—î–º–æ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–∏–π —Ç–µ–∫—Å—Ç
                        const originalText = button.getAttribute('data-original-text');
                        if (originalText && !button.textContent.includes('–í–∑—è—Ç–∏ —É—á–∞—Å—Ç—å')) {
                            button.textContent = originalText;
                        } else {
                            // –ê–±–æ –≤—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏–π —Ç–µ–∫—Å—Ç
                            button.textContent = button.classList.contains('mini-raffle-button') ?
                                '–í–∑—è—Ç–∏ —É—á–∞—Å—Ç—å' :
                                `–í–∑—è—Ç–∏ —É—á–∞—Å—Ç—å –∑–∞ ${entryFee} –∂–µ—Ç–æ–Ω${parseInt(entryFee) > 1 ? '–∏' : ''}`;
                        }

                        button.classList.remove('participating', 'processing');
                        button.disabled = false;

                        // –í–∏–¥–∞–ª—è—î–º–æ –∞—Ç—Ä–∏–±—É—Ç –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –±—ñ–ª–µ—Ç—ñ–≤
                        button.removeAttribute('data-ticket-count');
                    }

                    // –ù–û–í–ò–ô –ö–û–î: –õ–æ–≥—É–≤–∞–Ω–Ω—è –∑–º—ñ–Ω–∏ —Å—Ç–∞–Ω—É –∫–Ω–æ–ø–∫–∏ –¥–ª—è –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
                    if (wasParticipating !== button.classList.contains('participating') ||
                        wasDisabled !== button.disabled ||
                        previousText !== button.textContent) {

                        console.log(`üîÑ –ö–Ω–æ–ø–∫–∞ ${raffleId}: ${previousText} -> ${button.textContent}`);
                    }
                });

                // –ù–û–í–ò–ô –ö–û–î: –î–æ–¥–∞—î–º–æ —Å—Ç–∏–ª—ñ –¥–ª—è –∞–Ω—ñ–º–∞—Ü—ñ—ó –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –±—ñ–ª–µ—Ç—ñ–≤
                if (!document.getElementById('ticket-update-animation')) {
                    const style = document.createElement('style');
                    style.id = 'ticket-update-animation';
                    style.textContent = `
                        @keyframes ticket-highlight {
                            0% { transform: scale(1); background-color: inherit; }
                            50% { transform: scale(1.05); background-color: rgba(76, 175, 80, 0.3); }
                            100% { transform: scale(1); background-color: inherit; }
                        }
                        
                        .ticket-updated {
                            animation: ticket-highlight 0.8s ease-out;
                        }
                    `;
                    document.head.appendChild(style);
                }
            } catch (error) {
                console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—ñ –∫–Ω–æ–ø–æ–∫ —É—á–∞—Å—Ç—ñ:", error);
            }
        },


        /**
         * –£—á–∞—Å—Ç—å —É —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ
         * @param {string} raffleId - ID —Ä–æ–∑—ñ–≥—Ä–∞—à—É
         * @param {string} raffleType - –¢–∏–ø —Ä–æ–∑—ñ–≥—Ä–∞—à—É (daily/main)
         * @param {number} entryCount - –ö—ñ–ª—å–∫—ñ—Å—Ç—å –±—ñ–ª–µ—Ç—ñ–≤
         * @returns {Promise<Object>} - –†–µ–∑—É–ª—å—Ç–∞—Ç —É—á–∞—Å—Ç—ñ
         */
        participateInRaffle: async function(raffleId, raffleType, entryCount = 1) {
            // –í–ò–ü–†–ê–í–õ–ï–ù–û: –ó–∞–≤–∂–¥–∏ –≤—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —á–∞—Å –∑–∞–ø–∏—Ç—É –Ω–∞ –ø–æ—á–∞—Ç–∫—É
            const requestStartTime = Date.now();
            this.lastParticipationTime = requestStartTime;

            console.log(`üéØ –°–ø—Ä–æ–±–∞ —É—á–∞—Å—Ç—ñ —É —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ ${raffleId}, –∫—ñ–ª—å–∫—ñ—Å—Ç—å: ${entryCount}`);

            // 1. –í–ê–õ–Ü–î–ê–¶–Ü–Ø –ü–ê–†–ê–ú–ï–¢–†–Ü–í
            if (!raffleId) {
                console.error('‚ùå –ù–µ –≤–∫–∞–∑–∞–Ω–æ ID —Ä–æ–∑—ñ–≥—Ä–∞—à—É');
                return Promise.reject(new Error('–ù–µ –≤–∫–∞–∑–∞–Ω–æ ID —Ä–æ–∑—ñ–≥—Ä–∞—à—É'));
            }

            if (!window.isValidUUID(raffleId)) {
                console.error('‚ùå –ù–µ–≤–∞–ª—ñ–¥–Ω–∏–π —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä —Ä–æ–∑—ñ–≥—Ä–∞—à—É');
                return Promise.reject(new Error('–ù–µ–≤–∞–ª—ñ–¥–Ω–∏–π —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä —Ä–æ–∑—ñ–≥—Ä–∞—à—É'));
            }

            // 2. –ì–õ–û–ë–ê–õ–¨–ù–ï –ë–õ–û–ö–£–í–ê–ù–ù–Ø –ó–ê–ü–ò–¢–Ü–í
            if (this.requestLock) {
                console.warn('‚ö†Ô∏è –ì–ª–æ–±–∞–ª—å–Ω–µ –±–ª–æ–∫—É–≤–∞–Ω–Ω—è –∞–∫—Ç–∏–≤–Ω–µ, –∑–∞–ø–∏—Ç –≤—ñ–¥—Ö–∏–ª–µ–Ω–æ');
                return {
                    success: false,
                    message: '–°–∏—Å—Ç–µ–º–∞ —Ç–∏–º—á–∞—Å–æ–≤–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞, —Å–ø—Ä–æ–±—É–π—Ç–µ –∑–∞ –∫—ñ–ª—å–∫–∞ —Å–µ–∫—É–Ω–¥'
                };
            }

            // –í–ò–ü–†–ê–í–õ–ï–ù–û: –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –∞–∫—Ç–∏–≤–Ω–∏–π –∑–∞–ø–∏—Ç
            if (this.requestInProgress) {
                // –Ø–∫—â–æ –∑–∞–ø–∏—Ç –≤–∏—Å–∏—Ç—å –±—ñ–ª—å—à–µ 15 —Å–µ–∫—É–Ω–¥, —Å–∫–∏–¥–∞—î–º–æ –±–ª–æ–∫—É–≤–∞–Ω–Ω—è
                if (requestStartTime - this.lastParticipationTime > 15000) {
                    console.warn("‚ö†Ô∏è –í–∏—è–≤–ª–µ–Ω–æ –∑–∞—Å—Ç—Ä—è–≥–ª–∏–π –∑–∞–ø–∏—Ç, —Å–∫–∏–¥–∞—î–º–æ –±–ª–æ–∫—É–≤–∞–Ω–Ω—è");
                    this.requestInProgress = false;
                } else {
                    console.warn("‚ö†Ô∏è –ó–∞–ø–∏—Ç —É–∂–µ –≤ –ø—Ä–æ—Ü–µ—Å—ñ, –∑–∞—á–µ–∫–∞–π—Ç–µ –π–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è");
                    return {
                        success: false,
                        message: '–ó–∞—á–µ–∫–∞–π—Ç–µ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ–≥–æ –∑–∞–ø–∏—Ç—É'
                    };
                }
            }

            // 3. –ü–ï–†–ï–í–Ü–†–ö–ê –û–ë–ú–ï–ñ–ï–ù–¨ –ö–û–ù–ö–†–ï–¢–ù–û–ì–û –†–û–ó–Ü–ì–†–ê–®–£
            if (this.pendingRequests[raffleId]) {
                console.warn(`‚ö†Ô∏è –í–∂–µ —î –∑–∞–ø–∏—Ç –¥–ª—è —Ä–æ–∑—ñ–≥—Ä–∞—à—É ${raffleId}`);
                return {
                    success: false,
                    message: '–ó–∞–ø–∏—Ç –¥–ª—è —Ü—å–æ–≥–æ —Ä–æ–∑—ñ–≥—Ä–∞—à—É –≤–∂–µ –æ–±—Ä–æ–±–ª—è—î—Ç—å—Å—è'
                };
            }

            // 4. –ß–ê–°–û–í–ò–ô –Ü–ù–¢–ï–†–í–ê–õ
            const now = Date.now();
            const lastRequestTime = this.lastRequestTimes[raffleId] || 0;
            const timeSinceLastRequest = now - lastRequestTime;

            if (timeSinceLastRequest < this.MIN_REQUEST_INTERVAL) {
                console.warn(`‚ö†Ô∏è –ù–∞–¥—Ç–æ —à–≤–∏–¥–∫–∏–π –∑–∞–ø–∏—Ç –¥–ª—è —Ä–æ–∑—ñ–≥—Ä–∞—à—É ${raffleId}`);
                return {
                    success: false,
                    message: '–ë—É–¥—å –ª–∞—Å–∫–∞, –∑–∞—á–µ–∫–∞–π—Ç–µ –ø–µ—Ä–µ–¥ –Ω–∞—Å—Ç—É–ø–Ω–æ—é —Å–ø—Ä–æ–±–æ—é'
                };
            }

            // 5. –ü–ï–†–ï–í–Ü–†–ö–ê –ù–ê –ù–ï–í–ê–õ–Ü–î–ù–Ü–°–¢–¨ –†–û–ó–Ü–ì–†–ê–®–£
            if (this.invalidRaffleIds.has(raffleId) ||
                (WinixRaffles.state.invalidRaffleIds && WinixRaffles.state.invalidRaffleIds.has(raffleId))) {
                console.warn(`‚ö†Ô∏è –ù–µ–≤–∞–ª—ñ–¥–Ω–∏–π —Ä–æ–∑—ñ–≥—Ä–∞—à ${raffleId}`);
                return {
                    success: false,
                    message: '–†–æ–∑—ñ–≥—Ä–∞—à –≤–∂–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ –∞–±–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π'
                };
            }

            // –í–ò–ü–†–ê–í–õ–ï–ù–û: –û—Ç—Ä–∏–º—É—î–º–æ –¥–æ—Å—Ç—É–ø–Ω–∏–π –±–∞–ª–∞–Ω—Å –ø–µ—Ä–µ–¥ –∑–∞–ø–∏—Ç–æ–º —á–µ—Ä–µ–∑ –Ω–æ–≤—É —Ñ—É–Ω–∫—Ü—ñ—é
            const coinsBalance = this._getCurrentCoins();

            // –í–ò–ü–†–ê–í–õ–ï–ù–û: –û—Ç—Ä–∏–º—É—î–º–æ –≤–∞—Ä—Ç—ñ—Å—Ç—å —É—á–∞—Å—Ç—ñ
            let entryFee = 1;
            try {
                // –°–ø—Ä–æ–±—É—î–º–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ –∑ –∫–Ω–æ–ø–∫–∏
                const button = document.querySelector(`.join-button[data-raffle-id="${raffleId}"], .mini-raffle-button[data-raffle-id="${raffleId}"]`);
                if (button) {
                    entryFee = parseInt(button.getAttribute('data-entry-fee') || '1');
                }
            } catch (e) {
                console.warn('‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –≤–∞—Ä—Ç—ñ—Å—Ç—å —É—á–∞—Å—Ç—ñ:', e);
            }

            // –í–ò–ü–†–ê–í–õ–ï–ù–û: –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –¥–æ—Å—Ç–∞—Ç–Ω—ñ—Å—Ç—å –∂–µ—Ç–æ–Ω—ñ–≤ –ø–µ—Ä–µ–¥ —Å–ø–∏—Å–∞–Ω–Ω—è–º
            if (coinsBalance < entryFee) {
                return {
                    success: false,
                    message: `–ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –∂–µ—Ç–æ–Ω—ñ–≤. –ü–æ—Ç—Ä—ñ–±–Ω–æ: ${entryFee}, —É –≤–∞—Å: ${coinsBalance}`
                };
            }

            // 6. –ì–ï–ù–ï–†–ê–¶–Ü–Ø –£–ù–Ü–ö–ê–õ–¨–ù–û–ì–û ID –¢–†–ê–ù–ó–ê–ö–¶–Ü–á
            const transactionId = this._generateTransactionId();

            // 7. –ë–õ–û–ö–£–í–ê–ù–ù–Ø –ó–ê–ü–ò–¢–Ü–í –î–õ–Ø –¶–¨–û–ì–û –†–û–ó–Ü–ì–†–ê–®–£
            this.pendingRequests[raffleId] = {
                id: transactionId,
                timestamp: now,
                entryCount: entryCount,
                raffleType: raffleType,
                status: 'pending'
            };

            // –í–ò–ü–†–ê–í–õ–ï–ù–û: –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –≥–ª–æ–±–∞–ª—å–Ω–∏–π –ø—Ä–∞–ø–æ—Ä–µ—Ü—å –æ–±—Ä–æ–±–∫–∏ –∑–∞–ø–∏—Ç—É
            this.requestInProgress = true;

            // –î–û–î–ê–ù–û: –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –æ–±'—î–∫—Ç –∞–∫—Ç–∏–≤–Ω–æ—ó —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó
            this.activeTransactions.set(raffleId, {
                id: transactionId,
                timestamp: now,
                status: 'pending',
                raffleType: raffleType,
                entryCount: entryCount
            });

            // 8. –û–ù–û–í–õ–ï–ù–ù–Ø –õ–Ü–ß–ò–õ–¨–ù–ò–ö–ê –¢–ê –ß–ê–°–û–í–ò–• –ú–Ü–¢–û–ö
            this.totalRequestCount++;
            this.lastRequestTimes[raffleId] = now;

            // 9. –õ–û–ì–£–í–ê–ù–ù–Ø –ü–û–ß–ê–¢–ö–£ –¢–†–ê–ù–ó–ê–ö–¶–Ü–á
            this._logTransaction({
                type: 'start',
                raffleId: raffleId,
                transactionId: transactionId,
                timestamp: now,
                entryCount: entryCount
            });

            // 10. –ó–ë–ï–†–ï–ñ–ï–ù–ù–Ø –î–ê–ù–ò–• –ü–†–û –¢–†–ê–ù–ó–ê–ö–¶–Ü–Æ –î–õ–Ø –í–Ü–î–ù–û–í–õ–ï–ù–ù–Ø
            try {
                const pendingTransaction = {
                    raffleId: raffleId,
                    timestamp: now,
                    transactionId: transactionId,
                    entryCount: entryCount,
                    status: 'pending'
                };

                let existingTransactions = [];
                try {
                    existingTransactions = JSON.parse(localStorage.getItem('winix_pending_transactions') || '[]');
                    if (!Array.isArray(existingTransactions)) existingTransactions = [];
                } catch (e) {
                    console.warn('‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º–∞ –∑ –ø–∞—Ä—Å–∏–Ω–≥–æ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π:', e);
                    existingTransactions = [];
                }

                // –û—á–∏—â–∞—î–º–æ —Å—Ç–∞—Ä—ñ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó
                const validTransactions = existingTransactions.filter(
                    t => (now - t.timestamp < 30 * 60 * 1000)
                );

                // –î–æ–¥–∞—î–º–æ –Ω–æ–≤—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—é
                validTransactions.push(pendingTransaction);

                // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω–∏–π —Å–ø–∏—Å–æ–∫
                localStorage.setItem('winix_pending_transactions', JSON.stringify(validTransactions));
            } catch (e) {
                console.warn('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó:', e);
            }

            try {
                // 11. –ü–û–ö–ê–ó–£–Ñ–ú–û –Ü–ù–î–ò–ö–ê–¢–û–† –ó–ê–í–ê–ù–¢–ê–ñ–ï–ù–ù–Ø
                if (typeof window.showLoading === 'function') {
                    window.showLoading();
                }

                // 12. –û–¢–†–ò–ú–ê–ù–ù–Ø ID –ö–û–†–ò–°–¢–£–í–ê–ß–ê
                const userId = WinixRaffles.state.telegramId ||
                              (window.WinixAPI ? window.WinixAPI.getUserId() : null);

                if (!userId) {
                    throw new Error('–ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–∑–Ω–∞—á–∏—Ç–∏ –≤–∞—à ID');
                }

                // 13. –ü–ï–†–ï–í–Ü–†–ö–ê –ù–ê–Ø–í–ù–û–°–¢–Ü API
                if (!window.WinixAPI || typeof window.WinixAPI.apiRequest !== 'function') {
                    throw new Error('API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π. –û–Ω–æ–≤—ñ—Ç—å —Å—Ç–æ—Ä—ñ–Ω–∫—É —ñ —Å–ø—Ä–æ–±—É–π—Ç–µ –∑–Ω–æ–≤—É.');
                }

                // –í–ò–ü–†–ê–í–õ–ï–ù–û: –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ —É—á–∞—Å—Ç—å —É —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ
                const alreadyParticipating = this.participatingRaffles && this.participatingRaffles.has(raffleId);

                // –í–ò–ü–†–ê–í–õ–ï–ù–û: –û—Ç—Ä–∏–º—É—î–º–æ –ø–æ—Ç–æ—á–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å –±—ñ–ª–µ—Ç—ñ–≤
                const currentTickets = (this.userRaffleTickets && this.userRaffleTickets[raffleId]) || 0;

                // 14. –ë–£–î–£–Ñ–ú–û –ó–ê–ü–ò–¢ –ó –î–û–î–ê–¢–ö–û–í–ò–ú–ò –ü–ê–†–ê–ú–ï–¢–†–ê–ú–ò –î–õ–Ø –ó–ê–ü–û–ë–Ü–ì–ê–ù–ù–Ø –î–£–ë–õ–Æ–í–ê–ù–ù–Ø
                const requestData = {
                    raffle_id: raffleId,
                    entry_count: entryCount,
                    _transaction_id: transactionId,
                    _timestamp: now,
                    _client_id: `${userId}_${now}_${Math.random().toString(36).substring(2, 7)}`,
                    _current_tickets: currentTickets, // –ü–µ—Ä–µ–¥–∞—î–º–æ –ø–æ—Ç–æ—á–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å –±—ñ–ª–µ—Ç—ñ–≤
                    _already_participating: alreadyParticipating, // –ü–µ—Ä–µ–¥–∞—î–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ —É—á–∞—Å—Ç—å
                    _current_balance: coinsBalance // –ü–µ—Ä–µ–¥–∞—î–º–æ –ø–æ—Ç–æ—á–Ω–∏–π –±–∞–ª–∞–Ω—Å
                };

                // 15. –í–ò–ö–û–ù–£–Ñ–ú–û –ó–ê–ü–ò–¢ –î–û –°–ï–†–í–ï–†–ê
                const endpoint = `user/${userId}/participate-raffle`;
                console.log(`üì° –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –∑–∞–ø–∏—Ç—É –Ω–∞ —É—á–∞—Å—Ç—å (T:${transactionId.split('_')[1]})`);

                // –í–°–¢–ê–ù–û–í–õ–Æ–Ñ–ú–û –¢–ê–ô–ú–ê–£–¢ –î–õ–Ø –ê–í–¢–û–ú–ê–¢–ò–ß–ù–û–ì–û –°–ö–ò–î–ê–ù–ù–Ø –ë–õ–û–ö–£–í–ê–ù–ù–Ø
                const timeoutId = setTimeout(() => {
                    console.warn(`‚ö†Ô∏è –¢–∞–π–º–∞—É—Ç –∑–∞–ø–∏—Ç—É –¥–ª—è —Ä–æ–∑—ñ–≥—Ä–∞—à—É ${raffleId}`);
                    delete this.pendingRequests[raffleId];
                    this.activeTransactions.delete(raffleId);
                    this._resetButtonState(raffleId);

                    // –í–ò–ü–†–ê–í–õ–ï–ù–û: –°–∫–∏–¥–∞—î–º–æ –ø—Ä–∞–ø–æ—Ä–µ—Ü—å –æ–±—Ä–æ–±–∫–∏ –∑–∞–ø–∏—Ç—É –ø—Ä–∏ —Ç–∞–π–º–∞—É—Ç—ñ
                    this.requestInProgress = false;
                }, 15000);

                // –í–ò–ü–†–ê–í–õ–ï–ù–û: –î–æ–¥–∞—î–º–æ –¥–æ–¥–∞—Ç–∫–æ–≤—ñ –æ–ø—Ü—ñ—ó –∑–∞–ø–∏—Ç—É –¥–ª—è –Ω–∞–¥—ñ–π–Ω–æ—Å—Ç—ñ
                const requestOptions = {
                    timeout: 15000,
                    retries: 1,
                    bypassThrottle: true,
                    allowParallel: false,
                    headers: {
                        'X-Transaction-ID': transactionId,
                        'X-Client-Timestamp': now.toString()
                    }
                };

                const response = await WinixAPI.apiRequest(endpoint, 'POST', requestData, requestOptions);

                // –°–ö–ê–°–û–í–£–Ñ–ú–û –¢–ê–ô–ú–ê–£–¢ –ü–†–ò –û–¢–†–ò–ú–ê–ù–ù–Ü –í–Ü–î–ü–û–í–Ü–î–Ü
                clearTimeout(timeoutId);

                // 16. –õ–û–ì–£–Ñ–ú–û –í–Ü–î–ü–û–í–Ü–î–¨
                console.log(`üì© –û—Ç—Ä–∏–º–∞–Ω–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞ –∑–∞–ø–∏—Ç —É—á–∞—Å—Ç—ñ (T:${transactionId.split('_')[1]}):`,
                    response.status === 'success' ? '–£—Å–ø—ñ—Ö' : `–ü–æ–º–∏–ª–∫–∞: ${response.message}`);

                // 17. –õ–û–ì–£–Ñ–ú–û –ó–ê–í–ï–†–®–ï–ù–ù–Ø –¢–†–ê–ù–ó–ê–ö–¶–Ü–á
                this._logTransaction({
                    type: 'complete',
                    raffleId: raffleId,
                    transactionId: transactionId,
                    success: response.status === 'success',
                    timestamp: Date.now(),
                    duration: Date.now() - now,
                    response: {
                        status: response.status,
                        message: response.message,
                        data: response.data
                    }
                });

                if (response.status === 'success') {
                    // 18. –£–°–ü–Ü–®–ù–û –û–ë–†–û–ë–õ–ï–ù–ê –í–Ü–î–ü–û–í–Ü–î–¨

                    // 18.1 –û–ù–û–í–õ–Æ–Ñ–ú–û –°–¢–ê–¢–£–° –¢–†–ê–ù–ó–ê–ö–¶–Ü–á
                    this._updateTransactionStatus(raffleId, transactionId, 'completed');

                    // –í–ò–ó–ù–ê–ß–ê–Ñ–ú–û –ö–Ü–õ–¨–ö–Ü–°–¢–¨ –ë–Ü–õ–ï–¢–Ü–í –ó –î–ê–ù–ò–• –°–ï–†–í–ï–†–ê
                    let newTicketCount = 1;
                    if (response.data && typeof response.data.total_entries === 'number') {
                        newTicketCount = response.data.total_entries;
                    } else {
                        // –Ø–∫—â–æ —Å–µ—Ä–≤–µ—Ä –Ω–µ –ø–æ–≤–µ—Ä–Ω—É–≤ –¥–∞–Ω—ñ, —Ä–æ–±–∏–º–æ –ª–æ–∫–∞–ª—å–Ω–µ –æ–±—á–∏—Å–ª–µ–Ω–Ω—è
                        const currentTickets = this.userRaffleTickets[raffleId] || 0;
                        newTicketCount = currentTickets + 1;
                    }

                    // –ù–ï–ì–ê–ô–ù–û –û–ù–û–í–õ–Æ–Ñ–ú–û –õ–û–ö–ê–õ–¨–ù–Ü –î–ê–ù–Ü
                    this.participatingRaffles.add(raffleId);
                    this.userRaffleTickets[raffleId] = newTicketCount;

                   // –û–ù–û–í–õ–Æ–Ñ–ú–û –ë–ê–õ–ê–ù–°, –Ø–ö–©–û –°–ï–†–í–ï–† –ü–û–í–ï–†–ù–£–í –ù–û–í–ï –ó–ù–ê–ß–ï–ù–ù–Ø
                    if (response.data && typeof response.data.new_coins_balance === 'number') {
                        // –ó–∞–ø–∞–º'—è—Ç–æ–≤—É—î–º–æ –±–∞–ª–∞–Ω—Å –¥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–ª—è –≤–∏—è–≤–ª–µ–Ω–Ω—è –∑–º—ñ–Ω
                        const oldBalance = parseInt(localStorage.getItem('userCoins')) || 0;
                        const newBalance = response.data.new_coins_balance;

                        // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –¥–∞–Ω—ñ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è —ñ –≤–∏—Ä—ñ—à–µ–Ω–Ω—è –∫–æ–Ω—Ñ–ª—ñ–∫—Ç—ñ–≤
                        const transactionRecord = {
                            type: "participation",
                            raffleId: raffleId,
                            oldBalance: oldBalance,
                            newBalance: newBalance,
                            timestamp: Date.now(),
                            confirmed: true,
                            transactionId: transactionId,
                            ticketCount: newTicketCount
                        };


                        // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –∑–∞–ø–∏—Å –ø—Ä–æ –æ—Å—Ç–∞–Ω–Ω—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—é –∑ –±–∞–ª–∞–Ω—Å–æ–º
                        localStorage.setItem('winix_last_transaction', JSON.stringify(transactionRecord));

                        // –ö–†–ò–¢–ò–ß–ù–û –í–ê–ñ–õ–ò–í–û: –ù–ï–ì–ê–ô–ù–û –û–ù–û–í–õ–Æ–Ñ–ú–û DOM-–ï–õ–ï–ú–ï–ù–¢ –ë–ê–õ–ê–ù–°–£
                        const userCoinsElement = document.getElementById('user-coins');
                        if (userCoinsElement) {
                            // –î–æ–¥–∞—î–º–æ –µ—Ñ–µ–∫—Ç –∞–Ω—ñ–º–∞—Ü—ñ—ó
                            userCoinsElement.classList.add('decreasing');

                            // –ù–µ–≥–∞–π–Ω–æ –æ–Ω–æ–≤–ª—é—î–º–æ —Ç–µ–∫—Å—Ç–æ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è
                            userCoinsElement.textContent = newBalance;

                            setTimeout(() => {
                                userCoinsElement.classList.remove('decreasing');
                            }, 1000);
                        }

                        // –û–Ω–æ–≤–ª—é—î–º–æ –ª–æ–∫–∞–ª—å–Ω–µ —Å—Ö–æ–≤–∏—â–µ –≤—ñ–¥—Ä–∞–∑—É
                        localStorage.setItem('userCoins', newBalance.toString());
                        localStorage.setItem('winix_coins', newBalance.toString());
                        localStorage.setItem('winix_balance_update_time', Date.now().toString());
                        localStorage.setItem('winix_server_balance', newBalance.toString()); // –î–æ–¥–∞—î–º–æ –∑–∞–ø–∏—Å —Å–µ—Ä–≤–µ—Ä–Ω–æ–≥–æ –±–∞–ª–∞–Ω—Å—É

                        // –û–Ω–æ–≤–ª—é—î–º–æ –∫–µ—à –±–∞–ª–∞–Ω—Å—É
                        this.lastKnownBalance = newBalance;
                        this.lastBalanceUpdateTime = Date.now();

                        // –ì–µ–Ω–µ—Ä—É—î–º–æ –ø–æ–¥—ñ—é –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É
                        document.dispatchEvent(new CustomEvent('balance-updated', {
                            detail: {
                                oldBalance: oldBalance,
                                newBalance: newBalance,
                                source: 'participation.js',
                                transactionId: transactionId
                            }
                        }));

                        console.log(`‚úÖ –ë–∞–ª–∞–Ω—Å —É—Å–ø—ñ—à–Ω–æ –æ–Ω–æ–≤–ª–µ–Ω–æ: —Å—Ç–∞—Ä–∏–π=${oldBalance}, –Ω–æ–≤–∏–π=${newBalance}, —Ä—ñ–∑–Ω–∏—Ü—è=${oldBalance-newBalance}`);

                    } else {
                        // –Ø–∫—â–æ —Å–µ—Ä–≤–µ—Ä –Ω–µ –ø–æ–≤–µ—Ä–Ω—É–≤ –±–∞–ª–∞–Ω—Å, –≤—ñ–¥–Ω—ñ–º–∞—î–º–æ –ª–æ–∫–∞–ª—å–Ω–æ –≤–∞—Ä—Ç—ñ—Å—Ç—å —É—á–∞—Å—Ç—ñ
                        const entryFee = parseInt(localStorage.getItem('last_entry_fee') || '1');
                        const currentBalance = parseInt(localStorage.getItem('userCoins') || '0');
                        const newBalance = Math.max(0, currentBalance - entryFee);

                        // –û–Ω–æ–≤–ª—é—î–º–æ DOM —ñ –ª–æ–∫–∞–ª—å–Ω–µ —Å—Ö–æ–≤–∏—â–µ
                        const userCoinsElement = document.getElementById('user-coins');
                        if (userCoinsElement) {
                            userCoinsElement.classList.add('decreasing');
                            userCoinsElement.textContent = newBalance;

                            setTimeout(() => {
                                userCoinsElement.classList.remove('decreasing');
                            }, 1000);
                        }

                        localStorage.setItem('userCoins', newBalance.toString());
                        localStorage.setItem('winix_coins', newBalance.toString());
                    }

                    // –ù–ï–ì–ê–ô–ù–û –û–ù–û–í–õ–Æ–Ñ–ú–û –í–Ü–î–û–ë–†–ê–ñ–ï–ù–ù–Ø –ö–ù–û–ü–ö–ò
                    const buttons = document.querySelectorAll(`.join-button[data-raffle-id="${raffleId}"], .mini-raffle-button[data-raffle-id="${raffleId}"]`);
                    buttons.forEach(button => {
                        // –í–∏–¥–∞–ª—è—î–º–æ —Å—Ç–∞–Ω –æ–±—Ä–æ–±–∫–∏
                        button.classList.remove('processing');
                        button.removeAttribute('data-processing');
                        button.disabled = false;

                        // –î–æ–¥–∞—î–º–æ –∫–ª–∞—Å –¥–ª—è —É—á–∞—Å–Ω–∏–∫—ñ–≤
                        button.classList.add('participating');

                        // –û–Ω–æ–≤–ª—é—î–º–æ —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏
                        const isMini = button.classList.contains('mini-raffle-button');
                        button.textContent = isMini ?
                            `–î–æ–¥–∞—Ç–∏ —â–µ –±—ñ–ª–µ—Ç (${newTicketCount})` :
                            `–î–æ–¥–∞—Ç–∏ —â–µ –±—ñ–ª–µ—Ç (—É –≤–∞—Å: ${newTicketCount})`;
                    });

                    // –ó–ë–ï–†–Ü–ì–ê–Ñ–ú–û –û–ù–û–í–õ–ï–ù–Ü –î–ê–ù–Ü –í LOCALSTORAGE
                    this._saveParticipationToStorage();

                    // –û–ù–û–í–õ–Æ–Ñ–ú–û –ö–Ü–õ–¨–ö–Ü–°–¢–¨ –£–ß–ê–°–ù–ò–ö–Ü–í, –Ø–ö–©–û –°–ï–†–í–ï–† –ü–û–í–ï–†–ù–£–í –ù–û–í–ï –ó–ù–ê–ß–ï–ù–ù–Ø
                    if (response.data && typeof response.data.participants_count === 'number') {
                        const participantsCount = response.data.participants_count;
                        const participantsElements = document.querySelectorAll(
                            `.raffle-card[data-raffle-id="${raffleId}"] .participants-count .count, ` +
                            `.main-raffle[data-raffle-id="${raffleId}"] .participants-info .participants-count, ` +
                            `.main-raffle .participants-info .participants-count`
                        );

                        participantsElements.forEach(element => {
                            // –û–Ω–æ–≤–ª—é—î–º–æ —Ç—ñ–ª—å–∫–∏ —è–∫—â–æ –∑–Ω–∞—á–µ–Ω–Ω—è –∑–º—ñ–Ω–∏–ª–æ—Å—è
                            const currentCount = parseInt(element.textContent.replace(/\s+/g, '')) || 0;
                            if (currentCount !== participantsCount) {
                                element.textContent = participantsCount;
                                element.classList.add('updated');
                                setTimeout(() => {
                                    element.classList.remove('updated');
                                }, 1000);
                            }
                        });

                        // –ì–µ–Ω–µ—Ä—É—î–º–æ –ø–æ–¥—ñ—é –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∫—ñ–ª—å–∫–æ—Å—Ç—ñ —É—á–∞—Å–Ω–∏–∫—ñ–≤
                        document.dispatchEvent(new CustomEvent('raffle-participants-updated', {
                            detail: {
                                raffleId: raffleId,
                                participantsCount: participantsCount,
                                source: 'participation.js'
                            }
                        }));
                    }

                    // –í–°–¢–ê–ù–û–í–õ–Æ–Ñ–ú–û –ü–†–ê–ü–û–†–ï–¶–¨ –î–õ–Ø –í–Ü–î–ö–õ–ê–î–ï–ù–û–á –°–ò–ù–•–†–û–ù–Ü–ó–ê–¶–Ü–á
                    this.needsForcedSync = true;

                    // –ì–ï–ù–ï–†–£–Ñ–ú–û –ü–û–î–Ü–Æ –ü–†–û –£–°–ü–Ü–®–ù–£ –£–ß–ê–°–¢–¨ –î–õ–Ø –Ü–ù–®–ò–• –ú–û–î–£–õ–Ü–í
                    this._triggerParticipationEvent(raffleId, newTicketCount);

                    // –ó–ê–ü–£–°–ö–ê–Ñ–ú–û –í–Ü–î–ö–õ–ê–î–ï–ù–£ –ü–ï–†–ï–í–Ü–†–ö–£ –î–õ–Ø –ü–Ü–î–¢–í–ï–†–î–ñ–ï–ù–ù–Ø –£–ß–ê–°–¢–Ü
                    setTimeout(() => {
                        this.confirmParticipation(raffleId).catch(e =>
                            console.warn('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è —É—á–∞—Å—Ç—ñ:', e)
                        );
                    }, 3000);

                    // –î–û–î–ê–ù–û: –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –∫–Ω–æ–ø–∫–∏ "–î–µ—Ç–∞–ª—ñ" —ñ –≤–∏–¥–∞–ª—è—î–º–æ —ó—ó, —è–∫—â–æ –≤–æ–Ω–∞ —î
                    const detailsButton = document.querySelector(`.raffle-details-button[data-raffle-id="${raffleId}"]`);
                    if (detailsButton && detailsButton.parentNode) {
                        detailsButton.parentNode.removeChild(detailsButton);
                        console.log(`üîÑ –í–∏–¥–∞–ª–µ–Ω–æ –∫–Ω–æ–ø–∫—É "–î–µ—Ç–∞–ª—ñ" –¥–ª—è —Ä–æ–∑—ñ–≥—Ä–∞—à—É ${raffleId}`);
                    }

                    // –ù–û–í–ò–ô –ö–û–î: –°—Ç–≤–æ—Ä—é—î–º–æ –æ–∫—Ä–µ–º–∏–π –∑–∞–ø–∏—Å –ø—Ä–æ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω—É —É—á–∞—Å—Ç—å —É —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ
                    try {
                        const confirmedParticipation = {
                            raffleId: raffleId,
                            ticketCount: newTicketCount,
                            validatedAt: Date.now(),
                            source: 'transaction',
                            balanceAfter: newBalance
                        };

                        localStorage.setItem(`winix_confirmed_participation_${raffleId}`, JSON.stringify(confirmedParticipation));

                        // –î–æ–¥–∞—Ç–∫–æ–≤–æ –ø–µ—Ä–µ–≤—ñ—Ä–∏–º–æ —â–æ –∫–Ω–æ–ø–∫–∞ –æ–Ω–æ–≤–∏–ª–∞—Å—è —á–µ—Ä–µ–∑ 500–º—Å
                        setTimeout(() => {
                            const buttons = document.querySelectorAll(`.join-button[data-raffle-id="${raffleId}"], .mini-raffle-button[data-raffle-id="${raffleId}"]`);
                            buttons.forEach(button => {
                                const currentText = button.textContent;

                                // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –≤—ñ–¥–æ–±—Ä–∞–∂–∞—î –∫–Ω–æ–ø–∫–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å –±—ñ–ª–µ—Ç—ñ–≤
                                if (!currentText.includes(String(newTicketCount))) {
                                    console.log(`‚ö†Ô∏è –í–∏—è–≤–ª–µ–Ω–æ —Ä–æ–∑–±—ñ–∂–Ω—ñ—Å—Ç—å —Ç–µ–∫—Å—Ç—É –∫–Ω–æ–ø–∫–∏: "${currentText}" –Ω–µ –º—ñ—Å—Ç–∏—Ç—å –∫—ñ–ª—å–∫—ñ—Å—Ç—å –±—ñ–ª–µ—Ç—ñ–≤ ${newTicketCount}`);

                                    // –ü—Ä–∏–º—É—Å–æ–≤–æ –≤—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —Ç–µ–∫—Å—Ç
                                    const isMini = button.classList.contains('mini-raffle-button');
                                    button.textContent = isMini ?
                                        `–î–æ–¥–∞—Ç–∏ —â–µ –±—ñ–ª–µ—Ç (${newTicketCount})` :
                                        `–î–æ–¥–∞—Ç–∏ —â–µ –±—ñ–ª–µ—Ç (—É –≤–∞—Å: ${newTicketCount})`;

                                    button.classList.add('ticket-updated');
                                    setTimeout(() => button.classList.remove('ticket-updated'), 1000);
                                }
                            });
                        }, 500);
                    } catch (e) {
                        console.warn('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ—ó —É—á–∞—Å—Ç—ñ:', e);
                    }

                   if (typeof window.showToast === 'function' && !shownNotifications.has(raffleId)) {
    window.showToast('–í–∏ —É—Å–ø—ñ—à–Ω–æ –≤–∑—è–ª–∏ —É—á–∞—Å—Ç—å —É —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ', 'success');
    shownNotifications.add(raffleId);
    setTimeout(() => shownNotifications.delete(raffleId), 5000);
}

                    // –ü–û–í–ï–†–¢–ê–Ñ–ú–û –†–ï–ó–£–õ–¨–¢–ê–¢
                    return {
                        success: true,
                        data: response.data,
                        message: response.data?.message || '–í–∏ —É—Å–ø—ñ—à–Ω–æ –≤–∑—è–ª–∏ —É—á–∞—Å—Ç—å —É —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ'
                    };

                } else {
                    // 19. –û–ë–†–û–ë–ö–ê –ü–û–ú–ò–õ–ö–ò

                    // 19.1 –û–ù–û–í–õ–Æ–Ñ–ú–û –°–¢–ê–¢–£–° –¢–†–ê–ù–ó–ê–ö–¶–Ü–á
                    this._updateTransactionStatus(raffleId, transactionId, 'failed', response.message);

                    // 19.2 –û–ë–†–û–ë–ö–ê –°–ü–ï–¶–ò–§–Ü–ß–ù–ò–• –ü–û–ú–ò–õ–û–ö
                    if (response.message && response.message.includes('–∑–∞–Ω–∞–¥—Ç–æ –±–∞–≥–∞—Ç–æ –∑–∞–ø–∏—Ç—ñ–≤')) {
                        return {
                            success: false,
                            message: '–ó–∞–±–∞–≥–∞—Ç–æ –∑–∞–ø–∏—Ç—ñ–≤. –°–ø—Ä–æ–±—É–π—Ç–µ —á–µ—Ä–µ–∑ 15 —Å–µ–∫—É–Ω–¥'
                        };
                    } else if (response.message &&
                               (response.message.includes('raffle_not_found') ||
                               response.message.includes('–∑–∞–≤–µ—Ä—à–µ–Ω–æ'))) {
                        // –î–æ–¥–∞—î–º–æ –¥–æ –Ω–µ–¥—ñ–π—Å–Ω–∏—Ö
                        this.addInvalidRaffleId(raffleId);

                        return {
                            success: false,
                            message: '–†–æ–∑—ñ–≥—Ä–∞—à –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∞–±–æ –≤–∂–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ'
                        };
                    } else {
                        return {
                            success: false,
                            message: response.message || "–ü–æ–º–∏–ª–∫–∞ —É—á–∞—Å—Ç—ñ –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ"
                        };
                    }
                }
            } catch (error) {
                // 20. –û–ë–†–û–ë–ö–ê –ö–†–ò–¢–ò–ß–ù–ò–• –ü–û–ú–ò–õ–û–ö
                console.error(`‚ùå –ü–æ–º–∏–ª–∫–∞ —É—á–∞—Å—Ç—ñ –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ ${raffleId}:`, error);

                // 20.1 –õ–û–ì–£–Ñ–ú–û –ü–û–ú–ò–õ–ö–£ –¢–†–ê–ù–ó–ê–ö–¶–Ü–á
                this._logTransaction({
                    type: 'error',
                    raffleId: raffleId,
                    transactionId: transactionId,
                    error: error.message || '–ù–µ–≤—ñ–¥–æ–º–∞ –ø–æ–º–∏–ª–∫–∞',
                    timestamp: Date.now(),
                    duration: Date.now() - now
                });

                // 20.2 –û–ù–û–í–õ–Æ–Ñ–ú–û –°–¢–ê–¢–£–° –¢–†–ê–ù–ó–ê–ö–¶–Ü–á
                this._updateTransactionStatus(raffleId, transactionId, 'failed', error.message);

                // 20.3 –ü–ï–†–ï–í–Ü–†–ö–ê –ù–ê –ó–ê–í–ï–†–®–ï–ù–ù–Ø –†–û–ó–Ü–ì–†–ê–®–£
                if (error.message &&
                   (error.message.includes('–∑–∞–≤–µ—Ä—à–µ–Ω–æ') ||
                    error.message.includes('not found') ||
                    error.message.includes('–Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ'))) {

                    this.addInvalidRaffleId(raffleId);
                }

                return Promise.reject(error);
            } finally {
                // 21. –ó–ê–í–ï–†–®–ê–õ–¨–ù–Ü –î–Ü–á (–í–ò–ö–û–ù–£–Æ–¢–¨–°–Ø –ó–ê–í–ñ–î–ò)

                // 21.1 –í–ò–î–ê–õ–Ø–Ñ–ú–û –ë–õ–û–ö–£–í–ê–ù–ù–Ø –î–õ–Ø –¶–¨–û–ì–û –†–û–ó–Ü–ì–†–ê–®–£
                delete this.pendingRequests[raffleId];
                this.activeTransactions.delete(raffleId);

                // –í–ò–ü–†–ê–í–õ–ï–ù–û: –ó–∞–≤–∂–¥–∏ —Å–∫–∏–¥–∞—î–º–æ –ø—Ä–∞–ø–æ—Ä–µ—Ü—å –æ–±—Ä–æ–±–∫–∏ –∑–∞–ø–∏—Ç—É
                this.requestInProgress = false;

                // 21.2 –ü–†–ò–•–û–í–£–Ñ–ú–û –Ü–ù–î–ò–ö–ê–¢–û–† –ó–ê–í–ê–ù–¢–ê–ñ–ï–ù–ù–Ø
                if (typeof window.hideLoading === 'function') {
                    window.hideLoading();
                }

                // –î–û–î–ê–ù–û: –í—ñ–¥–∫–ª–∞–¥–µ–Ω–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–∞–Ω—É —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
                // —â–æ–± –¥–∞—Ç–∏ —á–∞—Å —Å–µ—Ä–≤–µ—Ä—É –æ–Ω–æ–≤–∏—Ç–∏ –¥–∞–Ω—ñ
                setTimeout(() => {
                    if (this.needsForcedSync && !this.isSyncInProgress && !this.syncLock) {
                        this.syncWithServer(true).catch(e => {
                            console.warn('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–∫–ª–∞–¥–µ–Ω–æ—ó —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó:', e);
                        });
                    }
                }, 5000);
            }
        },

        /**
         * –ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è —É—á–∞—Å—Ç—ñ –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ
         * –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –¥–ª—è –¥–æ–¥–∞—Ç–∫–æ–≤–æ—ó –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –ø—ñ—Å–ª—è —É—Å–ø—ñ—à–Ω–æ—ó —É—á–∞—Å—Ç—ñ
         */
        confirmParticipation: async function(raffleId) {
            if (!raffleId) return;

            console.log(`üîç –ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è —É—á–∞—Å—Ç—ñ –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ ${raffleId}`);

            // –î–æ–¥–∞—î–º–æ —Ç–∞–π–º—Å—Ç–∞–º–ø –¥–æ –∑–∞–ø–∏—Ç—É –¥–ª—è —É–Ω–∏–∫–Ω–µ–Ω–Ω—è –∫–µ—à—É–≤–∞–Ω–Ω—è
            const timestamp = Date.now();

            try {
                // –û—Ç—Ä–∏–º—É—î–º–æ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
                const userId = WinixRaffles.state.telegramId ||
                            (window.WinixAPI ? window.WinixAPI.getUserId() : null);

                if (!userId) {
                    console.warn('‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–∑–Ω–∞—á–∏—Ç–∏ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–ª—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è');
                    return;
                }

                // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ø–æ—Ç–æ—á–Ω—ñ –¥–∞–Ω—ñ –¥–ª—è –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è
                const currentParticipation = this.participatingRaffles.has(raffleId);
                const currentTickets = this.userRaffleTickets[raffleId] || 0;

                // –°–ø—Ä–æ–±—É—î–º–æ –≤–∏–∫–æ–Ω–∞—Ç–∏ –∑–∞–ø–∏—Ç –¥–æ 3-—Ö —Ä–∞–∑—ñ–≤ –ø—Ä–∏ –ø–æ–º–∏–ª–∫–∞—Ö –º–µ—Ä–µ–∂—ñ
                for (let attempt = 0; attempt < 3; attempt++) {
                    try {
                        // –î–æ–¥–∞—î–º–æ nocache-–ø–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è —É–Ω–∏–∫–Ω–µ–Ω–Ω—è –∫–µ—à—É–≤–∞–Ω–Ω—è
                        const response = await WinixAPI.apiRequest(`user/${userId}/raffles?nocache=${timestamp}`, 'GET', null, {
                            suppressErrors: true,
                            hideLoader: true,
                            timeout: 10000,
                            retries: 1
                        });

                        if (response && response.status === 'success' && Array.isArray(response.data)) {
                            // –®—É–∫–∞—î–º–æ —Ä–æ–∑—ñ–≥—Ä–∞—à —É –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ
                            const foundRaffle = response.data.find(r => r.raffle_id === raffleId);

                            if (foundRaffle) {
                                console.log(`‚úÖ –ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ —É—á–∞—Å—Ç—å —É —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ ${raffleId}, –±—ñ–ª–µ—Ç—ñ–≤: ${foundRaffle.entry_count || 1}`);

                                // –ö–†–ò–¢–ò–ß–ù–û –í–ê–ñ–õ–ò–í–û: –û–Ω–æ–≤–ª—é—î–º–æ –ª–æ–∫–∞–ª—å–Ω—ñ –¥–∞–Ω—ñ
                                this.participatingRaffles.add(raffleId);
                                this.userRaffleTickets[raffleId] = foundRaffle.entry_count || 1;

                                // –û–Ω–æ–≤–ª—é—î–º–æ –∫–µ—à —Å–µ—Ä–≤–µ—Ä–Ω–∏—Ö –¥–∞–Ω–∏—Ö
                                this.serverDataCache.participatingRaffles.add(raffleId);
                                this.serverDataCache.userRaffleTickets[raffleId] = foundRaffle.entry_count || 1;
                                this.serverDataCache.lastUpdate = Date.now();

                                // –ó–∞–ø–∏—Å—É—î–º–æ –≤ –ª–æ–∫–∞–ª—å–Ω–µ —Å—Ö–æ–≤–∏—â–µ
                                this._saveParticipationToStorage();

                                // –ù–û–í–ò–ô –ö–û–î: –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –≥–∞—Ä–∞–Ω—Ç–æ–≤–∞–Ω—É –∫–æ–ø—ñ—é —Å—Ç–∞–Ω—É —É—á–∞—Å—Ç—ñ –≤ –ª–æ–∫–∞–ª—å–Ω–µ —Å—Ö–æ–≤–∏—â–µ
                                try {
                                    const validatedParticipation = {
                                        raffleId: raffleId,
                                        ticketCount: foundRaffle.entry_count || 1,
                                        validatedAt: Date.now(),
                                        source: 'server'
                                    };

                                    localStorage.setItem(`winix_confirmed_participation_${raffleId}`, JSON.stringify(validatedParticipation));
                                } catch (e) {
                                    console.warn('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ—ó —É—á–∞—Å—Ç—ñ:', e);
                                }

                                // –ì–∞—Ä–∞–Ω—Ç—É—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É
                                this.updateParticipationButtons();
                                return true;
                            } else {
                                console.warn(`‚ö†Ô∏è –†–æ–∑—ñ–≥—Ä–∞—à ${raffleId} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ —É –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ —Å–µ—Ä–≤–µ—Ä–∞`);

                                // –ù–û–í–ò–ô –ö–û–î: –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –≤–≤–∞–∂–∞—î–º–æ –º–∏ –ª–æ–∫–∞–ª—å–Ω–æ, —â–æ —É—á–∞—Å—Ç—å —î
                                if (currentParticipation && currentTickets > 0) {
                                    console.warn(`‚ö†Ô∏è –í–∏—è–≤–ª–µ–Ω–æ —Ä–æ–∑–±—ñ–∂–Ω—ñ—Å—Ç—å: –ª–æ–∫–∞–ª—å–Ω–æ —É—á–∞—Å—Ç—å –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞, —Å–µ—Ä–≤–µ—Ä –ø–æ–∫–∞–∑—É—î –≤—ñ–¥—Å—É—Ç–Ω—ñ—Å—Ç—å`);

                                    // –ù–û–í–ò–ô –ö–û–î: –Ø–∫—â–æ —É –Ω–∞—Å —î –∑–∞–ø–∏—Å –ø—Ä–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—é, —ñ –≤–æ–Ω–∞ –Ω–µ–¥–∞–≤–Ω—è
                                    try {
                                        const lastTxData = localStorage.getItem('winix_last_transaction');
                                        if (lastTxData) {
                                            const lastTx = JSON.parse(lastTxData);
                                            const txAge = Date.now() - lastTx.timestamp;

                                            // –î–ª—è –¥—É–∂–µ –Ω–æ–≤–∏—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π (–º–µ–Ω—à–µ 1 —Ö–≤–∏–ª–∏–Ω–∏) –¥–æ–≤—ñ—Ä—è—î–º–æ –ª–æ–∫–∞–ª—å–Ω–∏–º –¥–∞–Ω–∏–º
                                            if (txAge < 60000 && lastTx.raffleId === raffleId && lastTx.confirmed) {
                                                console.log(`üõ°Ô∏è –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ª–æ–∫–∞–ª—å–Ω—É —É—á–∞—Å—Ç—å, –Ω–µ–∑–≤–∞–∂–∞—é—á–∏ –Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å —Å–µ—Ä–≤–µ—Ä–∞ (—Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—è ${Math.round(txAge/1000)}—Å —Ç–æ–º—É)`);
                                                return false; // –ù–µ –∑–º—ñ–Ω—é—î–º–æ —Å—Ç–∞–Ω —É—á–∞—Å—Ç—ñ
                                            }
                                        }
                                    } catch (e) {
                                        console.warn('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –¥–∞–Ω–∏—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó:', e);
                                    }
                                }

                                // –Ø–∫—â–æ —Ä–æ–∑—ñ–≥—Ä–∞—à –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ, —ñ –Ω–µ–º–∞—î –ø—Ä–∏—á–∏–Ω –∑–±–µ—Ä—ñ–≥–∞—Ç–∏ –ª–æ–∫–∞–ª—å–Ω–∏–π —Å—Ç–∞–Ω, –≤–∏–¥–∞–ª—è—î–º–æ —É—á–∞—Å—Ç—å
                                this.participatingRaffles.delete(raffleId);
                                delete this.userRaffleTickets[raffleId];
                                this._saveParticipationToStorage();
                                this.updateParticipationButtons();
                                return false;
                            }
                        } else {
                            console.warn('‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–∞–Ω—ñ –¥–ª—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è —É—á–∞—Å—Ç—ñ');

                            // –Ø–∫—â–æ —Å–ø—Ä–æ–±–∞ –Ω–µ –æ—Å—Ç–∞–Ω–Ω—è, –ø–æ–≤—Ç–æ—Ä—é—î–º–æ
                            if (attempt < 2) {
                                console.log(`–ü–æ–≤—Ç–æ—Ä–Ω–∞ —Å–ø—Ä–æ–±–∞ ${attempt + 1}/3...`);
                                await new Promise(resolve => setTimeout(resolve, 1000 * (attempt + 1)));
                                continue;
                            }

                            // –ù–û–í–ò–ô –ö–û–î: –ü—Ä–∏ –ø–æ–º–∏–ª—Ü—ñ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó –∑–±–µ—Ä—ñ–≥–∞—î–º–æ –ª–æ–∫–∞–ª—å–Ω–∏–π —Å—Ç–∞–Ω
                            console.log('‚ö†Ô∏è –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ª–æ–∫–∞–ª—å–Ω–∏–π —Å—Ç–∞–Ω —É—á–∞—Å—Ç—ñ —á–µ—Ä–µ–∑ –ø–æ–º–∏–ª–∫—É —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó');
                            return false;
                        }
                    } catch (error) {
                        console.warn('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è —É—á–∞—Å—Ç—ñ:', error);

                        // –Ø–∫—â–æ —Å–ø—Ä–æ–±–∞ –Ω–µ –æ—Å—Ç–∞–Ω–Ω—è, –ø–æ–≤—Ç–æ—Ä—é—î–º–æ
                        if (attempt < 2) {
                            console.log(`–ü–æ–≤—Ç–æ—Ä–Ω–∞ —Å–ø—Ä–æ–±–∞ ${attempt + 1}/3...`);
                            await new Promise(resolve => setTimeout(resolve, 1000 * (attempt + 1)));
                            continue;
                        }
                    }
                }

                // –Ø–∫—â–æ –≤—Å—ñ —Å–ø—Ä–æ–±–∏ –Ω–µ –≤–¥–∞–ª–∏—Å—è, –∑–±–µ—Ä–µ–∂–µ–º–æ –ª–æ–∫–∞–ª—å–Ω–∏–π —Å—Ç–∞–Ω
                return false;
            } catch (error) {
                console.warn('‚ö†Ô∏è –ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è —É—á–∞—Å—Ç—ñ:', error);
                return false;
            }
        },

        /**
         * –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ç–∞ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è —Å—Ç–∞–Ω—É —É—á–∞—Å—Ç—ñ
         * –í–∏–∫–ª–∏–∫–∞–π—Ç–µ –ø–µ—Ä—ñ–æ–¥–∏—á–Ω–æ, —â–æ–± –ø–µ—Ä–µ–∫–æ–Ω–∞—Ç–∏—Å—è, —â–æ –¥–∞–Ω—ñ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—é—Ç—å —Ä–µ–∞–ª—å–Ω–æ—Å—Ç—ñ
         */
        verifyAndFixParticipationState: async function() {
            console.log('üîç –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ç–∞ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è —Å—Ç–∞–Ω—É —É—á–∞—Å—Ç—ñ');

            try {
                // –û—Ç—Ä–∏–º—É—î–º–æ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
                const userId = WinixRaffles.state.telegramId ||
                              (window.WinixAPI ? window.WinixAPI.getUserId() : null);

                if (!userId) {
                    console.warn('‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–∑–Ω–∞—á–∏—Ç–∏ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏');
                    return false;
                }

                // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ø–æ—Ç–æ—á–Ω–∏–π —Å—Ç–∞–Ω
                const currentRaffles = new Set(this.participatingRaffles);
                const currentTickets = {...this.userRaffleTickets};

                // –í–ò–ü–†–ê–í–õ–ï–ù–û: –î–æ–¥–∞—î–º–æ –ø–∞—Ä–∞–º–µ—Ç—Ä –∑–∞–ø–æ–±—ñ–≥–∞–Ω–Ω—è –∫–µ—à—É–≤–∞–Ω–Ω—é
                const nocache = Date.now();

                // –û—Ç—Ä–∏–º—É—î–º–æ –∞–∫—Ç—É–∞–ª—å–Ω—ñ –¥–∞–Ω—ñ –∑ —Å–µ—Ä–≤–µ—Ä–∞
                const response = await WinixAPI.apiRequest(`user/${userId}/raffles?nocache=${nocache}`, 'GET', null, {
                    suppressErrors: true,
                    hideLoader: true,
                    timeout: 10000
                });

                if (response && response.status === 'success' && Array.isArray(response.data)) {
                    // –°—Ç–≤–æ—Ä—é—î–º–æ –º–Ω–æ–∂–∏–Ω—É —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ –∑ —Å–µ—Ä–≤–µ—Ä–∞
                    const serverRaffles = new Set();
                    const serverTickets = {};

                    // –ó–∞–ø–æ–≤–Ω—é—î–º–æ –¥–∞–Ω—ñ –∑ —Å–µ—Ä–≤–µ—Ä–∞
                    response.data.forEach(raffle => {
                        if (raffle.raffle_id) {
                            serverRaffles.add(raffle.raffle_id);
                            serverTickets[raffle.raffle_id] = raffle.entry_count || 1;
                        }
                    });

                    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ä–æ–∑–±—ñ–∂–Ω–æ—Å—Ç—ñ –≤ —É—á–∞—Å—Ç—ñ
                    let hasChanges = false;

                    // 1. –†–æ–∑—ñ–≥—Ä–∞—à—ñ, —è–∫—ñ —î –ª–æ–∫–∞–ª—å–Ω–æ, –∞–ª–µ –≤—ñ–¥—Å—É—Ç–Ω—ñ –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ
                    currentRaffles.forEach(raffleId => {
                        if (!serverRaffles.has(raffleId)) {
                            console.warn(`‚ö†Ô∏è –†–æ–∑—ñ–≥—Ä–∞—à ${raffleId} —î –ª–æ–∫–∞–ª—å–Ω–æ, –∞–ª–µ –≤—ñ–¥—Å—É—Ç–Ω—ñ–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ`);
                            hasChanges = true;
                        }
                    });

                    // 2. –†–æ–∑—ñ–≥—Ä–∞—à—ñ, —è–∫—ñ —î –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ, –∞–ª–µ –≤—ñ–¥—Å—É—Ç–Ω—ñ –ª–æ–∫–∞–ª—å–Ω–æ
                    serverRaffles.forEach(raffleId => {
                        if (!currentRaffles.has(raffleId)) {
                            console.warn(`‚ö†Ô∏è –†–æ–∑—ñ–≥—Ä–∞—à ${raffleId} —î –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ, –∞–ª–µ –≤—ñ–¥—Å—É—Ç–Ω—ñ–π –ª–æ–∫–∞–ª—å–Ω–æ`);
                            hasChanges = true;
                        }
                    });

                    // 3. –†–æ–∑–±—ñ–∂–Ω–æ—Å—Ç—ñ –≤ –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –±—ñ–ª–µ—Ç—ñ–≤
                    for (const raffleId of serverRaffles) {
                        if (currentTickets[raffleId] !== serverTickets[raffleId]) {
                            console.warn(`‚ö†Ô∏è –†–æ–∑–±—ñ–∂–Ω—ñ—Å—Ç—å —É –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –±—ñ–ª–µ—Ç—ñ–≤ –¥–ª—è ${raffleId}: ` +
                                        `–ª–æ–∫–∞–ª—å–Ω–æ ${currentTickets[raffleId] || 0}, –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ ${serverTickets[raffleId]}`);
                            hasChanges = true;
                        }
                    }

                    // –Ø–∫—â–æ —î —Ä–æ–∑–±—ñ–∂–Ω–æ—Å—Ç—ñ, –∑–∞—Å—Ç–æ—Å–æ–≤—É—î–º–æ –¥–∞–Ω—ñ –∑ —Å–µ—Ä–≤–µ—Ä–∞
                    if (hasChanges) {
                        console.log('üîÑ –í–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è —Ä–æ–∑–±—ñ–∂–Ω–æ—Å—Ç–µ–π —Å—Ç–∞–Ω—É —É—á–∞—Å—Ç—ñ');

                        // –û—á–∏—â–∞—î–º–æ –ø–æ—Ç–æ—á–Ω—ñ –¥–∞–Ω—ñ
                        this.participatingRaffles.clear();
                        this.userRaffleTickets = {};

                        // –ó–∞—Å—Ç–æ—Å–æ–≤—É—î–º–æ –¥–∞–Ω—ñ –∑ —Å–µ—Ä–≤–µ—Ä–∞
                        response.data.forEach(raffle => {
                            if (raffle.raffle_id) {
                                this.participatingRaffles.add(raffle.raffle_id);
                                this.userRaffleTickets[raffle.raffle_id] = raffle.entry_count || 1;
                            }
                        });

                        // –û–Ω–æ–≤–ª—é—î–º–æ –∫–µ—à —Å–µ—Ä–≤–µ—Ä–Ω–∏—Ö –¥–∞–Ω–∏—Ö
                        this.serverDataCache.participatingRaffles = new Set(this.participatingRaffles);
                        this.serverDataCache.userRaffleTickets = {...this.userRaffleTickets};
                        this.serverDataCache.lastUpdate = Date.now();

                        // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –≤ localStorage
                        this._saveParticipationToStorage();

                        // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è
                        this.updateParticipationButtons();

                        // –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—é
                        if (typeof window.showToast === 'function') {
                            window.showToast('–î–∞–Ω—ñ –ø—Ä–æ —É—á–∞—Å—Ç—å —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–æ–≤–∞–Ω–æ –∑ —Å–µ—Ä–≤–µ—Ä–æ–º', 'info');
                        }

                        console.log('‚úÖ –°—Ç–∞–Ω —É—á–∞—Å—Ç—ñ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–æ');
                        return true;
                    } else {
                        console.log('‚úÖ –°—Ç–∞–Ω —É—á–∞—Å—Ç—ñ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î —Å–µ—Ä–≤–µ—Ä—É, –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –Ω–µ –ø–æ—Ç—Ä—ñ–±–Ω—ñ');
                        return true;
                    }
                } else {
                    console.warn('‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–∞–Ω—ñ –∑ —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏');
                    return false;
                }
            } catch (error) {
                console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Ç–∞ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è —Å—Ç–∞–Ω—É:', error);
                return false;
            }
        },

 /**
 * –î–æ–¥–∞—î —Ä–æ–∑—ñ–≥—Ä–∞—à –¥–æ —Å–ø–∏—Å–∫—É –Ω–µ–¥—ñ–π—Å–Ω–∏—Ö
 * @param {string} raffleId - ID —Ä–æ–∑—ñ–≥—Ä–∞—à—É
 */
addInvalidRaffleId: function(raffleId) {
    if (!raffleId) return;

    this.invalidRaffleIds.add(raffleId);

    // –¢–∞–∫–æ–∂ –¥–æ–¥–∞—î–º–æ –¥–æ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ —Å–ø–∏—Å–∫—É
    if (WinixRaffles.state.invalidRaffleIds) {
        WinixRaffles.state.invalidRaffleIds.add(raffleId);
    }

    // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –≤ localStorage
    try {
        localStorage.setItem('winix_invalid_raffles', JSON.stringify(Array.from(this.invalidRaffleIds)));
    } catch (e) {
        console.warn('‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–±–µ—Ä–µ–≥—Ç–∏ –Ω–µ–¥—ñ–π—Å–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ:', e);
    }

    console.log(`‚ö†Ô∏è –î–æ–¥–∞–Ω–æ —Ä–æ–∑—ñ–≥—Ä–∞—à ${raffleId} –¥–æ —Å–ø–∏—Å–∫—É –Ω–µ–¥—ñ–π—Å–Ω–∏—Ö`);

    // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∫–Ω–æ–ø–æ–∫ —É—á–∞—Å—Ç—ñ
    this.updateParticipationButtons();
},

/**
 * –û—á–∏—â–µ–Ω–Ω—è —Å–ø–∏—Å–∫—É –Ω–µ–≤–∞–ª—ñ–¥–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
 */
clearInvalidRaffleIds: function() {
    this.invalidRaffleIds.clear();

    if (WinixRaffles.state.invalidRaffleIds) {
        WinixRaffles.state.invalidRaffleIds.clear();
    }

    localStorage.removeItem('winix_invalid_raffles');
    console.log('üßπ –°–ø–∏—Å–æ–∫ –Ω–µ–¥—ñ–π—Å–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ –æ—á–∏—â–µ–Ω–æ');
},

/**
 * –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è –∑ —Å–µ—Ä–≤–µ—Ä–æ–º
 * @param {boolean} force - –ü—Ä–∏–º—É—Å–æ–≤–∞ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è
 * @returns {Promise<Object>} –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó
 */
syncWithServer: async function(force = false) {
    // –î–û–î–ê–ù–û: –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è –Ω–µ –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–∞
    if (this.syncLock && !force) {
        console.log('üîí –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–∞, –≤—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –ø—Ä–∞–ø–æ—Ä–µ—Ü—å –≤—ñ–¥–∫–ª–∞–¥–µ–Ω–æ—ó —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó');
        this.pendingSyncRequested = true;
        return Promise.resolve({ success: false, message: "–°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–∞" });
    }

    // –î–û–î–ê–ù–û: –ë–ª–æ–∫—É–≤–∞–Ω–Ω—è —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó –Ω–∞ —á–∞—Å –≤–∏–∫–æ–Ω–∞–Ω–Ω—è
    this.syncLock = true;

    try {
        console.log('üîÑ –ü–æ—á–∞—Ç–æ–∫ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó –∑ —Å–µ—Ä–≤–µ—Ä–æ–º...');

        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –º–æ–¥—É–ª—è —É—á–∞—Å—Ç—ñ
        if (!window.WinixRaffles || !window.WinixRaffles.participation) {
            console.warn('‚ö†Ô∏è –ú–æ–¥—É–ª—å —É—á–∞—Å—Ç—ñ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π');
            return false;
        }

        // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –º–µ—Ç–æ–¥ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑ –ø—Ä–∏–º—É—Å–æ–≤–∏–º –æ–Ω–æ–≤–ª–µ–Ω–Ω—è–º
        await this.loadUserRaffles(true);

        // –û–Ω–æ–≤–ª—é—î–º–æ —á–∞—Å —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó
        this.lastSyncTime = Date.now();

        // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∫–Ω–æ–ø–æ–∫ —É—á–∞—Å—Ç—ñ
        this.updateParticipationButtons();

        // –¢–∞–∫–æ–∂ –æ–Ω–æ–≤–ª—é—î–º–æ –±–∞–ª–∞–Ω—Å
        await this._getServerBalance();

        // –°–∫–∏–¥–∞—î–º–æ –ø—Ä–∞–ø–æ—Ä–µ—Ü—å –ø—Ä–∏–º—É—Å–æ–≤–æ—ó —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó
        this.needsForcedSync = false;

        console.log('‚úÖ –î–∞–Ω—ñ –ø—Ä–æ —É—á–∞—Å—Ç—å —É—Å–ø—ñ—à–Ω–æ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–æ–≤–∞–Ω–æ');
        return true;
    } catch (error) {
        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó –∑ —Å–µ—Ä–≤–µ—Ä–æ–º:', error);
        return false;
    } finally {
        // –î–û–î–ê–ù–û: –ó–Ω—ñ–º–∞—î–º–æ –±–ª–æ–∫—É–≤–∞–Ω–Ω—è —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó
        this.syncLock = false;

        // –î–û–î–ê–ù–û: –Ø–∫—â–æ —î –≤—ñ–¥–∫–ª–∞–¥–µ–Ω–∞ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è —Ç–∞ –Ω–µ–º–∞—î –±–ª–æ–∫—É–≤–∞–Ω–Ω—è, –∑–∞–ø—É—Å–∫–∞—î–º–æ —ó—ó
        if (this.pendingSyncRequested && !this.isSyncInProgress) {
            setTimeout(() => {
                if (this.pendingSyncRequested) {
                    this.pendingSyncRequested = false;
                    this.syncWithServer(false).catch(e => {
                        console.warn('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–∫–ª–∞–¥–µ–Ω–æ—ó —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó:', e);
                    });
                }
            }, 2000);
        }
    }
},

/**
 * –°–∫–∏–¥–∞–Ω–Ω—è —Å—Ç–∞–Ω—É –º–æ–¥—É–ª—è
 * @returns {boolean} –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–∫–∏–¥–∞–Ω–Ω—è
 */
resetState: function() {
    console.log('üîÑ –í–∏–∫–æ–Ω—É—î—Ç—å—Å—è —Å–∫–∏–¥–∞–Ω–Ω—è —Å—Ç–∞–Ω—É –º–æ–¥—É–ª—è —É—á–∞—Å—Ç—ñ...');

    // –°–∫–∏–¥–∞—î–º–æ –≤—Å—ñ –∞–∫—Ç–∏–≤–Ω—ñ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó
    this.activeTransactions.clear();

    // –°–∫–∏–¥–∞—î–º–æ –≥–ª–æ–±–∞–ª—å–Ω–µ –±–ª–æ–∫—É–≤–∞–Ω–Ω—è
    this.requestLock = false;

    // –í–ò–ü–†–ê–í–õ–ï–ù–û: –°–∫–∏–¥–∞—î–º–æ –ø—Ä–∞–ø–æ—Ä–µ—Ü—å –æ–±—Ä–æ–±–∫–∏ –∑–∞–ø–∏—Ç—É
    this.requestInProgress = false;

    // –û—á–∏—â–µ–Ω–Ω—è –æ–±–º–µ–∂–µ–Ω—å —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
    this.pendingRequests = {};

    // –°–∫–∏–¥–∞—î–º–æ —á–∞—Å–æ–≤—ñ –º—ñ—Ç–∫–∏ –∑–∞–ø–∏—Ç—ñ–≤
    this.lastRequestTimes = {};

    // –°–∫–∏–¥–∞—î–º–æ –ø—Ä–∞–ø–æ—Ä–µ—Ü—å –ø—Ä–∏–º—É—Å–æ–≤–æ—ó —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó
    this.needsForcedSync = false;

    // –î–û–î–ê–ù–û: –°–∫–∏–¥–∞—î–º–æ –ø—Ä–∞–ø–æ—Ä–µ—Ü—å –±–ª–æ–∫—É–≤–∞–Ω–Ω—è —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó
    this.syncLock = false;

    // –î–û–î–ê–ù–û: –°–∫–∏–¥–∞—î–º–æ –ø—Ä–∞–ø–æ—Ä–µ—Ü—å –≤—ñ–¥–∫–ª–∞–¥–µ–Ω–æ—ó —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó
    this.pendingSyncRequested = false;

    // –°–∫–∏–¥–∞—î–º–æ —Å—Ç–∞–Ω –∫–Ω–æ–ø–æ–∫
    document.querySelectorAll('.join-button.processing, .mini-raffle-button.processing').forEach(button => {
        // –û—Ç—Ä–∏–º—É—î–º–æ ID —Ä–æ–∑—ñ–≥—Ä–∞—à—É
        const raffleId = button.getAttribute('data-raffle-id');
        if (raffleId) {
            this._resetButtonState(raffleId);
        } else {
            // –Ø–∫—â–æ ID –Ω–µ–º–∞—î, –ø—Ä–æ—Å—Ç–æ —Å–∫–∏–¥–∞—î–º–æ —Å—Ç–∞–Ω –∫–Ω–æ–ø–∫–∏
            button.classList.remove('processing');
            button.disabled = false;

            // –í—ñ–¥–Ω–æ–≤–ª—é—î–º–æ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–∏–π —Ç–µ–∫—Å—Ç
            const originalText = button.getAttribute('data-original-text');
            if (originalText) {
                button.textContent = originalText;
            }
        }
    });

    // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∫–Ω–æ–ø–æ–∫ —É—á–∞—Å—Ç—ñ
    this.updateParticipationButtons();

    // –ü—Ä–∏—Ö–æ–≤—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
    if (typeof window.hideLoading === 'function') {
        window.hideLoading();
    }

    // –°–∫–∏–¥–∞—î–º–æ –ø—Ä–∞–ø–æ—Ä–µ—Ü—å —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó
    this.isSyncInProgress = false;

    // –û—á–∏—â–∞—î–º–æ —Ç–∞–π–º–µ—Ä —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó
    if (this.syncTimer) {
        clearTimeout(this.syncTimer);
        this.syncTimer = null;
    }

    console.log('‚úÖ –°—Ç–∞–Ω –º–æ–¥—É–ª—è —É—á–∞—Å—Ç—ñ —É—Å–ø—ñ—à–Ω–æ —Å–∫–∏–Ω—É—Ç–æ');
    return true;
},

/**
 * –û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏—á–Ω–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ —Å—Ç–∞–Ω —É—á–∞—Å—Ç—ñ
 * @returns {Object} - –î—ñ–∞–≥–Ω–æ—Å—Ç–∏—á–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è
 */
getDiagnosticInfo: function() {
    return {
        participatingRaffles: Array.from(this.participatingRaffles),
        ticketCounts: this.userRaffleTickets,
        invalidRaffles: Array.from(this.invalidRaffleIds),
        activeTransactions: Array.from(this.activeTransactions.entries()),
        pendingRequests: this.pendingRequests,
        lastRequestTimes: this.lastRequestTimes,
        transactionLog: this.transactionLog,
        lastSyncTime: this.lastSyncTime,
        syncCounter: this.syncCounter,
        isSyncInProgress: this.isSyncInProgress,
        requestLock: this.requestLock,
        // –î–û–î–ê–ù–û: –°—Ç–∞–Ω –æ–±—Ä–æ–±–∫–∏ –∑–∞–ø–∏—Ç—É
        requestInProgress: this.requestInProgress,
        lastParticipationTime: this.lastParticipationTime,
        totalRequestCount: this.totalRequestCount,
        localOperations: this.localOperations.slice(0, 10), // –û—Å—Ç–∞–Ω–Ω—ñ 10 –æ–ø–µ—Ä–∞—Ü—ñ–π
        lastBalanceUpdateTime: this.lastBalanceUpdateTime,
        lastKnownBalance: this.lastKnownBalance,
        // –î–û–î–ê–ù–û: –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –∫–µ—à –¥–∞–Ω–∏—Ö —Å–µ—Ä–≤–µ—Ä–∞
        serverDataCache: {
            lastUpdate: this.serverDataCache.lastUpdate,
            rafflesCount: this.serverDataCache.participatingRaffles.size,
            needsForcedSync: this.needsForcedSync
        },
        // –î–û–î–ê–ù–û: –°—Ç–∞—Ç—É—Å –±–ª–æ–∫—É–≤–∞–Ω–Ω—è —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó
        syncLock: this.syncLock,
        pendingSyncRequested: this.pendingSyncRequested
    };
}
};

// –î–æ–¥–∞—î–º–æ –º–æ–¥—É–ª—å –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–æ–¥—É–ª—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
window.WinixRaffles.participation = participation;

// –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –º–æ–¥—É–ª—è –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
document.addEventListener('DOMContentLoaded', function() {
    if (window.WinixRaffles.state.isInitialized) {
        participation.init();
    } else {
        // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ—ó —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
        document.addEventListener('winix-raffles-initialized', function() {
            participation.init();
        });
    }
});

// –î–æ–¥–∞—î–º–æ –∫–ª–∞—Å–∏ –¥–ª—è –∞–Ω—ñ–º–∞—Ü—ñ—ó –∑–º—ñ–Ω–∏ —É—á–∞—Å–Ω–∏–∫—ñ–≤
const styleElement = document.createElement('style');
styleElement.textContent = `
    @keyframes count-updated {
        0% { transform: scale(1); color: inherit; }
        50% { transform: scale(1.2); color: #4CAF50; }
        100% { transform: scale(1); color: inherit; }
    }
    
    .participants-count.updated, .count.updated {
        animation: count-updated 1s ease-out;
    }
    
    /* –ê–Ω—ñ–º–∞—Ü—ñ—è –∑–º–µ–Ω—à–µ–Ω–Ω—è –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –∂–µ—Ç–æ–Ω—ñ–≤ */
    @keyframes decrease-coins {
        0% { color: #FF5722; transform: scale(1.1); text-shadow: 0 0 5px rgba(255, 87, 34, 0.7); }
        50% { color: #FF5722; transform: scale(1.15); text-shadow: 0 0 10px rgba(255, 87, 34, 0.5); }
        100% { color: inherit; transform: scale(1); }
    }
    
    /* –ê–Ω—ñ–º–∞—Ü—ñ—è –∑–±—ñ–ª—å—à–µ–Ω–Ω—è –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –∂–µ—Ç–æ–Ω—ñ–≤ */
    @keyframes increase-coins {
        0% { color: #4CAF50; transform: scale(1.1); text-shadow: 0 0 5px rgba(76, 175, 80, 0.7); }
        50% { color: #4CAF50; transform: scale(1.15); text-shadow: 0 0 10px rgba(76, 175, 80, 0.5); }
        100% { color: inherit; transform: scale(1); }
    }
    
    #user-coins.decreasing {
        animation: decrease-coins 0.8s ease-out;
    }
    
    #user-coins.increasing {
        animation: increase-coins 0.8s ease-out;
    }

    /* –°–ø–µ—Ü—ñ–∞–ª—å–Ω–∏–π —Å—Ç–∏–ª—å –¥–ª—è –Ω–µ–≤–∏–¥–∏–º–æ–≥–æ –ø–æ–¥–∞–Ω–Ω—è –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –±—ñ–ª–µ—Ç—ñ–≤ */
    .ticket-count-ghost {
        position: absolute;
        opacity: 0;
        pointer-events: none;
    }
`;
document.head.appendChild(styleElement);

// –ì–ª–æ–±–∞–ª—å–Ω–∏–π –æ–±—Ä–æ–±–Ω–∏–∫ –ø–æ–º–∏–ª–æ–∫ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ–≥–æ —Å–∫–∏–¥–∞–Ω–Ω—è —Å—Ç–∞–Ω—É –ø—Ä–∏ –∫—Ä–∏—Ç–∏—á–Ω–∏—Ö –ø–æ–º–∏–ª–∫–∞—Ö
window.addEventListener('error', function(event) {
    console.error('üö® –ì–ª–æ–±–∞–ª—å–Ω–∞ –ø–æ–º–∏–ª–∫–∞ –≤ participation:', event.error);

    if (participation && (participation.activeTransactions.size > 0 || Object.keys(participation.pendingRequests).length > 0)) {
        console.warn('‚ö†Ô∏è –í–∏—è–≤–ª–µ–Ω–æ –∞–∫—Ç–∏–≤–Ω—ñ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó –ø—ñ–¥ —á–∞—Å –ø–æ–º–∏–ª–∫–∏. –°–∫–∏–¥–∞—î–º–æ —Å—Ç–∞–Ω...');
        participation.resetState();
    }

    // –î–û–î–ê–ù–û: –°–∫–∏–¥–∞—î–º–æ —Å—Ç–∞–Ω –æ–±—Ä–æ–±–∫–∏ –∑–∞–ø–∏—Ç—É
    if (participation) {
        participation.requestInProgress = false;
        participation.syncLock = false;
    }

    // –ü—Ä–∏—Ö–æ–≤—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
    if (typeof window.hideLoading === 'function') {
        window.hideLoading();
    }
});

// –û–±—Ä–æ–±–Ω–∏–∫ –Ω–µ–æ–±—Ä–æ–±–ª–µ–Ω–∏—Ö –ø–æ–º–∏–ª–æ–∫ Promise
window.addEventListener('unhandledrejection', function(event) {
    if (participation && (participation.activeTransactions.size > 0 || Object.keys(participation.pendingRequests).length > 0)) {
        console.warn('‚ö†Ô∏è –í–∏—è–≤–ª–µ–Ω–æ –Ω–µ–æ–±—Ä–æ–±–ª–µ–Ω—É Promise –ø–æ–º–∏–ª–∫—É. –°–∫–∏–¥–∞—î–º–æ —Å—Ç–∞–Ω...');
        participation.resetState();
    }

    // –î–û–î–ê–ù–û: –°–∫–∏–¥–∞—î–º–æ —Å—Ç–∞–Ω –æ–±—Ä–æ–±–∫–∏ –∑–∞–ø–∏—Ç—É
    if (participation) {
        participation.requestInProgress = false;
        participation.syncLock = false;
    }
});

// –î–û–î–ê–ù–û: –û—á–∏—â–µ–Ω–Ω—è "–∑–∞—Å—Ç—Ä—è–≥–ª–∏—Ö" —Å—Ç–∞–Ω—ñ–≤ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
window.addEventListener('load', function() {
    // –ó–∞—Ç—Ä–∏–º–∫–∞ –¥–ª—è —Ç–æ–≥–æ, —â–æ–± —ñ–Ω—à—ñ —Å–∫—Ä–∏–ø—Ç–∏ –≤—Å—Ç–∏–≥–ª–∏ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É–≤–∞—Ç–∏—Å—è
    setTimeout(function() {
        if (window.WinixRaffles && window.WinixRaffles.participation) {
            // –û—á–∏—â–∞—î–º–æ –∫–Ω–æ–ø–∫–∏ –≤ —Å—Ç–∞–Ω—ñ –æ–±—Ä–æ–±–∫–∏
            document.querySelectorAll('.join-button.processing, .mini-raffle-button.processing').forEach(button => {
                button.classList.remove('processing');
                button.disabled = false;

                // –í—ñ–¥–Ω–æ–≤–ª—é—î–º–æ —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏
                const originalText = button.getAttribute('data-original-text');
                if (originalText) {
                    button.textContent = originalText;
                } else {
                    const entryFee = button.getAttribute('data-entry-fee') || '1';
                    button.textContent = button.classList.contains('mini-raffle-button') ?
                        '–í–∑—è—Ç–∏ —É—á–∞—Å—Ç—å' :
                        `–í–∑—è—Ç–∏ —É—á–∞—Å—Ç—å –∑–∞ ${entryFee} –∂–µ—Ç–æ–Ω${parseInt(entryFee) > 1 ? '–∏' : ''}`;
                }
            });

            // –°–∫–∏–¥–∞—î–º–æ –ø—Ä–∞–ø–æ—Ä—Ü—ñ –±–ª–æ–∫—É–≤–∞–Ω–Ω—è
            window.WinixRaffles.participation.requestInProgress = false;
            window.WinixRaffles.participation.syncLock = false;

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Å—Ç–∞–Ω –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π
            setTimeout(() => {
                window.WinixRaffles.participation.verifyAndFixParticipationState();
            }, 3000);
        }
    }, 2000);
});

console.log('‚úÖ –ú–æ–¥—É–ª—å participation.js —É—Å–ø—ñ—à–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ');
})();