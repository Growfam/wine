/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç–∏ –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∫–∞—Ä—Ç–æ–∫ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
 */

(function() {
    'use strict';

    console.log("üéÆ WINIX Raffles: –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ–≤ –∫–∞—Ä—Ç–æ–∫");

    // –ï–∫—Å–ø–æ—Ä—Ç—É—î–º–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∏
    window.WinixRaffles.components = window.WinixRaffles.components || {};

    // –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
    window.WinixRaffles.components.displayMainRaffle = function(container, raffle) {
        if (!container || !raffle) return;

        // –°—Ç–≤–æ—Ä—é—î–º–æ HTML –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
        container.innerHTML = `
            <img class="main-raffle-image" src="${raffle.image_url || '/assets/prize-poster.gif'}" alt="${raffle.title}">
            <div class="main-raffle-content">
                <div class="main-raffle-header">
                    <h3 class="main-raffle-title">${raffle.title}</h3>
                    <div class="main-raffle-cost">
                        <img class="token-icon" src="/assets/token-icon.png" alt="–ñ–µ—Ç–æ–Ω">
                        <span>${raffle.entry_fee} –∂–µ—Ç–æ–Ω${raffle.entry_fee !== 1 ? '–∏' : ''}</span>
                    </div>
                </div>

                <span class="main-raffle-prize">${raffle.prize_amount} ${raffle.prize_currency}</span>

                <div class="timer-container">
                    <div class="timer-block">
                        <span class="timer-value" id="days">00</span>
                        <span class="timer-label">–¥–Ω—ñ–≤</span>
                    </div>
                    <div class="timer-block">
                        <span class="timer-value" id="hours">00</span>
                        <span class="timer-label">–≥–æ–¥</span>
                    </div>
                    <div class="timer-block">
                        <span class="timer-value" id="minutes">00</span>
                        <span class="timer-label">—Ö–≤</span>
                    </div>
                </div>

                <div class="prize-distribution">
                    <div class="prize-distribution-title">–†–æ–∑–ø–æ–¥—ñ–ª –ø—Ä–∏–∑—ñ–≤ (${raffle.winners_count} –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤):</div>
                    <div class="prize-list">
                        ${window.WinixRaffles.components.generatePrizeDistributionHTML(raffle.prize_distribution)}
                    </div>
                </div>

                <div class="main-raffle-participants">
                    <div class="participants-info">–£—á–∞—Å–Ω–∏–∫—ñ–≤: <span class="participants-count">${raffle.participants_count || 0}</span></div>
                    <div class="share-container">
                        <button class="share-button" id="share-raffle-btn" data-raffle-id="${raffle.id}">–ü–æ–¥—ñ–ª–∏—Ç–∏—Å—è</button>
                    </div>
                </div>

                <div class="progress-bar">
                    <div class="progress" style="width: ${window.WinixRaffles.components.calculateProgressWidth(raffle)}%"></div>
                </div>

                <button class="join-button" data-raffle-id="${raffle.id}" data-raffle-type="main">–í–∑—è—Ç–∏ —É—á–∞—Å—Ç—å</button>
            </div>
        `;

        // –û–Ω–æ–≤–ª—é—î–º–æ —Ç–∞–π–º–µ—Ä
        window.WinixRaffles.active._updateRaffleTimers();

        // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π
        const joinButton = container.querySelector('.join-button');
        if (joinButton) {
            joinButton.addEventListener('click', function() {
                const raffleId = this.getAttribute('data-raffle-id');
                const raffleType = this.getAttribute('data-raffle-type');
                window.WinixRaffles.participation.openRaffleDetails(raffleId, raffleType);
            });
        }

        // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ü–æ–¥—ñ–ª–∏—Ç–∏—Å—è"
        const shareButton = container.querySelector('#share-raffle-btn');
        if (shareButton) {
            shareButton.addEventListener('click', function() {
                const raffleId = this.getAttribute('data-raffle-id');
                window.WinixRaffles.participation.shareRaffle(raffleId);
            });
        }
    };

    // –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç—É –º—ñ–Ω—ñ-—Ä–æ–∑—ñ–≥—Ä–∞—à—É
    window.WinixRaffles.components.createMiniRaffleElement = function(raffle) {
        if (!raffle) return null;

        // –°—Ç–≤–æ—Ä—é—î–º–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        const miniRaffle = document.createElement('div');
        miniRaffle.className = 'mini-raffle';
        miniRaffle.setAttribute('data-raffle-id', raffle.id);

        // –†–æ–∑—Ä–∞—Ö–æ–≤—É—î–º–æ —á–∞—Å, —â–æ –∑–∞–ª–∏—à–∏–≤—Å—è
        let timeLeftText = '';
        try {
            const now = new Date();
            const endTime = new Date(raffle.end_time);
            const timeLeft = endTime - now;

            if (timeLeft > 0) {
                const hours = Math.floor((timeLeft % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
                const minutes = Math.floor((timeLeft % (1000 * 60 * 60)) / (1000 * 60));
                timeLeftText = `–ó–∞–ª–∏—à–∏–ª–æ—Å—å: ${hours} –≥–æ–¥ ${minutes} —Ö–≤`;
            } else {
                timeLeftText = '–ó–∞–≤–µ—Ä—à—É—î—Ç—å—Å—è';
            }
        } catch (error) {
            console.error("–ü–æ–º–∏–ª–∫–∞ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É —á–∞—Å—É –º—ñ–Ω—ñ-—Ä–æ–∑—ñ–≥—Ä–∞—à—É:", error);
            timeLeftText = '–ß–∞—Å –Ω–µ –≤–∏–∑–Ω–∞—á–µ–Ω–æ';
        }

        // –§–æ—Ä–º–∞—Ç—É—î–º–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤
        const winnersCount = raffle.winners_count || 1;
        const winnersText = `${raffle.prize_amount} ${raffle.prize_currency} (${winnersCount} –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤)`;

        // –§–æ—Ä–º—É—î–º–æ HTML
        miniRaffle.innerHTML = `
            <div class="mini-raffle-info">
                <div class="mini-raffle-title">${raffle.title}</div>
                <div class="mini-raffle-cost">
                    <img class="token-icon" src="/assets/token-icon.png" alt="–ñ–µ—Ç–æ–Ω">
                    <span>${raffle.entry_fee} –∂–µ—Ç–æ–Ω${raffle.entry_fee !== 1 ? '–∏' : ''}</span>
                </div>
                <div class="mini-raffle-prize">${winnersText}</div>
                <div class="mini-raffle-time">${timeLeftText}</div>
            </div>
            <button class="mini-raffle-button" data-raffle-id="${raffle.id}" data-raffle-type="daily">–£—á–∞—Å—Ç—å</button>
        `;

        // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è
        const button = miniRaffle.querySelector('.mini-raffle-button');
        if (button) {
            button.addEventListener('click', function(event) {
                event.preventDefault();
                event.stopPropagation();

                const raffleId = this.getAttribute('data-raffle-id');
                const raffleType = this.getAttribute('data-raffle-type');
                window.WinixRaffles.participation.openRaffleDetails(raffleId, raffleType);
            });
        }

        return miniRaffle;
    };

    // –î–æ–¥–∞–≤–∞–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç—É –±–æ–Ω—É—Å—É –Ω–æ–≤–∞—á–∫–∞
    window.WinixRaffles.components.addNewbieBonusElement = function(container) {
        if (!container) return;

        const newbieBonus = document.createElement('div');
        newbieBonus.className = 'mini-raffle';
        newbieBonus.setAttribute('data-raffle-id', 'newbie');

        newbieBonus.innerHTML = `
            <div class="mini-raffle-info">
                <div class="mini-raffle-title">–ë–æ–Ω—É—Å –Ω–æ–≤–∞—á–∫–∞</div>
                <div class="mini-raffle-cost">
                    <img class="token-icon" src="/assets/token-icon.png" alt="–ñ–µ—Ç–æ–Ω">
                    <span>0 –∂–µ—Ç–æ–Ω—ñ–≤</span>
                </div>
                <div class="mini-raffle-prize">500 WINIX + 1 –∂–µ—Ç–æ–Ω</div>
                <div class="mini-raffle-time">–î–æ—Å—Ç—É–ø–Ω–æ —Ç—ñ–ª—å–∫–∏ –Ω–æ–≤–∏–º –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞–º</div>
            </div>
            <button class="mini-raffle-button" data-raffle-id="newbie">–û—Ç—Ä–∏–º–∞—Ç–∏</button>
        `;

        const button = newbieBonus.querySelector('.mini-raffle-button');
        if (button) {
            button.addEventListener('click', async function(event) {
                event.preventDefault();
                event.stopPropagation();

                const result = await window.WinixRaffles.participation.claimNewbieBonus();

                if (result.status === 'success') {
                    window.WinixRaffles.utils.showToast(`–í–∏ –æ—Ç—Ä–∏–º–∞–ª–∏ ${result.data.amount} WINIX —è–∫ –±–æ–Ω—É—Å –Ω–æ–≤–∞—á–∫–∞!`);

                    // –î–µ–∞–∫—Ç–∏–≤—É—î–º–æ –∫–Ω–æ–ø–∫—É
                    this.textContent = '–û—Ç—Ä–∏–º–∞–Ω–æ';
                    this.disabled = true;
                    this.style.opacity = '0.6';
                    this.style.cursor = 'default';

                    // –î–æ–¥–∞—î–º–æ –≤–æ–¥—è–Ω–∏–π –∑–Ω–∞–∫
                    window.WinixRaffles.utils.markElement(newbieBonus);

                    // –û–Ω–æ–≤–ª—é—î–º–æ –±–∞–ª–∞–Ω—Å
                    window.WinixRaffles.participation.updateUserBalance();
                } else if (result.status === 'already_claimed') {
                    window.WinixRaffles.utils.showToast('–í–∏ –≤–∂–µ –æ—Ç—Ä–∏–º–∞–ª–∏ –±–æ–Ω—É—Å –Ω–æ–≤–∞—á–∫–∞');

                    // –î–µ–∞–∫—Ç–∏–≤—É—î–º–æ –∫–Ω–æ–ø–∫—É
                    this.textContent = '–û—Ç—Ä–∏–º–∞–Ω–æ';
                    this.disabled = true;
                    this.style.opacity = '0.6';
                    this.style.cursor = 'default';

                    // –î–æ–¥–∞—î–º–æ –≤–æ–¥—è–Ω–∏–π –∑–Ω–∞–∫
                    window.WinixRaffles.utils.markElement(newbieBonus);
                } else {
                    window.WinixRaffles.utils.showToast(result.message || '–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –±–æ–Ω—É—Å—É');
                }
            });
        }

        container.appendChild(newbieBonus);

        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –≤–∂–µ –æ—Ç—Ä–∏–º–∞–Ω–æ –±–æ–Ω—É—Å
        if (window.WinixAPI && typeof window.WinixAPI.getUserData === 'function') {
            window.WinixAPI.getUserData().then(userData => {
                if (userData && userData.data && userData.data.newbie_bonus_claimed) {
                    // –î–µ–∞–∫—Ç–∏–≤—É—î–º–æ –∫–Ω–æ–ø–∫—É
                    if (button) {
                        button.textContent = '–û—Ç—Ä–∏–º–∞–Ω–æ';
                        button.disabled = true;
                        button.style.opacity = '0.6';
                        button.style.cursor = 'default';
                    }

                    // –î–æ–¥–∞—î–º–æ –≤–æ–¥—è–Ω–∏–π –∑–Ω–∞–∫
                    window.WinixRaffles.utils.markElement(newbieBonus);
                }
            }).catch(err => {
                console.error("–ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å—É –±–æ–Ω—É—Å—É:", err);
            });
        }
    };

    // –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è HTML –¥–ª—è —Ä–æ–∑–ø–æ–¥—ñ–ª—É –ø—Ä–∏–∑—ñ–≤
    window.WinixRaffles.components.generatePrizeDistributionHTML = function(prizeDistribution) {
        if (!prizeDistribution || typeof prizeDistribution !== 'object' || Object.keys(prizeDistribution).length === 0) {
            return '<div class="prize-item"><span class="prize-place">–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –≤—ñ–¥—Å—É—Ç–Ω—è</span></div>';
        }

        let html = '';
        const places = Object.keys(prizeDistribution).sort((a, b) => parseInt(a) - parseInt(b));

        // –ì—Ä—É–ø—É—î–º–æ –º—ñ—Å—Ü—è –∑ –æ–¥–Ω–∞–∫–æ–≤–∏–º–∏ –ø—Ä–∏–∑–∞–º–∏
        const groupedPrizes = {};

        places.forEach(place => {
            const prize = prizeDistribution[place];
            if (!prize) return;

            const key = `${prize.amount}-${prize.currency}`;

            if (!groupedPrizes[key]) {
                groupedPrizes[key] = {
                    amount: prize.amount,
                    currency: prize.currency,
                    places: []
                };
            }

            groupedPrizes[key].places.push(parseInt(place));
        });

        // –°—Ç–≤–æ—Ä—é—î–º–æ HTML –¥–ª—è –∫–æ–∂–Ω–æ—ó –≥—Ä—É–ø–∏ –ø—Ä–∏–∑—ñ–≤
        for (const key in groupedPrizes) {
            const group = groupedPrizes[key];
            const placesText = window.WinixRaffles.utils.formatPlaces(group.places);

            html += `
                <div class="prize-item">
                    <span class="prize-place">${placesText}:</span>
                    <span class="prize-value">${group.amount} ${group.currency}</span>
                </div>
            `;
        }

        return html;
    };

    // –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ —à–∏—Ä–∏–Ω–∏ –ø—Ä–æ–≥—Ä–µ—Å-–±–∞—Ä—É
    window.WinixRaffles.components.calculateProgressWidth = function(raffle) {
        if (!raffle || !raffle.start_time || !raffle.end_time) {
            return 0;
        }

        try {
            const now = Date.now();
            const startTime = new Date(raffle.start_time).getTime();
            const endTime = new Date(raffle.end_time).getTime();

            if (isNaN(startTime) || isNaN(endTime)) {
                return 0;
            }

            const totalDuration = endTime - startTime;
            if (totalDuration <= 0) {
                return 0;
            }

            const elapsed = now - startTime;
            return Math.min(100, Math.max(0, (elapsed / totalDuration) * 100));
        } catch (error) {
            console.error("–ü–æ–º–∏–ª–∫–∞ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É –ø—Ä–æ–≥—Ä–µ—Å—É:", error);
            return 0;
        }
    };
})();