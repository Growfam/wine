/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç–∏ –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∫–∞—Ä—Ç–æ–∫ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
 */

import WinixRaffles from '../globals.js';
import { formatTimeLeft, calculateProgressByTime, generatePrizeDistributionHTML } from '../utils/formatters.js';
import { markElement, showToast } from '../utils/ui-helpers.js';

/**
 * –ö–ª–∞—Å –∑ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏ –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∫–∞—Ä—Ç–æ–∫ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
 */
class RaffleCards {
    /**
     * –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –º–æ–¥—É–ª—è –∫–∞—Ä—Ç–æ–∫
     */
    constructor() {
        console.log("üéÆ WINIX Raffles: –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ–≤ –∫–∞—Ä—Ç–æ–∫");

        // –ü—ñ–¥–ø–∏—Å—É—î–º–æ—Å—è –Ω–∞ –ø–æ–¥—ñ—ó –¥–ª—è –≤–∑–∞—î–º–æ–¥—ñ—ó –∑ —ñ–Ω—à–∏–º–∏ –º–æ–¥—É–ª—è–º–∏
        this._setupEventListeners();
    }

    /**
     * –ü—ñ–¥–ø–∏—Å–∫–∞ –Ω–∞ –ø–æ–¥—ñ—ó
     * @private
     */
    _setupEventListeners() {
        // –ü—ñ–¥–ø–∏—Å—É—î–º–æ—Å—è –Ω–∞ –ø–æ–¥—ñ—é –¥–ª—è –±–æ–Ω—É—Å—É –Ω–æ–≤–∞—á–∫–∞
        if (WinixRaffles && WinixRaffles.events) {
            WinixRaffles.events.on('display-bonus-claimed', (data) => {
                if (data && data.element) {
                    this._showBonusClaimed(data.element, data.container);
                }
            });
        }
    }

    /**
     * –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –æ—Ç—Ä–∏–º–∞–Ω–æ–≥–æ –±–æ–Ω—É—Å—É
     * @param {HTMLElement} button - –ö–Ω–æ–ø–∫–∞ –±–æ–Ω—É—Å—É
     * @param {HTMLElement} container - –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –µ–ª–µ–º–µ–Ω—Ç—É –±–æ–Ω—É—Å—É
     * @private
     */
    _showBonusClaimed(button, container) {
        if (button) {
            button.textContent = '–û—Ç—Ä–∏–º–∞–Ω–æ';
            button.disabled = true;
            button.style.opacity = '0.6';
            button.style.cursor = 'default';
        }

        if (container && typeof markElement === 'function') {
            markElement(container);
        }
    }

    /**
     * –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
     * @param {HTMLElement} container - –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è
     * @param {Object} raffle - –î–∞–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
     */
    displayMainRaffle(container, raffle) {
        if (!container || !raffle) return;

        // –†–æ–∑—Ä–∞—Ö–æ–≤—É—î–º–æ —á–∞—Å, —â–æ –∑–∞–ª–∏—à–∏–≤—Å—è
        let timeLeftHTML = '';
        try {
            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å end_time —Ç–∞ –π–æ–≥–æ –≤–∞–ª—ñ–¥–Ω—ñ—Å—Ç—å
            if (!raffle.end_time) {
                throw new Error("–í—ñ–¥—Å—É—Ç–Ω—è –¥–∞—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è —Ä–æ–∑—ñ–≥—Ä–∞—à—É");
            }

            const now = new Date();
            const endTime = new Date(raffle.end_time);

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —î endTime –≤–∞–ª—ñ–¥–Ω–∏–º –æ–±'—î–∫—Ç–æ–º Date
            if (isNaN(endTime.getTime())) {
                throw new Error("–ù–µ–≤–∞–ª—ñ–¥–Ω–∞ –¥–∞—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è —Ä–æ–∑—ñ–≥—Ä–∞—à—É");
            }

            const timeLeft = endTime - now;

            if (timeLeft > 0) {
                const timeLeftData = formatTimeLeft(timeLeft);
                timeLeftHTML = `
                    <div class="timer-container">
                        <div class="timer-block">
                            <span class="timer-value" id="days">${timeLeftData.days}</span>
                            <span class="timer-label">–¥–Ω—ñ–≤</span>
                        </div>
                        <div class="timer-block">
                            <span class="timer-value" id="hours">${timeLeftData.hours}</span>
                            <span class="timer-label">–≥–æ–¥</span>
                        </div>
                        <div class="timer-block">
                            <span class="timer-value" id="minutes">${timeLeftData.minutes}</span>
                            <span class="timer-label">—Ö–≤</span>
                        </div>
                    </div>
                `;
            } else {
                timeLeftHTML = `
                    <div class="timer-container">
                        <div class="timer-finished">–ó–∞–≤–µ—Ä—à—É—î—Ç—å—Å—è</div>
                    </div>
                `;
            }
        } catch (error) {
            console.error("–ü–æ–º–∏–ª–∫–∞ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É —á–∞—Å—É:", error);
            timeLeftHTML = `
                <div class="timer-container">
                    <div class="timer-error">–ß–∞—Å –Ω–µ –≤–∏–∑–Ω–∞—á–µ–Ω–æ</div>
                </div>
            `;
        }

        // –†–æ–∑—Ä–∞—Ö–æ–≤—É—î–º–æ –ø—Ä–æ–≥—Ä–µ—Å —Ä–æ–∑—ñ–≥—Ä–∞—à—É
        let progressWidth = 0;
        try {
            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å start_time —Ç–∞ end_time
            if (raffle.start_time && raffle.end_time) {
                progressWidth = calculateProgressByTime(raffle.start_time, raffle.end_time);
            }
        } catch (error) {
            console.error("–ü–æ–º–∏–ª–∫–∞ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É –ø—Ä–æ–≥—Ä–µ—Å—É:", error);
        }

        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –Ω–µ–æ–±—Ö—ñ–¥–Ω–∏—Ö –ø–æ–ª—ñ–≤
        const title = raffle.title || '–†–æ–∑—ñ–≥—Ä–∞—à';
        const entryFee = raffle.entry_fee || 0;
        const prizeAmount = raffle.prize_amount || 0;
        const prizeCurrency = raffle.prize_currency || 'WINIX';
        const winnersCount = raffle.winners_count || 1;
        const participantsCount = raffle.participants_count || 0;
        const imageUrl = raffle.image_url || '/assets/prize-poster.gif';
        const raffleId = raffle.id || 'unknown';

        // –ë–µ–∑–ø–µ—á–Ω–æ –æ—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ –¥–ª—è —Ä–æ–∑–ø–æ–¥—ñ–ª—É –ø—Ä–∏–∑—ñ–≤
        let prizeDistributionHTML = '';
        try {
            if (raffle.prize_distribution && typeof raffle.prize_distribution === 'object') {
                prizeDistributionHTML = generatePrizeDistributionHTML(raffle.prize_distribution);
            } else {
                prizeDistributionHTML = '<div class="prize-item"><span class="prize-place">–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –≤—ñ–¥—Å—É—Ç–Ω—è</span></div>';
            }
        } catch (error) {
            console.error("–ü–æ–º–∏–ª–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó —Ä–æ–∑–ø–æ–¥—ñ–ª—É –ø—Ä–∏–∑—ñ–≤:", error);
            prizeDistributionHTML = '<div class="prize-item"><span class="prize-place">–ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è</span></div>';
        }

        // –°—Ç–≤–æ—Ä—é—î–º–æ HTML –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
        container.innerHTML = `
            <img class="main-raffle-image" src="${imageUrl}" alt="${title}">
            <div class="main-raffle-content">
                <div class="main-raffle-header">
                    <h3 class="main-raffle-title">${title}</h3>
                    <div class="main-raffle-cost">
                        <img class="token-icon" src="/assets/token-icon.png" alt="–ñ–µ—Ç–æ–Ω">
                        <span>${entryFee} –∂–µ—Ç–æ–Ω${entryFee !== 1 ? '–∏' : ''}</span>
                    </div>
                </div>

                <span class="main-raffle-prize">${prizeAmount} ${prizeCurrency}</span>

                ${timeLeftHTML}

                <div class="prize-distribution">
                    <div class="prize-distribution-title">–†–æ–∑–ø–æ–¥—ñ–ª –ø—Ä–∏–∑—ñ–≤ (${winnersCount} –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤):</div>
                    <div class="prize-list">
                        ${prizeDistributionHTML}
                    </div>
                </div>

                <div class="main-raffle-participants">
                    <div class="participants-info">–£—á–∞—Å–Ω–∏–∫—ñ–≤: <span class="participants-count">${participantsCount}</span></div>
                    <div class="share-container">
                        <button class="share-button" id="share-raffle-btn" data-raffle-id="${raffleId}">–ü–æ–¥—ñ–ª–∏—Ç–∏—Å—è</button>
                    </div>
                </div>

                <div class="progress-bar">
                    <div class="progress" style="width: ${progressWidth}%"></div>
                </div>

                <button class="join-button" data-raffle-id="${raffleId}" data-raffle-type="main">–í–∑—è—Ç–∏ —É—á–∞—Å—Ç—å</button>
            </div>
        `;

        // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π
        const joinButton = container.querySelector('.join-button');
        if (joinButton) {
            joinButton.addEventListener('click', () => {
                const raffleId = joinButton.getAttribute('data-raffle-id');
                if (!raffleId) {
                    console.error("ID —Ä–æ–∑—ñ–≥—Ä–∞—à—É –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ");
                    return;
                }

                const raffleType = joinButton.getAttribute('data-raffle-type') || 'main';

                // –ì–µ–Ω–µ—Ä—É—î–º–æ –ø–æ–¥—ñ—é –¥–ª—è –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è –¥–µ—Ç–∞–ª–µ–π —Ä–æ–∑—ñ–≥—Ä–∞—à—É
                if (WinixRaffles && WinixRaffles.events) {
                    WinixRaffles.events.emit('open-raffle-details', {
                        raffleId,
                        raffleType
                    });
                }
            });
        }

        // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ü–æ–¥—ñ–ª–∏—Ç–∏—Å—è"
        const shareButton = container.querySelector('#share-raffle-btn');
        if (shareButton) {
            shareButton.addEventListener('click', () => {
                const raffleId = shareButton.getAttribute('data-raffle-id');
                if (!raffleId) {
                    console.error("ID —Ä–æ–∑—ñ–≥—Ä–∞—à—É –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ");
                    return;
                }

                // –ì–µ–Ω–µ—Ä—É—î–º–æ –ø–æ–¥—ñ—é –¥–ª—è –ø–æ—à–∏—Ä–µ–Ω–Ω—è —Ä–æ–∑—ñ–≥—Ä–∞—à—É
                if (WinixRaffles && WinixRaffles.events) {
                    WinixRaffles.events.emit('share-raffle', { raffleId });
                }
            });
        }
    }

    /**
     * –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç—É –º—ñ–Ω—ñ-—Ä–æ–∑—ñ–≥—Ä–∞—à—É
     * @param {Object} raffle - –î–∞–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—É
     * @returns {HTMLElement} –ï–ª–µ–º–µ–Ω—Ç –º—ñ–Ω—ñ-—Ä–æ–∑—ñ–≥—Ä–∞—à—É
     */
    createMiniRaffleElement(raffle) {
        if (!raffle) return null;

        // –°—Ç–≤–æ—Ä—é—î–º–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        const miniRaffle = document.createElement('div');
        miniRaffle.className = 'mini-raffle';
        miniRaffle.setAttribute('data-raffle-id', raffle.id || 'unknown');

        // –†–æ–∑—Ä–∞—Ö–æ–≤—É—î–º–æ —á–∞—Å, —â–æ –∑–∞–ª–∏—à–∏–≤—Å—è
        let timeLeftText = '';
        try {
            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å end_time —Ç–∞ –π–æ–≥–æ –≤–∞–ª—ñ–¥–Ω—ñ—Å—Ç—å
            if (!raffle.end_time) {
                throw new Error("–í—ñ–¥—Å—É—Ç–Ω—è –¥–∞—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è —Ä–æ–∑—ñ–≥—Ä–∞—à—É");
            }

            const now = new Date();
            const endTime = new Date(raffle.end_time);

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —î endTime –≤–∞–ª—ñ–¥–Ω–∏–º –æ–±'—î–∫—Ç–æ–º Date
            if (isNaN(endTime.getTime())) {
                throw new Error("–ù–µ–≤–∞–ª—ñ–¥–Ω–∞ –¥–∞—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è —Ä–æ–∑—ñ–≥—Ä–∞—à—É");
            }

            const timeLeft = endTime - now;

            if (timeLeft > 0) {
                const timeLeftData = formatTimeLeft(timeLeft, 'short');
                timeLeftText = `–ó–∞–ª–∏—à–∏–ª–æ—Å—å: ${timeLeftData.text}`;
            } else {
                timeLeftText = '–ó–∞–≤–µ—Ä—à—É—î—Ç—å—Å—è';
            }
        } catch (error) {
            console.error("–ü–æ–º–∏–ª–∫–∞ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É —á–∞—Å—É –º—ñ–Ω—ñ-—Ä–æ–∑—ñ–≥—Ä–∞—à—É:", error);
            timeLeftText = '–ß–∞—Å –Ω–µ –≤–∏–∑–Ω–∞—á–µ–Ω–æ';
        }

        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –Ω–µ–æ–±—Ö—ñ–¥–Ω–∏—Ö –ø–æ–ª—ñ–≤
        const title = raffle.title || '–†–æ–∑—ñ–≥—Ä–∞—à';
        const entryFee = raffle.entry_fee || 0;
        const prizeAmount = raffle.prize_amount || 0;
        const prizeCurrency = raffle.prize_currency || 'WINIX';
        const winnersCount = raffle.winners_count || 1;
        const raffleId = raffle.id || 'unknown';

        // –§–æ—Ä–º–∞—Ç—É—î–º–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤
        const winnersText = `${prizeAmount} ${prizeCurrency} (${winnersCount} –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤)`;

        // –§–æ—Ä–º—É—î–º–æ HTML
        miniRaffle.innerHTML = `
            <div class="mini-raffle-info">
                <div class="mini-raffle-title">${title}</div>
                <div class="mini-raffle-cost">
                    <img class="token-icon" src="/assets/token-icon.png" alt="–ñ–µ—Ç–æ–Ω">
                    <span>${entryFee} –∂–µ—Ç–æ–Ω${entryFee !== 1 ? '–∏' : ''}</span>
                </div>
                <div class="mini-raffle-prize">${winnersText}</div>
                <div class="mini-raffle-time">${timeLeftText}</div>
            </div>
            <button class="mini-raffle-button" data-raffle-id="${raffleId}" data-raffle-type="daily">–£—á–∞—Å—Ç—å</button>
        `;

        // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è
        const button = miniRaffle.querySelector('.mini-raffle-button');
        if (button) {
            button.addEventListener('click', (event) => {
                if (event) {
                    event.preventDefault();
                    event.stopPropagation();
                }

                const raffleId = button.getAttribute('data-raffle-id');
                if (!raffleId) {
                    console.error("ID —Ä–æ–∑—ñ–≥—Ä–∞—à—É –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ");
                    return;
                }

                const raffleType = button.getAttribute('data-raffle-type') || 'daily';

                // –ì–µ–Ω–µ—Ä—É—î–º–æ –ø–æ–¥—ñ—é –¥–ª—è –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è –¥–µ—Ç–∞–ª–µ–π —Ä–æ–∑—ñ–≥—Ä–∞—à—É
                if (WinixRaffles && WinixRaffles.events) {
                    WinixRaffles.events.emit('open-raffle-details', {
                        raffleId,
                        raffleType
                    });
                }
            });
        }

        return miniRaffle;
    }

    /**
     * –î–æ–¥–∞–≤–∞–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç—É –±–æ–Ω—É—Å—É –Ω–æ–≤–∞—á–∫–∞
     * @param {HTMLElement} container - –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è
     */
    addNewbieBonusElement(container) {
        if (!container) return;

        const newbieBonus = document.createElement('div');
        newbieBonus.className = 'mini-raffle';
        newbieBonus.setAttribute('data-raffle-id', 'newbie');

        newbieBonus.innerHTML = `
            <div class="mini-raffle-info">
                <div class="mini-raffle-title">–ë–æ–Ω—É—Å –Ω–æ–≤–∞—á–∫–∞</div>
                <div class="mini-raffle-cost">
                    <img class="token-icon" src="/assets/token-icon.png" alt="–ñ–µ—Ç–æ–Ω">
                    <span>0 –∂–µ—Ç–æ–Ω—ñ–≤</span>
                </div>
                <div class="mini-raffle-prize">500 WINIX + 1 –∂–µ—Ç–æ–Ω</div>
                <div class="mini-raffle-time">–î–æ—Å—Ç—É–ø–Ω–æ —Ç—ñ–ª—å–∫–∏ –Ω–æ–≤–∏–º –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞–º</div>
            </div>
            <button class="mini-raffle-button" data-raffle-id="newbie">–û—Ç—Ä–∏–º–∞—Ç–∏</button>
        `;

        const button = newbieBonus.querySelector('.mini-raffle-button');
        if (button) {
            button.addEventListener('click', async (event) => {
                if (event) {
                    event.preventDefault();
                    event.stopPropagation();
                }

                // –ì–µ–Ω–µ—Ä—É—î–º–æ –ø–æ–¥—ñ—é –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –±–æ–Ω—É—Å—É –Ω–æ–≤–∞—á–∫–∞
                if (WinixRaffles && WinixRaffles.events) {
                    WinixRaffles.events.emit('claim-newbie-bonus', {
                        element: button,
                        container: newbieBonus
                    });
                }
            });
        }

        container.appendChild(newbieBonus);

        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –≤–∂–µ –æ—Ç—Ä–∏–º–∞–Ω–æ –±–æ–Ω—É—Å
        try {
            if (window.WinixAPI && typeof window.WinixAPI.getUserData === 'function') {
                window.WinixAPI.getUserData().then(userData => {
                    if (userData && userData.data && userData.data.newbie_bonus_claimed) {
                        // –î–µ–∞–∫—Ç–∏–≤—É—î–º–æ –∫–Ω–æ–ø–∫—É
                        if (button) {
                            button.textContent = '–û—Ç—Ä–∏–º–∞–Ω–æ';
                            button.disabled = true;
                            button.style.opacity = '0.6';
                            button.style.cursor = 'default';
                        }

                        // –î–æ–¥–∞—î–º–æ –≤–æ–¥—è–Ω–∏–π –∑–Ω–∞–∫
                        if (typeof markElement === 'function') {
                            markElement(newbieBonus);
                        }
                    }
                }).catch(err => {
                    console.error("–ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å—É –±–æ–Ω—É—Å—É:", err);
                });
            }
        } catch (error) {
            console.error("–ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–≤—ñ—Ä—Ü—ñ —Å—Ç–∞—Ç—É—Å—É –±–æ–Ω—É—Å—É:", error);
        }
    }

    /**
     * –ó–Ω–∏—â–µ–Ω–Ω—è –º–æ–¥—É–ª—è
     */
    destroy() {
        // –ö–æ–¥ –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –ø–æ–¥—ñ–π —ñ –∑–≤—ñ–ª—å–Ω–µ–Ω–Ω—è —Ä–µ—Å—É—Ä—Å—ñ–≤
        console.log("üö´ RaffleCards: –ú–æ–¥—É–ª—å –∫–∞—Ä—Ç–æ–∫ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ –∑–Ω–∏—â–µ–Ω–æ");
    }
}

// –°—Ç–≤–æ—Ä—é—î–º–æ –µ–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—É
const raffleCards = new RaffleCards();

// –î–æ–¥–∞—î–º–æ –≤ –≥–ª–æ–±–∞–ª—å–Ω–∏–π –æ–±'—î–∫—Ç –¥–ª—è –∑–≤–æ—Ä–æ—Ç–Ω–æ—ó —Å—É–º—ñ—Å–Ω–æ—Å—Ç—ñ
if (WinixRaffles) {
    WinixRaffles.components = WinixRaffles.components || {};
    WinixRaffles.components.displayMainRaffle = raffleCards.displayMainRaffle.bind(raffleCards);
    WinixRaffles.components.createMiniRaffleElement = raffleCards.createMiniRaffleElement.bind(raffleCards);
    WinixRaffles.components.addNewbieBonusElement = raffleCards.addNewbieBonusElement.bind(raffleCards);

    // –î–ª—è –∑–≤–æ—Ä–æ—Ç–Ω–æ—ó —Å—É–º—ñ—Å–Ω–æ—Å—Ç—ñ –¥–æ–¥–∞—î–º–æ —Ç–∞–∫–æ–∂ –º–µ—Ç–æ–¥ –∑–Ω–∏—â–µ–Ω–Ω—è
    WinixRaffles.components.destroy = raffleCards.destroy.bind(raffleCards);
}

// –ï–∫—Å–ø–æ—Ä—Ç—É—î–º–æ –º–æ–¥—É–ª—å
export default raffleCards;