/**
 * globals.js - –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∏–π –º–æ–¥—É–ª—å –≥–ª–æ–±–∞–ª—å–Ω–∏—Ö –æ–±'—î–∫—Ç—ñ–≤ –¥–ª—è —Å–∏—Å—Ç–µ–º–∏ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
 * –†–µ–∞–ª—ñ–∑—É—î –ø–∞—Ç–µ—Ä–Ω –ú–æ–¥—É–ª—å –∑ –ø–æ–¥—ñ—î–≤–æ—é –∞—Ä—Ö—ñ—Ç–µ–∫—Ç—É—Ä–æ—é –¥–ª—è –∑–º–µ–Ω—à–µ–Ω–Ω—è –∑–≤'—è–∑–Ω–æ—Å—Ç—ñ
 */

// –Ü–∑–æ–ª—å–æ–≤–∞–Ω–∏–π –ø—Ä–æ—Å—Ç—ñ—Ä —ñ–º–µ–Ω –¥–ª—è WINIX –∑ –ø—É–±–ª—ñ—á–Ω–∏–º API
const WinixRaffles = (function() {
  // –ü—Ä–∏–≤–∞—Ç–Ω—ñ –∑–º—ñ–Ω–Ω—ñ
  const _version = '1.0.1';
  const _config = {
    apiBaseUrl: '/api',
    defaultTTL: 300000, // 5 —Ö–≤–∏–ª–∏–Ω –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
    debug: false,
    offlineMode: false
  };

  // –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–∏—Ö –º–æ–¥—É–ª—ñ–≤
  const _modules = new Map();

  // –¶–µ–Ω—Ç—Ä –ø–æ–¥—ñ–π (—à–∏–Ω–∞ –ø–æ–¥—ñ–π)
  const _eventBus = {
    listeners: {},

    // –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –æ–±—Ä–æ–±–Ω–∏–∫–∞ –ø–æ–¥—ñ—ó
    on: function(eventName, callback) {
      if (!this.listeners[eventName]) {
        this.listeners[eventName] = [];
      }

      this.listeners[eventName].push(callback);

      // –î–ª—è –∑–≤–æ—Ä–æ—Ç–Ω–æ—ó —Å—É–º—ñ—Å–Ω–æ—Å—Ç—ñ —Ç–∞–∫–æ–∂ –¥–æ–¥–∞—î–º–æ —Å–ª—É—Ö–∞—á–∞ –¥–æ DOM
      document.addEventListener(`winix:${eventName}`, function(e) {
        callback(e.detail);
      });

      return () => this.off(eventName, callback); // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é –¥–ª—è –≤—ñ–¥–ø–∏—Å–∫–∏
    },

    // –í–∏–¥–∞–ª–µ–Ω–Ω—è –æ–±—Ä–æ–±–Ω–∏–∫–∞ –ø–æ–¥—ñ—ó
    off: function(eventName, callback) {
      if (!this.listeners[eventName]) return;

      if (callback) {
        this.listeners[eventName] = this.listeners[eventName].filter(
          listener => listener !== callback
        );

        // –í–∏–¥–∞–ª—è—î–º–æ —Å–ª—É—Ö–∞—á–∞ DOM –¥–ª—è –∑–≤–æ—Ä–æ—Ç–Ω–æ—ó —Å—É–º—ñ—Å–Ω–æ—Å—Ç—ñ
        document.removeEventListener(`winix:${eventName}`, callback);
      } else {
        // –Ø–∫—â–æ callback –Ω–µ –≤–∏–∑–Ω–∞—á–µ–Ω–æ, –≤–∏–¥–∞–ª—è—î–º–æ –≤—Å—ñ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ—ó
        delete this.listeners[eventName];
      }
    },

    // –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –ø–æ–¥—ñ—ó
    emit: function(eventName, data) {
      if (this.listeners[eventName]) {
        this.listeners[eventName].forEach(callback => {
          try {
            callback(data);
          } catch (error) {
            console.error(`–ü–æ–º–∏–ª–∫–∞ –≤ –æ–±—Ä–æ–±–Ω–∏–∫—É –ø–æ–¥—ñ—ó ${eventName}:`, error);
          }
        });
      }

      // –î–ª—è –∑–≤–æ—Ä–æ—Ç–Ω–æ—ó —Å—É–º—ñ—Å–Ω–æ—Å—Ç—ñ —Ç–∞–∫–æ–∂ —Å—Ç–≤–æ—Ä—é—î–º–æ –ø–æ–¥—ñ—é DOM
      const event = new CustomEvent(`winix:${eventName}`, {
        detail: data
      });
      document.dispatchEvent(event);
    }
  };

  // –°–∏—Å—Ç–µ–º–∞ –ª–æ–≥—É–≤–∞–Ω–Ω—è –∑ —Ä—ñ–∑–Ω–∏–º–∏ —Ä—ñ–≤–Ω—è–º–∏
  const _logger = {
    _isDebugEnabled: false,

    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –ª–æ–≥–µ—Ä–∞
    init: function(config) {
      this._isDebugEnabled = config && config.debug === true;
      return this;
    },

    // –õ–æ–≥—É–≤–∞–Ω–Ω—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ–π–Ω–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
    log: function(message, ...args) {
      console.log(`üéÆ WINIX: ${message}`, ...args);
    },

    // –õ–æ–≥—É–≤–∞–Ω–Ω—è –ø–æ–ø–µ—Ä–µ–¥–∂–µ–Ω—å
    warn: function(message, ...args) {
      console.warn(`‚ö†Ô∏è WINIX: ${message}`, ...args);
    },

    // –õ–æ–≥—É–≤–∞–Ω–Ω—è –ø–æ–º–∏–ª–æ–∫
    error: function(message, ...args) {
      console.error(`‚ùå WINIX: ${message}`, ...args);
    },

    // –õ–æ–≥—É–≤–∞–Ω–Ω—è –≤—ñ–¥–ª–∞–≥–æ–¥–∂—É–≤–∞–ª—å–Ω–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó (—Ç—ñ–ª—å–∫–∏ –≤ —Ä–µ–∂–∏–º—ñ debug)
    debug: function(message, ...args) {
      if (this._isDebugEnabled) {
        console.debug(`üîç WINIX [DEBUG]: ${message}`, ...args);
      }
    }
  };

  // –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–µ —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è —Å—Ç–∞–Ω–∞–º–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
  const _loader = {
    _activeLoaders: 0,
    _pendingTimeouts: {},

    // –ü–æ–∫–∞–∑ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
    show: function(message = '–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...', id = null) {
      this._activeLoaders++;

      // –Ø–∫—â–æ —î ID, –∑–±–µ—Ä—ñ–≥–∞—î–º–æ –π–æ–≥–æ –¥–ª—è –º–æ–∂–ª–∏–≤–æ—Å—Ç—ñ –æ–∫—Ä–µ–º–æ–≥–æ –ø—Ä–∏—Ö–æ–≤—É–≤–∞–Ω–Ω—è
      if (id) {
        this._pendingTimeouts[id] = setTimeout(() => {
          _logger.warn(`Loader ${id} –Ω–µ –±—É–≤ –ø—Ä–∏—Ö–æ–≤–∞–Ω–∏–π –ø—Ä–æ—Ç—è–≥–æ–º 30 —Å–µ–∫—É–Ω–¥, –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –ø—Ä–∏—Ö–æ–≤—É–≤–∞–Ω–Ω—è`);
          this.hide(id);
        }, 30000);
      }

      if (typeof window.showLoading === 'function') {
        window.showLoading(message);
      } else {
        const spinner = document.getElementById('loading-spinner');
        if (spinner) spinner.classList.add('show');

        const spinnerText = document.getElementById('loading-spinner-text');
        if (spinnerText) spinnerText.textContent = message;
      }

      _eventBus.emit('loader-shown', { message, id });
    },

    // –ü—Ä–∏—Ö–æ–≤—É–≤–∞–Ω–Ω—è —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
    hide: function(id = null) {
      if (id && this._pendingTimeouts[id]) {
        clearTimeout(this._pendingTimeouts[id]);
        delete this._pendingTimeouts[id];
      }

      this._activeLoaders = Math.max(0, this._activeLoaders - 1);

      // –ü—Ä–∏—Ö–æ–≤—É—î–º–æ –ª–æ–∞–¥–µ—Ä —Ç—ñ–ª—å–∫–∏ —è–∫—â–æ –≤—Å—ñ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ
      if (this._activeLoaders === 0) {
        if (typeof window.hideLoading === 'function') {
          window.hideLoading();
        } else {
          const spinner = document.getElementById('loading-spinner');
          if (spinner) spinner.classList.remove('show');
        }

        _eventBus.emit('loader-hidden', { id });
      }
    },

    // –ü—Ä–∏–º—É—Å–æ–≤–µ –ø—Ä–∏—Ö–æ–≤—É–≤–∞–Ω–Ω—è –≤—Å—ñ—Ö —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä—ñ–≤
    hideAll: function() {
      // –û—á–∏—â–∞—î–º–æ –≤—Å—ñ —Ç–∞–π–º–∞—É—Ç–∏
      Object.keys(this._pendingTimeouts).forEach(id => {
        clearTimeout(this._pendingTimeouts[id]);
      });

      this._pendingTimeouts = {};
      this._activeLoaders = 0;

      if (typeof window.hideLoading === 'function') {
        window.hideLoading();
      } else {
        const spinner = document.getElementById('loading-spinner');
        if (spinner) spinner.classList.remove('show');
      }

      _eventBus.emit('all-loaders-hidden', {});
    },

    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ —î –∞–∫—Ç–∏–≤–Ω—ñ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
    isLoading: function() {
      return this._activeLoaders > 0;
    }
  };

  // –§–∞–±—Ä–∏–∫–∞ –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–∏—Ö –º–æ–¥—É–ª—ñ–≤
  const _createModule = function(name, moduleDefinition) {
    if (_modules.has(name)) {
      _logger.warn(`–ú–æ–¥—É–ª—å –∑ —ñ–º–µ–Ω–µ–º "${name}" –≤–∂–µ —ñ—Å–Ω—É—î —ñ –±—É–¥–µ –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞–Ω–æ`);
    }

    // –ë–∞–∑–æ–≤–∏–π —à–∞–±–ª–æ–Ω –º–æ–¥—É–ª—è –∑ —Ñ—É–Ω–∫—Ü—ñ—è–º–∏ –∂–∏—Ç—Ç—î–≤–æ–≥–æ —Ü–∏–∫–ª—É
    const baseModule = {
      name,
      initialized: false,

      // –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
      init: async function() {
        if (this.initialized) {
          _logger.warn(`–ú–æ–¥—É–ª—å "${name}" –≤–∂–µ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ`);
          return this;
        }

        try {
          _logger.debug(`–Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –º–æ–¥—É–ª—è "${name}" —Ä–æ–∑–ø–æ—á–∞—Ç–∞`);
          await Promise.resolve(moduleDefinition.init?.call(this));
          this.initialized = true;
          _logger.debug(`–Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –º–æ–¥—É–ª—è "${name}" —É—Å–ø—ñ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞`);
          _eventBus.emit(`module-initialized`, { name });
        } catch (error) {
          _logger.error(`–ü–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó –º–æ–¥—É–ª—è "${name}":`, error);
          throw error;
        }

        return this;
      },

      // –§—É–Ω–∫—Ü—ñ—è –æ—á–∏—â–µ–Ω–Ω—è/–∑–Ω–∏—â–µ–Ω–Ω—è
      destroy: function() {
        if (!this.initialized) {
          return this;
        }

        try {
          _logger.debug(`–ó–Ω–∏—â–µ–Ω–Ω—è –º–æ–¥—É–ª—è "${name}" —Ä–æ–∑–ø–æ—á–∞—Ç–æ`);
          moduleDefinition.destroy?.call(this);
          this.initialized = false;
          _logger.debug(`–ó–Ω–∏—â–µ–Ω–Ω—è –º–æ–¥—É–ª—è "${name}" —É—Å–ø—ñ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–æ`);
          _eventBus.emit(`module-destroyed`, { name });
        } catch (error) {
          _logger.error(`–ü–æ–º–∏–ª–∫–∞ –∑–Ω–∏—â–µ–Ω–Ω—è –º–æ–¥—É–ª—è "${name}":`, error);
        }

        return this;
      },

      // –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Å–µ—Ä–≤—ñ—Å—É –∑–∞ —ñ–º'—è–º
      getService: function(serviceName) {
        if (!_modules.has(serviceName)) {
          _logger.error(`–°–µ—Ä–≤—ñ—Å "${serviceName}" –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ`);
          return null;
        }

        return _modules.get(serviceName);
      }
    };

    // –û–±'—î–¥–Ω—É—î–º–æ –±–∞–∑–æ–≤–∏–π –º–æ–¥—É–ª—å –∑ –≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è–º –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    const module = {
      ...baseModule,
      ...moduleDefinition
    };

    _modules.set(name, module);
    _logger.debug(`–ú–æ–¥—É–ª—å "${name}" –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–æ`);

    return module;
  };

  // –°–µ—Ä–≤—ñ—Å –¥–ª—è —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –∫–µ—à–µ–º
  const _cacheService = {
    _cache: new Map(),

    // –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç–∞ –≤ –∫–µ—à
    set: function(key, value, ttl = _config.defaultTTL) {
      const expiresAt = ttl ? Date.now() + ttl : null;

      this._cache.set(key, {
        value,
        expiresAt
      });

      // –Ø–∫—â–æ —î TTL, –≤—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Ç–∞–π–º–µ—Ä –¥–ª—è –æ—á–∏—â–µ–Ω–Ω—è
      if (expiresAt) {
        setTimeout(() => {
          this.remove(key);
        }, ttl);
      }

      return value;
    },

    // –û—Ç—Ä–∏–º–∞–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç–∞ –∑ –∫–µ—à—É
    get: function(key) {
      const entry = this._cache.get(key);

      if (!entry) {
        return null;
      }

      // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –Ω–µ –∑–∞—Å—Ç–∞—Ä—ñ–≤ –∫–µ—à
      if (entry.expiresAt && entry.expiresAt < Date.now()) {
        this.remove(key);
        return null;
      }

      return entry.value;
    },

    // –í–∏–¥–∞–ª–µ–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç–∞ –∑ –∫–µ—à—É
    remove: function(key) {
      return this._cache.delete(key);
    },

    // –û—á–∏—â–µ–Ω–Ω—è –≤—Å—å–æ–≥–æ –∫–µ—à—É
    clear: function() {
      this._cache.clear();
    },

    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ –µ–ª–µ–º–µ–Ω—Ç–∞ –≤ –∫–µ—à—ñ
    has: function(key) {
      const entry = this._cache.get(key);

      if (!entry) {
        return false;
      }

      // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –Ω–µ –∑–∞—Å—Ç–∞—Ä—ñ–≤ –∫–µ—à
      if (entry.expiresAt && entry.expiresAt < Date.now()) {
        this.remove(key);
        return false;
      }

      return true;
    }
  };

  // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –º–µ—Ä–µ–∂–µ–≤–æ–≥–æ –∑'—î–¥–Ω–∞–Ω–Ω—è
  const _networkService = {
    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ –ø—Ä–∏—Å—Ç—Ä—ñ–π –æ–Ω–ª–∞–π–Ω
    isOnline: function() {
      if (_config.offlineMode) return false;
      return typeof navigator.onLine === 'undefined' || navigator.onLine;
    },

    // –ü—Ä–∏–º—É—Å–æ–≤–∏–π —Ä–µ–∂–∏–º –æ—Ñ–ª–∞–π–Ω
    setOfflineMode: function(offline) {
      const prevState = _config.offlineMode;
      _config.offlineMode = !!offline;

      if (prevState !== _config.offlineMode) {
        _eventBus.emit('network-status-changed', {
          online: !_config.offlineMode,
          forced: true
        });
      }
    }
  };

  // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –æ—Å–Ω–æ–≤–Ω–∏—Ö —Ñ—É–Ω–∫—Ü—ñ–π —Å–∏—Å—Ç–µ–º–∏
  const init = function(userConfig = {}) {
    // –û–Ω–æ–≤–ª—é—î–º–æ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—é
    Object.assign(_config, userConfig);

    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ –ª–æ–≥–µ—Ä
    _logger.init(_config);

    // –†–µ—î—Å—Ç—Ä—É—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π –æ–Ω–ª–∞–π–Ω/–æ—Ñ–ª–∞–π–Ω
    window.addEventListener('online', () => {
      _logger.log("–ó'—î–¥–Ω–∞–Ω–Ω—è –∑ –º–µ—Ä–µ–∂–µ—é –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–æ");
      _eventBus.emit('network-status-changed', { online: true, forced: false });
    });

    window.addEventListener('offline', () => {
      _logger.warn("–ó'—î–¥–Ω–∞–Ω–Ω—è –∑ –º–µ—Ä–µ–∂–µ—é –≤—Ç—Ä–∞—á–µ–Ω–æ");
      _eventBus.emit('network-status-changed', { online: false, forced: false });
    });

    _logger.log(`–Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Å–∏—Å—Ç–µ–º–∏ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ (v${_version})`);

    // –°—Ç–≤–æ—Ä—é—î–º–æ –ø–æ–¥—ñ—é –¥–ª—è –æ–ø–æ–≤—ñ—â–µ–Ω–Ω—è –ø—Ä–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—é
    _eventBus.emit('raffles-initialized', { version: _version });

    return publicAPI;
  };

  // –ó–Ω–∏—â–µ–Ω–Ω—è –≤—Å—ñ—Ö –º–æ–¥—É–ª—ñ–≤ —Ç–∞ –æ—á–∏—â–µ–Ω–Ω—è —Ä–µ—Å—É—Ä—Å—ñ–≤
  const destroy = function() {
    // –û—á–∏—â—É—î–º–æ –≤—Å—ñ –ª–æ–∞–¥–µ—Ä–∏
    _loader.hideAll();

    // –ó–Ω–∏—â—É—î–º–æ –≤—Å—ñ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω—ñ –º–æ–¥—É–ª—ñ
    for (const [name, module] of _modules.entries()) {
      if (module.initialized && typeof module.destroy === 'function') {
        try {
          module.destroy();
        } catch (error) {
          _logger.error(`–ü–æ–º–∏–ª–∫–∞ –∑–Ω–∏—â–µ–Ω–Ω—è –º–æ–¥—É–ª—è "${name}":`, error);
        }
      }
    }

    // –û–ø–æ–≤—ñ—â–∞—î–º–æ –ø—Ä–æ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è —Ä–æ–±–æ—Ç–∏
    _eventBus.emit('raffles-destroyed', {});

    _logger.log(`–°–∏—Å—Ç–µ–º—É —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ –∑–∞–∫—Ä–∏—Ç–æ`);

    return publicAPI;
  };

  // –ü—É–±–ª—ñ—á–Ω–∏–π API —Å–∏—Å—Ç–µ–º–∏
  const publicAPI = {
    // –í–µ—Ä—Å—ñ—è —Å–∏—Å—Ç–µ–º–∏
    get version() {
      return _version;
    },

    // –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è (—Ç—ñ–ª—å–∫–∏ –¥–ª—è —á–∏—Ç–∞–Ω–Ω—è)
    get config() {
      return { ..._config };
    },

    // –§—É–Ω–∫—Ü—ñ—ó —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó —Ç–∞ –∑–Ω–∏—â–µ–Ω–Ω—è
    init,
    destroy,

    // –ú–µ–Ω–µ–¥–∂–µ—Ä –ø–æ–¥—ñ–π
    events: {
      on: _eventBus.on.bind(_eventBus),
      off: _eventBus.off.bind(_eventBus),
      emit: _eventBus.emit.bind(_eventBus)
    },

    // –°–∏—Å—Ç–µ–º–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
    loader: {
      show: _loader.show.bind(_loader),
      hide: _loader.hide.bind(_loader),
      hideAll: _loader.hideAll.bind(_loader),
      isLoading: _loader.isLoading.bind(_loader)
    },

    // –õ–æ–≥–µ—Ä
    logger: {
      log: _logger.log.bind(_logger),
      warn: _logger.warn.bind(_logger),
      error: _logger.error.bind(_logger),
      debug: _logger.debug.bind(_logger)
    },

    // –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –Ω–æ–≤–∏—Ö –º–æ–¥—É–ª—ñ–≤
    registerModule: function(name, moduleDefinition) {
      return _createModule(name, moduleDefinition);
    },

    // –û—Ç—Ä–∏–º–∞–Ω–Ω—è –º–æ–¥—É–ª—è –∑–∞ —ñ–º'—è–º
    getModule: function(name) {
      return _modules.get(name) || null;
    },

    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –º–æ–¥—É–ª—è –∑–∞ —ñ–º'—è–º
    initModule: async function(name) {
      const module = _modules.get(name);

      if (!module) {
        _logger.error(`–ú–æ–¥—É–ª—å "${name}" –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ`);
        return null;
      }

      return module.init();
    },

    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –≤—Å—ñ—Ö –º–æ–¥—É–ª—ñ–≤
    initAllModules: async function() {
      const results = [];

      for (const [name, module] of _modules.entries()) {
        try {
          await module.init();
          results.push({ name, success: true });
        } catch (error) {
          results.push({ name, success: false, error });
        }
      }

      return results;
    },

    // –°–µ—Ä–≤—ñ—Å –∫–µ—à—É–≤–∞–Ω–Ω—è
    cache: _cacheService,

    // –ú–µ—Ä–µ–∂–µ–≤–∏–π —Å–µ—Ä–≤—ñ—Å
    network: _networkService,

    // –ê–∫—Ç–∏–≤–Ω—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ
    active: {},

    // –Ü—Å—Ç–æ—Ä—ñ—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
    history: {},

    // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    stats: {},

    // –ú–æ–¥—É–ª—å —É—á–∞—Å—Ç—ñ
    participation: {},

    // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç–∏ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É
    components: {},

    // –ê–¥–º—ñ–Ω –º–æ–¥—É–ª—å
    admin: {
      management: {}
    },

    // API —Å–µ—Ä–≤—ñ—Å, –±—É–¥–µ –∑–∞–º—ñ–Ω–µ–Ω–æ –Ω–∞ —Å–ø—Ä–∞–≤–∂–Ω—é —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—é
    api: {}
  };

  // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –ø—É–±–ª—ñ—á–Ω–∏–π API
  return publicAPI;
})();

// –ï–∫—Å–ø–æ—Ä—Ç—É—î–º–æ –æ–±'—î–∫—Ç —è–∫ –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
export default WinixRaffles;

// –î–ª—è –∑–≤–æ—Ä–æ—Ç–Ω–æ—ó —Å—É–º—ñ—Å–Ω–æ—Å—Ç—ñ —Ä–æ–±–∏–º–æ –æ–±'—î–∫—Ç –¥–æ—Å—Ç—É–ø–Ω–∏–º –≥–ª–æ–±–∞–ª—å–Ω–æ
// –¶–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ –Ω–∞ —á–∞—Å –º—ñ–≥—Ä–∞—Ü—ñ—ó, –ø—ñ–∑–Ω—ñ—à–µ –º–æ–∂–Ω–∞ –≤–∏–¥–∞–ª–∏—Ç–∏
window.WinixRaffles = WinixRaffles;

console.log("üéÆ WINIX Raffles: –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –≥–ª–æ–±–∞–ª—å–Ω–æ—ó —Å—Ç—Ä—É–∫—Ç—É—Ä–∏ –æ–±'—î–∫—Ç—ñ–≤");