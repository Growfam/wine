/**
 * winixapi-updates.js
 *
 * –¶–µ–π —Ñ–∞–π–ª –º—ñ—Å—Ç–∏—Ç—å –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–∞ —Ä–æ–∑—à–∏—Ä–µ–Ω–Ω—è –¥–ª—è –º–æ–¥—É–ª—è WinixAPI.
 * –ü–æ–≤–∏–Ω–µ–Ω –ø—ñ–¥–∫–ª—é—á–∞—Ç–∏—Å—å –ü–Ü–°–õ–Ø api.js, –∞–ª–µ –ü–ï–†–ï–î —ñ–Ω—à–∏–º–∏ —Å–∫—Ä–∏–ø—Ç–∞–º–∏ –ø—Ä–æ–µ–∫—Ç—É.
 */

(function() {
    'use strict';

    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –º–æ–¥—É–ª—è WinixAPI
    if (!window.WinixAPI) {
        console.error("‚ùå –ú–æ–¥—É–ª—å WinixAPI –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ! –ü—ñ–¥–∫–ª—é—á—ñ—Ç—å —Å–ø–æ—á–∞—Ç–∫—É api.js");
        return;
    }

    console.log("üîÑ –û–Ω–æ–≤–ª–µ–Ω–Ω—è –º–æ–¥—É–ª—è WinixAPI...");

    // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –¥–ª—è —Å—É–º—ñ—Å–Ω–æ—Å—Ç—ñ
    const originalHandleApiError = window.WinixAPI.handleApiError;

    // –û–Ω–æ–≤–ª—é—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é handleApiError
    window.WinixAPI.handleApiError = function(error, operation = 'API –æ–ø–µ—Ä–∞—Ü—ñ—ó', showToast = true) {
        // –ó–∞–ø–æ–±—ñ–≥–∞—î–º–æ –¥—É–±–ª—é–≤–∞–Ω–Ω—é –ø–æ–º–∏–ª–æ–∫ - –ª–æ–≥—É—î–º–æ —Ç—ñ–ª—å–∫–∏ –æ–¥–∏–Ω —Ä–∞–∑
        if (!error._logged) {
            console.error(`‚ùå –ü–æ–º–∏–ª–∫–∞ ${operation}:`, error);
            error._logged = true;
        }

        // –©–æ–± —É–Ω–∏–∫–Ω—É—Ç–∏ –ø–æ–≤—Ç–æ—Ä–Ω–∏—Ö —Å–ø–æ–≤—ñ—â–µ–Ω—å –ø—Ä–æ —Ç—É —Å–∞–º—É –ø–æ–º–∏–ª–∫—É
        const now = Date.now();
        const lastErrorTime = window._lastErrorNotificationTime || 0;
        const lastErrorMessage = window._lastErrorMessage || '';
        const errorMessage = error.message || '–ù–µ–≤—ñ–¥–æ–º–∞ –ø–æ–º–∏–ª–∫–∞';

        // –ù–µ –ø–æ–∫–∞–∑—É—î–º–æ —Ç–µ —Å–∞–º–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —á–∞—Å—Ç—ñ—à–µ, –Ω—ñ–∂ —Ä–∞–∑ –Ω–∞ 3 —Å–µ–∫—É–Ω–¥–∏
        const shouldShowToast = showToast &&
                               (now - lastErrorTime > 3000 || lastErrorMessage !== errorMessage);

        // –§–æ—Ä–º—É—î–º–æ –∑—Ä–æ–∑—É–º—ñ–ª–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ —Ç–∏–ø—É –ø–æ–º–∏–ª–∫–∏
        let userFriendlyMessage = '';

        if (error.name === 'TypeError' && errorMessage.includes('fetch')) {
            userFriendlyMessage = `–ù–µ –≤–¥–∞–ª–æ—Å—è –∑'—î–¥–Ω–∞—Ç–∏—Å—è –∑ —Å–µ—Ä–≤–µ—Ä–æ–º. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ —ñ–Ω—Ç–µ—Ä–Ω–µ—Ç-–∑'—î–¥–Ω–∞–Ω–Ω—è —Ç–∞ —Å–ø—Ä–æ–±—É–π—Ç–µ –∑–Ω–æ–≤—É.`;
        } else if (errorMessage.includes('timeout') || errorMessage.includes('timed out')) {
            userFriendlyMessage = `–ß–∞—Å –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –≤—ñ–¥ —Å–µ—Ä–≤–µ—Ä–∞ –≤–∏—á–µ—Ä–ø–∞–Ω–æ. –°–ø—Ä–æ–±—É–π—Ç–µ –∑–Ω–æ–≤—É –ø—ñ–∑–Ω—ñ—à–µ.`;
        } else if (errorMessage.includes('404')) {
            userFriendlyMessage = `–°–µ—Ä–≤–µ—Ä –Ω–µ –º–æ–∂–µ –∑–Ω–∞–π—Ç–∏ –ø–æ—Ç—Ä—ñ–±–Ω–∏–π —Ä–µ—Å—É—Ä—Å. –°–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Å—Ç–æ—Ä—ñ–Ω–∫—É.`;
        } else if (errorMessage.includes('405')) {
            userFriendlyMessage = `–ü–æ–º–∏–ª–∫–∞ API: –º–µ—Ç–æ–¥ –Ω–µ –¥–æ–∑–≤–æ–ª–µ–Ω–∏–π. –ü–æ–≤—ñ–¥–æ–º—Ç–µ –ø—Ä–æ –ø–æ–º–∏–ª–∫—É —Ä–æ–∑—Ä–æ–±–Ω–∏–∫–∞–º.`;
        } else if (errorMessage.includes('500')) {
            userFriendlyMessage = `–í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ. –ë—É–¥—å –ª–∞—Å–∫–∞, —Å–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.`;
        } else if (errorMessage.includes('undefined') || errorMessage.includes('null')) {
            userFriendlyMessage = `–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–∞–Ω—ñ. –°–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Å—Ç–æ—Ä—ñ–Ω–∫—É.`;
        } else if (errorMessage.includes('ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ')) {
            userFriendlyMessage = `–ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–∑–Ω–∞—á–∏—Ç–∏ –≤–∞—à —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä. –°–ø—Ä–æ–±—É–π—Ç–µ –≤–∏–π—Ç–∏ —Ç–∞ —É–≤—ñ–π—Ç–∏ –∑–Ω–æ–≤—É.`;
        } else {
            // –Ø–∫—â–æ –Ω–µ–º–∞—î —Å–ø–µ—Ü—ñ–∞–ª—å–Ω–æ–≥–æ –æ–±—Ä–æ–±–Ω–∏–∫–∞, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
            userFriendlyMessage = errorMessage;
        }

        // –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É —É –≤–∏–ø–∞–¥–∫—É –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ—Å—Ç—ñ
        if (shouldShowToast) {
            // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —á–∞—Å —ñ —Ç–µ–∫—Å—Ç –æ—Å—Ç–∞–Ω–Ω—å–æ—ó –ø–æ–º–∏–ª–∫–∏
            window._lastErrorNotificationTime = now;
            window._lastErrorMessage = errorMessage;

            // –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è–º –¥–æ—Å—Ç—É–ø–Ω–∏—Ö —Ñ—É–Ω–∫—Ü—ñ–π
            if (typeof window.showModernNotification === 'function') {
                window.showModernNotification(userFriendlyMessage, true);
            } else if (typeof window.showToast === 'function') {
                window.showToast(userFriendlyMessage, 'error');
            } else if (typeof window.simpleAlert === 'function') {
                window.simpleAlert(userFriendlyMessage, true);
            } else if (typeof window.showMessage === 'function') {
                window.showMessage(userFriendlyMessage, true);
            } else {
                // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω—É —Ñ—É–Ω–∫—Ü—ñ—é —è–∫ —Ä–µ–∑–µ—Ä–≤–Ω–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç
                if (originalHandleApiError) {
                    return originalHandleApiError(error, operation);
                } else {
                    // –£–Ω–∏–∫–∞—î–º–æ –Ω–∞–¥–º—ñ—Ä–Ω–∏—Ö —Å–ø–ª–∏–≤–∞—é—á–∏—Ö –≤—ñ–∫–æ–Ω - –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ alert —Ç—ñ–ª—å–∫–∏ –¥–ª—è –∫—Ä–∏—Ç–∏—á–Ω–∏—Ö –ø–æ–º–∏–ª–æ–∫
                    if (operation.includes('critical') || error.critical) {
                        alert(userFriendlyMessage);
                    }
                }
            }
        }

        // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–¥—ñ—é –¥–ª—è –º–æ–∂–ª–∏–≤–æ–≥–æ –ª–æ–≥—É–≤–∞–Ω–Ω—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ –∞–±–æ —ñ–Ω—à–∏—Ö –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤
        document.dispatchEvent(new CustomEvent('api-error', {
            detail: {
                errorType: error.name,
                message: errorMessage,
                operation: operation,
                timestamp: now
            }
        }));

        return userFriendlyMessage;
    };

    // –î–æ–¥–∞—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é –¥–ª—è —É–Ω—ñ—Ñ—ñ–∫–æ–≤–∞–Ω–æ–≥–æ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    window.WinixAPI.saveUserDataLocally = function(userData, options = {}) {
        try {
            if (!userData) {
                console.warn("‚ùå saveUserDataLocally: –û—Ç—Ä–∏–º–∞–Ω–æ –ø–æ—Ä–æ–∂–Ω—ñ –¥–∞–Ω—ñ");
                return false;
            }

            const storedData = {};
            const timestamp = Date.now();
            const debugMode = window.WinixAPI._debugMode || false;

            // –ñ—É—Ä–Ω–∞–ª—é–≤–∞–Ω–Ω—è, —è–∫—â–æ —É–≤—ñ–º–∫–Ω–µ–Ω–æ —Ä–µ–∂–∏–º –≤—ñ–¥–ª–∞–≥–æ–¥–∂–µ–Ω–Ω—è
            if (debugMode) {
                console.log("üíæ –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤ localStorage:", userData);
            }

            // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –±–µ–∑–ø–µ—á–Ω–æ–≥–æ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –≤ localStorage
            const safeSetItem = (key, value) => {
                try {
                    if (value !== undefined && value !== null) {
                        // –ü–µ—Ä–µ—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–µ—á–∏—Å–ª–æ–≤–∏—Ö –∑–Ω–∞—á–µ–Ω—å —É —Ä—è–¥–∫–∏
                        const stringValue = typeof value === 'object'
                                          ? JSON.stringify(value)
                                          : String(value);

                        localStorage.setItem(key, stringValue);
                        storedData[key] = value;
                        return true;
                    }
                    return false;
                } catch (e) {
                    console.warn(`‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è "${key}" –≤ localStorage:`, e);
                    return false;
                }
            };

            // –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –∑–∞–≥–∞–ª—å–Ω–∏—Ö –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            if (userData.telegram_id) {
                safeSetItem('telegram_user_id', userData.telegram_id);
                safeSetItem('userId', userData.telegram_id);
            }

            if (userData.username) {
                safeSetItem('username', userData.username);
            }

            // –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—ñ–≤
            if (userData.balance !== undefined) {
                safeSetItem('userTokens', userData.balance);
                safeSetItem('winix_balance', userData.balance);
            }

            if (userData.coins !== undefined) {
                safeSetItem('userCoins', userData.coins);
                safeSetItem('winix_coins', userData.coins);
            }

            // –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö —Å—Ç–µ–π–∫—ñ–Ω–≥—É
            if (userData.staking) {
                safeSetItem('stakingData', userData.staking);
                safeSetItem('winix_staking', userData.staking);
                safeSetItem('stakingDataCacheTime', timestamp);
            }

            // –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è —ñ—Å—Ç–æ—Ä—ñ—ó —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π
            if (userData.transactions) {
                safeSetItem('transactionsData', userData.transactions);
                safeSetItem('transactionsDataCacheTime', timestamp);
            }

            // –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å
            if (userData.settings) {
                safeSetItem('userSettings', userData.settings);
            }

            // –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –¥–æ–¥–∞—Ç–∫–æ–≤–∏—Ö –¥–∞–Ω–∏—Ö, —è–∫—â–æ –≤–æ–Ω–∏ —î
            if (userData.additionalData) {
                Object.keys(userData.additionalData).forEach(key => {
                    safeSetItem(key, userData.additionalData[key]);
                });
            }

            // –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è —á–∞—Å–æ–≤–æ—ó –º—ñ—Ç–∫–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
            safeSetItem('userDataTimestamp', timestamp);

            // –ì–µ–Ω–µ—Ä—É—î–º–æ –ø–æ–¥—ñ—é –ø—Ä–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö
            document.dispatchEvent(new CustomEvent('user-data-updated', {
                detail: {
                    updatedFields: Object.keys(storedData),
                    timestamp: timestamp
                }
            }));

            return true;
        } catch (error) {
            console.error("‚ùå –ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:", error);
            return false;
        }
    };

    // –î–æ–¥–∞—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∑–±–µ—Ä–µ–∂–µ–Ω–∏—Ö –¥–∞–Ω–∏—Ö
    window.WinixAPI.getUserDataFromStorage = function() {
        try {
            const userData = {
                telegram_id: localStorage.getItem('telegram_user_id') || localStorage.getItem('userId'),
                username: localStorage.getItem('username'),
                balance: parseFloat(localStorage.getItem('userTokens') || localStorage.getItem('winix_balance') || '0'),
                coins: parseInt(localStorage.getItem('userCoins') || localStorage.getItem('winix_coins') || '0'),
                timestamp: parseInt(localStorage.getItem('userDataTimestamp') || '0')
            };

            // –°–ø—Ä–æ–±–∞ –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–∞–Ω—ñ —Å—Ç–µ–π–∫—ñ–Ω–≥—É
            try {
                const stakingData = localStorage.getItem('stakingData') || localStorage.getItem('winix_staking');
                if (stakingData) {
                    userData.staking = JSON.parse(stakingData);
                }
            } catch (e) {
                console.warn("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –¥–∞–Ω–∏—Ö —Å—Ç–µ–π–∫—ñ–Ω–≥—É –∑ localStorage:", e);
            }

            // –°–ø—Ä–æ–±–∞ –æ—Ç—Ä–∏–º–∞—Ç–∏ —ñ—Å—Ç–æ—Ä—ñ—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π
            try {
                const transactionsData = localStorage.getItem('transactionsData');
                if (transactionsData) {
                    userData.transactions = JSON.parse(transactionsData);
                }
            } catch (e) {
                console.warn("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ —ñ—Å—Ç–æ—Ä—ñ—ó —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π –∑ localStorage:", e);
            }

            return userData;
        } catch (error) {
            console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ localStorage:", error);
            return {
                telegram_id: null,
                balance: 0,
                coins: 0,
                error: error.message
            };
        }
    };

    // –û–Ω–æ–≤–ª—é—î–º–æ —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—é cancelStaking
    window.WinixAPI.cancelStaking = async function(stakingId = null) {
        try {
            // –ü–æ–∫–∞–∑—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
            if (typeof showLoading === 'function') {
                showLoading();
            }

            // –û—Ç—Ä–∏–º—É—î–º–æ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            const userId = window.WinixAPI.getUserId();
            if (!userId) {
                throw new Error("–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞");
            }

            // –Ø–∫—â–æ ID —Å—Ç–µ–π–∫—ñ–Ω–≥—É –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω–æ, –æ—Ç—Ä–∏–º—É—î–º–æ –π–æ–≥–æ –∑ –¥–∞–Ω–∏—Ö —Å—Ç–µ–π–∫—ñ–Ω–≥—É
            let targetStakingId = stakingId;
            if (!targetStakingId) {
                try {
                    const stakingData = await window.WinixAPI.getStakingData();
                    if (stakingData.status !== 'success' || !stakingData.data || !stakingData.data.hasActiveStaking) {
                        throw new Error("–£ –≤–∞—Å –Ω–µ–º–∞—î –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å—Ç–µ–π–∫—ñ–Ω–≥—É");
                    }
                    targetStakingId = stakingData.data.stakingId;
                } catch (error) {
                    throw new Error("–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ ID —Å—Ç–µ–π–∫—ñ–Ω–≥—É: " + error.message);
                }
            }

            // –í–∏–∫–æ–Ω—É—î–º–æ –∑–∞–ø–∏—Ç –¥–ª—è —Å–∫–∞—Å—É–≤–∞–Ω–Ω—è —Å—Ç–µ–π–∫—ñ–Ω–≥—É
            const response = await window.WinixAPI.apiRequest(
                `/api/user/${userId}/staking/${targetStakingId}/cancel`,
                'POST',
                {
                    confirm: true,
                    timestamp: Date.now()
                },
                {
                    operationName: '—Å–∫–∞—Å—É–≤–∞–Ω–Ω—è —Å—Ç–µ–π–∫—ñ–Ω–≥—É',
                    showToast: false // –û–±—Ä–æ–±–∏–º–æ –ø–æ–º–∏–ª–∫—É –≤—Ä—É—á–Ω—É
                }
            );

            // –ü—Ä–∏—Ö–æ–≤—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
            if (typeof hideLoading === 'function') {
                hideLoading();
            }

            // –û–±—Ä–æ–±–ª—è—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            if (response.status === 'success') {
                // –û–Ω–æ–≤–ª—é—î–º–æ –¥–∞–Ω—ñ
                if (response.data) {
                    // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω—ñ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
                    window.WinixAPI.saveUserDataLocally({
                        balance: response.data.newBalance,
                        staking: {
                            hasActiveStaking: false,
                            stakingAmount: 0,
                            period: 0,
                            rewardPercent: 0,
                            expectedReward: 0,
                            remainingDays: 0
                        }
                    });

                    // –û–Ω–æ–≤–ª—é—î–º–æ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å, —è–∫—â–æ —î —Ç–∞–∫–∞ —Ñ—É–Ω–∫—Ü—ñ—è
                    if (window.WinixStakingSystem && typeof window.WinixStakingSystem.updateUI === 'function') {
                        window.WinixStakingSystem.updateUI(true);
                    }
                }

                // –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ —É—Å–ø—ñ—Ö
                let message = "–°—Ç–µ–π–∫—ñ–Ω–≥ —É—Å–ø—ñ—à–Ω–æ —Å–∫–∞—Å–æ–≤–∞–Ω–æ";
                if (response.data && response.data.returnedAmount !== undefined &&
                    response.data.feeAmount !== undefined) {
                    message = `–°—Ç–µ–π–∫—ñ–Ω–≥ —Å–∫–∞—Å–æ–≤–∞–Ω–æ. –ü–æ–≤–µ—Ä–Ω–µ–Ω–æ: ${response.data.returnedAmount} WINIX. –ö–æ–º—ñ—Å—ñ—è: ${response.data.feeAmount} WINIX.`;
                }

                if (typeof window.showModernNotification === 'function') {
                    window.showModernNotification(message, false, () => {
                        // –ü–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —Å—Ç–æ—Ä—ñ–Ω–∫—É, —è–∫—â–æ —î —Ñ—É–Ω–∫—Ü—ñ—è –ø–ª–∞–≤–Ω–æ–≥–æ –ø–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
                        if (window.WinixStakingSystem && typeof window.WinixStakingSystem.smoothReload === 'function') {
                            window.WinixStakingSystem.smoothReload();
                        } else {
                            window.location.reload();
                        }
                    });
                } else if (typeof window.showMessage === 'function') {
                    window.showMessage(message, false, () => {
                        if (window.WinixStakingSystem && typeof window.WinixStakingSystem.smoothReload === 'function') {
                            window.WinixStakingSystem.smoothReload();
                        } else {
                            window.location.reload();
                        }
                    });
                } else {
                    alert(message);
                    window.location.reload();
                }

                return {
                    success: true,
                    data: response.data,
                    message: message
                };
            } else {
                throw new Error(response.message || "–ü–æ–º–∏–ª–∫–∞ —Å–∫–∞—Å—É–≤–∞–Ω–Ω—è —Å—Ç–µ–π–∫—ñ–Ω–≥—É");
            }
        } catch (error) {
            // –ü—Ä–∏—Ö–æ–≤—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
            if (typeof hideLoading === 'function') {
                hideLoading();
            }

            // –û–±—Ä–æ–±–ª—è—î–º–æ –ø–æ–º–∏–ª–∫—É
            window.WinixAPI.handleApiError(error, '—Å–∫–∞—Å—É–≤–∞–Ω–Ω—è —Å—Ç–µ–π–∫—ñ–Ω–≥—É', true);

            return {
                success: false,
                message: error.message || "–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å —Å–∫–∞—Å—É–≤–∞–Ω–Ω—è —Å—Ç–µ–π–∫—ñ–Ω–≥—É"
            };
        }
    };

    // –ü–∞—Ç—á –¥–ª—è –º–µ—Ç–æ–¥—É apiRequest, —â–æ–± –∑—Ä–æ–±–∏—Ç–∏ –π–æ–≥–æ –±—ñ–ª—å—à —Å—Ç—ñ–π–∫–∏–º
    if (window.WinixAPI.apiRequest) {
        const originalApiRequest = window.WinixAPI.apiRequest;
        window.WinixAPI.apiRequest = async function(endpoint, method = 'GET', data = null, options = {}, retries = 3) {
            try {
                // –ü–∞—Ç—á –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –≤–∏–ø–∞–¥–∫—É, –∫–æ–ª–∏ data === undefined
                if (data === undefined) {
                    data = null;
                }

                // –î–æ–¥–∞—Ç–∏ –æ–±—Ä–æ–±–∫—É options, —è–∫—â–æ –≤–æ–Ω–∏ –Ω–µ–≤–∞–ª—ñ–¥–Ω—ñ
                if (options === null || typeof options !== 'object') {
                    options = {};
                }

                // –î–æ–¥–∞—î–º–æ timestamp –¥–æ GET-–∑–∞–ø–∏—Ç—ñ–≤ —â–æ–± —É–Ω–∏–∫–Ω—É—Ç–∏ –∫–µ—à—É–≤–∞–Ω–Ω—è
                if (method.toUpperCase() === 'GET' && endpoint.indexOf('?') === -1) {
                    endpoint += `?_t=${Date.now()}`;
                } else if (method.toUpperCase() === 'GET') {
                    endpoint += `&_t=${Date.now()}`;
                }

                return await originalApiRequest(endpoint, method, data, options, retries);
            } catch (e) {
                // –¶–µ–Ω—Ç—Ä–∞–ª—ñ–∑–æ–≤–∞–Ω–∞ –æ–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–æ–∫
                const operationName = options.operationName || `API –∑–∞–ø–∏—Ç ${method} ${endpoint}`;
                const showToast = options.showToast !== false; // –ó–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º –ø–æ–∫–∞–∑—É—î–º–æ toast

                window.WinixAPI.handleApiError(e, operationName, showToast);

                // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —Ç—Ä–µ–±–∞ –ø—Ä–æ–¥–æ–≤–∂—É–≤–∞—Ç–∏ –ø–æ–º–∏–ª–∫—É –¥–∞–ª—ñ
                if (options.throwError !== false) {
                    throw e; // –ü–µ—Ä–µ–¥–∞—î–º–æ –ø–æ–º–∏–ª–∫—É –¥–∞–ª—ñ –¥–ª—è –æ–±—Ä–æ–±–∫–∏ —É –≤–∏–∫–ª–∏–∫–∞—é—á–æ–º—É –∫–æ–¥—ñ
                }

                // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏–π –æ–±'—î–∫—Ç –ø–æ–º–∏–ª–∫–∏
                return {
                    status: 'error',
                    message: e.message || '–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏–∫–æ–Ω–∞–Ω–Ω—ñ –∑–∞–ø–∏—Ç—É',
                    error: e
                };
            }
        };
    }

    // –ì–µ–Ω–µ—Ä—É—î–º–æ –ø–æ–¥—ñ—é –ø—Ä–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è WinixAPI
    document.dispatchEvent(new CustomEvent('winixapi-updated', {
        detail: {
            timestamp: Date.now(),
            version: '1.1.0'
        }
    }));

    console.log("‚úÖ –ú–æ–¥—É–ª—å WinixAPI —É—Å–ø—ñ—à–Ω–æ –æ–Ω–æ–≤–ª–µ–Ω–æ!");
})();