/**
 * winix-diagnostics.js - –î—ñ–∞–≥–Ω–æ—Å—Ç–∏—á–Ω–∏–π –º–æ–¥—É–ª—å –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –ø—Ä–æ–±–ª–µ–º ID
 */

(function() {
    // –°—Ç–≤–æ—Ä—é—î–º–æ –≥–ª–æ–±–∞–ª—å–Ω–∏–π –æ–±'—î–∫—Ç –¥–ª—è –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
    window.WinixDiagnostics = {
        // –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
        enabled: true,
        verboseLogging: false,

        // –Ü—Å—Ç–æ—Ä—ñ—è ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –∑–º—ñ–Ω
        idHistory: [],

        // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏—á–Ω–æ–≥–æ –º–æ–¥—É–ª—è
        init: function() {
            console.log("üîç DIAG: –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏—á–Ω–æ–≥–æ –º–æ–¥—É–ª—è");

            // –ü–µ—Ä–µ–≤—ñ—Ä–∏–º–æ –ø–æ—Ç–æ—á–Ω–∏–π ID
            this.checkCurrentId();

            // –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Å–ø–æ—Å—Ç–µ—Ä—ñ–≥–∞—á–∞ –¥–ª—è localStorage
            this.setupStorageObserver();

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ ID –ø—Ä–∏ –∫–æ–∂–Ω–æ–º—É API-–∑–∞–ø–∏—Ç—ñ
            this.monitorApiRequests();

            // –ú–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥ Telegram WebApp
            this.monitorTelegramWebApp();

            return this;
        },

        // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø–æ—Ç–æ—á–Ω–æ–≥–æ ID
        checkCurrentId: function() {
            const storedId = localStorage.getItem('telegram_user_id');
            console.log("üîç DIAG: –ü–æ—Ç–æ—á–Ω–∏–π ID –≤ localStorage:", storedId);

            if (storedId === 'undefined' || storedId === 'null' || !storedId) {
                console.warn("‚ö†Ô∏è DIAG: –í–∏—è–≤–ª–µ–Ω–æ –Ω–µ–≤–∞–ª—ñ–¥–Ω–∏–π ID –≤ localStorage");

                // –î–æ–¥–∞—î–º–æ –∑–∞–ø–∏—Å –≤ —ñ—Å—Ç–æ—Ä—ñ—é
                this.idHistory.push({
                    time: new Date().toISOString(),
                    source: 'localStorage',
                    value: storedId,
                    valid: false
                });

                // –°–ø—Ä–æ–±—É—î–º–æ –≤–∏–ø—Ä–∞–≤–∏—Ç–∏
                this.attemptToFixId();
            } else {
                // –î–æ–¥–∞—î–º–æ –∑–∞–ø–∏—Å –≤ —ñ—Å—Ç–æ—Ä—ñ—é
                this.idHistory.push({
                    time: new Date().toISOString(),
                    source: 'localStorage',
                    value: storedId,
                    valid: true
                });
            }

            return storedId;
        },

        // –°–ø–æ—Å—Ç–µ—Ä—ñ–≥–∞—á –¥–ª—è localStorage
        setupStorageObserver: function() {
            const originalSetItem = localStorage.setItem;
            const diagnostics = this;

            // –ü–µ—Ä–µ–≤–∏–∑–Ω–∞—á–∞—î–º–æ –º–µ—Ç–æ–¥ setItem –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –∑–º—ñ–Ω ID
            localStorage.setItem = function(key, value) {
                if (key === 'telegram_user_id') {
                    console.log(`üîç DIAG: –ó–∞–ø–∏—Å –≤ localStorage, –∫–ª—é—á=${key}, –∑–Ω–∞—á–µ–Ω–Ω—è=${value}`);

                    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –≤–∞–ª—ñ–¥–Ω—ñ—Å—Ç—å ID
                    const isValid = value && value !== 'undefined' && value !== 'null';

                    // –î–æ–¥–∞—î–º–æ –∑–∞–ø–∏—Å –≤ —ñ—Å—Ç–æ—Ä—ñ—é
                    diagnostics.idHistory.push({
                        time: new Date().toISOString(),
                        source: 'localStorage.setItem',
                        value: value,
                        valid: isValid,
                        stack: new Error().stack // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —Å—Ç–µ–∫ –≤–∏–∫–ª–∏–∫—ñ–≤
                    });

                    // –ü–æ–ø–µ—Ä–µ–¥–∂–∞—î–º–æ –ø—Ä–æ –Ω–µ–≤–∞–ª—ñ–¥–Ω—ñ –∑–Ω–∞—á–µ–Ω–Ω—è
                    if (!isValid) {
                        console.warn(`‚ö†Ô∏è DIAG: –°–ø—Ä–æ–±–∞ –∑–∞–ø–∏—Å—É –Ω–µ–≤–∞–ª—ñ–¥–Ω–æ–≥–æ ID –≤ localStorage: "${value}"`);
                        console.trace();

                        // –ú–æ–∂–Ω–∞ –≤–∏—Ä—ñ—à–∏—Ç–∏ —á–∏ –±–ª–æ–∫—É–≤–∞—Ç–∏ –∑–∞–ø–∏—Å, —á–∏ –¥–æ–∑–≤–æ–ª–∏—Ç–∏ –¥–ª—è –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
                        // return; // –†–æ–∑–∫–æ–º–µ–Ω—Ç—É–π—Ç–µ —â–æ–± –±–ª–æ–∫—É–≤–∞—Ç–∏ –∑–∞–ø–∏—Å –Ω–µ–≤–∞–ª—ñ–¥–Ω–∏—Ö ID
                    }
                }

                // –í–∏–∫–ª–∏–∫–∞—î–º–æ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–∏–π –º–µ—Ç–æ–¥
                originalSetItem.call(this, key, value);
            };
        },

        // –ú–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥ API-–∑–∞–ø–∏—Ç—ñ–≤
        monitorApiRequests: function() {
            if (window.WinixAPI && window.WinixAPI.apiRequest) {
                const originalApiRequest = window.WinixAPI.apiRequest;
                const diagnostics = this;

                window.WinixAPI.apiRequest = function(endpoint, method, data, options, retries) {
                    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ ID –ø–µ—Ä–µ–¥ –∑–∞–ø–∏—Ç–æ–º
                    const userId = window.WinixAPI.getUserId();

                    // –õ–æ–≥—É—î–º–æ –¥–∞–Ω—ñ –∑–∞–ø–∏—Ç—É
                    console.log(`üîç DIAG: API-–∑–∞–ø–∏—Ç –Ω–∞ ${endpoint}, ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞: ${userId}`);

                    // –ó–∞–ø–∏—Å—É—î–º–æ –≤ —ñ—Å—Ç–æ—Ä—ñ—é
                    diagnostics.idHistory.push({
                        time: new Date().toISOString(),
                        source: 'apiRequest',
                        endpoint: endpoint,
                        value: userId,
                        valid: userId && userId !== 'undefined' && userId !== 'null'
                    });

                    // –í–∏–∫–ª–∏–∫–∞—î–º–æ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–∏–π –º–µ—Ç–æ–¥
                    return originalApiRequest.call(this, endpoint, method, data, options, retries);
                };
            }
        },

        // –ú–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥ Telegram WebApp
        monitorTelegramWebApp: function() {
            if (window.Telegram && window.Telegram.WebApp) {
                const tg = window.Telegram.WebApp;

                // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –¥–∞–Ω—ñ Telegram WebApp
                if (tg.initDataUnsafe && tg.initDataUnsafe.user) {
                    const user = tg.initDataUnsafe.user;
                    console.log("üîç DIAG: –î–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤ Telegram WebApp:", user);

                    // –ó–∞–ø–∏—Å—É—î–º–æ –≤ —ñ—Å—Ç–æ—Ä—ñ—é
                    this.idHistory.push({
                        time: new Date().toISOString(),
                        source: 'Telegram.WebApp',
                        value: user.id,
                        valid: user.id !== undefined && user.id !== null
                    });

                    if (!user.id) {
                        console.warn("‚ö†Ô∏è DIAG: –í—ñ–¥—Å—É—Ç–Ω—ñ–π ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤ Telegram WebApp");
                    }
                } else {
                    console.warn("‚ö†Ô∏è DIAG: –í—ñ–¥—Å—É—Ç–Ω—ñ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤ Telegram WebApp");

                    // –ó–∞–ø–∏—Å—É—î–º–æ –≤ —ñ—Å—Ç–æ—Ä—ñ—é
                    this.idHistory.push({
                        time: new Date().toISOString(),
                        source: 'Telegram.WebApp',
                        value: null,
                        valid: false,
                        error: 'No user data'
                    });
                }
            }
        },

        // –°–ø—Ä–æ–±–∞ –≤–∏–ø—Ä–∞–≤–∏—Ç–∏ –Ω–µ–≤–∞–ª—ñ–¥–Ω–∏–π ID
        attemptToFixId: function() {
            console.log("üîç DIAG: –°–ø—Ä–æ–±–∞ –≤–∏–ø—Ä–∞–≤–∏—Ç–∏ –Ω–µ–≤–∞–ª—ñ–¥–Ω–∏–π ID...");

            // –°–ø–æ—á–∞—Ç–∫—É –æ—á–∏—Å—Ç–∏–º–æ –Ω–µ–≤–∞–ª—ñ–¥–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è
            if (localStorage.getItem('telegram_user_id') === 'undefined' || localStorage.getItem('telegram_user_id') === 'null') {
                localStorage.removeItem('telegram_user_id');
                console.log("üîç DIAG: –í–∏–¥–∞–ª–µ–Ω–æ –Ω–µ–≤–∞–ª—ñ–¥–Ω–∏–π ID –∑ localStorage");
            }

            // –°–ø—Ä–æ–±—É—î–º–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ ID –∑ Telegram WebApp
            if (window.Telegram && window.Telegram.WebApp && window.Telegram.WebApp.initDataUnsafe && window.Telegram.WebApp.initDataUnsafe.user) {
                const user = window.Telegram.WebApp.initDataUnsafe.user;
                if (user.id) {
                    localStorage.setItem('telegram_user_id', user.id.toString());
                    console.log(`üîç DIAG: –í–∏–ø—Ä–∞–≤–ª–µ–Ω–æ ID –∑ Telegram WebApp: ${user.id}`);
                    return true;
                }
            }

            // –°–ø—Ä–æ–±—É—î–º–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ ID –∑ DOM
            const userIdElement = document.getElementById('user-id');
            if (userIdElement && userIdElement.textContent && userIdElement.textContent.trim() !== '' &&
                userIdElement.textContent !== 'undefined' && userIdElement.textContent !== 'null') {
                const id = userIdElement.textContent.trim();
                localStorage.setItem('telegram_user_id', id);
                console.log(`üîç DIAG: –í–∏–ø—Ä–∞–≤–ª–µ–Ω–æ ID –∑ DOM: ${id}`);
                return true;
            }

            // –°–ø—Ä–æ–±—É—î–º–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ ID –∑ URL
            const urlParams = new URLSearchParams(window.location.search);
            const urlId = urlParams.get('id') || urlParams.get('user_id') || urlParams.get('telegram_id');
            if (urlId && urlId !== 'undefined' && urlId !== 'null') {
                localStorage.setItem('telegram_user_id', urlId);
                console.log(`üîç DIAG: –í–∏–ø—Ä–∞–≤–ª–µ–Ω–æ ID –∑ URL: ${urlId}`);
                return true;
            }

            console.warn("‚ö†Ô∏è DIAG: –ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–ø—Ä–∞–≤–∏—Ç–∏ ID –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ");
            return false;
        },

        // –û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏—á–Ω–∏—Ö –¥–∞–Ω–∏—Ö
        getDiagnosticData: function() {
            return {
                idHistory: this.idHistory,
                currentId: localStorage.getItem('telegram_user_id'),
                telegramAvailable: !!window.Telegram,
                webAppAvailable: !!(window.Telegram && window.Telegram.WebApp),
                initDataAvailable: !!(window.Telegram && window.Telegram.WebApp && window.Telegram.WebApp.initData),
                userDataAvailable: !!(window.Telegram && window.Telegram.WebApp && window.Telegram.WebApp.initDataUnsafe && window.Telegram.WebApp.initDataUnsafe.user),
                timestamp: new Date().toISOString()
            };
        },

        // –í–∏–¥–∞–ª–µ–Ω–Ω—è –Ω–µ–≤–∞–ª—ñ–¥–Ω–∏—Ö ID –≤ localStorage
        cleanupInvalidIds: function() {
            const storedId = localStorage.getItem('telegram_user_id');
            if (storedId === 'undefined' || storedId === 'null' || storedId === '') {
                localStorage.removeItem('telegram_user_id');
                console.log("üîç DIAG: –í–∏–¥–∞–ª–µ–Ω–æ –Ω–µ–≤–∞–ª—ñ–¥–Ω–∏–π ID –∑ localStorage");
                return true;
            }
            return false;
        }
    };

    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏—á–Ω–∏–π –º–æ–¥—É–ª—å
    document.addEventListener('DOMContentLoaded', function() {
        window.WinixDiagnostics.init();
    });

    // –Ø–∫—â–æ —Å—Ç–æ—Ä—ñ–Ω–∫–∞ –≤–∂–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∞, —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ –∑–∞—Ä–∞–∑
    if (document.readyState === 'interactive' || document.readyState === 'complete') {
        window.WinixDiagnostics.init();
    }

    console.log("‚úÖ DIAG: –î—ñ–∞–≥–Ω–æ—Å—Ç–∏—á–Ω–∏–π –º–æ–¥—É–ª—å –≥–æ—Ç–æ–≤–∏–π –¥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è");
})();