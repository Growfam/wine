/**
 * Animations - –º–æ–¥—É–ª—å –¥–ª—è –∞–Ω—ñ–º–∞—Ü—ñ–π —Ç–∞ –≤—ñ–∑—É–∞–ª—å–Ω–∏—Ö –µ—Ñ–µ–∫—Ç—ñ–≤
 * –í—ñ–¥–ø–æ–≤—ñ–¥–∞—î –∑–∞:
 * - –ê–Ω—ñ–º–∞—Ü—ñ—é –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –≤–∏–Ω–∞–≥–æ—Ä–æ–¥
 * - –ß–∞—Å—Ç–∏–Ω–∫–∏ —Ç–∞ –µ—Ñ–µ–∫—Ç–∏ –¥–ª—è —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É
 * - –ê–Ω—ñ–º–æ–≤–∞–Ω—ñ –ø–µ—Ä–µ—Ö–æ–¥–∏ –º—ñ–∂ —Å—Ç–∞–Ω–∞–º–∏
 */

// –°—Ç–≤–æ—Ä—é—î–º–æ namespace –¥–ª—è UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ–≤, —è–∫—â–æ –π–æ–≥–æ —â–µ –Ω–µ–º–∞—î
window.UI = window.UI || {};

window.UI.Animations = (function() {
    // –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∏ –¥–ª—è –∞–Ω—ñ–º–∞—Ü—ñ–π
    const ANIMATION_DURATION = 2000; // –º—Å
    const PARTICLE_COUNT = 30;
    const PARTICLE_COLORS = ['#4eb5f7', '#00C9A7', '#AD6EE5', '#FFD700'];

    /**
     * –ü–æ–∫–∞–∑–∞—Ç–∏ –∞–Ω—ñ–º–∞—Ü—ñ—é –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –≤–∏–Ω–∞–≥–æ—Ä–æ–¥–∏ –∑ –∫–æ–Ω—Ñ–µ—Ç—Ç—ñ
     * @param {Object} reward - –û–±'—î–∫—Ç –∑ –¥–∞–Ω–∏–º–∏ –ø—Ä–æ –≤–∏–Ω–∞–≥–æ—Ä–æ–¥—É
     * @param {Object} options - –î–æ–¥–∞—Ç–∫–æ–≤—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ –∞–Ω—ñ–º–∞—Ü—ñ—ó
     */
    function showReward(reward, options = {}) {
        // –ü–∞—Ä–∞–º–µ—Ç—Ä–∏ –∞–Ω—ñ–º–∞—Ü—ñ—ó
        const {
            duration = ANIMATION_DURATION,
            showParticles = true,
            showNotification = true
        } = options;

        // –§–æ—Ä–º—É—î–º–æ —Ç–µ–∫—Å—Ç –≤–∏–Ω–∞–≥–æ—Ä–æ–¥–∏
        const rewardAmount = reward.amount;
        const rewardType = reward.type === 'tokens' ? '$WINIX' : '–∂–µ—Ç–æ–Ω—ñ–≤';
        const rewardText = `+${rewardAmount} ${rewardType}`;

        // –°—Ç–≤–æ—Ä—é—î–º–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∞–Ω—ñ–º–∞—Ü—ñ—ó –≤–∏–Ω–∞–≥–æ—Ä–æ–¥–∏
        const animationContainer = document.createElement('div');
        animationContainer.className = 'reward-animation-container';
        document.body.appendChild(animationContainer);

        // –°—Ç–≤–æ—Ä—é—î–º–æ –µ–ª–µ–º–µ–Ω—Ç –∑ –≤–∏–Ω–∞–≥–æ—Ä–æ–¥–æ—é
        const rewardElement = document.createElement('div');
        rewardElement.className = 'reward-animation';
        rewardElement.textContent = rewardText;

        // –î–æ–¥–∞—î–º–æ —ñ–∫–æ–Ω–∫—É –≤ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –≤—ñ–¥ —Ç–∏–ø—É –≤–∏–Ω–∞–≥–æ—Ä–æ–¥–∏
        const iconElement = document.createElement('span');
        iconElement.className = 'reward-icon';
        iconElement.textContent = reward.type === 'tokens' ? 'üí∞' : 'üéñÔ∏è';
        rewardElement.prepend(iconElement);

        // –î–æ–¥–∞—î–º–æ –µ–ª–µ–º–µ–Ω—Ç –≤–∏–Ω–∞–≥–æ—Ä–æ–¥–∏ –¥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
        animationContainer.appendChild(rewardElement);

        // –î–æ–¥–∞—î–º–æ —á–∞—Å—Ç–∏–Ω–∫–∏, —è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ
        if (showParticles) {
            createParticles(animationContainer);
        }

        // –ü–æ–∫–∞–∑—É—î–º–æ –∞–Ω—ñ–º–∞—Ü—ñ—é
        setTimeout(() => {
            rewardElement.classList.add('show');

            // –í–∏–¥–∞–ª—è—î–º–æ –ø—ñ—Å–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è
            setTimeout(() => {
                rewardElement.classList.remove('show');
                setTimeout(() => {
                    animationContainer.remove();

                    // –ü–æ–∫–∞–∑—É—î–º–æ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –ø—ñ—Å–ª—è –∞–Ω—ñ–º–∞—Ü—ñ—ó
                    if (showNotification) {
                        showRewardNotification(reward);
                    }
                }, 300);
            }, duration);
        }, 100);

        // –û–Ω–æ–≤–ª—é—î–º–æ –±–∞–ª–∞–Ω—Å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        updateUserBalance(reward);

        // –í—ñ–¥—Ç–≤–æ—Ä—é—î–º–æ –∑–≤—É–∫ —É—Å–ø—ñ—Ö—É, —è–∫—â–æ –≤—ñ–Ω –¥–æ—Å—Ç—É–ø–Ω–∏–π
        playSound('success');
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç–∏ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –ø—Ä–æ –æ—Ç—Ä–∏–º–∞–Ω—É –≤–∏–Ω–∞–≥–æ—Ä–æ–¥—É
     */
    function showRewardNotification(reward) {
        // –Ø–∫—â–æ —î –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Å–ø–æ–≤—ñ—â–µ–Ω—å, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –π–æ–≥–æ
        if (window.UI.Notifications && window.UI.Notifications.showSuccess) {
            const rewardType = reward.type === 'tokens' ? '$WINIX' : '–∂–µ—Ç–æ–Ω—ñ–≤';
            window.UI.Notifications.showSuccess(`–í–∏ –æ—Ç—Ä–∏–º–∞–ª–∏ ${reward.amount} ${rewardType}!`);
        }
    }

    /**
     * –°—Ç–≤–æ—Ä–∏—Ç–∏ —á–∞—Å—Ç–∏–Ω–∫–∏ –¥–ª—è –∞–Ω—ñ–º–∞—Ü—ñ—ó
     */
    function createParticles(container) {
        // –°—Ç–≤–æ—Ä—é—î–º–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —á–∞—Å—Ç–∏–Ω–æ–∫
        const particlesContainer = document.createElement('div');
        particlesContainer.className = 'particles-container';
        container.appendChild(particlesContainer);

        // –°—Ç–≤–æ—Ä—é—î–º–æ —á–∞—Å—Ç–∏–Ω–∫–∏
        for (let i = 0; i < PARTICLE_COUNT; i++) {
            const particle = document.createElement('div');
            particle.className = 'particle';

            // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –≤–∏–ø–∞–¥–∫–æ–≤–∏–π –∫–æ–ª—ñ—Ä
            const randomColor = PARTICLE_COLORS[Math.floor(Math.random() * PARTICLE_COLORS.length)];
            particle.style.backgroundColor = randomColor;

            // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –≤–∏–ø–∞–¥–∫–æ–≤–µ –ø–æ–ª–æ–∂–µ–Ω–Ω—è
            const xPos = Math.random() * 100;
            particle.style.left = `${xPos}%`;

            // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –≤–∏–ø–∞–¥–∫–æ–≤—É —à–≤–∏–¥–∫—ñ—Å—Ç—å —Ç–∞ –Ω–∞–ø—Ä—è–º–æ–∫
            const duration = Math.random() * 2 + 2; // –≤—ñ–¥ 2 –¥–æ 4 —Å–µ–∫—É–Ω–¥
            const delay = Math.random() * 0.5; // –≤—ñ–¥ 0 –¥–æ 0.5 —Å–µ–∫—É–Ω–¥

            particle.style.animation = `particle-animation ${duration}s ease-out ${delay}s`;

            // –î–æ–¥–∞—î–º–æ —á–∞—Å—Ç–∏–Ω–∫—É –¥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
            particlesContainer.appendChild(particle);
        }
    }

    /**
     * –û–Ω–æ–≤–∏—Ç–∏ –±–∞–ª–∞–Ω—Å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
     */
    function updateUserBalance(reward) {
        if (reward.type === 'tokens') {
            const userTokensElement = document.getElementById('user-tokens');
            if (userTokensElement) {
                const currentBalance = parseFloat(userTokensElement.textContent) || 0;
                userTokensElement.textContent = (currentBalance + reward.amount).toFixed(2);
                userTokensElement.classList.add('highlight');
                setTimeout(() => {
                    userTokensElement.classList.remove('highlight');
                }, 2000);
            }
        } else if (reward.type === 'coins') {
            const userCoinsElement = document.getElementById('user-coins');
            if (userCoinsElement) {
                const currentBalance = parseInt(userCoinsElement.textContent) || 0;
                userCoinsElement.textContent = currentBalance + reward.amount;
                userCoinsElement.classList.add('highlight');
                setTimeout(() => {
                    userCoinsElement.classList.remove('highlight');
                }, 2000);
            }
        }
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç–∏ –∞–Ω—ñ–º–∞—Ü—ñ—é –ø—Ä–æ–≥—Ä–µ—Å—É –¥–ª—è –∑–∞–≤–¥–∞–Ω–Ω—è
     * @param {string} taskId - ID –∑–∞–≤–¥–∞–Ω–Ω—è
     * @param {number} progress - –ü–æ—Ç–æ—á–Ω–∏–π –ø—Ä–æ–≥—Ä–µ—Å (0-100)
     */
    function showProgressAnimation(taskId, progress) {
        const taskElement = document.querySelector(`.task-item[data-task-id="${taskId}"]`);
        if (!taskElement) return;

        const progressBar = taskElement.querySelector('.progress-fill');
        if (progressBar) {
            // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ø–æ—Ç–æ—á–Ω—É —à–∏—Ä–∏–Ω—É
            const currentWidth = parseFloat(progressBar.style.width) || 0;

            // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –Ω–æ–≤—É —à–∏—Ä–∏–Ω—É –∑ –∞–Ω—ñ–º–∞—Ü—ñ—î—é
            progressBar.style.transition = 'width 1s ease-out';
            progressBar.style.width = `${progress}%`;

            // –î–æ–¥–∞—î–º–æ –µ—Ñ–µ–∫—Ç –ø—É–ª—å—Å–∞—Ü—ñ—ó, —è–∫—â–æ –ø—Ä–æ–≥—Ä–µ—Å –∑–±—ñ–ª—å—à–∏–≤—Å—è
            if (progress > currentWidth) {
                progressBar.classList.add('pulse');
                setTimeout(() => {
                    progressBar.classList.remove('pulse');
                }, 1000);
            }
        }
    }

    /**
     * –í—ñ–¥—Ç–≤–æ—Ä–∏—Ç–∏ –∑–≤—É–∫–æ–≤–∏–π –µ—Ñ–µ–∫—Ç
     * @param {string} type - –¢–∏–ø –∑–≤—É–∫—É ('success', 'error', 'click')
     */
    function playSound(type) {
        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –≤–∫–ª—é—á–µ–Ω—ñ –∑–≤—É–∫–∏ –≤ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        const soundsEnabled = localStorage.getItem('sounds_enabled') !== 'false';
        if (!soundsEnabled) return;

        let soundUrl;

        // –í–∏–∑–Ω–∞—á–∞—î–º–æ URL –∑–≤—É–∫—É –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ —Ç–∏–ø—É
        switch (type) {
            case 'success':
                soundUrl = 'assets/sounds/success.mp3';
                break;
            case 'error':
                soundUrl = 'assets/sounds/error.mp3';
                break;
            case 'click':
                soundUrl = 'assets/sounds/click.mp3';
                break;
            default:
                return;
        }

        // –°—Ç–≤–æ—Ä—é—î–º–æ –∞—É–¥—ñ–æ –µ–ª–µ–º–µ–Ω—Ç
        const audio = new Audio(soundUrl);

        // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –≥—É—á–Ω—ñ—Å—Ç—å
        audio.volume = 0.5;

        // –í—ñ–¥—Ç–≤–æ—Ä—é—î–º–æ –∑–≤—É–∫
        audio.play().catch(error => {
            console.warn('–ù–µ –≤–¥–∞–ª–æ—Å—è –≤—ñ–¥—Ç–≤–æ—Ä–∏—Ç–∏ –∑–≤—É–∫:', error);
        });
    }

    /**
     * –î–æ–¥–∞—Ç–∏ —Å—Ç–∏–ª—ñ –¥–ª—è –∞–Ω—ñ–º–∞—Ü—ñ–π
     */
    function injectStyles() {
        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —Å—Ç–∏–ª—ñ –≤–∂–µ –¥–æ–¥–∞–Ω—ñ
        if (document.getElementById('animation-styles')) return;

        // –°—Ç–≤–æ—Ä—é—î–º–æ –µ–ª–µ–º–µ–Ω—Ç —Å—Ç–∏–ª—ñ–≤
        const styleElement = document.createElement('style');
        styleElement.id = 'animation-styles';

        // –î–æ–¥–∞—î–º–æ CSS –¥–ª—è –∞–Ω—ñ–º–∞—Ü—ñ–π
        styleElement.textContent = `
            /* –ê–Ω—ñ–º–∞—Ü—ñ—è –≤–∏–Ω–∞–≥–æ—Ä–æ–¥–∏ */
            .reward-animation-container {
                position: fixed;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                display: flex;
                justify-content: center;
                align-items: center;
                pointer-events: none;
                z-index: 1000;
            }
            
            .reward-animation {
                background: linear-gradient(135deg, #4eb5f7, #00C9A7);
                color: white;
                font-size: 24px;
                font-weight: bold;
                padding: 15px 25px;
                border-radius: 15px;
                box-shadow: 0 0 20px rgba(0, 201, 167, 0.5);
                transform: scale(0);
                opacity: 0;
                transition: all 0.5s cubic-bezier(0.175, 0.885, 0.32, 1.275);
                display: flex;
                align-items: center;
                gap: 10px;
            }
            
            .reward-animation.show {
                transform: scale(1);
                opacity: 1;
            }
            
            .reward-icon {
                font-size: 28px;
            }
            
            /* –ê–Ω—ñ–º–∞—Ü—ñ—è —á–∞—Å—Ç–∏–Ω–æ–∫ */
            .particles-container {
                position: absolute;
                width: 100%;
                height: 100%;
                top: 0;
                left: 0;
                pointer-events: none;
                overflow: hidden;
            }
            
            .particle {
                position: absolute;
                width: 10px;
                height: 10px;
                border-radius: 50%;
                bottom: 50%;
                opacity: 0;
            }
            
            @keyframes particle-animation {
                0% {
                    transform: translateY(0) rotate(0deg);
                    opacity: 1;
                }
                100% {
                    transform: translateY(-100vh) rotate(720deg);
                    opacity: 0;
                }
            }
            
            /* –ê–Ω—ñ–º–∞—Ü—ñ—è –ø—Ä–æ–≥—Ä–µ—Å-–±–∞—Ä—É */
            .progress-fill.pulse {
                animation: progress-pulse 1s ease-out;
            }
            
            @keyframes progress-pulse {
                0% {
                    box-shadow: 0 0 0 0 rgba(0, 201, 167, 0.5);
                }
                70% {
                    box-shadow: 0 0 0 10px rgba(0, 201, 167, 0);
                }
                100% {
                    box-shadow: 0 0 0 0 rgba(0, 201, 167, 0);
                }
            }
            
            /* –ê–Ω—ñ–º–∞—Ü—ñ—è –¥–ª—è –≤–∏–¥—ñ–ª–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É */
            .highlight {
                animation: highlight-animation 2s ease-out;
            }
            
            @keyframes highlight-animation {
                0% {
                    color: white;
                    text-shadow: 0 0 10px rgba(0, 201, 167, 0.8);
                }
                50% {
                    color: #00C9A7;
                    text-shadow: 0 0 15px rgba(0, 201, 167, 1);
                }
                100% {
                    color: white;
                    text-shadow: none;
                }
            }
        `;

        // –î–æ–¥–∞—î–º–æ —Å—Ç–∏–ª—ñ –¥–æ –¥–æ–∫—É–º–µ–Ω—Ç—É
        document.head.appendChild(styleElement);
    }

    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –º–æ–¥—É–ª—è
    function init() {
        // –î–æ–¥–∞—î–º–æ —Å—Ç–∏–ª—ñ –¥–ª—è –∞–Ω—ñ–º–∞—Ü—ñ–π
        injectStyles();

        console.log('UI.Animations: –ú–æ–¥—É–ª—å –∞–Ω—ñ–º–∞—Ü—ñ–π —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ');
    }

    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ –º–æ–¥—É–ª—å –ø—ñ–¥ —á–∞—Å –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
    document.addEventListener('DOMContentLoaded', init);

    // –ü—É–±–ª—ñ—á–Ω–∏–π API –º–æ–¥—É–ª—è
    return {
        showReward,
        showProgressAnimation,
        playSound,
        init
    };
})();