/**
 * –ú–æ–¥–µ–ª—å —Å–æ—Ü—ñ–∞–ª—å–Ω–æ–≥–æ –∑–∞–≤–¥–∞–Ω–Ω—è
 *
 * –†–æ–∑—à–∏—Ä—é—î –±–∞–∑–æ–≤—É –º–æ–¥–µ–ª—å –¥–ª—è —Å–æ—Ü—ñ–∞–ª—å–Ω–∏—Ö –∑–∞–≤–¥–∞–Ω—å
 */

import { TaskModel } from './task-model.js';
import { TASK_TYPES, SOCIAL_NETWORKS, ACTION_TYPES } from '../config/task-types.js';

export class SocialTaskModel extends TaskModel {
  /**
   * –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –º–æ–¥–µ–ª—ñ —Å–æ—Ü—ñ–∞–ª—å–Ω–æ–≥–æ –∑–∞–≤–¥–∞–Ω–Ω—è
   * @param {Object} data - –î–∞–Ω—ñ –∑–∞–≤–¥–∞–Ω–Ω—è
   */
  constructor(data = {}) {
    // –í–∏–∫–ª–∏–∫–∞—î–º–æ –±–∞—Ç—å–∫—ñ–≤—Å—å–∫–∏–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä
    super(data);

    // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Ç–∏–ø –∑–∞–≤–¥–∞–Ω–Ω—è
    this.type = TASK_TYPES.SOCIAL;

    // –†–æ–∑—à–∏—Ä—é—î–º–æ –¥–æ–¥–∞—Ç–∫–æ–≤–∏–º–∏ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—è–º–∏
    this.platform = data.platform || this.detectPlatform(data.action_url);
    this.action_type = data.action_type || ACTION_TYPES.VISIT;
    this.channel_name = data.channel_name || '';
    this.channel_url = data.channel_url || data.action_url || '';
    this.platform_user_id = data.platform_user_id || '';
    this.requires_verification = data.requires_verification !== false;
  }

  /**
   * –í–∏–∑–Ω–∞—á–µ–Ω–Ω—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∏ –Ω–∞ –æ—Å–Ω–æ–≤—ñ URL
   * @param {string} url - URL –¥—ñ—ó
   * @returns {string} –¢–∏–ø —Å–æ—Ü—ñ–∞–ª—å–Ω–æ—ó –º–µ—Ä–µ–∂—ñ
   */
  detectPlatform(url) {
    if (!url) return '';

    url = url.toLowerCase();

    if (url.includes('t.me/') || url.includes('telegram.')) {
      return SOCIAL_NETWORKS.TELEGRAM;
    }

    if (url.includes('twitter.') || url.includes('x.com')) {
      return SOCIAL_NETWORKS.TWITTER;
    }

    if (url.includes('discord.')) {
      return SOCIAL_NETWORKS.DISCORD;
    }

    if (url.includes('facebook.') || url.includes('fb.')) {
      return SOCIAL_NETWORKS.FACEBOOK;
    }

    return '';
  }

  /**
   * –ü–µ—Ä–µ—Ç–≤–æ—Ä–µ–Ω–Ω—è –≤ —Ñ–æ—Ä–º–∞—Ç –¥–ª—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
   * @returns {Object} –§–æ—Ä–º–∞—Ç–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ
   */
  toApiData() {
    // –û—Ç—Ä–∏–º—É—î–º–æ –±–∞–∑–æ–≤—ñ –¥–∞–Ω—ñ
    const baseData = super.toApiData();

    // –î–æ–¥–∞—î–º–æ —Å–ø–µ—Ü–∏—Ñ—ñ—á–Ω—ñ –¥–∞–Ω—ñ
    return {
      ...baseData,
      platform: this.platform,
      channel_name: this.channel_name,
      channel_url: this.channel_url,
      platform_user_id: this.platform_user_id,
      requires_verification: this.requires_verification
    };
  }

  /**
   * –ü–µ—Ä–µ—Ç–≤–æ—Ä–µ–Ω–Ω—è –≤ —Ñ–æ—Ä–º–∞—Ç –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è
   * @returns {Object} –î–∞–Ω—ñ –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è
   */
  toDisplayData() {
    // –û—Ç—Ä–∏–º—É—î–º–æ –±–∞–∑–æ–≤—ñ –¥–∞–Ω—ñ
    const baseData = super.toDisplayData();

    // –î–æ–¥–∞—î–º–æ —ñ–∫–æ–Ω–∫—É –ø–ª–∞—Ç—Ñ–æ—Ä–º–∏
    let platformIcon = '';
    switch (this.platform) {
      case SOCIAL_NETWORKS.TELEGRAM:
        platformIcon = 'üì±';
        break;
      case SOCIAL_NETWORKS.TWITTER:
        platformIcon = 'üê¶';
        break;
      case SOCIAL_NETWORKS.DISCORD:
        platformIcon = 'üí¨';
        break;
      case SOCIAL_NETWORKS.FACEBOOK:
        platformIcon = 'üëç';
        break;
      default:
        platformIcon = 'üåê';
    }

    // –î–æ–¥–∞—î–º–æ —Å–ø–µ—Ü–∏—Ñ—ñ—á–Ω—ñ –¥–∞–Ω—ñ
    return {
      ...baseData,
      platform: this.platform,
      platformIcon,
      channel_name: this.channel_name,
      action_type: this.action_type
    };
  }

  /**
   * –í–∞–ª—ñ–¥–∞—Ü—ñ—è –¥–∞–Ω–∏—Ö —Å–æ—Ü—ñ–∞–ª—å–Ω–æ–≥–æ –∑–∞–≤–¥–∞–Ω–Ω—è
   * @returns {boolean} –†–µ–∑—É–ª—å—Ç–∞—Ç –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó
   */
  isValid() {
    // –í–∏–∫–ª–∏–∫–∞—î–º–æ –±–∞–∑–æ–≤—É –≤–∞–ª—ñ–¥–∞—Ü—ñ—é
    if (!super.isValid()) {
      return false;
    }

    // –í–∞–ª—ñ–¥–∞—Ü—ñ—è URL
    if (this.requires_verification && !this.channel_url) {
      return false;
    }

    return true;
  }

  /**
   * –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –µ–∫–∑–µ–º–ø–ª—è—Ä–∞ –∑ –¥–∞–Ω–∏—Ö API
   * @param {Object} apiData - –î–∞–Ω—ñ –≤—ñ–¥ API
   * @returns {SocialTaskModel} –ù–æ–≤–∏–π –µ–∫–∑–µ–º–ø–ª—è—Ä —Å–æ—Ü—ñ–∞–ª—å–Ω–æ–≥–æ –∑–∞–≤–¥–∞–Ω–Ω—è
   */
  static fromApiData(apiData) {
    // –ù–æ—Ä–º–∞–ª—ñ–∑—É—î–º–æ –¥–∞–Ω—ñ
    const normalizedData = TaskModel.normalize(apiData);

    // –°—Ç–≤–æ—Ä—é—î–º–æ –µ–∫–∑–µ–º–ø–ª—è—Ä
    return new SocialTaskModel({
      ...normalizedData,
      platform: apiData.platform,
      channel_name: apiData.channel_name,
      channel_url: apiData.channel_url || apiData.action_url,
      platform_user_id: apiData.platform_user_id,
      requires_verification: apiData.requires_verification !== false
    });
  }
}

export default SocialTaskModel;