/**
 * –ì–æ–ª–æ–≤–Ω–∏–π —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ–π–Ω–∏–π –º–æ–¥—É–ª—å –¥–ª—è —Å–∏—Å—Ç–µ–º–∏ –∑–∞–≤–¥–∞–Ω—å WINIX
 * –ö–æ–æ—Ä–¥–∏–Ω—É—î —Ä–æ–±–æ—Ç—É –≤—Å—ñ—Ö –ø—ñ–¥–º–æ–¥—É–ª—ñ–≤
 */

window.TasksIntegration = (function() {
    'use strict';

    console.log('üöÄ [TasksIntegration] ===== –Ü–ù–Ü–¶–Ü–ê–õ–Ü–ó–ê–¶–Ü–Ø –Ü–ù–¢–ï–ì–†–ê–¶–Ü–ô–ù–û–ì–û –ú–û–î–£–õ–Ø =====');

    /**
     * –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—ó
     */
    function TasksIntegration() {
        console.log('üîß [TasksIntegration] –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ–≥–æ –µ–∫–∑–µ–º–ø–ª—è—Ä–∞ TasksIntegration');

        this.managers = {
            flexEarn: null,
            dailyBonus: null,
            tasks: null,
            verification: null,
            tasksManager: null
        };

        this.state = {
            userId: null,
            isInitialized: false,
            currentTab: 'flex',
            walletConnected: false
        };

        this.config = {
            autoSaveInterval: 30000, // 30 —Å–µ–∫—É–Ω–¥
            syncInterval: 60000,     // 1 —Ö–≤–∏–ª–∏–Ω–∞
            debugMode: window.TasksConstants?.DEBUG?.ENABLED || false
        };

        console.log('üìä [TasksIntegration] –ü–æ—á–∞—Ç–∫–æ–≤–∞ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è:', this.config);
    }

    /**
     * –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Å–∏—Å—Ç–µ–º–∏
     */
    TasksIntegration.prototype.init = function() {
        console.log('üéØ [TasksIntegration] ===== –ü–û–ß–ê–¢–û–ö –Ü–ù–Ü–¶–Ü–ê–õ–Ü–ó–ê–¶–Ü–á –°–ò–°–¢–ï–ú–ò =====');
        console.log('üïê [TasksIntegration] –ß–∞—Å –ø–æ—á–∞—Ç–∫—É:', new Date().toISOString());

        try {
            // –û—Ç—Ä–∏–º—É—î–º–æ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            this.state.userId = this.getUserId();
            console.log('üë§ [TasksIntegration] User ID:', this.state.userId);

            if (!this.state.userId) {
                throw new Error('–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞');
            }

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –Ω–µ–æ–±—Ö—ñ–¥–Ω–∏—Ö –º–æ–¥—É–ª—ñ–≤
            this.checkRequiredModules();

            // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∏
            this.initializeManagers();

            // –ù–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π
            this.setupEventHandlers();

            // –ù–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ –∞–≤—Ç–æ–∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è
            this.setupAutoSave();

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Å—Ç–∞–Ω –∫–æ—à–µ–ª—å–∫–∞ –ø—Ä–∏ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
            this.checkWalletStatus();

            // –ü–æ–∑–Ω–∞—á–∞—î–º–æ —è–∫ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ
            this.state.isInitialized = true;

            console.log('‚úÖ [TasksIntegration] ===== –°–ò–°–¢–ï–ú–ê –£–°–ü–Ü–®–ù–û –Ü–ù–Ü–¶–Ü–ê–õ–Ü–ó–û–í–ê–ù–ê =====');
            console.log('üìä [TasksIntegration] –ü–æ—Ç–æ—á–Ω–∏–π —Å—Ç–∞–Ω:', this.state);

            return this;

        } catch (error) {
            console.error('‚ùå [TasksIntegration] –ö–†–ò–¢–ò–ß–ù–ê –ü–û–ú–ò–õ–ö–ê –Ü–ù–Ü–¶–Ü–ê–õ–Ü–ó–ê–¶–Ü–á:', error);
            console.error('‚ùå [TasksIntegration] Stack trace:', error.stack);
            this.showError('–ü–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó —Å–∏—Å—Ç–µ–º–∏: ' + error.message);
            throw error;
        }
    };

    /**
     * –û—Ç—Ä–∏–º–∞—Ç–∏ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
     */
    TasksIntegration.prototype.getUserId = function() {
        console.log('üîç [TasksIntegration] –û—Ç—Ä–∏–º–∞–Ω–Ω—è ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞...');

        // –°–ø—Ä–æ–±–∞ –æ—Ç—Ä–∏–º–∞—Ç–∏ –∑ Telegram WebApp
        if (window.Telegram?.WebApp?.initDataUnsafe?.user?.id) {
            const tgId = parseInt(window.Telegram.WebApp.initDataUnsafe.user.id);
            console.log('‚úÖ [TasksIntegration] ID –∑ Telegram:', tgId);
            return tgId;
        }

        // –°–ø—Ä–æ–±–∞ –æ—Ç—Ä–∏–º–∞—Ç–∏ –∑ localStorage
        const storedId = localStorage.getItem('telegram_user_id') || localStorage.getItem('user_id');
        if (storedId) {
            const numericId = parseInt(storedId);
            console.log('‚úÖ [TasksIntegration] ID –∑ localStorage:', numericId);
            return numericId;
        }

        // –î–µ–º–æ —Ä–µ–∂–∏–º
        if (this.config.debugMode) {
            const demoId = 123456789;
            console.warn('‚ö†Ô∏è [TasksIntegration] –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –¥–µ–º–æ ID:', demoId);
            return demoId;
        }

        console.error('‚ùå [TasksIntegration] –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞');
        return null;
    };

    /**
     * –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –Ω–µ–æ–±—Ö—ñ–¥–Ω–∏—Ö –º–æ–¥—É–ª—ñ–≤
     */
    TasksIntegration.prototype.checkRequiredModules = function() {
        console.log('üîç [TasksIntegration] –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–µ–æ–±—Ö—ñ–¥–Ω–∏—Ö –º–æ–¥—É–ª—ñ–≤...');

        const requiredModules = {
            'FlexEarnManager': window.FlexEarnManager,
            'TasksConstants': window.TasksConstants,
            'TasksManager': window.TasksManager,
            'TaskVerification': window.TaskVerification,
            'DailyBonusManager': window.DailyBonusManager
        };

        const missingModules = [];

        Object.entries(requiredModules).forEach(([name, module]) => {
            if (!module) {
                missingModules.push(name);
                console.error(`‚ùå [TasksIntegration] –í—ñ–¥—Å—É—Ç–Ω—ñ–π –º–æ–¥—É–ª—å: ${name}`);
            } else {
                console.log(`‚úÖ [TasksIntegration] –ú–æ–¥—É–ª—å ${name} –∑–Ω–∞–π–¥–µ–Ω–æ`);
            }
        });

        if (missingModules.length > 0) {
            throw new Error(`–í—ñ–¥—Å—É—Ç–Ω—ñ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ –º–æ–¥—É–ª—ñ: ${missingModules.join(', ')}`);
        }

        console.log('‚úÖ [TasksIntegration] –í—Å—ñ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ –º–æ–¥—É–ª—ñ –ø—Ä–∏—Å—É—Ç–Ω—ñ');
    };

    /**
     * –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ –º–µ–Ω–µ–¥–∂–µ—Ä–∏
     */
    TasksIntegration.prototype.initializeManagers = function() {
        console.log('üîß [TasksIntegration] –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –º–µ–Ω–µ–¥–∂–µ—Ä—ñ–≤...');

        // FlexEarn Manager
        if (window.FlexEarnManager) {
            console.log('  üîß [TasksIntegration] –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è FlexEarnManager...');
            this.managers.flexEarn = window.FlexEarnManager;
            this.managers.flexEarn.init(this.state.userId);
            console.log('  ‚úÖ [TasksIntegration] FlexEarnManager —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ');
        }

        // Daily Bonus Manager
        if (window.DailyBonusManager) {
            console.log('  üîß [TasksIntegration] –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è DailyBonusManager...');
            this.managers.dailyBonus = window.DailyBonusManager;
            this.managers.dailyBonus.init(this.state.userId);
            console.log('  ‚úÖ [TasksIntegration] DailyBonusManager —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ');
        }

        // Tasks Manager
        if (window.TasksManager) {
            console.log('  üîß [TasksIntegration] –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è TasksManager...');
            this.managers.tasksManager = window.TasksManager;
            this.managers.tasksManager.init(this.state.userId);
            console.log('  ‚úÖ [TasksIntegration] TasksManager —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ');
        }

        // Task Verification
        if (window.TaskVerification) {
            console.log('  üîß [TasksIntegration] –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è TaskVerification...');
            this.managers.verification = window.TaskVerification;
            // TaskVerification —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î—Ç—å—Å—è –≤ TasksManager
            console.log('  ‚úÖ [TasksIntegration] TaskVerification –≥–æ—Ç–æ–≤–∏–π');
        }

        console.log('‚úÖ [TasksIntegration] –í—Å—ñ –º–µ–Ω–µ–¥–∂–µ—Ä–∏ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ');
    };

    /**
     * –ù–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π
     */
    TasksIntegration.prototype.setupEventHandlers = function() {
        console.log('üéØ [TasksIntegration] –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –ø–æ–¥—ñ–π...');

        // –û–±—Ä–æ–±–Ω–∏–∫–∏ –¥–ª—è –≤–∫–ª–∞–¥–æ–∫
        const tabs = document.querySelectorAll('.main-tabs .tab-button');
        console.log(`  üìë [TasksIntegration] –ó–Ω–∞–π–¥–µ–Ω–æ ${tabs.length} –≤–∫–ª–∞–¥–æ–∫`);

        tabs.forEach((tab, index) => {
            tab.addEventListener('click', (e) => {
                const tabName = tab.getAttribute('data-tab');
                console.log(`  üìë [TasksIntegration] –ö–ª—ñ–∫ –Ω–∞ –≤–∫–ª–∞–¥–∫—É ${index}: ${tabName}`);
                this.switchTab(tabName);
            });
        });

        // –û–±—Ä–æ–±–Ω–∏–∫ –≤–∏–¥–∏–º–æ—Å—Ç—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
        document.addEventListener('visibilitychange', () => {
            if (!document.hidden) {
                console.log('üëÅÔ∏è [TasksIntegration] –°—Ç–æ—Ä—ñ–Ω–∫–∞ —Å—Ç–∞–ª–∞ –≤–∏–¥–∏–º–æ—é');
                this.onPageVisible();
            } else {
                console.log('üëÅÔ∏è [TasksIntegration] –°—Ç–æ—Ä—ñ–Ω–∫–∞ –ø—Ä–∏—Ö–æ–≤–∞–Ω–∞');
                this.onPageHidden();
            }
        });

        // –û–±—Ä–æ–±–Ω–∏–∫ –æ–Ω–ª–∞–π–Ω/–æ—Ñ–ª–∞–π–Ω
        window.addEventListener('online', () => {
            console.log('üåê [TasksIntegration] –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–æ');
            this.onOnline();
        });

        window.addEventListener('offline', () => {
            console.log('üìµ [TasksIntegration] –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –≤—Ç—Ä–∞—á–µ–Ω–æ');
            this.onOffline();
        });

        console.log('‚úÖ [TasksIntegration] –û–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–æ');
    };

    /**
     * –ü–µ—Ä–µ–º–∏–∫–∞–Ω–Ω—è –≤–∫–ª–∞–¥–æ–∫
     */
    TasksIntegration.prototype.switchTab = function(tabName) {
        console.log(`üìë [TasksIntegration] –ü–µ—Ä–µ–º–∏–∫–∞–Ω–Ω—è –Ω–∞ –≤–∫–ª–∞–¥–∫—É: ${tabName}`);

        this.state.currentTab = tabName;

        // –û–Ω–æ–≤–ª—é—î–º–æ UI –≤–∫–ª–∞–¥–æ–∫
        const tabs = document.querySelectorAll('.main-tabs .tab-button');
        const panes = document.querySelectorAll('.main-tab-pane');

        tabs.forEach(tab => {
            if (tab.getAttribute('data-tab') === tabName) {
                tab.classList.add('active');
            } else {
                tab.classList.remove('active');
            }
        });

        panes.forEach(pane => {
            if (pane.id === `${tabName}-tab`) {
                pane.classList.add('active');
                console.log(`  ‚úÖ [TasksIntegration] –ü–∞–Ω–µ–ª—å ${tabName} –∞–∫—Ç–∏–≤–æ–≤–∞–Ω–∞`);
            } else {
                pane.classList.remove('active');
            }
        });

        // –í–∏–∫–æ–Ω—É—î–º–æ –¥—ñ—ó —Å–ø–µ—Ü–∏—Ñ—ñ—á–Ω—ñ –¥–ª—è –≤–∫–ª–∞–¥–∫–∏
        this.onTabSwitch(tabName);
    };

    /**
     * –û–±—Ä–æ–±–∫–∞ –ø–µ—Ä–µ–º–∏–∫–∞–Ω–Ω—è –≤–∫–ª–∞–¥–∫–∏
     */
    TasksIntegration.prototype.onTabSwitch = function(tabName) {
        console.log(`üîÑ [TasksIntegration] –û–±—Ä–æ–±–∫–∞ –ø–µ—Ä–µ–º–∏–∫–∞–Ω–Ω—è –Ω–∞ –≤–∫–ª–∞–¥–∫—É: ${tabName}`);

        switch(tabName) {
            case 'flex':
                if (this.managers.flexEarn && this.state.walletConnected) {
                    console.log('  üîÑ [TasksIntegration] –û–Ω–æ–≤–ª–µ–Ω–Ω—è Flex –¥–∞–Ω–∏—Ö...');
                    this.managers.flexEarn.checkFlexBalance();
                }
                break;

            case 'daily':
                if (this.managers.dailyBonus) {
                    console.log('  üîÑ [TasksIntegration] –û–Ω–æ–≤–ª–µ–Ω–Ω—è Daily Bonus...');
                    this.managers.dailyBonus.updateDailyBonusUI();
                }
                break;

            case 'social':
                if (this.managers.tasksManager) {
                    console.log('  üîÑ [TasksIntegration] –û–Ω–æ–≤–ª–µ–Ω–Ω—è Social –∑–∞–≤–¥–∞–Ω—å...');
                    this.managers.tasksManager.updateTasksUI();
                }
                break;

            case 'limited':
                if (this.managers.tasksManager) {
                    console.log('  üîÑ [TasksIntegration] –û–Ω–æ–≤–ª–µ–Ω–Ω—è Limited –∑–∞–≤–¥–∞–Ω—å...');
                    this.managers.tasksManager.updateTasksUI();
                }
                break;

            case 'partner':
                if (this.managers.tasksManager) {
                    console.log('  üîÑ [TasksIntegration] –û–Ω–æ–≤–ª–µ–Ω–Ω—è Partner –∑–∞–≤–¥–∞–Ω—å...');
                    this.managers.tasksManager.updateTasksUI();
                }
                break;

            default:
                console.warn(`  ‚ö†Ô∏è [TasksIntegration] –ù–µ–≤—ñ–¥–æ–º–∞ –≤–∫–ª–∞–¥–∫–∞: ${tabName}`);
        }
    };

    /**
     * –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å—É –∫–æ—à–µ–ª—å–∫–∞
     */
    TasksIntegration.prototype.checkWalletStatus = function() {
        console.log('üîç [TasksIntegration] –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å—É –∫–æ—à–µ–ª—å–∫–∞ –ø—Ä–∏ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó...');

        // –Ø–∫—â–æ –Ω–∞ –≤–∫–ª–∞–¥—Ü—ñ Flex - –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∫–æ—à–µ–ª–µ–∫
        if (this.state.currentTab === 'flex' && this.managers.flexEarn) {
            this.managers.flexEarn.checkWalletConnection();
        }
    };

    /**
     * –ù–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏ –∞–≤—Ç–æ–∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è
     */
    TasksIntegration.prototype.setupAutoSave = function() {
        console.log('üíæ [TasksIntegration] –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∞–≤—Ç–æ–∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è...');

        if (this.autoSaveInterval) {
            clearInterval(this.autoSaveInterval);
        }

        this.autoSaveInterval = setInterval(() => {
            this.saveState();
        }, this.config.autoSaveInterval);

        console.log(`‚úÖ [TasksIntegration] –ê–≤—Ç–æ–∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–æ (–∫–æ–∂–Ω—ñ ${this.config.autoSaveInterval/1000} —Å–µ–∫)`);
    };

    /**
     * –ó–±–µ—Ä–µ–≥—Ç–∏ —Å—Ç–∞–Ω
     */
    TasksIntegration.prototype.saveState = function() {
        console.log('üíæ [TasksIntegration] –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Å—Ç–∞–Ω—É —Å–∏—Å—Ç–µ–º–∏...');

        try {
            const stateToSave = {
                userId: this.state.userId,
                currentTab: this.state.currentTab,
                timestamp: Date.now()
            };

            localStorage.setItem('tasksSystemState', JSON.stringify(stateToSave));
            console.log('‚úÖ [TasksIntegration] –°—Ç–∞–Ω –∑–±–µ—Ä–µ–∂–µ–Ω–æ:', stateToSave);
        } catch (error) {
            console.error('‚ùå [TasksIntegration] –ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Å—Ç–∞–Ω—É:', error);
        }
    };

    /**
     * –û–±—Ä–æ–±–∫–∞ –≤–∏–¥–∏–º–æ—Å—Ç—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
     */
    TasksIntegration.prototype.onPageVisible = function() {
        console.log('üëÅÔ∏è [TasksIntegration] –û–±—Ä–æ–±–∫–∞ –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –≤–∏–¥–∏–º–æ—Å—Ç—ñ...');

        // –û–Ω–æ–≤–ª—é—î–º–æ –¥–∞–Ω—ñ –ø–æ—Ç–æ—á–Ω–æ—ó –≤–∫–ª–∞–¥–∫–∏
        this.onTabSwitch(this.state.currentTab);
    };

    /**
     * –û–±—Ä–æ–±–∫–∞ –ø—Ä–∏—Ö–æ–≤—É–≤–∞–Ω–Ω—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏
     */
    TasksIntegration.prototype.onPageHidden = function() {
        console.log('üëÅÔ∏è [TasksIntegration] –û–±—Ä–æ–±–∫–∞ –ø—Ä–∏—Ö–æ–≤—É–≤–∞–Ω–Ω—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏...');

        // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —Å—Ç–∞–Ω
        this.saveState();
    };

    /**
     * –û–±—Ä–æ–±–∫–∞ –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –∑'—î–¥–Ω–∞–Ω–Ω—è
     */
    TasksIntegration.prototype.onOnline = function() {
        console.log('üåê [TasksIntegration] –û–±—Ä–æ–±–∫–∞ –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –∑\'—î–¥–Ω–∞–Ω–Ω—è...');

        this.showToast('–ó\'—î–¥–Ω–∞–Ω–Ω—è –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–æ', 'success');

        // –û–Ω–æ–≤–ª—é—î–º–æ –¥–∞–Ω—ñ
        this.onTabSwitch(this.state.currentTab);
    };

    /**
     * –û–±—Ä–æ–±–∫–∞ –≤—Ç—Ä–∞—Ç–∏ –∑'—î–¥–Ω–∞–Ω–Ω—è
     */
    TasksIntegration.prototype.onOffline = function() {
        console.log('üìµ [TasksIntegration] –û–±—Ä–æ–±–∫–∞ –≤—Ç—Ä–∞—Ç–∏ –∑\'—î–¥–Ω–∞–Ω–Ω—è...');

        this.showToast('–ó\'—î–¥–Ω–∞–Ω–Ω—è –≤—Ç—Ä–∞—á–µ–Ω–æ', 'error');
    };

    /**
     * –ü–æ–∫–∞–∑–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
     */
    TasksIntegration.prototype.showToast = function(message, type = 'info') {
        console.log(`üí¨ [TasksIntegration] Toast: ${type} - ${message}`);

        const toast = document.getElementById('toast-message');
        if (toast) {
            toast.textContent = message;
            toast.className = 'toast-message show ' + type;

            setTimeout(() => {
                toast.classList.remove('show');
            }, 3000);
        }
    };

    /**
     * –ü–æ–∫–∞–∑–∞—Ç–∏ –ø–æ–º–∏–ª–∫—É
     */
    TasksIntegration.prototype.showError = function(message) {
        console.error('‚ùå [TasksIntegration] –ü–æ–º–∏–ª–∫–∞:', message);
        this.showToast(message, 'error');
    };

    /**
     * –ó–Ω–∏—â–∏—Ç–∏ —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—é
     */
    TasksIntegration.prototype.destroy = function() {
        console.log('üßπ [TasksIntegration] –ó–Ω–∏—â–µ–Ω–Ω—è —Å–∏—Å—Ç–µ–º–∏...');

        // –û—á–∏—â—É—î–º–æ —ñ–Ω—Ç–µ—Ä–≤–∞–ª–∏
        if (this.autoSaveInterval) {
            clearInterval(this.autoSaveInterval);
        }

        // –ó–Ω–∏—â—É—î–º–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∏
        Object.values(this.managers).forEach(manager => {
            if (manager && typeof manager.destroy === 'function') {
                manager.destroy();
            }
        });

        // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —Ñ—ñ–Ω–∞–ª—å–Ω–∏–π —Å—Ç–∞–Ω
        this.saveState();

        console.log('‚úÖ [TasksIntegration] –°–∏—Å—Ç–µ–º–∞ –∑–Ω–∏—â–µ–Ω–∞');
    };

    // –°—Ç–≤–æ—Ä—é—î–º–æ —ñ –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ –µ–∫–∑–µ–º–ø–ª—è—Ä
    const integration = new TasksIntegration();

    console.log('‚úÖ [TasksIntegration] –Ü–Ω—Ç–µ–≥—Ä–∞—Ü—ñ–π–Ω–∏–π –º–æ–¥—É–ª—å –≥–æ—Ç–æ–≤–∏–π –¥–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó');

    return integration;

})();

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ DOM
document.addEventListener('DOMContentLoaded', function() {
    console.log('üìÑ [TasksIntegration] DOM –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ, –∑–∞–ø—É—Å–∫ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó...');

    try {
        window.tasksIntegration = window.TasksIntegration.init();
        console.log('üéâ [TasksIntegration] –°–∏—Å—Ç–µ–º–∞ –∑–∞–≤–¥–∞–Ω—å —É—Å–ø—ñ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–∞!');
    } catch (error) {
        console.error('‚ùå [TasksIntegration] –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–ø—É—Å—Ç–∏—Ç–∏ —Å–∏—Å—Ç–µ–º—É:', error);
    }
});