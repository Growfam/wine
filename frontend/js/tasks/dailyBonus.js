/**
 * –ú–æ–¥—É–ª—å Daily Bonus –¥–ª—è —Å–∏—Å—Ç–µ–º–∏ –∑–∞–≤–¥–∞–Ω—å WINIX
 * –£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è —â–æ–¥–µ–Ω–Ω–∏–º–∏ –≤–∏–Ω–∞–≥–æ—Ä–æ–¥–∞–º–∏
 */

window.DailyBonusManager = (function() {
    'use strict';

    console.log('üéÅ [DailyBonus] ===== –Ü–ù–Ü–¶–Ü–ê–õ–Ü–ó–ê–¶–Ü–Ø –ú–û–î–£–õ–Ø –©–û–î–ï–ù–ù–û–ì–û –ë–û–ù–£–°–£ =====');

    // –°—Ç–∞–Ω –º–æ–¥—É–ª—è
    const state = {
        userId: null,
        isInitialized: false,
        currentDay: 0,
        ticketDaysThisWeek: [],
        nextTicketDay: null,
        updateInterval: null
    };

    // –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è
    const config = {
        updateIntervalMs: 60000, // 1 —Ö–≤–∏–ª–∏–Ω–∞
        ticketsPerWeek: 3,
        maxDays: 30
    };

    /**
     * –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –º–æ–¥—É–ª—è
     */
    async function init(userId) {
        console.log('üöÄ [DailyBonus] –ü–æ—á–∞—Ç–æ–∫ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó');
        console.log('üë§ [DailyBonus] User ID:', userId);
        console.log('‚öôÔ∏è [DailyBonus] –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è:', config);

        state.userId = userId;

        try {
            // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —Å—Ç–∞–Ω –∑ –±–µ–∫–µ–Ω–¥—É
            await loadDailyBonusState();

            // –û–Ω–æ–≤–ª—é—î–º–æ UI
            updateDailyBonusUI();

            // –ù–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ —Ç–∞–π–º–µ—Ä –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
            setupUpdateTimer();

            // –ù–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π
            setupEventHandlers();

            state.isInitialized = true;
            console.log('‚úÖ [DailyBonus] –ú–æ–¥—É–ª—å —É—Å–ø—ñ—à–Ω–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ');

        } catch (error) {
            console.error('‚ùå [DailyBonus] –ü–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó:', error);
            throw error;
        }
    }

    /**
     * –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å—Ç–∞–Ω—É –∑ –±–µ–∫–µ–Ω–¥—É
     */
    async function loadDailyBonusState() {
        console.log('üìÇ [DailyBonus] –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å—Ç–∞–Ω—É –∑ –±–µ–∫–µ–Ω–¥—É...');

        try {
            const response = await window.TasksUtils.apiCall(`/daily/status/${state.userId}`, {
                method: 'GET'
            });

            console.log('‚úÖ [DailyBonus] –û—Ç—Ä–∏–º–∞–Ω–æ —Å—Ç–∞–Ω –∑ –±–µ–∫–µ–Ω–¥—É:', response);

            // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω –≤ —Å—Ç–æ—Ä—ñ
            const store = window.TasksStore;
            if (response.currentStreak !== undefined) {
                store.actions.setDailyStreak(response.currentStreak);
            }

            // –û–Ω–æ–≤–ª—é—î–º–æ –ª–æ–∫–∞–ª—å–Ω–∏–π —Å—Ç–∞–Ω
            state.currentDay = response.currentDay || 0;
            state.ticketDaysThisWeek = response.ticketDaysThisWeek || [];

            // –†–æ–∑—Ä–∞—Ö–æ–≤—É—î–º–æ –Ω–∞—Å—Ç—É–ø–Ω–∏–π –¥–µ–Ω—å –∑ –∫–≤–∏—Ç–∫–∞–º–∏
            calculateNextTicketDay();

            console.log('üìä [DailyBonus] –ü–æ—Ç–æ—á–Ω–∏–π —Å—Ç–∞–Ω:', {
                –¥–µ–Ω—å: state.currentDay,
                —Å–µ—Ä—ñ—è: response.currentStreak,
                –¥–Ω—ñ–≤–ó–ö–≤–∏—Ç–∫–∞–º–∏: state.ticketDaysThisWeek
            });

        } catch (error) {
            console.error('‚ùå [DailyBonus] –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å—Ç–∞–Ω—É:', error);
            // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –ª–æ–∫–∞–ª—å–Ω—ñ –¥–∞–Ω—ñ —è–∫—â–æ –±–µ–∫–µ–Ω–¥ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π
            loadLocalState();
        }
    }

    /**
     * –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Å—Ç–∞–Ω—É
     */
    function loadLocalState() {
        console.log('üìÇ [DailyBonus] –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Å—Ç–∞–Ω—É...');

        const store = window.TasksStore;
        const dailyBonus = store.getState().dailyBonus;

        state.currentDay = dailyBonus.claimedDays.length;
        state.ticketDaysThisWeek = dailyBonus.ticketDays.filter(day => {
            const dayDate = new Date(day);
            const weekAgo = new Date();
            weekAgo.setDate(weekAgo.getDate() - 7);
            return dayDate > weekAgo;
        });

        console.log('‚úÖ [DailyBonus] –õ–æ–∫–∞–ª—å–Ω–∏–π —Å—Ç–∞–Ω –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ');
    }

    /**
     * –û–Ω–æ–≤–ª–µ–Ω–Ω—è UI —â–æ–¥–µ–Ω–Ω–æ–≥–æ –±–æ–Ω—É—Å—É
     */
    function updateDailyBonusUI() {
        console.log('üîÑ [DailyBonus] === –û–ù–û–í–õ–ï–ù–ù–Ø UI ===');

        const store = window.TasksStore;
        const dailyBonus = store.getState().dailyBonus;

        // –û–Ω–æ–≤–ª—é—î–º–æ –∫–∞–ª–µ–Ω–¥–∞—Ä
        updateCalendarUI(dailyBonus);

        // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        updateStatsUI(dailyBonus);

        // –û–Ω–æ–≤–ª—é—î–º–æ –∫–Ω–æ–ø–∫—É –æ—Ç—Ä–∏–º–∞–Ω–Ω—è
        updateClaimButtonUI();

        console.log('‚úÖ [DailyBonus] UI –æ–Ω–æ–≤–ª–µ–Ω–æ');
    }

    /**
     * –û–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è
     */
    function updateCalendarUI(dailyBonus) {
        console.log('üìÖ [DailyBonus] –û–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è...');

        const calendar = document.querySelector('.daily-calendar');
        if (!calendar) {
            console.warn('‚ö†Ô∏è [DailyBonus] –ï–ª–µ–º–µ–Ω—Ç –∫–∞–ª–µ–Ω–¥–∞—Ä—è –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
            return;
        }

        // –û—á–∏—â–∞—î–º–æ –∫–∞–ª–µ–Ω–¥–∞—Ä
        calendar.innerHTML = '';

        // –°—Ç–≤–æ—Ä—é—î–º–æ –¥–Ω—ñ
        for (let day = 1; day <= config.maxDays; day++) {
            const dayCell = createDayCell(day, dailyBonus);
            calendar.appendChild(dayCell);
        }

        console.log('‚úÖ [DailyBonus] –ö–∞–ª–µ–Ω–¥–∞—Ä –æ–Ω–æ–≤–ª–µ–Ω–æ');
    }

    /**
     * –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–æ–º—ñ—Ä–∫–∏ –¥–Ω—è
     */
    function createDayCell(dayNumber, dailyBonus) {
        console.log(`üìÖ [DailyBonus] –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–Ω—è ${dayNumber}`);

        const cell = document.createElement('div');
        cell.className = 'day-cell';
        cell.setAttribute('data-day', dayNumber);

        // –í–∏–∑–Ω–∞—á–∞—î–º–æ —Å—Ç–∞–Ω –¥–Ω—è
        const today = new Date();
        const dayDate = new Date(today);
        dayDate.setDate(dayDate.getDate() - dailyBonus.currentStreak + dayNumber - 1);

        const isClaimed = dailyBonus.claimedDays.some(claimedDate => {
            return new Date(claimedDate).toDateString() === dayDate.toDateString();
        });

        const isToday = dayNumber === dailyBonus.currentStreak + 1;
        const isFuture = dayNumber > dailyBonus.currentStreak + 1;

        // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –∫–ª–∞—Å–∏
        if (isClaimed) {
            cell.classList.add('claimed');
        }
        if (isToday) {
            cell.classList.add('today');
        }
        if (isFuture) {
            cell.classList.add('future');
        }

        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —î –∫–≤–∏—Ç–∫–∏ –≤ —Ü–µ–π –¥–µ–Ω—å
        const hasTickets = dailyBonus.ticketDays.some(ticketDate => {
            return new Date(ticketDate).toDateString() === dayDate.toDateString();
        });

        // –í–º—ñ—Å—Ç –∫–æ–º—ñ—Ä–∫–∏
        cell.innerHTML = `
            <div class="day-number">${dayNumber}</div>
            <div class="day-reward">${getDayReward(dayNumber).winix}</div>
            ${hasTickets ? '<div class="ticket-indicator">üéüÔ∏è</div>' : ''}
        `;

        return cell;
    }

    /**
     * –û—Ç—Ä–∏–º–∞—Ç–∏ –≤–∏–Ω–∞–≥–æ—Ä–æ–¥—É –¥–ª—è –¥–Ω—è
     */
    function getDayReward(dayNumber) {
        return window.BonusCalculator.calculateDailyReward(dayNumber);
    }

    /**
     * –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
     */
    function updateStatsUI(dailyBonus) {
        console.log('üìä [DailyBonus] –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...');

        // –ü–æ—Ç–æ—á–Ω–∞ —Å–µ—Ä—ñ—è
        const streakElement = document.getElementById('current-streak');
        if (streakElement) {
            streakElement.textContent = dailyBonus.currentStreak;
        }

        // –ù–∞–π–¥–æ–≤—à–∞ —Å–µ—Ä—ñ—è
        const longestStreakElement = document.getElementById('longest-streak');
        if (longestStreakElement) {
            longestStreakElement.textContent = dailyBonus.longestStreak;
        }

        // –ó—ñ–±—Ä–∞–Ω–æ winix
        const totalWinixElement = document.getElementById('total-winix-claimed');
        if (totalWinixElement) {
            totalWinixElement.textContent = window.TasksUtils.formatNumber(dailyBonus.totalClaimed.winix);
        }

        // –ó—ñ–±—Ä–∞–Ω–æ tickets
        const totalTicketsElement = document.getElementById('total-tickets-claimed');
        if (totalTicketsElement) {
            totalTicketsElement.textContent = dailyBonus.totalClaimed.tickets;
        }

        console.log('‚úÖ [DailyBonus] –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–∞');
    }

    /**
     * –û–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–Ω–æ–ø–∫–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è
     */
    function updateClaimButtonUI() {
        console.log('üîò [DailyBonus] –û–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–Ω–æ–ø–∫–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è...');

        const button = document.querySelector('.claim-daily-button');
        if (!button) return;

        const canClaim = window.TasksStore.selectors.canClaimDailyBonus();
        const store = window.TasksStore;
        const dailyBonus = store.getState().dailyBonus;

        if (canClaim) {
            button.disabled = false;
            button.className = 'claim-daily-button available';

            // –†–æ–∑—Ä–∞—Ö–æ–≤—É—î–º–æ –≤–∏–Ω–∞–≥–æ—Ä–æ–¥—É
            const nextDay = dailyBonus.currentStreak + 1;
            const reward = getDayReward(nextDay);

            button.innerHTML = `
                <span class="button-text">–û—Ç—Ä–∏–º–∞—Ç–∏ ${reward.winix} WINIX</span>
                ${reward.tickets > 0 ? `<span class="bonus-tickets">+${reward.tickets} üéüÔ∏è</span>` : ''}
            `;
        } else {
            button.disabled = true;
            button.className = 'claim-daily-button claimed';

            // –ü–æ–∫–∞–∑—É—î–º–æ —á–∞—Å –¥–æ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –±–æ–Ω—É—Å—É
            const timeUntilNext = window.TasksUtils.getTimeUntilMidnight();
            button.innerHTML = `
                <span class="button-text">–û—Ç—Ä–∏–º–∞–Ω–æ —Å—å–æ–≥–æ–¥–Ω—ñ</span>
                <span class="timer">${timeUntilNext.formatted}</span>
            `;
        }

        console.log('‚úÖ [DailyBonus] –ö–Ω–æ–ø–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–∞');
    }

    /**
     * –û—Ç—Ä–∏–º–∞—Ç–∏ —â–æ–¥–µ–Ω–Ω–∏–π –±–æ–Ω—É—Å
     */
    async function claimDailyBonus() {
        console.log('üéÅ [DailyBonus] === –û–¢–†–ò–ú–ê–ù–ù–Ø –©–û–î–ï–ù–ù–û–ì–û –ë–û–ù–£–°–£ ===');

        const store = window.TasksStore;

        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –º–æ–∂–Ω–∞ –æ—Ç—Ä–∏–º–∞—Ç–∏
        if (!store.selectors.canClaimDailyBonus()) {
            console.warn('‚ö†Ô∏è [DailyBonus] –ë–æ–Ω—É—Å –≤–∂–µ –æ—Ç—Ä–∏–º–∞–Ω–æ —Å—å–æ–≥–æ–¥–Ω—ñ');
            window.TasksUtils.showToast('–ë–æ–Ω—É—Å –≤–∂–µ –æ—Ç—Ä–∏–º–∞–Ω–æ —Å—å–æ–≥–æ–¥–Ω—ñ', 'warning');
            return;
        }

        // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω –æ—Ç—Ä–∏–º–∞–Ω–Ω—è
        store.actions.setDailyClaiming(true);

        try {
            // –†–æ–∑—Ä–∞—Ö–æ–≤—É—î–º–æ –≤–∏–Ω–∞–≥–æ—Ä–æ–¥—É
            const nextDay = store.getState().dailyBonus.currentStreak + 1;
            const reward = window.BonusCalculator.calculateDailyReward(nextDay);

            console.log('üí∞ [DailyBonus] –†–æ–∑—Ä–∞—Ö–æ–≤–∞–Ω–∞ –≤–∏–Ω–∞–≥–æ—Ä–æ–¥–∞:', reward);

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —Å—å–æ–≥–æ–¥–Ω—ñ –¥–µ–Ω—å –∑ –∫–≤–∏—Ç–∫–∞–º–∏
            const isTicketDay = checkIfTicketDay();
            if (isTicketDay) {
                const ticketAmount = window.BonusCalculator.calculateTicketAmount(nextDay);
                reward.tickets = ticketAmount;
                console.log('üéüÔ∏è [DailyBonus] –°—å–æ–≥–æ–¥–Ω—ñ –¥–µ–Ω—å –∑ –∫–≤–∏—Ç–∫–∞–º–∏! –ö—ñ–ª—å–∫—ñ—Å—Ç—å:', ticketAmount);
            }

            // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –∑–∞–ø–∏—Ç –Ω–∞ –±–µ–∫–µ–Ω–¥
            const response = await window.TasksUtils.apiCall(`/daily/claim/${state.userId}`, {
                method: 'POST',
                body: {
                    day: nextDay,
                    reward: reward,
                    timestamp: Date.now()
                }
            });

            console.log('‚úÖ [DailyBonus] –í—ñ–¥–ø–æ–≤—ñ–¥—å –≤—ñ–¥ –±–µ–∫–µ–Ω–¥—É:', response);

            // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω
            store.actions.claimDailyBonus(reward);

            if (reward.tickets > 0) {
                store.actions.addTicketDay(new Date().toISOString());
            }

            // –û–Ω–æ–≤–ª—é—î–º–æ –±–∞–ª–∞–Ω—Å–∏
            const currentBalance = store.selectors.getUserBalance();
            store.actions.updateBalance({
                winix: currentBalance.winix + reward.winix,
                tickets: currentBalance.tickets + reward.tickets
            });

            // –ü–æ–∫–∞–∑—É—î–º–æ –∞–Ω—ñ–º–∞—Ü—ñ—é
            showClaimAnimation(reward);

            // –û–Ω–æ–≤–ª—é—î–º–æ UI
            updateDailyBonusUI();

            console.log('‚úÖ [DailyBonus] –ë–æ–Ω—É—Å —É—Å–ø—ñ—à–Ω–æ –æ—Ç—Ä–∏–º–∞–Ω–æ!');

        } catch (error) {
            console.error('‚ùå [DailyBonus] –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –±–æ–Ω—É—Å—É:', error);
            window.TasksUtils.showToast('–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –±–æ–Ω—É—Å—É', 'error');

        } finally {
            store.actions.setDailyClaiming(false);
        }
    }

    /**
     * –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ —Å—å–æ–≥–æ–¥–Ω—ñ –¥–µ–Ω—å –∑ –∫–≤–∏—Ç–∫–∞–º–∏
     */
    function checkIfTicketDay() {
        console.log('üéüÔ∏è [DailyBonus] –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ —Å—å–æ–≥–æ–¥–Ω—ñ –¥–µ–Ω—å –∑ –∫–≤–∏—Ç–∫–∞–º–∏...');

        // –Ø–∫—â–æ –≤–∂–µ —î 3 –¥–Ω—ñ –∑ –∫–≤–∏—Ç–∫–∞–º–∏ —Ü—å–æ–≥–æ —Ç–∏–∂–Ω—è - —Ç–æ—á–Ω–æ –Ω—ñ
        if (state.ticketDaysThisWeek.length >= config.ticketsPerWeek) {
            console.log('‚ùå [DailyBonus] –í–∂–µ –≤–∏–¥–∞–Ω–æ –º–∞–∫—Å–∏–º—É–º –∫–≤–∏—Ç–∫—ñ–≤ —Ü—å–æ–≥–æ —Ç–∏–∂–Ω—è');
            return false;
        }

        // –†–∞–Ω–¥–æ–º–Ω–æ –≤–∏–∑–Ω–∞—á–∞—î–º–æ (30% —à–∞–Ω—Å)
        const isTicketDay = Math.random() < 0.3;
        console.log(`üé≤ [DailyBonus] –†–∞–Ω–¥–æ–º–Ω–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞: ${isTicketDay ? '–¢–ê–ö' : '–ù–Ü'}`);

        return isTicketDay;
    }

    /**
     * –†–æ–∑—Ä–∞—Ö—É–≤–∞—Ç–∏ –Ω–∞—Å—Ç—É–ø–Ω–∏–π –¥–µ–Ω—å –∑ –∫–≤–∏—Ç–∫–∞–º–∏
     */
    function calculateNextTicketDay() {
        console.log('üìÖ [DailyBonus] –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –¥–Ω—è –∑ –∫–≤–∏—Ç–∫–∞–º–∏...');

        // –¶–µ –ø—Ä–∏–±–ª–∏–∑–Ω–∏–π —Ä–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –¥–ª—è UI
        const remainingTickets = config.ticketsPerWeek - state.ticketDaysThisWeek.length;
        const remainingDaysInWeek = 7 - (new Date().getDay() || 7);

        if (remainingTickets > 0 && remainingDaysInWeek > 0) {
            const probability = remainingTickets / remainingDaysInWeek;
            console.log(`üìä [DailyBonus] –ô–º–æ–≤—ñ—Ä–Ω—ñ—Å—Ç—å –∫–≤–∏—Ç–∫—ñ–≤: ${(probability * 100).toFixed(1)}%`);

            state.nextTicketDay = probability > 0.5 ? '–í–∏—Å–æ–∫–∏–π —à–∞–Ω—Å —Å—å–æ–≥–æ–¥–Ω—ñ!' : '–ú–æ–∂–ª–∏–≤–æ —Ü—å–æ–≥–æ —Ç–∏–∂–Ω—è';
        } else {
            state.nextTicketDay = '–ù–∞—Å—Ç—É–ø–Ω–æ–≥–æ —Ç–∏–∂–Ω—è';
        }

        console.log('‚úÖ [DailyBonus] –ù–∞—Å—Ç—É–ø–Ω–∏–π –¥–µ–Ω—å –∑ –∫–≤–∏—Ç–∫–∞–º–∏:', state.nextTicketDay);
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç–∏ –∞–Ω—ñ–º–∞—Ü—ñ—é –æ—Ç—Ä–∏–º–∞–Ω–Ω—è
     */
    function showClaimAnimation(reward) {
        console.log('üéä [DailyBonus] –ü–æ–∫–∞–∑—É—î–º–æ –∞–Ω—ñ–º–∞—Ü—ñ—é –æ—Ç—Ä–∏–º–∞–Ω–Ω—è');

        // –°—Ç–≤–æ—Ä—é—î–º–æ –µ–ª–µ–º–µ–Ω—Ç –∞–Ω—ñ–º–∞—Ü—ñ—ó
        const animDiv = document.createElement('div');
        animDiv.className = 'daily-bonus-claimed';

        let content = `<div class="reward-amount">+${reward.winix} WINIX</div>`;
        if (reward.tickets > 0) {
            content += `<div class="reward-tickets">+${reward.tickets} TICKETS üéüÔ∏è</div>`;
        }

        animDiv.innerHTML = content;
        document.body.appendChild(animDiv);

        // –ó–∞–ø—É—Å–∫–∞—î–º–æ –∞–Ω—ñ–º–∞—Ü—ñ—é
        setTimeout(() => {
            animDiv.classList.add('show');
        }, 10);

        // –í–∏–¥–∞–ª—è—î–º–æ –ø—ñ—Å–ª—è –∞–Ω—ñ–º–∞—Ü—ñ—ó
        setTimeout(() => {
            animDiv.classList.remove('show');
            setTimeout(() => {
                document.body.removeChild(animDiv);
            }, 500);
        }, 2500);

        // Toast –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        let message = `–û—Ç—Ä–∏–º–∞–Ω–æ ${reward.winix} WINIX`;
        if (reward.tickets > 0) {
            message += ` —Ç–∞ ${reward.tickets} tickets!`;
        }
        window.TasksUtils.showToast(message, 'success');
    }

    /**
     * –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Ç–∞–π–º–µ—Ä–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
     */
    function setupUpdateTimer() {
        console.log('‚è∞ [DailyBonus] –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Ç–∞–π–º–µ—Ä–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è');

        // –û—á–∏—â–∞—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ–π —Ç–∞–π–º–µ—Ä
        if (state.updateInterval) {
            clearInterval(state.updateInterval);
        }

        // –û–Ω–æ–≤–ª—é—î–º–æ –∫–æ–∂–Ω—É —Ö–≤–∏–ª–∏–Ω—É
        state.updateInterval = setInterval(() => {
            console.log('üîÑ [DailyBonus] –ü–µ—Ä—ñ–æ–¥–∏—á–Ω–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è');

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–æ–≤–∏–π –¥–µ–Ω—å
            if (window.TasksStore.selectors.canClaimDailyBonus()) {
                console.log('üÜï [DailyBonus] –ù–æ–≤–∏–π –¥–µ–Ω—å! –û–Ω–æ–≤–ª—é—î–º–æ UI');
                updateDailyBonusUI();
            }

            // –û–Ω–æ–≤–ª—é—î–º–æ —Ç–∞–π–º–µ—Ä –Ω–∞ –∫–Ω–æ–ø—Ü—ñ
            updateClaimButtonUI();

        }, config.updateIntervalMs);

        console.log('‚úÖ [DailyBonus] –¢–∞–π–º–µ—Ä –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–æ');
    }

    /**
     * –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –ø–æ–¥—ñ–π
     */
    function setupEventHandlers() {
        console.log('üéØ [DailyBonus] –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –ø–æ–¥—ñ–π');

        // –ö–Ω–æ–ø–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è
        const claimButton = document.querySelector('.claim-daily-button');
        if (claimButton) {
            claimButton.addEventListener('click', claimDailyBonus);
            console.log('‚úÖ [DailyBonus] –û–±—Ä–æ–±–Ω–∏–∫ –∫–Ω–æ–ø–∫–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–æ–¥–∞–Ω–æ');
        }

        // –ö–ª—ñ–∫ –Ω–∞ –¥–µ–Ω—å –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—ñ
        const calendar = document.querySelector('.daily-calendar');
        if (calendar) {
            calendar.addEventListener('click', (e) => {
                const dayCell = e.target.closest('.day-cell');
                if (dayCell) {
                    const day = parseInt(dayCell.getAttribute('data-day'));
                    console.log(`üìÖ [DailyBonus] –ö–ª—ñ–∫ –Ω–∞ –¥–µ–Ω—å ${day}`);
                    showDayDetails(day);
                }
            });
            console.log('‚úÖ [DailyBonus] –û–±—Ä–æ–±–Ω–∏–∫ –∫–∞–ª–µ–Ω–¥–∞—Ä—è –¥–æ–¥–∞–Ω–æ');
        }
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç–∏ –¥–µ—Ç–∞–ª—ñ –¥–Ω—è
     */
    function showDayDetails(day) {
        console.log(`üìã [DailyBonus] –ü–æ–∫–∞–∑—É—î–º–æ –¥–µ—Ç–∞–ª—ñ –¥–Ω—è ${day}`);

        const reward = getDayReward(day);
        const message = `–î–µ–Ω—å ${day}: ${reward.winix} WINIX` +
                       (reward.tickets > 0 ? ` + ${reward.tickets} tickets` : '');

        window.TasksUtils.showToast(message, 'info');
    }

    /**
     * –°–∫–∏–Ω—É—Ç–∏ —â–æ–¥–µ–Ω–Ω—ñ –¥–∞–Ω—ñ (–¥–ª—è –Ω–æ–≤–æ–≥–æ –º—ñ—Å—è—Ü—è)
     */
    function resetMonthlyData() {
        console.log('üîÑ [DailyBonus] === –°–ö–ò–î–ê–ù–ù–Ø –ú–Ü–°–Ø–ß–ù–ò–• –î–ê–ù–ò–• ===');

        const store = window.TasksStore;
        store.actions.resetDailyBonus();

        // –û—á–∏—â–∞—î–º–æ –ª–æ–∫–∞–ª—å–Ω–∏–π —Å—Ç–∞–Ω
        state.currentDay = 0;
        state.ticketDaysThisWeek = [];

        // –û–Ω–æ–≤–ª—é—î–º–æ UI
        updateDailyBonusUI();

        console.log('‚úÖ [DailyBonus] –ú—ñ—Å—è—á–Ω—ñ –¥–∞–Ω—ñ —Å–∫–∏–Ω—É—Ç–æ');
    }

    /**
     * –û—Ç—Ä–∏–º–∞—Ç–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
     */
    function getStatistics() {
        const store = window.TasksStore;
        const dailyBonus = store.getState().dailyBonus;

        return {
            currentStreak: dailyBonus.currentStreak,
            longestStreak: dailyBonus.longestStreak,
            totalWinix: dailyBonus.totalClaimed.winix,
            totalTickets: dailyBonus.totalClaimed.tickets,
            daysCompleted: dailyBonus.claimedDays.length,
            completionRate: (dailyBonus.claimedDays.length / config.maxDays * 100).toFixed(1) + '%'
        };
    }

    /**
     * –ó–Ω–∏—â–∏—Ç–∏ –º–æ–¥—É–ª—å
     */
    function destroy() {
        console.log('üóëÔ∏è [DailyBonus] === –ó–ù–ò–©–ï–ù–ù–Ø –ú–û–î–£–õ–Ø ===');

        // –û—á–∏—â–∞—î–º–æ —Ç–∞–π–º–µ—Ä
        if (state.updateInterval) {
            clearInterval(state.updateInterval);
        }

        // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —Å—Ç–∞–Ω
        const store = window.TasksStore;
        if (store) {
            window.TasksUtils.storage.set('dailyBonusState', store.getState().dailyBonus);
        }

        console.log('‚úÖ [DailyBonus] –ú–æ–¥—É–ª—å –∑–Ω–∏—â–µ–Ω–æ');
    }

    console.log('‚úÖ [DailyBonus] –ú–æ–¥—É–ª—å —â–æ–¥–µ–Ω–Ω–æ–≥–æ –±–æ–Ω—É—Å—É –≥–æ—Ç–æ–≤–∏–π');

    // –ü—É–±–ª—ñ—á–Ω–∏–π API
    return {
        init,
        claimDailyBonus,
        updateDailyBonusUI,
        resetMonthlyData,
        getStatistics,
        destroy
    };

})();

console.log('‚úÖ [DailyBonus] –ú–æ–¥—É–ª—å –µ–∫—Å–ø–æ—Ä—Ç–æ–≤–∞–Ω–æ –≥–ª–æ–±–∞–ª—å–Ω–æ');