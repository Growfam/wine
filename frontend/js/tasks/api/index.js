/**
 * Task API - –≥–æ–ª–æ–≤–Ω–∏–π –º–æ–¥—É–ª—å –¥–ª—è —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—ó –∑ API –∑–∞–≤–¥–∞–Ω—å
 *
 * –û–±'—î–¥–Ω—É—î —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω—ñ—Å—Ç—å –æ—Å–Ω–æ–≤–Ω–∏—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ–≤ API –∑–∞–≤–¥–∞–Ω—å
 * –¥–ª—è –∑–∞–±–µ–∑–ø–µ—á–µ–Ω–Ω—è —î–¥–∏–Ω–æ–≥–æ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É –≤–∑–∞—î–º–æ–¥—ñ—ó –∑ —Å–∏—Å—Ç–µ–º–æ—é –∑–∞–≤–¥–∞–Ω—å
 *
 * @version 3.0.0
 */

// –Ü–º–ø–æ—Ä—Ç—É—î–º–æ –±–∞–∑–æ–≤—ñ –º–æ–¥—É–ª—ñ
import apiCore, { CONFIG } from './core.js';
import taskDataApi from './task-data.js';
import taskActionApi from './task-actions.js';

/**
 * –û—Å–Ω–æ–≤–Ω–∏–π –∫–ª–∞—Å API –¥–ª—è –∑–∞–≤–¥–∞–Ω—å
 */
class TaskApi {
    constructor() {
        // –ë–∞–∑–æ–≤—ñ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∏ API
        this.core = apiCore;
        this.data = taskDataApi;
        this.actions = taskActionApi;

        // –ï–∫—Å–ø–æ—Ä—Ç—É—î–º–æ –æ—Å–Ω–æ–≤–Ω—ñ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó
        this.config = CONFIG;
        this.baseUrl = this.core.baseUrl;
    }

    /**
     * –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è API –∑–∞–≤–¥–∞–Ω—å
     * @param {Object} options - –ü–∞—Ä–∞–º–µ—Ç—Ä–∏ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
     */
    init(options = {}) {
        // –õ–æ–≥—É—î–º–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—é
        console.log("üîÑ Task API: –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –º–æ–¥—É–ª—è –∑–∞–≤–¥–∞–Ω—å");

        // –ú–æ–∂–µ–º–æ –æ–Ω–æ–≤–∏—Ç–∏ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—é, —è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ
        if (options.apiPaths) {
            Object.assign(CONFIG.API_PATHS, options.apiPaths);
        }

        // –ì–µ–Ω–µ—Ä—É—î–º–æ –ø–æ–¥—ñ—é —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
        if (typeof document !== 'undefined') {
            document.dispatchEvent(new CustomEvent('task-api-initialized', {
                detail: {
                    timestamp: Date.now(),
                    version: '3.0.0'
                }
            }));
        }

        return this;
    }

    /**
     * –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –≤—Å—ñ—Ö –∑–∞–≤–¥–∞–Ω—å
     * @param {Object} options - –ü–∞—Ä–∞–º–µ—Ç—Ä–∏ –∑–∞–ø–∏—Ç—É
     * @returns {Promise<Object>} –î–∞–Ω—ñ –∑–∞–≤–¥–∞–Ω—å
     */
    async getAllTasks(options = {}) {
        return this.data.loadAllTasks(options);
    }

    /**
     * –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–∞–≤–¥–∞–Ω—å –ø–µ–≤–Ω–æ–≥–æ —Ç–∏–ø—É
     * @param {string} type - –¢–∏–ø –∑–∞–≤–¥–∞–Ω—å
     * @param {Object} options - –ü–∞—Ä–∞–º–µ—Ç—Ä–∏ –∑–∞–ø–∏—Ç—É
     * @returns {Promise<Object>} –î–∞–Ω—ñ –∑–∞–≤–¥–∞–Ω—å
     */
    async getTasksByType(type, options = {}) {
        return this.data.loadTasksByType(type, options);
    }

    /**
     * –û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∑–∞–≤–¥–∞–Ω–Ω—è
     * @param {string} taskId - ID –∑–∞–≤–¥–∞–Ω–Ω—è
     * @param {Object} options - –ü–∞—Ä–∞–º–µ—Ç—Ä–∏ –∑–∞–ø–∏—Ç—É
     * @returns {Promise<Object>} –î–∞–Ω—ñ –∑–∞–≤–¥–∞–Ω–Ω—è
     */
    async getTaskDetails(taskId, options = {}) {
        return this.data.getTaskData(taskId, options);
    }

    /**
     * –û—Ç—Ä–∏–º–∞–Ω–Ω—è –ø—Ä–æ–≥—Ä–µ—Å—É –∑–∞–≤–¥–∞–Ω–Ω—è
     * @param {string} taskId - ID –∑–∞–≤–¥–∞–Ω–Ω—è
     * @param {Object} options - –ü–∞—Ä–∞–º–µ—Ç—Ä–∏ –∑–∞–ø–∏—Ç—É
     * @returns {Promise<Object>} –ü—Ä–æ–≥—Ä–µ—Å –∑–∞–≤–¥–∞–Ω–Ω—è
     */
    async getTaskProgress(taskId, options = {}) {
        return this.data.getTaskProgress(taskId, options);
    }

    /**
     * –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Å—Ç–∞—Ç—É—Å—É –∑–∞–≤–¥–∞–Ω–Ω—è
     * @param {string} taskId - ID –∑–∞–≤–¥–∞–Ω–Ω—è
     * @param {Object} options - –ü–∞—Ä–∞–º–µ—Ç—Ä–∏ –∑–∞–ø–∏—Ç—É
     * @returns {Promise<Object>} –°—Ç–∞—Ç—É—Å –∑–∞–≤–¥–∞–Ω–Ω—è
     */
    async getTaskStatus(taskId, options = {}) {
        return this.data.getTaskStatus(taskId, options);
    }

    /**
     * –ü–æ—á–∞—Ç–æ–∫ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –∑–∞–≤–¥–∞–Ω–Ω—è
     * @param {string} taskId - ID –∑–∞–≤–¥–∞–Ω–Ω—è
     * @param {Object} options - –ü–∞—Ä–∞–º–µ—Ç—Ä–∏ –∑–∞–ø–∏—Ç—É
     * @returns {Promise<Object>} –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–ø–µ—Ä–∞—Ü—ñ—ó
     */
    async startTask(taskId, options = {}) {
        return this.actions.startTask(taskId, options);
    }

    /**
     * –í–µ—Ä–∏—Ñ—ñ–∫–∞—Ü—ñ—è –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –∑–∞–≤–¥–∞–Ω–Ω—è
     * @param {string} taskId - ID –∑–∞–≤–¥–∞–Ω–Ω—è
     * @param {Object} verificationData - –î–∞–Ω—ñ –¥–ª—è –≤–µ—Ä–∏—Ñ—ñ–∫–∞—Ü—ñ—ó
     * @param {Object} options - –ü–∞—Ä–∞–º–µ—Ç—Ä–∏ –∑–∞–ø–∏—Ç—É
     * @returns {Promise<Object>} –†–µ–∑—É–ª—å—Ç–∞—Ç –≤–µ—Ä–∏—Ñ—ñ–∫–∞—Ü—ñ—ó
     */
    async verifyTask(taskId, verificationData = {}, options = {}) {
        return this.actions.verifyTask(taskId, verificationData, options);
    }

    /**
     * –û–Ω–æ–≤–ª–µ–Ω–Ω—è –ø—Ä–æ–≥—Ä–µ—Å—É –∑–∞–≤–¥–∞–Ω–Ω—è
     * @param {string} taskId - ID –∑–∞–≤–¥–∞–Ω–Ω—è
     * @param {Object} progressData - –î–∞–Ω—ñ –ø—Ä–æ–≥—Ä–µ—Å—É
     * @param {Object} options - –ü–∞—Ä–∞–º–µ—Ç—Ä–∏ –∑–∞–ø–∏—Ç—É
     * @returns {Promise<Object>} –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
     */
    async updateTaskProgress(taskId, progressData = {}, options = {}) {
        return this.actions.updateTaskProgress(taskId, progressData, options);
    }

    /**
     * –°–∫–∞—Å—É–≤–∞–Ω–Ω—è –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –∑–∞–≤–¥–∞–Ω–Ω—è
     * @param {string} taskId - ID –∑–∞–≤–¥–∞–Ω–Ω—è
     * @param {Object} options - –ü–∞—Ä–∞–º–µ—Ç—Ä–∏ –∑–∞–ø–∏—Ç—É
     * @returns {Promise<Object>} –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–∫–∞—Å—É–≤–∞–Ω–Ω—è
     */
    async cancelTask(taskId, options = {}) {
        return this.actions.cancelTask(taskId, options);
    }

    /**
     * –û—Ç—Ä–∏–º–∞–Ω–Ω—è –Ω–∞–≥–æ—Ä–æ–¥–∏ –∑–∞ –∑–∞–≤–¥–∞–Ω–Ω—è
     * @param {string} taskId - ID –∑–∞–≤–¥–∞–Ω–Ω—è
     * @param {Object} options - –ü–∞—Ä–∞–º–µ—Ç—Ä–∏ –∑–∞–ø–∏—Ç—É
     * @returns {Promise<Object>} –†–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –Ω–∞–≥–æ—Ä–æ–¥–∏
     */
    async claimTaskReward(taskId, options = {}) {
        return this.actions.claimTaskReward(taskId, options);
    }

    /**
     * –û—á–∏—â–µ–Ω–Ω—è –∫–µ—à—É –¥–∞–Ω–∏—Ö –∑–∞–≤–¥–∞–Ω—å
     * @param {string} taskId - ID –∑–∞–≤–¥–∞–Ω–Ω—è –¥–ª—è –æ—á–∏—â–µ–Ω–Ω—è (–æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ)
     */
    clearCache(taskId) {
        if (taskId) {
            this.data.clearTaskCache(taskId);
        } else {
            this.data.clearTaskCache();
            this.core.clearCache();
        }
    }

    /**
     * –û—Ç—Ä–∏–º–∞–Ω–Ω—è ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
     * @returns {string|null} ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
     */
    getUserId() {
        return this.core.getUserId();
    }
}

// –°—Ç–≤–æ—Ä—é—î–º–æ —ñ –µ–∫—Å–ø–æ—Ä—Ç—É—î–º–æ —î–¥–∏–Ω–∏–π –µ–∫–∑–µ–º–ø–ª—è—Ä API
const taskApi = new TaskApi();

// –í–∏–∫–æ–Ω—É—î–º–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω—É —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—é
if (typeof window !== 'undefined') {
    // –ü—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ DOM
    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', () => taskApi.init());
    } else {
        // DOM –≤–∂–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ
        setTimeout(() => taskApi.init(), 0);
    }

    // –ï–∫—Å–ø–æ—Ä—Ç—É—î–º–æ –≤ –≥–ª–æ–±–∞–ª—å–Ω–∏–π –æ–±'—î–∫—Ç –¥–ª—è –ø—Ä—è–º–æ–≥–æ –¥–æ—Å—Ç—É–ø—É
    window.TaskAPI = taskApi;
}

// –ï–∫—Å–ø–æ—Ä—Ç—É—î–º–æ API –¥–ª—è –º–æ–¥—É–ª—å–Ω–æ–≥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è
export default taskApi;

// –ï–∫—Å–ø–æ—Ä—Ç—É—î–º–æ –æ–∫—Ä–µ–º—ñ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∏ –¥–ª—è —Ä–æ–∑—à–∏—Ä–µ–Ω–æ–≥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è
export {
    apiCore,
    taskDataApi,
    taskActionApi,
    CONFIG
};