/**
 * –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –±–æ–Ω—É—Å—ñ–≤ –¥–ª—è —Å–∏—Å—Ç–µ–º–∏ –∑–∞–≤–¥–∞–Ω—å WINIX
 * –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ —â–æ–¥–µ–Ω–Ω–∏—Ö –≤–∏–Ω–∞–≥–æ—Ä–æ–¥ —Ç–∞ –ø—Ä–æ–≥—Ä–µ—Å–∏–≤–Ω–∏—Ö –±–æ–Ω—É—Å—ñ–≤
 */

window.BonusCalculator = (function() {
    'use strict';

    console.log('üßÆ [BonusCalculator] ===== –Ü–ù–Ü–¶–Ü–ê–õ–Ü–ó–ê–¶–Ü–Ø –ö–ê–õ–¨–ö–£–õ–Ø–¢–û–†–ê –ë–û–ù–£–°–Ü–í =====');

    // –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è –∑ –∫–æ–Ω—Å—Ç–∞–Ω—Ç
    const config = window.TasksConstants?.DAILY_BONUS || {
        BASE_REWARD: { winix: 20 },
        PROGRESSIVE_REWARDS: {
            1: { winix: 20 },
            7: { winix: 50 },
            14: { winix: 100 },
            21: { winix: 200 },
            30: { winix: 500 }
        },
        MAX_DAILY_WINIX: 2000,
        TICKET_CONFIG: {
            days_per_week: 3,
            min_tickets: 1,
            max_tickets: 5,
            progressive_multiplier: 0.5
        }
    };

    console.log('‚öôÔ∏è [BonusCalculator] –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∞ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è:', config);

    /**
     * –†–æ–∑—Ä–∞—Ö—É–≤–∞—Ç–∏ –≤–∏–Ω–∞–≥–æ—Ä–æ–¥—É –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –¥–Ω—è
     */
    function calculateDailyReward(dayNumber) {
        console.log(`üí∞ [BonusCalculator] === –†–û–ó–†–ê–•–£–ù–û–ö –í–ò–ù–ê–ì–û–†–û–î–ò –î–õ–Ø –î–ù–Ø ${dayNumber} ===`);

        // –í–∞–ª—ñ–¥–∞—Ü—ñ—è
        if (!window.TasksUtils.validate.isPositiveNumber(dayNumber)) {
            console.error('‚ùå [BonusCalculator] –ù–µ–≤—ñ—Ä–Ω–∏–π –Ω–æ–º–µ—Ä –¥–Ω—è:', dayNumber);
            return { winix: 0, tickets: 0 };
        }

        // –ë–∞–∑–æ–≤–∞ –≤–∏–Ω–∞–≥–æ—Ä–æ–¥–∞
        let winixAmount = config.BASE_REWARD.winix;
        console.log('üìä [BonusCalculator] –ë–∞–∑–æ–≤–∞ –≤–∏–Ω–∞–≥–æ—Ä–æ–¥–∞:', winixAmount);

        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Å–ø–µ—Ü—ñ–∞–ª—å–Ω—ñ –¥–Ω—ñ
        if (config.PROGRESSIVE_REWARDS[dayNumber]) {
            winixAmount = config.PROGRESSIVE_REWARDS[dayNumber].winix;
            console.log(`üéØ [BonusCalculator] –°–ø–µ—Ü—ñ–∞–ª—å–Ω–∏–π –¥–µ–Ω—å! –í–∏–Ω–∞–≥–æ—Ä–æ–¥–∞: ${winixAmount}`);
        } else {
            // –ü—Ä–æ–≥—Ä–µ—Å–∏–≤–Ω–∞ —Ñ–æ—Ä–º—É–ª–∞
            winixAmount = calculateProgressiveReward(dayNumber);
            console.log(`üìà [BonusCalculator] –ü—Ä–æ–≥—Ä–µ—Å–∏–≤–Ω–∞ –≤–∏–Ω–∞–≥–æ—Ä–æ–¥–∞: ${winixAmount}`);
        }

        // –û–±–º–µ–∂–µ–Ω–Ω—è –º–∞–∫—Å–∏–º—É–º–æ–º
        if (winixAmount > config.MAX_DAILY_WINIX) {
            console.log(`‚ö†Ô∏è [BonusCalculator] –ü–µ—Ä–µ–≤–∏—â–µ–Ω–æ –º–∞–∫—Å–∏–º—É–º, –æ–±–º–µ–∂—É—î–º–æ –¥–æ ${config.MAX_DAILY_WINIX}`);
            winixAmount = config.MAX_DAILY_WINIX;
        }

        const result = {
            winix: Math.floor(winixAmount),
            tickets: 0 // –ö–≤–∏—Ç–∫–∏ —Ä–æ–∑—Ä–∞—Ö–æ–≤—É—é—Ç—å—Å—è –æ–∫—Ä–µ–º–æ
        };

        console.log('‚úÖ [BonusCalculator] –§—ñ–Ω–∞–ª—å–Ω–∞ –≤–∏–Ω–∞–≥–æ—Ä–æ–¥–∞:', result);
        return result;
    }

    /**
     * –†–æ–∑—Ä–∞—Ö—É–≤–∞—Ç–∏ –ø—Ä–æ–≥—Ä–µ—Å–∏–≤–Ω—É –≤–∏–Ω–∞–≥–æ—Ä–æ–¥—É
     */
    function calculateProgressiveReward(dayNumber) {
        console.log('üìà [BonusCalculator] –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –ø—Ä–æ–≥—Ä–µ—Å–∏–≤–Ω–æ—ó –≤–∏–Ω–∞–≥–æ—Ä–æ–¥–∏...');

        // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –Ω–∞–π–±–ª–∏–∂—á—ñ –≤—ñ—Ö–∏
        const milestones = Object.keys(config.PROGRESSIVE_REWARDS)
            .map(Number)
            .sort((a, b) => a - b);

        let prevMilestone = 1;
        let prevReward = config.BASE_REWARD.winix;
        let nextMilestone = 30;
        let nextReward = config.MAX_DAILY_WINIX;

        for (let i = 0; i < milestones.length; i++) {
            if (milestones[i] <= dayNumber) {
                prevMilestone = milestones[i];
                prevReward = config.PROGRESSIVE_REWARDS[milestones[i]].winix;
            }
            if (milestones[i] > dayNumber && i > 0) {
                nextMilestone = milestones[i];
                nextReward = config.PROGRESSIVE_REWARDS[milestones[i]].winix;
                break;
            }
        }

        console.log('üìä [BonusCalculator] –Ü–Ω—Ç–µ—Ä–ø–æ–ª—è—Ü—ñ—è –º—ñ–∂ –≤—ñ—Ö–∞–º–∏:', {
            –ø–æ–ø–µ—Ä–µ–¥–Ω—è: `–î–µ–Ω—å ${prevMilestone}: ${prevReward} winix`,
            –Ω–∞—Å—Ç—É–ø–Ω–∞: `–î–µ–Ω—å ${nextMilestone}: ${nextReward} winix`
        });

        // –õ—ñ–Ω—ñ–π–Ω–∞ —ñ–Ω—Ç–µ—Ä–ø–æ–ª—è—Ü—ñ—è
        const progress = (dayNumber - prevMilestone) / (nextMilestone - prevMilestone);
        const reward = prevReward + (nextReward - prevReward) * progress;

        // –î–æ–¥–∞—î–º–æ –Ω–µ–≤–µ–ª–∏–∫–∏–π –±–æ–Ω—É—Å –∑–∞ –ø–æ—Å–ª—ñ–¥–æ–≤–Ω—ñ—Å—Ç—å
        const streakBonus = Math.floor(dayNumber / 7) * 10;
        const finalReward = reward + streakBonus;

        console.log('üìä [BonusCalculator] –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫:', {
            –ø—Ä–æ–≥—Ä–µ—Å: `${(progress * 100).toFixed(1)}%`,
            –±–∞–∑–æ–≤–∞–í–∏–Ω–∞–≥–æ—Ä–æ–¥–∞: Math.floor(reward),
            –±–æ–Ω—É—Å–ó–∞–°–µ—Ä—ñ—é: streakBonus,
            —Ñ—ñ–Ω–∞–ª—å–Ω–∞–í–∏–Ω–∞–≥–æ—Ä–æ–¥–∞: Math.floor(finalReward)
        });

        return finalReward;
    }

    /**
     * –†–æ–∑—Ä–∞—Ö—É–≤–∞—Ç–∏ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∫–≤–∏—Ç–∫—ñ–≤
     */
    function calculateTicketAmount(dayNumber) {
        console.log(`üéüÔ∏è [BonusCalculator] === –†–û–ó–†–ê–•–£–ù–û–ö –ö–í–ò–¢–ö–Ü–í –î–õ–Ø –î–ù–Ø ${dayNumber} ===`);

        const { min_tickets, max_tickets, progressive_multiplier } = config.TICKET_CONFIG;

        // –ë–∞–∑–æ–≤–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å
        let tickets = min_tickets;

        // –ü—Ä–æ–≥—Ä–µ—Å–∏–≤–Ω–µ –∑–±—ñ–ª—å—à–µ–Ω–Ω—è
        const weekNumber = Math.ceil(dayNumber / 7);
        const progressBonus = Math.floor((weekNumber - 1) * progressive_multiplier);

        tickets += progressBonus;

        // –û–±–º–µ–∂–µ–Ω–Ω—è –º–∞–∫—Å–∏–º—É–º–æ–º
        tickets = Math.min(tickets, max_tickets);

        console.log('üìä [BonusCalculator] –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –∫–≤–∏—Ç–∫—ñ–≤:', {
            –¥–µ–Ω—å: dayNumber,
            —Ç–∏–∂–¥–µ–Ω—å: weekNumber,
            –±–∞–∑–æ–≤–∞–ö—ñ–ª—å–∫—ñ—Å—Ç—å: min_tickets,
            –ø—Ä–æ–≥—Ä–µ—Å–∏–≤–Ω–∏–π–ë–æ–Ω—É—Å: progressBonus,
            —Ñ—ñ–Ω–∞–ª—å–Ω–∞–ö—ñ–ª—å–∫—ñ—Å—Ç—å: tickets
        });

        return tickets;
    }

    /**
     * –†–æ–∑—Ä–∞—Ö—É–≤–∞—Ç–∏ –∑–∞–≥–∞–ª—å–Ω—É –≤–∏–Ω–∞–≥–æ—Ä–æ–¥—É –∑–∞ –ø–µ—Ä—ñ–æ–¥
     */
    function calculatePeriodReward(fromDay, toDay) {
        console.log(`üìä [BonusCalculator] === –†–û–ó–†–ê–•–£–ù–û–ö –ó–ê –ü–ï–†–Ü–û–î ${fromDay}-${toDay} ===`);

        let totalWinix = 0;
        let totalTickets = 0;

        for (let day = fromDay; day <= toDay; day++) {
            const dailyReward = calculateDailyReward(day);
            totalWinix += dailyReward.winix;

            // –ü—Ä–∏–ø—É—Å–∫–∞—î–º–æ 3 –¥–Ω—ñ –∑ –∫–≤–∏—Ç–∫–∞–º–∏ –Ω–∞ —Ç–∏–∂–¥–µ–Ω—å
            if (shouldHaveTickets(day)) {
                totalTickets += calculateTicketAmount(day);
            }
        }

        const result = {
            winix: totalWinix,
            tickets: totalTickets,
            days: toDay - fromDay + 1
        };

        console.log('‚úÖ [BonusCalculator] –ó–∞–≥–∞–ª—å–Ω–∞ –≤–∏–Ω–∞–≥–æ—Ä–æ–¥–∞ –∑–∞ –ø–µ—Ä—ñ–æ–¥:', result);
        return result;
    }

    /**
     * –í–∏–∑–Ω–∞—á–∏—Ç–∏ —á–∏ –ø–æ–≤–∏–Ω–Ω—ñ –±—É—Ç–∏ –∫–≤–∏—Ç–∫–∏ –≤ —Ü–µ–π –¥–µ–Ω—å (–¥–ª—è –ø—Ä–æ–≥–Ω–æ–∑—É)
     */
    function shouldHaveTickets(dayNumber) {
        // –ü—Ä–æ—Å—Ç–∏–π –∞–ª–≥–æ—Ä–∏—Ç–º: –∫–≤–∏—Ç–∫–∏ –≤ –¥–Ω—ñ 2, 4, 6 –∫–æ–∂–Ω–æ–≥–æ —Ç–∏–∂–Ω—è
        const dayOfWeek = (dayNumber - 1) % 7 + 1;
        return [2, 4, 6].includes(dayOfWeek);
    }

    /**
     * –û—Ç—Ä–∏–º–∞—Ç–∏ –ø—Ä–æ–≥–Ω–æ–∑ –≤–∏–Ω–∞–≥–æ—Ä–æ–¥
     */
    function getRewardsForecast(currentDay, daysAhead = 7) {
        console.log(`üîÆ [BonusCalculator] === –ü–†–û–ì–ù–û–ó –í–ò–ù–ê–ì–û–†–û–î ===`);
        console.log(`üìä [BonusCalculator] –ü–æ—Ç–æ—á–Ω–∏–π –¥–µ–Ω—å: ${currentDay}, –ø—Ä–æ–≥–Ω–æ–∑ –Ω–∞ ${daysAhead} –¥–Ω—ñ–≤`);

        const forecast = [];

        for (let i = 1; i <= daysAhead; i++) {
            const day = currentDay + i;
            const reward = calculateDailyReward(day);
            const hasTickets = shouldHaveTickets(day);

            forecast.push({
                day: day,
                date: new Date(Date.now() + i * 24 * 60 * 60 * 1000),
                winix: reward.winix,
                tickets: hasTickets ? calculateTicketAmount(day) : 0,
                isSpecialDay: !!config.PROGRESSIVE_REWARDS[day]
            });
        }

        console.log('‚úÖ [BonusCalculator] –ü—Ä–æ–≥–Ω–æ–∑:', forecast);
        return forecast;
    }

    /**
     * –†–æ–∑—Ä–∞—Ö—É–≤–∞—Ç–∏ –≤–∏–Ω–∞–≥–æ—Ä–æ–¥—É –∑–∞ —Å–µ—Ä—ñ—é –¥–Ω—ñ–≤
     */
    function calculateStreakBonus(streakDays) {
        console.log(`üî• [BonusCalculator] === –†–û–ó–†–ê–•–£–ù–û–ö –ë–û–ù–£–°–£ –ó–ê –°–ï–†–Ü–Æ ===`);
        console.log(`üìä [BonusCalculator] –î–Ω—ñ –≤ —Å–µ—Ä—ñ—ó: ${streakDays}`);

        let bonusMultiplier = 1;

        // –ë–æ–Ω—É—Å–∏ –∑–∞ —Ç—Ä–∏–≤–∞–ª—ñ—Å—Ç—å —Å–µ—Ä—ñ—ó
        if (streakDays >= 30) {
            bonusMultiplier = 2.0;
        } else if (streakDays >= 21) {
            bonusMultiplier = 1.5;
        } else if (streakDays >= 14) {
            bonusMultiplier = 1.25;
        } else if (streakDays >= 7) {
            bonusMultiplier = 1.1;
        }

        const bonusPercent = Math.floor((bonusMultiplier - 1) * 100);

        console.log('‚úÖ [BonusCalculator] –ë–æ–Ω—É—Å –∑–∞ —Å–µ—Ä—ñ—é:', {
            –¥–Ω—ñ–≤: streakDays,
            –º–Ω–æ–∂–Ω–∏–∫: bonusMultiplier,
            –±–æ–Ω—É—Å: `+${bonusPercent}%`
        });

        return {
            multiplier: bonusMultiplier,
            bonusPercent: bonusPercent
        };
    }

    /**
     * –û—Ç—Ä–∏–º–∞—Ç–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≤–∏–Ω–∞–≥–æ—Ä–æ–¥
     */
    function getRewardStatistics() {
        console.log('üìä [BonusCalculator] === –°–¢–ê–¢–ò–°–¢–ò–ö–ê –í–ò–ù–ê–ì–û–†–û–î ===');

        // –†–æ–∑—Ä–∞—Ö–æ–≤—É—î–º–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –¥–ª—è –≤—Å—å–æ–≥–æ –º—ñ—Å—è—Ü—è
        const monthReward = calculatePeriodReward(1, 30);

        // –°–µ—Ä–µ–¥–Ω—è –≤–∏–Ω–∞–≥–æ—Ä–æ–¥–∞
        const avgDailyWinix = Math.floor(monthReward.winix / 30);

        // –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∞ —Ç–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞
        const minReward = config.BASE_REWARD.winix;
        const maxReward = config.MAX_DAILY_WINIX;

        // –í—ñ—Ö–∏
        const milestones = Object.entries(config.PROGRESSIVE_REWARDS)
            .map(([day, reward]) => ({
                day: parseInt(day),
                winix: reward.winix
            }))
            .sort((a, b) => a.day - b.day);

        const stats = {
            totalMonthlyWinix: monthReward.winix,
            totalMonthlyTickets: monthReward.tickets,
            averageDailyWinix: avgDailyWinix,
            minDailyReward: minReward,
            maxDailyReward: maxReward,
            milestones: milestones,
            estimatedTicketsPerWeek: config.TICKET_CONFIG.days_per_week
        };

        console.log('‚úÖ [BonusCalculator] –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:', stats);
        return stats;
    }

    /**
     * –í–∞–ª—ñ–¥–∞—Ü—ñ—è –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó
     */
    function validateConfig() {
        console.log('üîç [BonusCalculator] –í–∞–ª—ñ–¥–∞—Ü—ñ—è –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó...');

        const errors = [];

        // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –±–∞–∑–æ–≤–æ—ó –≤–∏–Ω–∞–≥–æ—Ä–æ–¥–∏
        if (!config.BASE_REWARD || !config.BASE_REWARD.winix) {
            errors.push('–í—ñ–¥—Å—É—Ç–Ω—è –±–∞–∑–æ–≤–∞ –≤–∏–Ω–∞–≥–æ—Ä–æ–¥–∞');
        }

        // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø—Ä–æ–≥—Ä–µ—Å–∏–≤–Ω–∏—Ö –≤–∏–Ω–∞–≥–æ—Ä–æ–¥
        if (!config.PROGRESSIVE_REWARDS || Object.keys(config.PROGRESSIVE_REWARDS).length === 0) {
            errors.push('–í—ñ–¥—Å—É—Ç–Ω—ñ –ø—Ä–æ–≥—Ä–µ—Å–∏–≤–Ω—ñ –≤–∏–Ω–∞–≥–æ—Ä–æ–¥–∏');
        }

        // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó –∫–≤–∏—Ç–∫—ñ–≤
        if (!config.TICKET_CONFIG) {
            errors.push('–í—ñ–¥—Å—É—Ç–Ω—è –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è –∫–≤–∏—Ç–∫—ñ–≤');
        }

        if (errors.length > 0) {
            console.error('‚ùå [BonusCalculator] –ü–æ–º–∏–ª–∫–∏ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó:', errors);
            return false;
        }

        console.log('‚úÖ [BonusCalculator] –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è –≤–∞–ª—ñ–¥–Ω–∞');
        return true;
    }

    /**
     * –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è
     */
    function init() {
        console.log('üöÄ [BonusCalculator] –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞');

        // –í–∞–ª—ñ–¥—É—î–º–æ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—é
        if (!validateConfig()) {
            console.error('‚ùå [BonusCalculator] –ù–µ–º–æ–∂–ª–∏–≤–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ –∑ –Ω–µ–≤–∞–ª—ñ–¥–Ω–æ—é –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—î—é');
            return false;
        }

        // –í–∏–≤–æ–¥–∏–º–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        const stats = getRewardStatistics();
        console.log('üìä [BonusCalculator] –ó–∞–≥–∞–ª—å–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º–∏ –≤–∏–Ω–∞–≥–æ—Ä–æ–¥:', {
            –º—ñ—Å—è—á–Ω–∏–π–ü–æ—Ç–µ–Ω—Ü—ñ–∞–ª: `${window.TasksUtils.formatNumber(stats.totalMonthlyWinix)} WINIX`,
            —Å–µ—Ä–µ–¥–Ω—è–í–∏–Ω–∞–≥–æ—Ä–æ–¥–∞: `${stats.averageDailyWinix} WINIX/–¥–µ–Ω—å`,
            –∫–≤–∏—Ç–∫–∏–ù–∞–¢–∏–∂–¥–µ–Ω—å: `~${stats.estimatedTicketsPerWeek} tickets`
        });

        console.log('‚úÖ [BonusCalculator] –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –≥–æ—Ç–æ–≤–∏–π –¥–æ —Ä–æ–±–æ—Ç–∏');
        return true;
    }

    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è
    init();

    console.log('‚úÖ [BonusCalculator] –ú–æ–¥—É–ª—å –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞ –±–æ–Ω—É—Å—ñ–≤ –≥–æ—Ç–æ–≤–∏–π');

    // –ü—É–±–ª—ñ—á–Ω–∏–π API
    return {
        calculateDailyReward,
        calculateTicketAmount,
        calculatePeriodReward,
        calculateStreakBonus,
        getRewardsForecast,
        getRewardStatistics,
        // –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∏ –¥–ª—è –∑–æ–≤–Ω—ñ—à–Ω—å–æ–≥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è
        config: config
    };

})();

console.log('‚úÖ [BonusCalculator] –ú–æ–¥—É–ª—å –µ–∫—Å–ø–æ—Ä—Ç–æ–≤–∞–Ω–æ –≥–ª–æ–±–∞–ª—å–Ω–æ');