frontend/
‚îú‚îÄ‚îÄ earn.html                    # –ì–æ–ª–æ–≤–Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞ —Å–∏—Å—Ç–µ–º–∏ –∑–∞–≤–¥–∞–Ω—å
‚îú‚îÄ‚îÄ js/
‚îÇ   ‚îú‚îÄ‚îÄ api.js                  # –ó–∞–≥–∞–ª—å–Ω–∏–π API –∫–ª—ñ—î–Ω—Ç (–∑ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç—É)
‚îÇ   ‚îú‚îÄ‚îÄ auth.js                 # –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è (–∑ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç—É)  
‚îÇ   ‚îú‚îÄ‚îÄ core.js                 # –ë–∞–∑–æ–≤–∏–π —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª (–∑ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç—É)
‚îÇ   ‚îî‚îÄ‚îÄ tasks/                  # –ú–æ–¥—É–ª—ñ —Å–∏—Å—Ç–µ–º–∏ –∑–∞–≤–¥–∞–Ω—å
‚îÇ       ‚îú‚îÄ‚îÄ constants.js        # –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∏ —Ç–∞ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è
‚îÇ       ‚îú‚îÄ‚îÄ utils.js           # –£—Ç–∏–ª—ñ—Ç–∞—Ä–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó
‚îÇ       ‚îú‚îÄ‚îÄ store.js           # Redux-–ø–æ–¥—ñ–±–Ω–∏–π —Å—Ç–æ—Ä
‚îÇ       ‚îú‚îÄ‚îÄ telegramValidator.js # –í–∞–ª—ñ–¥–∞—Ü—ñ—è Telegram
‚îÇ       ‚îú‚îÄ‚îÄ api.js             # –°–ø–µ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–∏–π API –¥–ª—è –∑–∞–≤–¥–∞–Ω—å
‚îÇ       ‚îú‚îÄ‚îÄ services.js        # –ö–æ–æ—Ä–¥–∏–Ω–∞—Ü—ñ–π–Ω—ñ —Å–µ—Ä–≤—ñ—Å–∏
‚îÇ       ‚îú‚îÄ‚îÄ flexEarn.js        # Flex –∑–∞–≤–¥–∞–Ω–Ω—è
‚îÇ       ‚îú‚îÄ‚îÄ dailyBonus.js      # –©–æ–¥–µ–Ω–Ω—ñ –±–æ–Ω—É—Å–∏
‚îÇ       ‚îú‚îÄ‚îÄ taskVerification.js # –í–µ—Ä–∏—Ñ—ñ–∫–∞—Ü—ñ—è –∑–∞–≤–¥–∞–Ω—å
‚îÇ       ‚îú‚îÄ‚îÄ tasksManager.js    # –ú–µ–Ω–µ–¥–∂–µ—Ä –∑–∞–≤–¥–∞–Ω—å
‚îÇ       ‚îú‚îÄ‚îÄ walletChecker.js   # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ TON –≥–∞–º–∞–Ω—Ü—è
‚îÇ       ‚îî‚îÄ‚îÄ integration.js     # –ì–æ–ª–æ–≤–Ω–∏–π —ñ–Ω—Ç–µ–≥—Ä–∞—Ç–æ—Ä
‚îî‚îÄ‚îÄ css/ # –°—Ç–∏–ª—ñ (–Ω–µ —Ä–æ–∑–≥–ª—è–¥–∞—é—Ç—å—Å—è –¥–µ—Ç–∞–ª—å–Ω–æ)

<!-- –ö—Ä–∏—Ç–∏—á–Ω—ñ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –∑–∞–≤–∞–Ω—Ç–∞–∂—É—é—Ç—å—Å—è –ø–µ—Ä—à–∏–º–∏ -->
<script src="./js/telegram-web-app.js"></script>
<script src="https://unpkg.com/@tonconnect/ui@latest/dist/tonconnect-ui.min.js"></script>

<!-- –ë–∞–∑–æ–≤—ñ –º–æ–¥—É–ª—ñ -->
<script src="./js/api.js"></script>
<script src="./js/auth.js"></script>
<script src="./js/core.js"></script>

<!-- –ú–æ–¥—É–ª—ñ –∑–∞–≤–¥–∞–Ω—å —É –ø—Ä–∞–≤–∏–ª—å–Ω—ñ–π –ø–æ—Å–ª—ñ–¥–æ–≤–Ω–æ—Å—Ç—ñ -->
<script src="js/tasks/constants.js"></script>
<script src="js/tasks/utils.js"></script>
<script src="js/tasks/store.js"></script>
<script src="js/tasks/telegramValidator.js"></script>
<script src="js/tasks/api.js"></script>
<script src="js/tasks/services.js"></script>
<script src="js/tasks/flexEarn.js"></script>
<script src="js/tasks/dailyBonus.js"></script>
<script src="js/tasks/taskVerification.js"></script>
<script src="js/tasks/tasksManager.js"></script>
<script src="js/tasks/walletChecker.js"></script>
<script src="js/tasks/integration.js"></script>

 –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è
javascript// integration.js - –≥–æ–ª–æ–≤–Ω–∏–π –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä
document.addEventListener('DOMContentLoaded', async function() {
    window.tasksIntegration = await window.TasksIntegration.init();
});

üìã –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –¥–µ—Ç–∞–ª—å–Ω–∏–π –æ–ø–∏—Å —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥—É —Å–∏—Å—Ç–µ–º–∏ –∑–∞–≤–¥–∞–Ω—å WINIX
üèóÔ∏è –ó–∞–≥–∞–ª—å–Ω–∞ –∞—Ä—Ö—ñ—Ç–µ–∫—Ç—É—Ä–∞
–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç—É
frontend/
‚îú‚îÄ‚îÄ earn.html                    # –ì–æ–ª–æ–≤–Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞ —Å–∏—Å—Ç–µ–º–∏ –∑–∞–≤–¥–∞–Ω—å
‚îú‚îÄ‚îÄ js/
‚îÇ   ‚îú‚îÄ‚îÄ api.js                  # –ó–∞–≥–∞–ª—å–Ω–∏–π API –∫–ª—ñ—î–Ω—Ç (–∑ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç—É)
‚îÇ   ‚îú‚îÄ‚îÄ auth.js                 # –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è (–∑ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç—É)
‚îÇ   ‚îú‚îÄ‚îÄ core.js                 # –ë–∞–∑–æ–≤–∏–π —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª (–∑ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç—É)
‚îÇ   ‚îî‚îÄ‚îÄ tasks/                  # –ú–æ–¥—É–ª—ñ —Å–∏—Å—Ç–µ–º–∏ –∑–∞–≤–¥–∞–Ω—å
‚îÇ       ‚îú‚îÄ‚îÄ constants.js        # –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∏ —Ç–∞ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è
‚îÇ       ‚îú‚îÄ‚îÄ utils.js           # –£—Ç–∏–ª—ñ—Ç–∞—Ä–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó
‚îÇ       ‚îú‚îÄ‚îÄ store.js           # Redux-–ø–æ–¥—ñ–±–Ω–∏–π —Å—Ç–æ—Ä
‚îÇ       ‚îú‚îÄ‚îÄ telegramValidator.js # –í–∞–ª—ñ–¥–∞—Ü—ñ—è Telegram
‚îÇ       ‚îú‚îÄ‚îÄ api.js             # –°–ø–µ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–∏–π API –¥–ª—è –∑–∞–≤–¥–∞–Ω—å
‚îÇ       ‚îú‚îÄ‚îÄ services.js        # –ö–æ–æ—Ä–¥–∏–Ω–∞—Ü—ñ–π–Ω—ñ —Å–µ—Ä–≤—ñ—Å–∏
‚îÇ       ‚îú‚îÄ‚îÄ flexEarn.js        # Flex –∑–∞–≤–¥–∞–Ω–Ω—è
‚îÇ       ‚îú‚îÄ‚îÄ dailyBonus.js      # –©–æ–¥–µ–Ω–Ω—ñ –±–æ–Ω—É—Å–∏
‚îÇ       ‚îú‚îÄ‚îÄ taskVerification.js # –í–µ—Ä–∏—Ñ—ñ–∫–∞—Ü—ñ—è –∑–∞–≤–¥–∞–Ω—å
‚îÇ       ‚îú‚îÄ‚îÄ tasksManager.js    # –ú–µ–Ω–µ–¥–∂–µ—Ä –∑–∞–≤–¥–∞–Ω—å
‚îÇ       ‚îú‚îÄ‚îÄ walletChecker.js   # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ TON –≥–∞–º–∞–Ω—Ü—è
‚îÇ       ‚îî‚îÄ‚îÄ integration.js     # –ì–æ–ª–æ–≤–Ω–∏–π —ñ–Ω—Ç–µ–≥—Ä–∞—Ç–æ—Ä
‚îî‚îÄ‚îÄ css/ # –°—Ç–∏–ª—ñ (–Ω–µ —Ä–æ–∑–≥–ª—è–¥–∞—é—Ç—å—Å—è –¥–µ—Ç–∞–ª—å–Ω–æ)

üîÑ –ü–æ—Å–ª—ñ–¥–æ–≤–Ω—ñ—Å—Ç—å —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó —Å–∏—Å—Ç–µ–º–∏
1. –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è DOM (earn.html)
html<!-- –ö—Ä–∏—Ç–∏—á–Ω—ñ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –∑–∞–≤–∞–Ω—Ç–∞–∂—É—é—Ç—å—Å—è –ø–µ—Ä—à–∏–º–∏ -->
<script src="./js/telegram-web-app.js"></script>
<script src="https://unpkg.com/@tonconnect/ui@latest/dist/tonconnect-ui.min.js"></script>

<!-- –ë–∞–∑–æ–≤—ñ –º–æ–¥—É–ª—ñ -->
<script src="./js/api.js"></script>
<script src="./js/auth.js"></script>
<script src="./js/core.js"></script>

<!-- –ú–æ–¥—É–ª—ñ –∑–∞–≤–¥–∞–Ω—å —É –ø—Ä–∞–≤–∏–ª—å–Ω—ñ–π –ø–æ—Å–ª—ñ–¥–æ–≤–Ω–æ—Å—Ç—ñ -->
<script src="js/tasks/constants.js"></script>
<script src="js/tasks/utils.js"></script>
<script src="js/tasks/store.js"></script>
<script src="js/tasks/telegramValidator.js"></script>
<script src="js/tasks/api.js"></script>
<script src="js/tasks/services.js"></script>
<script src="js/tasks/flexEarn.js"></script>
<script src="js/tasks/dailyBonus.js"></script>
<script src="js/tasks/taskVerification.js"></script>
<script src="js/tasks/tasksManager.js"></script>
<script src="js/tasks/walletChecker.js"></script>
<script src="js/tasks/integration.js"></script>
2. –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è
javascript// integration.js - –≥–æ–ª–æ–≤–Ω–∏–π –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä
document.addEventListener('DOMContentLoaded', async function() {
    window.tasksIntegration = await window.TasksIntegration.init();
});

üß© –î–µ—Ç–∞–ª—å–Ω–∏–π –æ–ø–∏—Å –º–æ–¥—É–ª—ñ–≤ —Ç–∞ —ó—Ö –≤–∑–∞—î–º–æ–¥—ñ—ó
üìã 1. constants.js - –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∏ —Å–∏—Å—Ç–µ–º–∏
–ü—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è: –¶–µ–Ω—Ç—Ä–∞–ª—ñ–∑–æ–≤–∞–Ω–µ —Å—Ö–æ–≤–∏—â–µ –≤—Å—ñ—Ö –∫–æ–Ω—Å—Ç–∞–Ω—Ç
–ó–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ: –ù–µ–º–∞—î (–±–∞–∑–æ–≤–∏–π –º–æ–¥—É–ª—å)
–ï–∫—Å–ø–æ—Ä—Ç—É—î: window.TasksConstants
–ö–ª—é—á–æ–≤—ñ –∫–æ–Ω—Å—Ç–∞–Ω—Ç–∏:
javascriptconst API_ENDPOINTS = {
    BASE_URL: '/api',
    USER_PROFILE: '/user/profile',
    WALLET_STATUS: '/wallet/status',
    FLEX_BALANCE: '/flex/balance',
    DAILY_STATUS: '/daily/status',
    TASKS_LIST: '/tasks/list'
    // ... —ñ–Ω—à—ñ –µ–Ω–¥–ø–æ—ñ–Ω—Ç–∏
};

const FLEX_LEVELS = {
    BRONZE: { required: 10000, rewards: { winix: 25, tickets: 1 } },
    SILVER: { required: 50000, rewards: { winix: 75, tickets: 2 } },
    // ... —ñ–Ω—à—ñ —Ä—ñ–≤–Ω—ñ
};

const TIMERS = {
    AUTO_CHECK_INTERVAL: 5 * 60 * 1000,  // 5 —Ö–≤–∏–ª–∏–Ω
    SESSION_REFRESH: 30 * 60 * 1000      // 30 —Ö–≤–∏–ª–∏–Ω
};

üõ†Ô∏è 2. utils.js - –£—Ç–∏–ª—ñ—Ç–∞—Ä–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó
–ü—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è: –î–æ–ø–æ–º—ñ–∂–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –¥–ª—è –≤—Å—ñ—Ö –º–æ–¥—É–ª—ñ–≤
–ó–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ: –ù–µ–º–∞—î
–ï–∫—Å–ø–æ—Ä—Ç—É—î: window.TasksUtils
–ö–ª—é—á–æ–≤—ñ —Ñ—É–Ω–∫—Ü—ñ—ó:
javascript// –§–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è —á–∏—Å–µ–ª
formatNumber(1234567) // ‚Üí "1,234,567"

// –†–æ–±–æ—Ç–∞ –∑ –ª–æ–∫–∞–ª—å–Ω–∏–º —Å—Ö–æ–≤–∏—â–µ–º
storage.set('key', value, isSecure)  // sessionStorage –¥–ª—è —á—É—Ç–ª–∏–≤–∏—Ö –¥–∞–Ω–∏—Ö
storage.get('key', defaultValue)

// –í–∞–ª—ñ–¥–∞—Ü—ñ—è
validate.isPositiveNumber(value)
validate.isWalletAddress(address)

// Toast –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
showToast(message, type, duration)

üè™ 3. store.js - –£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è —Å—Ç–∞–Ω–æ–º
–ü—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è: Redux-–ø–æ–¥—ñ–±–Ω–µ —Å—Ö–æ–≤–∏—â–µ —Å—Ç–∞–Ω—É –¥–æ–¥–∞—Ç–∫—É
–ó–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ: TasksUtils (–¥–ª—è deepClone)
–ï–∫—Å–ø–æ—Ä—Ç—É—î: window.TasksStore
–°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å—Ç–∞–Ω—É:
javascriptconst state = {
    user: {
        id: null,
        telegramId: null,
        username: null,
        balance: { winix: 0, tickets: 0, flex: 0 }
    },
    wallet: {
        connected: false,
        address: null,
        chainId: null,
        checking: false
    },
    flexEarn: {
        levels: { BRONZE: {claimed: false}, /* ... */ },
        flexBalance: 0,
        checking: false
    },
    dailyBonus: {
        currentStreak: 0,
        claimedDays: [],
        claiming: false
    },
    tasks: {
        social: {},
        limited: {},
        partner: {}
    },
    ui: {
        currentTab: 'flex',
        loading: false
    }
};
API —Å—Ç–æ—Ä—ñ:
javascript// –ü—ñ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∑–º—ñ–Ω–∏
TasksStore.subscribe((newState, prevState, action) => {
    // –†–µ–∞–≥—É–≤–∞–Ω–Ω—è –Ω–∞ –∑–º—ñ–Ω–∏
});

// Dispatch –¥—ñ–π
TasksStore.actions.setUser(userData);
TasksStore.actions.updateBalance(newBalance);
TasksStore.actions.setWalletConnected(true);

// –°–µ–ª–µ–∫—Ç–æ—Ä–∏
TasksStore.selectors.getUserId();
TasksStore.selectors.isWalletConnected();

üîê 4. telegramValidator.js - –í–∞–ª—ñ–¥–∞—Ü—ñ—è Telegram
–ü—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è: –°—Ç—Ä–æ–≥–∞ –≤–∞–ª—ñ–¥–∞—Ü—ñ—è Telegram WebApp –¥–∞–Ω–∏—Ö
–ó–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ: TasksConstants, TasksAPI
–ï–∫—Å–ø–æ—Ä—Ç—É—î: window.TelegramValidator
–ü—Ä–æ—Ü–µ—Å –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó:
javascriptasync function validateTelegramAuth() {
    // 1. –û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –∑ Telegram WebApp
    const telegramData = getTelegramData();

    // 2. –õ–æ–∫–∞–ª—å–Ω–∞ –≤–∞–ª—ñ–¥–∞—Ü—ñ—è
    validateUserLocally(telegramData.user);

    // 3. –°–µ—Ä–≤–µ—Ä–Ω–∞ –≤–∞–ª—ñ–¥–∞—Ü—ñ—è
    const serverValidation = await validateOnServer(telegramData);

    // 4. –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω—É
    if (serverValidation.valid) {
        sessionStorage.setItem('winix_auth_token', serverValidation.token);
        return serverValidation;
    }
}
–í—ñ–¥–ø—Ä–∞–≤–ª—è—î –Ω–∞ –±–µ–∫–µ–Ω–¥:
javascript// POST /api/auth/validate-telegram
{
    initData: "query_id=AAH...",  // –ü–æ–≤–Ω—ñ –¥–∞–Ω—ñ –∑ Telegram
    timestamp: 1640995200000
}
–û—Ç—Ä–∏–º—É—î –∑ –±–µ–∫–µ–Ω–¥—É:
javascript{
    valid: true,
    user: {
        id: "123456789",
        username: "user123",
        balance: { winix: 100, tickets: 5 }
    },
    token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
}

üåê 5. api.js (tasks/) - –°–ø–µ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–∏–π API
–ü—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è: API –∫–ª—ñ—î–Ω—Ç –¥–ª—è —Å–∏—Å—Ç–µ–º–∏ –∑–∞–≤–¥–∞–Ω—å
–ó–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ: TasksConstants, TelegramValidator
–ï–∫—Å–ø–æ—Ä—Ç—É—î: window.TasksAPI
–°—Ç—Ä—É–∫—Ç—É—Ä–∞ API:
javascriptwindow.TasksAPI = {
    auth: {
        validateTelegram: async (initData) => { /* ... */ },
        refreshToken: async () => { /* ... */ }
    },
    user: {
        getProfile: async (userId) => { /* ... */ },
        getBalance: async (userId) => { /* ... */ }
    },
    wallet: {
        checkStatus: async (userId) => { /* ... */ },
        connect: async (userId, walletData) => { /* ... */ }
    },
    flex: {
        getBalance: async (userId, walletAddress) => { /* ... */ },
        claimReward: async (userId, level) => { /* ... */ }
    },
    daily: {
        getStatus: async (userId) => { /* ... */ },
        claim: async (userId) => { /* ... */ }
    },
    tasks: {
        getList: async (userId, type) => { /* ... */ },
        verify: async (userId, taskId, data) => { /* ... */ }
    }
};
–§—É–Ω–∫—Ü—ñ—ó –±–µ–∑–ø–µ–∫–∏:

Rate limiting (–º–∞–∫—Å–∏–º—É–º 50 –∑–∞–ø–∏—Ç—ñ–≤ –∑–∞ —Ö–≤–∏–ª–∏–Ω—É)
–ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –¥–æ–¥–∞–≤–∞–Ω–Ω—è JWT —Ç–æ–∫–µ–Ω—É
Retry –ª–æ–≥—ñ–∫–∞ –∑ –µ–∫—Å–ø–æ–Ω–µ–Ω—Ü—ñ–π–Ω–∏–º backoff
–í–∞–ª—ñ–¥–∞—Ü—ñ—è UUID –¥–ª—è —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤


üõ†Ô∏è 6. services.js - –ö–æ–æ—Ä–¥–∏–Ω–∞—Ü—ñ–π–Ω—ñ —Å–µ—Ä–≤—ñ—Å–∏
–ü—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è: –ö–æ–æ—Ä–¥–∏–Ω–∞—Ü—ñ—è –º—ñ–∂ –º–æ–¥—É–ª—è–º–∏
–ó–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ: TasksAPI, TasksStore, TelegramValidator
–ï–∫—Å–ø–æ—Ä—Ç—É—î: window.TasksServices
AuthService:
javascriptconst AuthService = {
    async initUser() {
        // 1. –í–∞–ª—ñ–¥–∞—Ü—ñ—è —á–µ—Ä–µ–∑ TelegramValidator
        const validation = await TelegramValidator.validateTelegramAuth();

        // 2. –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é –∑ –±–µ–∫–µ–Ω–¥—É
        const profile = await TasksAPI.user.getProfile(userId);

        // 3. –û–Ω–æ–≤–ª–µ–Ω–Ω—è Store
        TasksStore.actions.setUser(profile.data);

        return profile.data;
    }
};
SyncService (–∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∞ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è –∫–æ–∂–Ω—ñ 5 —Ö–≤–∏–ª–∏–Ω):
javascriptconst SyncService = {
    async syncData() {
        // –ü–∞—Ä–∞–ª–µ–ª—å–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –≤—Å—ñ –¥–∞–Ω—ñ
        const promises = [
            this.syncBalance(userId),
            this.syncFlexStatus(userId),
            this.syncDailyBonus(userId),
            this.syncTasks(userId)
        ];

        const results = await Promise.allSettled(promises);
    }
};

üíé 7. flexEarn.js - Flex –∑–∞–≤–¥–∞–Ω–Ω—è
–ü—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è: –£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –∑–∞–≤–¥–∞–Ω–Ω—è–º–∏ –∑ FLEX —Ç–æ–∫–µ–Ω–∞–º–∏
–ó–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ: TasksAPI, TasksStore, WalletChecker
–ï–∫—Å–ø–æ—Ä—Ç—É—î: window.FlexEarnManager
–ü—Ä–æ—Ü–µ—Å —Ä–æ–±–æ—Ç–∏:
javascriptasync function init(userId) {
    // 1. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –≥–∞–º–∞–Ω—Ü—è
    await checkWalletConnection();

    // 2. –Ø–∫—â–æ –ø—ñ–¥–∫–ª—é—á–µ–Ω–æ - –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å—É FLEX
    if (walletConnected) {
        await checkFlexBalance();
        await checkAvailableRewards();
        showFlexTasks();
    } else {
        showWalletConnect();
    }
}
–í—ñ–¥–ø—Ä–∞–≤–ª—è—î –Ω–∞ –±–µ–∫–µ–Ω–¥:
javascript// GET /api/wallet/status/{userId}
// GET /api/flex/balance/{userId} (headers: X-Wallet-Address)
// POST /api/flex/claim/{userId}
{
    level: "bronze",
    timestamp: 1640995200000
}
–û—Ç—Ä–∏–º—É—î –∑ –±–µ–∫–µ–Ω–¥—É:
javascript// –°—Ç–∞—Ç—É—Å –≥–∞–º–∞–Ω—Ü—è
{
    connected: true,
    address: "EQD...",
    flexBalance: 25000
}

// –í–∏–Ω–∞–≥–æ—Ä–æ–¥–∞
{
    success: true,
    reward: { winix: 25, tickets: 1 },
    newBalance: { winix: 125, tickets: 6 }
}
–ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω—ñ –ø—Ä–æ—Ü–µ—Å–∏:

–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å—É –∫–æ–∂–Ω—ñ 5 —Ö–≤–∏–ª–∏–Ω
–°–∫–∏–¥–∞–Ω–Ω—è —â–æ–¥–µ–Ω–Ω–∏—Ö –≤–∏–Ω–∞–≥–æ—Ä–æ–¥ –æ 00:00 UTC
–û–Ω–æ–≤–ª–µ–Ω–Ω—è –ø—Ä–æ–≥—Ä–µ—Å-–±–∞—Ä—ñ–≤ —É —Ä–µ–∞–ª—å–Ω–æ–º—É —á–∞—Å—ñ


üéÅ 8. dailyBonus.js - –©–æ–¥–µ–Ω–Ω—ñ –±–æ–Ω—É—Å–∏
–ü—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è: –£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è —â–æ–¥–µ–Ω–Ω–∏–º–∏ –≤–∏–Ω–∞–≥–æ—Ä–æ–¥–∞–º–∏
–ó–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ: TasksAPI, TasksStore
–ï–∫—Å–ø–æ—Ä—Ç—É—î: window.DailyBonusManager
–°—Ç—Ä—É–∫—Ç—É—Ä–∞ UI:

–ü—Ä–æ–≥—Ä–µ—Å-–±–∞—Ä –º—ñ—Å—è—Ü—è (30 –¥–Ω—ñ–≤)
–û—Å—Ç–∞–Ω–Ω—ñ 5 –¥–Ω—ñ–≤
–ö–∞–ª–µ–Ω–¥–∞—Ä –Ω–∞–≥–æ—Ä–æ–¥
–ö–Ω–æ–ø–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∑ —Ç–∞–π–º–µ—Ä–æ–º

–ü—Ä–æ—Ü–µ—Å –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –±–æ–Ω—É—Å—É:
javascriptasync function claimDailyBonus() {
    // 1. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –º–æ–∂–ª–∏–≤–æ—Å—Ç—ñ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è
    if (!state.canClaim) return;

    // 2. –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –∑–∞–ø–∏—Ç—É
    const response = await TasksAPI.daily.claim(userId);

    // 3. –û–Ω–æ–≤–ª–µ–Ω–Ω—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Å—Ç–∞–Ω—É
    state.canClaim = false;
    state.currentDay = response.currentDay;

    // 4. –û–Ω–æ–≤–ª–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—ñ–≤
    TasksStore.actions.updateBalance(newBalance);

    // 5. –ü–æ–∫–∞–∑ –∞–Ω—ñ–º–∞—Ü—ñ—ó
    showClaimAnimation(response.reward);
}
–í—ñ–¥–ø—Ä–∞–≤–ª—è—î –Ω–∞ –±–µ–∫–µ–Ω–¥:
javascript// GET /api/daily/status/{userId}
// POST /api/daily/claim/{userId}
{
    timestamp: 1640995200000
}
–û—Ç—Ä–∏–º—É—î –∑ –±–µ–∫–µ–Ω–¥—É:
javascript// –°—Ç–∞—Ç—É—Å
{
    currentDay: 5,
    currentStreak: 5,
    canClaim: true,
    nextClaimTime: "2024-01-02T00:00:00Z",
    todayReward: { winix: 50, tickets: 0 }
}

// –í–∏–Ω–∞–≥–æ—Ä–æ–¥–∞
{
    success: true,
    currentDay: 6,
    currentStreak: 6,
    reward: { winix: 50, tickets: 0 },
    nextClaimTime: "2024-01-03T00:00:00Z"
}

‚úÖ 9. taskVerification.js - –í–µ—Ä–∏—Ñ—ñ–∫–∞—Ü—ñ—è –∑–∞–≤–¥–∞–Ω—å
–ü—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è: –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –∑–∞–≤–¥–∞–Ω—å
–ó–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ: TasksAPI, TasksStore, TasksUtils
–ï–∫—Å–ø–æ—Ä—Ç—É—î: window.TaskVerification
–¢–∏–ø–∏ –≤–µ—Ä–∏—Ñ—ñ–∫–∞—Ü—ñ—ó:
1. Telegram –∑–∞–≤–¥–∞–Ω–Ω—è (–º–∏—Ç—Ç—î–≤–∞):
javascriptasync function verifyTelegramTask(verification) {
    // 1. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑–∞–ø—É—Å–∫—É –±–æ—Ç–∞
    const botStarted = await checkBotStarted(userId);

    // 2. –í–µ—Ä–∏—Ñ—ñ–∫–∞—Ü—ñ—è –ø—ñ–¥–ø–∏—Å–∫–∏
    const response = await TasksAPI.verify.telegram(userId, channelUsername);

    // 3. –ù–∞—Ä–∞—Ö—É–≤–∞–Ω–Ω—è –≤–∏–Ω–∞–≥–æ—Ä–æ–¥–∏
    if (response.verified) {
        await claimReward(taskId, response.reward);
    }
}
2. –°–æ—Ü—ñ–∞–ª—å–Ω—ñ –∑–∞–≤–¥–∞–Ω–Ω—è (–∑ —Ç–∞–π–º–µ—Ä–æ–º 15 —Å–µ–∫—É–Ω–¥):
javascriptasync function verifySocialTask(verification) {
    // 1. –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è timestamp –ø–æ—á–∞—Ç–∫—É
    const startTimestamp = Date.now();
    taskTimestamps.set(taskId, startTimestamp);

    // 2. –í—ñ–¥–∫—Ä–∏—Ç—Ç—è –ø–æ—Å–∏–ª–∞–Ω–Ω—è
    window.open(verification.data.url, '_blank');

    // 3. –ü–æ–∫–∞–∑ —Ç–∞–π–º–µ—Ä–∞
    showVerificationTimer(taskId, 15000);

    // 4. –ü—ñ—Å–ª—è –∑–∞–∫—ñ–Ω—á–µ–Ω–Ω—è —Ç–∞–π–º–µ—Ä–∞ - –≤–µ—Ä–∏—Ñ—ñ–∫–∞—Ü—ñ—è
    const response = await TasksAPI.tasks.complete(userId, taskId);
}
–í—ñ–¥–ø—Ä–∞–≤–ª—è—î –Ω–∞ –±–µ–∫–µ–Ω–¥:
javascript// POST /api/verify/telegram/{userId}
{
    channelUsername: "@winix_channel"
}

// POST /api/tasks/start/{userId}/{taskId}
{
    timestamp: 1640995200000
}

// POST /api/tasks/complete/{userId}/{taskId}
{
    timestamp: 1640995200000
}

üìã 10. tasksManager.js - –ú–µ–Ω–µ–¥–∂–µ—Ä –∑–∞–≤–¥–∞–Ω—å
–ü—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è: –£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –≤—Å—ñ–º–∞ —Ç–∏–ø–∞–º–∏ –∑–∞–≤–¥–∞–Ω—å
–ó–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ: TasksAPI, TasksStore, TaskVerification
–ï–∫—Å–ø–æ—Ä—Ç—É—î: window.TasksManager
–ü—Ä–æ—Ü–µ—Å –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–∞–≤–¥–∞–Ω—å:
javascriptasync function loadAllTasks() {
    // 1. –ó–∞–ø–∏—Ç –¥–æ API
    const response = await TasksAPI.tasks.getList(userId, 'all');

    // 2. –û–±—Ä–æ–±–∫–∞ —Ç–∞ –≤–∞–ª—ñ–¥–∞—Ü—ñ—è
    processTasks(response.tasks);

    // 3. –†–æ–∑–ø–æ–¥—ñ–ª –ø–æ —Ç–∏–ø–∞—Ö
    const tasksByType = { social: [], limited: [], partner: [] };

    // 4. –û–Ω–æ–≤–ª–µ–Ω–Ω—è Store
    Object.entries(tasksByType).forEach(([type, tasks]) => {
        TasksStore.actions.setTasks(type, tasks);
    });
}
–°—Ç–≤–æ—Ä–µ–Ω–Ω—è UI –∫–∞—Ä—Ç–æ–∫:
javascriptfunction createTaskCard(task, type) {
    // 1. –°—Ç–≤–æ—Ä–µ–Ω–Ω—è DOM –µ–ª–µ–º–µ–Ω—Ç—É
    const card = document.createElement('div');

    // 2. –î–æ–¥–∞–≤–∞–Ω–Ω—è –∞—Ç—Ä–∏–±—É—Ç—ñ–≤ –¥–ª—è –≤–µ—Ä–∏—Ñ—ñ–∫–∞—Ü—ñ—ó
    card.setAttribute('data-task-id', task.id);
    card.setAttribute('data-platform', task.platform);
    card.setAttribute('data-url', task.url);

    // 3. –§–æ—Ä–º—É–≤–∞–Ω–Ω—è –∫–æ–Ω—Ç–µ–Ω—Ç—É
    card.innerHTML = `
        <div class="task-header">...</div>
        <div class="task-rewards">...</div>
        <button class="task-button">–í–∏–∫–æ–Ω–∞—Ç–∏</button>
    `;

    return card;
}
–í—ñ–¥–ø—Ä–∞–≤–ª—è—î –Ω–∞ –±–µ–∫–µ–Ω–¥:
javascript// GET /api/tasks/list/{userId}?type=all
// POST /api/tasks/claim/{userId}/{taskId}

üëõ 11. walletChecker.js - –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ TON –≥–∞–º–∞–Ω—Ü—è
–ü—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è: –Ü–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—è –∑ TON Connect
–ó–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ: TasksAPI, TasksStore, TON_CONNECT_UI
–ï–∫—Å–ø–æ—Ä—Ç—É—î: window.WalletChecker
–Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è TON Connect:
javascriptasync function initializeTonConnect() {
    tonConnectUI = new TON_CONNECT_UI.TonConnectUI({
        manifestUrl: '/tonconnect-manifest.json',
        buttonRootId: 'ton-connect-button'
    });

    // –ü—ñ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∑–º—ñ–Ω–∏ —Å—Ç–∞—Ç—É—Å—É
    tonConnectUI.onStatusChange(wallet => {
        handleWalletStatusChange(wallet);
    });
}
–ü—Ä–æ—Ü–µ—Å –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –≥–∞–º–∞–Ω—Ü—è:
javascriptasync function handleWalletStatusChange(wallet) {
    if (wallet) {
        // 1. –í–µ—Ä–∏—Ñ—ñ–∫–∞—Ü—ñ—è –Ω–∞ –±–µ–∫–µ–Ω–¥—ñ
        await verifyWalletOnBackend(wallet);

        // 2. –û–Ω–æ–≤–ª–µ–Ω–Ω—è Store
        TasksStore.actions.setWalletConnected(true);
        TasksStore.actions.setWalletAddress({
            address: wallet.account.address,
            chainId: wallet.account.chain
        });

        // 3. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å—É FLEX
        await checkFlexBalance(wallet.account.address);
    }
}
–í—ñ–¥–ø—Ä–∞–≤–ª—è—î –Ω–∞ –±–µ–∫–µ–Ω–¥:
javascript// GET /api/wallet/status/{userId}
// POST /api/wallet/connect/{userId}
{
    address: "EQD...",
    chain: "-239",
    publicKey: "...",
    provider: "Tonkeeper",
    timestamp: 1640995200000
}

// POST /api/wallet/verify/{userId}
{
    address: "EQD...",
    timestamp: 1640995200000
}

üîÑ 12. integration.js - –ì–æ–ª–æ–≤–Ω–∏–π –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä
–ü—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è: –ö–æ–æ—Ä–¥–∏–Ω–∞—Ü—ñ—è –≤—Å—ñ—Ö –º–æ–¥—É–ª—ñ–≤
–ó–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ: –í—Å—ñ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ –º–æ–¥—É–ª—ñ
–ï–∫—Å–ø–æ—Ä—Ç—É—î: window.TasksIntegration
–ü–æ—Å–ª—ñ–¥–æ–≤–Ω—ñ—Å—Ç—å —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó:
javascriptasync function init() {
    // 1. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π
    checkRequiredServices();

    // 2. –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    await authenticateUser();

    // 3. –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –º–µ–Ω–µ–¥–∂–µ—Ä—ñ–≤
    await initializeManagers();

    // 4. –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –ø–æ–¥—ñ–π
    setupEventHandlers();

    // 5. –ü–æ—á–∞—Ç–∫–æ–≤–∞ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è
    await initialSync();
}
–ú–µ–Ω–µ–¥–∂–µ—Ä–∏ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—é—Ç—å—Å—è —É –ø–æ—Ä—è–¥–∫—É:
javascriptasync function initializeManagers() {
    // 1. WalletChecker (–Ω–µ–∑–∞–ª–µ–∂–Ω–∏–π)
    if (window.WalletChecker) {
        await WalletChecker.init();
    }

    // 2. FlexEarnManager (–∑–∞–ª–µ–∂–∏—Ç—å –≤—ñ–¥ WalletChecker)
    if (window.FlexEarnManager) {
        FlexEarnManager.init(userId);
    }

    // 3. DailyBonusManager (–Ω–µ–∑–∞–ª–µ–∂–Ω–∏–π)
    if (window.DailyBonusManager) {
        await DailyBonusManager.init(userId);
    }

    // 4. TasksManager (–Ω–µ–∑–∞–ª–µ–∂–Ω–∏–π)
    if (window.TasksManager) {
        await TasksManager.init(userId);
    }

    // 5. TaskVerification (–∑–∞–ª–µ–∂–∏—Ç—å –≤—ñ–¥ TasksManager)
    if (window.TaskVerification) {
        TaskVerification.init();
    }
}

üì° –í–∑–∞—î–º–æ–¥—ñ—è –∑ –±–µ–∫–µ–Ω–¥–æ–º
üîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è —Ç–∞ –±–µ–∑–ø–µ–∫–∞
1. –ü–æ—á–∞—Ç–∫–æ–≤–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è:
javascript// –í—ñ–¥–ø—Ä–∞–≤–∫–∞ initData –∑ Telegram WebApp
POST /api/auth/validate-telegram
Content-Type: application/json
{
    "initData": "query_id=AAH9Rl...",
    "timestamp": 1640995200000
}

// –í—ñ–¥–ø–æ–≤—ñ–¥—å –∑ JWT —Ç–æ–∫–µ–Ω–æ–º
{
    "valid": true,
    "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
    "user": {
        "id": "123456789",
        "username": "user123",
        "balance": { "winix": 100, "tickets": 5 }
    }
}
2. –ü–æ–¥–∞–ª—å—à—ñ –∑–∞–ø–∏—Ç–∏:
javascript// –í—Å—ñ –∑–∞–ø–∏—Ç–∏ –º—ñ—Å—Ç—è—Ç—å JWT —Ç–æ–∫–µ–Ω
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
X-Telegram-User-Id: 123456789
Content-Type: application/json
üìä –û—Å–Ω–æ–≤–Ω—ñ API –µ–Ω–¥–ø–æ—ñ–Ω—Ç–∏
User Management:
javascriptGET  /api/user/profile/{userId}           # –ü—Ä–æ—Ñ—ñ–ª—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
GET  /api/user/balance/{userId}           # –ë–∞–ª–∞–Ω—Å–∏
POST /api/user/update-balance/{userId}    # –û–Ω–æ–≤–ª–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É (–≤–Ω—É—Ç—Ä—ñ—à–Ω—ñ–π)
Wallet Management:
javascriptGET  /api/wallet/status/{userId}          # –°—Ç–∞—Ç—É—Å –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è
POST /api/wallet/connect/{userId}         # –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –≥–∞–º–∞–Ω—Ü—è
POST /api/wallet/disconnect/{userId}      # –í—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è
POST /api/wallet/verify/{userId}          # –í–µ—Ä–∏—Ñ—ñ–∫–∞—Ü—ñ—è
Flex Earn:
javascriptGET  /api/flex/balance/{userId}           # –ë–∞–ª–∞–Ω—Å FLEX (header: X-Wallet-Address)
POST /api/flex/claim/{userId}             # –û—Ç—Ä–∏–º–∞–Ω–Ω—è –≤–∏–Ω–∞–≥–æ—Ä–æ–¥–∏
GET  /api/flex/history/{userId}           # –Ü—Å—Ç–æ—Ä—ñ—è
POST /api/flex/check-levels/{userId}      # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ä—ñ–≤–Ω—ñ–≤
Daily Bonus:
javascriptGET  /api/daily/status/{userId}           # –°—Ç–∞—Ç—É—Å –±–æ–Ω—É—Å—É
POST /api/daily/claim/{userId}            # –û—Ç—Ä–∏–º–∞–Ω–Ω—è –±–æ–Ω—É—Å—É
GET  /api/daily/history/{userId}          # –Ü—Å—Ç–æ—Ä—ñ—è
POST /api/daily/calculate-reward/{userId} # –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –≤–∏–Ω–∞–≥–æ—Ä–æ–¥–∏
Tasks:
javascriptGET  /api/tasks/list/{userId}?type=all    # –°–ø–∏—Å–æ–∫ –∑–∞–≤–¥–∞–Ω—å
POST /api/tasks/start/{userId}/{taskId}   # –ü–æ—á–∞—Ç–æ–∫ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è
POST /api/tasks/verify/{userId}/{taskId}  # –í–µ—Ä–∏—Ñ—ñ–∫–∞—Ü—ñ—è
POST /api/tasks/complete/{userId}/{taskId} # –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—è
POST /api/tasks/claim/{userId}/{taskId}   # –û—Ç—Ä–∏–º–∞–Ω–Ω—è –≤–∏–Ω–∞–≥–æ—Ä–æ–¥–∏
Verification:
javascriptPOST /api/verify/telegram/{userId}        # –í–µ—Ä–∏—Ñ—ñ–∫–∞—Ü—ñ—è Telegram
GET  /api/verify/check-bot/{userId}       # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –±–æ—Ç–∞
POST /api/verify/social/{userId}/{platform} # –°–æ—Ü—ñ–∞–ª—å–Ω—ñ –º–µ—Ä–µ–∂—ñ

‚è∞ –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω—ñ –ø—Ä–æ—Ü–µ—Å–∏
1. –ü–µ—Ä—ñ–æ–¥–∏—á–Ω—ñ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ (–∫–æ–∂–Ω—ñ 5 —Ö–≤–∏–ª–∏–Ω)
javascript// FlexEarnManager
setInterval(() => {
    if (walletConnected) {
        checkFlexBalance();
    }
}, 300000);

// WalletChecker
setInterval(() => {
    checkWalletConnection();
}, 300000);

// SyncService
setInterval(() => {
    syncData(); // –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è –≤—Å—ñ—Ö –¥–∞–Ω–∏—Ö
}, 300000);
2. –ê–≤—Ç–æ–∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è (–∫–æ–∂–Ω—ñ 30 —Å–µ–∫—É–Ω–¥)
javascript// integration.js
setInterval(() => {
    saveState(); // –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Å—Ç–∞–Ω—É –≤ sessionStorage
}, 30000);
3. –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω—ñ–≤ (–∫–æ–∂–Ω—ñ 30 —Ö–≤–∏–ª–∏–Ω)
javascript// telegramValidator.js
setInterval(async () => {
    const token = getAuthToken();
    if (token && tokenExpiresInMinutes < 5) {
        await refreshToken();
    }
}, 1800000);
4. –°–∫–∏–¥–∞–Ω–Ω—è —â–æ–¥–µ–Ω–Ω–∏—Ö –¥–∞–Ω–∏—Ö (–æ 00:00 UTC)
javascript// flexEarn.js, dailyBonus.js
function checkDailyReset() {
    const now = new Date();
    const today = now.toDateString();
    const lastResetDate = localStorage.getItem('lastReset');

    if (lastResetDate !== today) {
        resetDailyData();
        localStorage.setItem('lastReset', today);
    }
}

üîÑ –£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è —Å—Ç–∞–Ω–æ–º —Ç–∞ –ø–æ–¥—ñ—è–º–∏
Store –ø—ñ–¥–ø–∏—Å–∫–∏
javascriptTasksStore.subscribe((newState, prevState, action) => {
    // Wallet connection changes
    if (newState.wallet.connected !== prevState.wallet.connected) {
        if (newState.wallet.connected) {
            FlexEarnManager.checkFlexBalance();
        } else {
            FlexEarnManager.showWalletConnect();
        }
    }

    // Tab changes
    if (newState.ui.currentTab !== prevState.ui.currentTab) {
        TasksIntegration.onTabSwitch(newState.ui.currentTab);
    }
});
Custom Events
javascript// –í—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –ø–æ–¥—ñ–π
document.dispatchEvent(new CustomEvent('task-completed', {
    detail: { taskId, reward }
}));

document.dispatchEvent(new CustomEvent('balance-updated', {
    detail: { oldBalance, newBalance, source }
}));

// –°–ª—É—Ö–∞–Ω–Ω—è –ø–æ–¥—ñ–π
document.addEventListener('task-completed', (e) => {
    const { taskId, reward } = e.detail;
    updateTaskUI(taskId, 'completed');
    showRewardAnimation(reward);
});

üö® –û–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–æ–∫ —Ç–∞ fallback
1. –ú–µ—Ä–µ–∂–µ–≤—ñ –ø–æ–º–∏–ª–∫–∏
javascript// api.js
async function apiCall(endpoint, options, retries = 3) {
    try {
        const response = await fetch(url, options);
        return await response.json();
    } catch (error) {
        if (retries > 0 && isNetworkError(error)) {
            await delay(1000 * (4 - retries)); // Exponential backoff
            return apiCall(endpoint, options, retries - 1);
        }
        throw error;
    }
}
2. Rate limiting
javascript// api.js
if (response.status === 429) {
    const retryAfter = response.headers.get('Retry-After') || 30;
    handleRateLimiting(endpoint, retryAfter);
    throw new Error(`–ó–∞–Ω–∞–¥—Ç–æ –±–∞–≥–∞—Ç–æ –∑–∞–ø–∏—Ç—ñ–≤. –°–ø—Ä–æ–±—É–π—Ç–µ —á–µ—Ä–µ–∑ ${retryAfter} —Å–µ–∫—É–Ω–¥.`);
}
3. Fallback –¥–ª—è –æ—Ñ–ª–∞–π–Ω —Ä–µ–∂–∏–º—É
javascript// services.js
window.addEventListener('offline', () => {
    TasksStore.actions.setOnline(false);
    showToast('–ó\'—î–¥–Ω–∞–Ω–Ω—è –≤—Ç—Ä–∞—á–µ–Ω–æ. –î–µ—è–∫—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ñ', 'warning');
});

window.addEventListener('online', () => {
    TasksStore.actions.setOnline(true);
    SyncService.syncData(); // –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è –ø—Ä–∏ –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—ñ
});
4. –ö–µ—à—É–≤–∞–Ω–Ω—è –¥–ª—è –æ—Ñ–ª–∞–π–Ω —Ä–æ–±–æ—Ç–∏
javascript// utils.js
const storage = {
    set(key, value, isSecure = false) {
        // sessionStorage –¥–ª—è —Ç–æ–∫–µ–Ω—ñ–≤, localStorage –¥–ª—è –¥–∞–Ω–∏—Ö
        const targetStorage = isSecure ? sessionStorage : localStorage;
        targetStorage.setItem(key, JSON.stringify(value));
    },

    get(key, defaultValue = null) {
        // –°–ø–æ—á–∞—Ç–∫—É sessionStorage, –ø–æ—Ç—ñ–º localStorage
        let item = sessionStorage.getItem(key) || localStorage.getItem(key);
        return item ? JSON.parse(item) : defaultValue;
    }
};

üîí –ë–µ–∑–ø–µ–∫–∞
1. –í–∞–ª—ñ–¥–∞—Ü—ñ—è –¥–∞–Ω–∏—Ö
javascript// –ù–∞ –∫–ª—ñ—î–Ω—Ç—ñ - –±–∞–∑–æ–≤–∞ –≤–∞–ª—ñ–¥–∞—Ü—ñ—è
function validateTask(task) {
    if (!task.id || !task.type || !task.reward) {
        return { valid: false, errors: ['–ù–µ–ø–æ–≤–Ω—ñ –¥–∞–Ω—ñ –∑–∞–≤–¥–∞–Ω–Ω—è'] };
    }
    return { valid: true };
}

// –ù–∞ —Å–µ—Ä–≤–µ—Ä—ñ - –ø–æ–≤–Ω–∞ –≤–∞–ª—ñ–¥–∞—Ü—ñ—è –∑ HMAC –ø–µ—Ä–µ–≤—ñ—Ä–∫–æ—é
2. –ó–∞—Ö–∏—Å—Ç —Ç–æ–∫–µ–Ω—ñ–≤
javascript// –¢–æ–∫–µ–Ω–∏ —Ç—ñ–ª—å–∫–∏ –≤ sessionStorage
sessionStorage.setItem('winix_auth_token', token);

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –≤–∏–¥–∞–ª–µ–Ω–Ω—è –ø—Ä–∏ –∑–∞–∫—Ä–∏—Ç—Ç—ñ –±—Ä–∞—É–∑–µ—Ä–∞
window.addEventListener('beforeunload', () => {
    // sessionStorage –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –æ—á–∏—â–∞—î—Ç—å—Å—è
});
3. Rate limiting
javascriptconst REQUEST_THROTTLE = {
    '/user/': 8000,        // 8 —Å–µ–∫—É–Ω–¥ –º—ñ–∂ –∑–∞–ø–∏—Ç–∞–º–∏
    '/flex': 10000,        // 10 —Å–µ–∫—É–Ω–¥
    'default': 5000        // 5 —Å–µ–∫—É–Ω–¥
};

üìà –ê–Ω–∞–ª—ñ—Ç–∏–∫–∞ —Ç–∞ –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥
–í—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –ø–æ–¥—ñ–π
javascript// services.js - AnalyticsService
trackEvent('Tasks', 'completed', taskId, reward.winix);
trackEvent('Flex', 'reward_claimed', level, reward.winix);
trackEvent('Daily', 'bonus_claimed', day, reward.winix);
trackError(error, 'task_verification');
–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è
javascript// –ó–±–µ—Ä—ñ–≥–∞–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
const stats = {
    totalRequests: 0,
    successfulRequests: 0,
    failedRequests: 0,
    avgResponseTime: 0,
    userActions: {
        tasksCompleted: 0,
        flexRewardsClaimed: 0,
        dailyBonusesClaimed: 0
    }
};

–¶–µ–π —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ —è–≤–ª—è—î —Å–æ–±–æ—é —Å–∫–ª–∞–¥–Ω—É –º–æ–¥—É–ª—å–Ω—É —Å–∏—Å—Ç–µ–º—É –∑ —á—ñ—Ç–∫–æ—é –∞—Ä—Ö—ñ—Ç–µ–∫—Ç—É—Ä–æ—é, –Ω–∞–¥—ñ–π–Ω–æ—é –æ–±—Ä–æ–±–∫–æ—é –ø–æ–º–∏–ª–æ–∫ —Ç–∞ –±–µ–∑–ø–µ—á–Ω–æ—é –≤–∑–∞—î–º–æ–¥—ñ—î—é –∑ –±–µ–∫–µ–Ω–¥–æ–º. –ö–æ–∂–µ–Ω –º–æ–¥—É–ª—å –º–∞—î —Å–≤–æ—é –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω—ñ—Å—Ç—å, –∞–ª–µ –≤—Å—ñ –≤–æ–Ω–∏ —Ç—ñ—Å–Ω–æ —ñ–Ω—Ç–µ–≥—Ä–æ–≤–∞–Ω—ñ —á–µ—Ä–µ–∑ —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω–∏–π Store —Ç–∞ –∫–æ–æ—Ä–¥–∏–Ω—É—é—Ç—å—Å—è —á–µ—Ä–µ–∑ integration.js.