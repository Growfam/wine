/**
 * –ú–æ–¥—É–ª—å –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó Telegram –¥–∞–Ω–∏—Ö –¥–ª—è —Å–∏—Å—Ç–µ–º–∏ WINIX
 * –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∞–≤—Ç–µ–Ω—Ç–∏—á–Ω–æ—Å—Ç—ñ Telegram WebApp –¥–∞–Ω–∏—Ö
 */

window.TelegramValidator = (function() {
    'use strict';

    console.log('üîê [TelegramValidator] ===== –Ü–ù–Ü–¶–Ü–ê–õ–Ü–ó–ê–¶–Ü–Ø –ú–û–î–£–õ–Ø –í–ê–õ–Ü–î–ê–¶–Ü–á TELEGRAM =====');

    /**
     * –û—Ç—Ä–∏–º–∞—Ç–∏ —Ç–∞ –≤–∞–ª—ñ–¥—É–≤–∞—Ç–∏ Telegram –¥–∞–Ω—ñ
     */
    function getTelegramData() {
        console.log('üì± [TelegramValidator] –û—Ç—Ä–∏–º–∞–Ω–Ω—è Telegram –¥–∞–Ω–∏—Ö...');

        // –î–æ–¥–∞—Ç–∫–æ–≤–µ –ª–æ–≥—É–≤–∞–Ω–Ω—è –¥–ª—è –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
        console.log('üîç [TelegramValidator] window.Telegram:', window.Telegram);
        console.log('üîç [TelegramValidator] window.Telegram.WebApp:', window.Telegram?.WebApp);

        if (!window.Telegram?.WebApp) {
            console.error('‚ùå [TelegramValidator] Telegram WebApp –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
            console.error('‚ùå [TelegramValidator] –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—è, —â–æ –¥–æ–¥–∞—Ç–æ–∫ –≤—ñ–¥–∫—Ä–∏—Ç–æ —á–µ—Ä–µ–∑ Telegram');
            return null;
        }

        const webApp = window.Telegram.WebApp;
        const initData = webApp.initData;
        const initDataUnsafe = webApp.initDataUnsafe;

        // –î–µ—Ç–∞–ª—å–Ω–µ –ª–æ–≥—É–≤–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö
        console.log('üîç [TelegramValidator] initData:', initData);
        console.log('üîç [TelegramValidator] initDataUnsafe:', initDataUnsafe);
        console.log('üîç [TelegramValidator] webApp.version:', webApp.version);
        console.log('üîç [TelegramValidator] webApp.platform:', webApp.platform);

        if (!initData || !initDataUnsafe) {
            console.error('‚ùå [TelegramValidator] Telegram –¥–∞–Ω—ñ –≤—ñ–¥—Å—É—Ç–Ω—ñ');
            console.error('‚ùå [TelegramValidator] –ú–æ–∂–ª–∏–≤–∞ –ø—Ä–∏—á–∏–Ω–∞: –¥–æ–¥–∞—Ç–æ–∫ –≤—ñ–¥–∫—Ä–∏—Ç–æ –Ω–µ —á–µ—Ä–µ–∑ Telegram');
            return null;
        }

        console.log('‚úÖ [TelegramValidator] Telegram –¥–∞–Ω—ñ –æ—Ç—Ä–∏–º–∞–Ω–æ');
        console.log('üë§ [TelegramValidator] –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á:', initDataUnsafe.user);

        return {
            initData: initData,
            initDataUnsafe: initDataUnsafe,
            user: initDataUnsafe.user || null,
            auth_date: initDataUnsafe.auth_date || null,
            hash: initDataUnsafe.hash || null,
            chat_instance: initDataUnsafe.chat_instance || null,
            chat_type: initDataUnsafe.chat_type || null,
            start_param: initDataUnsafe.start_param || null
        };
    }

    /**
     * –í–∞–ª—ñ–¥–∞—Ü—ñ—è Telegram –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –ª–æ–∫–∞–ª—å–Ω–æ
     */
    function validateUserLocally(userData) {
        console.log('üîç [TelegramValidator] –õ–æ–∫–∞–ª—å–Ω–∞ –≤–∞–ª—ñ–¥–∞—Ü—ñ—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞...');
        console.log('üìä [TelegramValidator] –î–∞–Ω—ñ –¥–ª—è –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó:', userData);

        if (!userData) {
            console.error('‚ùå [TelegramValidator] –î–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤—ñ–¥—Å—É—Ç–Ω—ñ');
            return false;
        }

        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –æ–±–æ–≤'—è–∑–∫–æ–≤—ñ –ø–æ–ª—è
        const requiredFields = ['id'];
        for (const field of requiredFields) {
            if (!userData[field]) {
                console.error(`‚ùå [TelegramValidator] –í—ñ–¥—Å—É—Ç–Ω—î –æ–±–æ–≤'—è–∑–∫–æ–≤–µ –ø–æ–ª–µ: ${field}`);
                return false;
            }
        }

        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ç–∏–ø ID
        if (typeof userData.id !== 'number' || userData.id <= 0) {
            console.error('‚ùå [TelegramValidator] –ù–µ–≤—ñ—Ä–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:', userData.id);
            return false;
        }

        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –¥–∞–≤–Ω—ñ—Å—Ç—å auth_date —è–∫—â–æ —î
        const authDate = parseInt(userData.auth_date || 0);
        if (authDate) {
            const currentTime = Math.floor(Date.now() / 1000);
            const maxAge = 86400; // 24 –≥–æ–¥–∏–Ω–∏
            const age = currentTime - authDate;

            console.log('‚è∞ [TelegramValidator] –í—ñ–∫ –¥–∞–Ω–∏—Ö:', age, '—Å–µ–∫—É–Ω–¥');

            if (age > maxAge) {
                console.error('‚ùå [TelegramValidator] –î–∞–Ω—ñ –∑–∞—Å—Ç–∞—Ä—ñ–ª—ñ (—Å—Ç–∞—Ä—à—ñ 24 –≥–æ–¥–∏–Ω)');
                return false;
            }
        }

        console.log('‚úÖ [TelegramValidator] –õ–æ–∫–∞–ª—å–Ω–∞ –≤–∞–ª—ñ–¥–∞—Ü—ñ—è –ø—Ä–æ–π–¥–µ–Ω–∞');
        return true;
    }

    /**
     * –í–∞–ª—ñ–¥–∞—Ü—ñ—è –¥–∞–Ω–∏—Ö –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ
     */
    async function validateOnServer(telegramData) {
        console.log('üåê [TelegramValidator] === –°–ï–†–í–ï–†–ù–ê –í–ê–õ–Ü–î–ê–¶–Ü–Ø ===');

        if (!telegramData || !telegramData.initData) {
            console.error('‚ùå [TelegramValidator] –ù–µ–º–∞—î –¥–∞–Ω–∏—Ö –¥–ª—è –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó');
            return { valid: false, error: 'No data' };
        }

        try {
            console.log('üì§ [TelegramValidator] –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–∏—Ö –Ω–∞ —Å–µ—Ä–≤–µ—Ä...');
            console.log('üìä [TelegramValidator] URL:', '/auth/validate-telegram');
            console.log('üìä [TelegramValidator] –î–æ–≤–∂–∏–Ω–∞ initData:', telegramData.initData.length);

            const response = await window.TasksAPI.auth.validateTelegram(telegramData.initData);

            console.log('üìä [TelegramValidator] –í—ñ–¥–ø–æ–≤—ñ–¥—å —Å–µ—Ä–≤–µ—Ä–∞:', response);

            if (response.valid) {
                console.log('‚úÖ [TelegramValidator] –°–µ—Ä–≤–µ—Ä–Ω–∞ –≤–∞–ª—ñ–¥–∞—Ü—ñ—è –ø—Ä–æ–π–¥–µ–Ω–∞');

                // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —Ç–æ–∫–µ–Ω –≤ sessionStorage
                if (response.token) {
                    const storageKey = window.TasksConstants?.STORAGE_KEYS?.AUTH_TOKEN || 'winix_auth_token';
                    sessionStorage.setItem(storageKey, response.token);
                    console.log('üíæ [TelegramValidator] –¢–æ–∫–µ–Ω –∑–±–µ—Ä–µ–∂–µ–Ω–æ –≤ sessionStorage');
                    console.log('üîë [TelegramValidator] –ö–ª—é—á:', storageKey);
                }

                return {
                    valid: true,
                    user: response.user,
                    token: response.token
                };
            } else {
                console.error('‚ùå [TelegramValidator] –°–µ—Ä–≤–µ—Ä–Ω–∞ –≤–∞–ª—ñ–¥–∞—Ü—ñ—è –Ω–µ –ø—Ä–æ–π–¥–µ–Ω–∞');
                console.error('‚ùå [TelegramValidator] –ü—Ä–∏—á–∏–Ω–∞:', response.error || 'Unknown');
                return {
                    valid: false,
                    error: response.error || 'Validation failed'
                };
            }

        } catch (error) {
            console.error('‚ùå [TelegramValidator] –ü–æ–º–∏–ª–∫–∞ —Å–µ—Ä–≤–µ—Ä–Ω–æ—ó –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó:', error);
            console.error('‚ùå [TelegramValidator] Stack:', error.stack);

            // –î–µ—Ç–∞–ª—å–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É
            if (error.response) {
                console.error('‚ùå [TelegramValidator] Response status:', error.response.status);
                console.error('‚ùå [TelegramValidator] Response data:', error.response.data);
            }

            return {
                valid: false,
                error: error.message || 'Network error'
            };
        }
    }

    /**
     * –ü–æ–≤–Ω–∞ –≤–∞–ª—ñ–¥–∞—Ü—ñ—è (–ª–æ–∫–∞–ª—å–Ω–∞ + —Å–µ—Ä–≤–µ—Ä–Ω–∞)
     */
    async function validateTelegramAuth() {
        console.log('üîê [TelegramValidator] === –ü–û–í–ù–ê –í–ê–õ–Ü–î–ê–¶–Ü–Ø ===');
        console.log('üïê [TelegramValidator] –ß–∞—Å –ø–æ—á–∞—Ç–∫—É:', new Date().toISOString());

        // –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ
        const telegramData = getTelegramData();
        if (!telegramData) {
            console.error('‚ùå [TelegramValidator] –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ Telegram –¥–∞–Ω—ñ');
            return {
                valid: false,
                error: 'No Telegram data available'
            };
        }

        // –õ–æ–∫–∞–ª—å–Ω–∞ –≤–∞–ª—ñ–¥–∞—Ü—ñ—è
        if (!validateUserLocally(telegramData.user)) {
            console.error('‚ùå [TelegramValidator] –õ–æ–∫–∞–ª—å–Ω–∞ –≤–∞–ª—ñ–¥–∞—Ü—ñ—è –ø—Ä–æ–≤–∞–ª–µ–Ω–∞');
            return {
                valid: false,
                error: 'Local validation failed'
            };
        }

        // –°–µ—Ä–≤–µ—Ä–Ω–∞ –≤–∞–ª—ñ–¥–∞—Ü—ñ—è
        console.log('üîÑ [TelegramValidator] –ü–µ—Ä–µ—Ö–æ–¥–∏–º–æ –¥–æ —Å–µ—Ä–≤–µ—Ä–Ω–æ—ó –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó...');
        const serverValidation = await validateOnServer(telegramData);

        if (serverValidation.valid) {
            console.log('‚úÖ [TelegramValidator] –í–∞–ª—ñ–¥–∞—Ü—ñ—è —É—Å–ø—ñ—à–Ω–∞!');

            // –û–Ω–æ–≤–ª—é—î–º–æ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤ —Å—Ç–æ—Ä—ñ
            if (window.TasksStore) {
                console.log('üìù [TelegramValidator] –û–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –≤ Store...');
                window.TasksStore.actions.setUser({
                    id: serverValidation.user.id,
                    telegramId: serverValidation.user.telegramId || telegramData.user.id,
                    username: serverValidation.user.username || telegramData.user.username,
                    firstName: serverValidation.user.firstName || telegramData.user.first_name,
                    lastName: serverValidation.user.lastName || telegramData.user.last_name,
                    photoUrl: serverValidation.user.photoUrl || telegramData.user.photo_url,
                    languageCode: serverValidation.user.languageCode || telegramData.user.language_code
                });
                console.log('‚úÖ [TelegramValidator] –î–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –æ–Ω–æ–≤–ª–µ–Ω–æ –≤ Store');
            }
        } else {
            console.error('‚ùå [TelegramValidator] –í–∞–ª—ñ–¥–∞—Ü—ñ—è –ø—Ä–æ–≤–∞–ª–µ–Ω–∞:', serverValidation.error);
        }

        return serverValidation;
    }

    /**
     * –û—Ç—Ä–∏–º–∞—Ç–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–∏–π —Ç–æ–∫–µ–Ω
     */
    function getAuthToken() {
        const storageKey = window.TasksConstants?.STORAGE_KEYS?.AUTH_TOKEN || 'winix_auth_token';
        const token = sessionStorage.getItem(storageKey);
        console.log('üîë [TelegramValidator] –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç–æ–∫–µ–Ω—É –∑ –∫–ª—é—á–∞:', storageKey);
        console.log('üîë [TelegramValidator] –¢–æ–∫–µ–Ω:', token ? '–ü—Ä–∏—Å—É—Ç–Ω—ñ–π' : '–í—ñ–¥—Å—É—Ç–Ω—ñ–π');
        return token;
    }

    /**
     * –í–∏–¥–∞–ª–∏—Ç–∏ —Ç–æ–∫–µ–Ω
     */
    function clearAuthToken() {
        console.log('üóëÔ∏è [TelegramValidator] –û—á–∏—â–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω—É');
        const storageKey = window.TasksConstants?.STORAGE_KEYS?.AUTH_TOKEN || 'winix_auth_token';
        sessionStorage.removeItem(storageKey);
        console.log('‚úÖ [TelegramValidator] –¢–æ–∫–µ–Ω –≤–∏–¥–∞–ª–µ–Ω–æ');
    }

    /**
     * –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —á–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏–π
     */
    function isAuthenticated() {
        const token = getAuthToken();
        const hasToken = !!token;
        const telegramData = getTelegramData();
        const hasTelegramData = !!telegramData;

        const isAuth = hasToken && hasTelegramData;

        console.log('üîê [TelegramValidator] –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó:', {
            hasToken,
            hasTelegramData,
            isAuthenticated: isAuth
        });

        return isAuth;
    }

    /**
     * –û–Ω–æ–≤–∏—Ç–∏ —Ç–æ–∫–µ–Ω
     */
    async function refreshToken() {
        console.log('üîÑ [TelegramValidator] –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω—É...');

        const currentToken = getAuthToken();
        if (!currentToken) {
            console.error('‚ùå [TelegramValidator] –ù–µ–º–∞—î —Ç–æ–∫–µ–Ω—É –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è');
            return false;
        }

        try {
            const response = await window.TasksAPI.auth.refreshToken();

            if (response.token) {
                const storageKey = window.TasksConstants?.STORAGE_KEYS?.AUTH_TOKEN || 'winix_auth_token';
                sessionStorage.setItem(storageKey, response.token);
                console.log('‚úÖ [TelegramValidator] –¢–æ–∫–µ–Ω –æ–Ω–æ–≤–ª–µ–Ω–æ');
                return true;
            }

            console.error('‚ùå [TelegramValidator] –°–µ—Ä–≤–µ—Ä –Ω–µ –ø–æ–≤–µ—Ä–Ω—É–≤ –Ω–æ–≤–∏–π —Ç–æ–∫–µ–Ω');
            return false;

        } catch (error) {
            console.error('‚ùå [TelegramValidator] –ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω—É:', error);
            clearAuthToken();
            return false;
        }
    }

    /**
     * –ù–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω—É
     */
    function setupTokenRefresh() {
        console.log('‚è∞ [TelegramValidator] –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∞–≤—Ç–æ–æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω—É');

        const refreshInterval = window.TasksConstants?.TIMERS?.SESSION_REFRESH || 30 * 60 * 1000;

        // –û–Ω–æ–≤–ª—é—î–º–æ –∫–æ–∂–Ω—ñ 30 —Ö–≤–∏–ª–∏–Ω
        setInterval(async () => {
            if (isAuthenticated()) {
                console.log('üîÑ [TelegramValidator] –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω—É');
                await refreshToken();
            }
        }, refreshInterval);

        console.log(`‚úÖ [TelegramValidator] –ê–≤—Ç–æ–æ–Ω–æ–≤–ª–µ–Ω–Ω—è –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–æ (–∫–æ–∂–Ω—ñ ${refreshInterval / 1000 / 60} —Ö–≤–∏–ª–∏–Ω)`);
    }

    /**
     * –§–æ—Ä–º–∞—Ç—É–≤–∞—Ç–∏ –¥–∞–Ω—ñ –¥–ª—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏
     */
    function formatInitData(data) {
        const params = new URLSearchParams();

        // –î–æ–¥–∞—î–º–æ –≤—Å—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ –∫—Ä—ñ–º hash
        Object.entries(data).forEach(([key, value]) => {
            if (key !== 'hash' && value !== undefined && value !== null) {
                if (typeof value === 'object') {
                    params.append(key, JSON.stringify(value));
                } else {
                    params.append(key, String(value));
                }
            }
        });

        // –°–æ—Ä—Ç—É—î–º–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ –∞–ª—Ñ–∞–≤—ñ—Ç–Ω–æ
        const sortedParams = new URLSearchParams([...params].sort());

        // –î–æ–¥–∞—î–º–æ hash –≤ –∫—ñ–Ω—Ü—ñ
        if (data.hash) {
            sortedParams.append('hash', data.hash);
        }

        return sortedParams.toString();
    }

    /**
     * –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è WebApp
     */
    function setupWebApp() {
        console.log('üì± [TelegramValidator] –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è Telegram WebApp');

        if (!window.Telegram?.WebApp) {
            console.error('‚ùå [TelegramValidator] Telegram WebApp –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π');
            return;
        }

        const webApp = window.Telegram.WebApp;

        // –õ–æ–≥—É–≤–∞–Ω–Ω—è –ø–æ—Ç–æ—á–Ω–∏—Ö –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å
        console.log('üìä [TelegramValidator] –ü–æ—Ç–æ—á–Ω—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è WebApp:', {
            version: webApp.version,
            platform: webApp.platform,
            colorScheme: webApp.colorScheme,
            viewportHeight: webApp.viewportHeight,
            viewportStableHeight: webApp.viewportStableHeight
        });

        // –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∫–æ–ª—å–æ—Ä—ñ–≤
        webApp.setHeaderColor('#1a1a2e');
        webApp.setBackgroundColor('#0f0f1e');

        // –†–æ–∑–≥–æ—Ä—Ç–∞—î–º–æ –Ω–∞ –≤–µ—Å—å –µ–∫—Ä–∞–Ω
        webApp.expand();

        // –ì–æ—Ç–æ–≤–Ω—ñ—Å—Ç—å
        webApp.ready();

        console.log('‚úÖ [TelegramValidator] WebApp –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–æ');
    }

    /**
     * –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è
     */
    function init() {
        console.log('üöÄ [TelegramValidator] –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –º–æ–¥—É–ª—è');

        // –ù–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ WebApp
        setupWebApp();

        // –ù–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ –∞–≤—Ç–æ–æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω—É
        setupTokenRefresh();

        // –õ–æ–≥—É—î–º–æ –ø–æ—á–∞—Ç–∫–æ–≤—ñ –¥–∞–Ω—ñ
        const telegramData = getTelegramData();
        if (telegramData) {
            console.log('‚úÖ [TelegramValidator] Telegram –¥–∞–Ω—ñ –¥–æ—Å—Ç—É–ø–Ω—ñ –ø—Ä–∏ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó');
        } else {
            console.warn('‚ö†Ô∏è [TelegramValidator] Telegram –¥–∞–Ω—ñ –≤—ñ–¥—Å—É—Ç–Ω—ñ –ø—Ä–∏ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó');
        }

        console.log('‚úÖ [TelegramValidator] –ú–æ–¥—É–ª—å —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ');
    }

    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è
    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', init);
    } else {
        init();
    }

    console.log('‚úÖ [TelegramValidator] –ú–æ–¥—É–ª—å –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó Telegram –≥–æ—Ç–æ–≤–∏–π');

    // –ü—É–±–ª—ñ—á–Ω–∏–π API
    return {
        getTelegramData,
        validateTelegramAuth,
        isAuthenticated,
        getAuthToken,
        clearAuthToken,
        refreshToken,
        formatInitData,
        setupWebApp
    };

})();

console.log('‚úÖ [TelegramValidator] –ú–æ–¥—É–ª—å –µ–∫—Å–ø–æ—Ä—Ç–æ–≤–∞–Ω–æ –≥–ª–æ–±–∞–ª—å–Ω–æ');