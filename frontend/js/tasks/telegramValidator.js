/**
 * –ú–æ–¥—É–ª—å –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó Telegram –¥–∞–Ω–∏—Ö –¥–ª—è —Å–∏—Å—Ç–µ–º–∏ WINIX - Production Version
 * –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∞–≤—Ç–µ–Ω—Ç–∏—á–Ω–æ—Å—Ç—ñ Telegram WebApp –¥–∞–Ω–∏—Ö –±–µ–∑ –∑–∞–≥–ª—É—à–æ–∫
 */

window.TelegramValidator = (function() {
    'use strict';

    console.log('üîê [TelegramValidator] ===== –Ü–ù–Ü–¶–Ü–ê–õ–Ü–ó–ê–¶–Ü–Ø –ú–û–î–£–õ–Ø –í–ê–õ–Ü–î–ê–¶–Ü–á TELEGRAM (PRODUCTION) =====');

    // –°—Ç–∞–Ω –º–æ–¥—É–ª—è
    const moduleState = {
        isInitialized: false,
        apiAvailable: false,
        lastApiCheck: 0,
        retryCount: 0,
        maxRetries: 3
    };

    /**
     * –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—ñ API –ø–µ—Ä–µ–¥ –≤–∞–ª—ñ–¥–∞—Ü—ñ—î—é
     */
    async function checkApiAvailability() {
        console.log('üîç [TelegramValidator] –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—ñ API...');

        const now = Date.now();
        // –ö–µ—à—É—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–∞ 30 —Å–µ–∫—É–Ω–¥
        if (moduleState.apiAvailable && (now - moduleState.lastApiCheck) < 30000) {
            console.log('‚úÖ [TelegramValidator] API –¥–æ—Å—Ç—É–ø–Ω–∏–π (–∫–µ—à)');
            return true;
        }

        try {
            // –ü—Ä–æ—Å—Ç–∏–π ping –¥–æ API
            const response = await fetch('/api/ping', {
                method: 'GET',
                headers: { 'Content-Type': 'application/json' },
                timeout: 5000
            });

            moduleState.apiAvailable = response.ok;
            moduleState.lastApiCheck = now;
            moduleState.retryCount = 0;

            console.log(`${moduleState.apiAvailable ? '‚úÖ' : '‚ùå'} [TelegramValidator] API —Å—Ç–∞—Ç—É—Å:`, response.status);
            return moduleState.apiAvailable;

        } catch (error) {
            console.error('‚ùå [TelegramValidator] API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π:', error.message);
            moduleState.apiAvailable = false;
            moduleState.lastApiCheck = now;
            return false;
        }
    }

    /**
     * –°—Ç—Ä–æ–≥–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ Telegram WebApp
     */
    function checkTelegramAvailability() {
        console.log('üîç [TelegramValidator] –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—ñ Telegram WebApp...');

        if (!window.Telegram?.WebApp) {
            console.error('‚ùå [TelegramValidator] Telegram WebApp –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
            throw new Error('–î–æ–¥–∞—Ç–æ–∫ –ø–æ–≤–∏–Ω–µ–Ω –±—É—Ç–∏ –≤—ñ–¥–∫—Ä–∏—Ç–∏–π —á–µ—Ä–µ–∑ Telegram');
        }

        const webApp = window.Telegram.WebApp;

        if (!webApp.initData) {
            console.error('‚ùå [TelegramValidator] Telegram initData –≤—ñ–¥—Å—É—Ç–Ω—ñ');
            throw new Error('–ù–µ–≤—ñ—Ä–Ω—ñ –¥–∞–Ω—ñ Telegram WebApp');
        }

        if (!webApp.initDataUnsafe) {
            console.error('‚ùå [TelegramValidator] Telegram initDataUnsafe –≤—ñ–¥—Å—É—Ç–Ω—ñ');
            throw new Error('–î–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ñ');
        }

        console.log('‚úÖ [TelegramValidator] Telegram WebApp –¥–æ—Å—Ç—É–ø–Ω–∏–π');
        return true;
    }

    /**
     * –û—Ç—Ä–∏–º–∞—Ç–∏ —Ç–∞ –≤–∞–ª—ñ–¥—É–≤–∞—Ç–∏ Telegram –¥–∞–Ω—ñ
     */
    function getTelegramData() {
        console.log('üì± [TelegramValidator] –û—Ç—Ä–∏–º–∞–Ω–Ω—è Telegram –¥–∞–Ω–∏—Ö...');

        // –°—Ç—Ä–æ–≥–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—ñ
        checkTelegramAvailability();

        const webApp = window.Telegram.WebApp;
        const initData = webApp.initData;
        const initDataUnsafe = webApp.initDataUnsafe;

        console.log('üîç [TelegramValidator] WebApp version:', webApp.version);
        console.log('üîç [TelegramValidator] WebApp platform:', webApp.platform);
        console.log('üîç [TelegramValidator] InitData length:', initData.length);

        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        if (!initDataUnsafe.user) {
            console.error('‚ùå [TelegramValidator] –î–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤—ñ–¥—Å—É—Ç–Ω—ñ');
            throw new Error('–î–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ñ');
        }

        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –æ–±–æ–≤'—è–∑–∫–æ–≤—ñ –ø–æ–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        const user = initDataUnsafe.user;
        if (!user.id || typeof user.id !== 'number') {
            console.error('‚ùå [TelegramValidator] –ù–µ–≤—ñ—Ä–Ω–∏–π ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞');
            throw new Error('–ù–µ–≤—ñ—Ä–Ω–∏–π ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞');
        }

        console.log('‚úÖ [TelegramValidator] Telegram –¥–∞–Ω—ñ –≤–∞–ª—ñ–¥–Ω—ñ');
        console.log('üë§ [TelegramValidator] –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á ID:', user.id);
        console.log('üë§ [TelegramValidator] Username:', user.username || '–ù–µ –≤–∫–∞–∑–∞–Ω–æ');

        return {
            initData: initData,
            initDataUnsafe: initDataUnsafe,
            user: user,
            auth_date: initDataUnsafe.auth_date || null,
            hash: initDataUnsafe.hash || null,
            chat_instance: initDataUnsafe.chat_instance || null,
            chat_type: initDataUnsafe.chat_type || null,
            start_param: initDataUnsafe.start_param || null
        };
    }

    /**
     * –í–∞–ª—ñ–¥–∞—Ü—ñ—è Telegram –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –ª–æ–∫–∞–ª—å–Ω–æ
     */
    function validateUserLocally(userData) {
        console.log('üîç [TelegramValidator] –õ–æ–∫–∞–ª—å–Ω–∞ –≤–∞–ª—ñ–¥–∞—Ü—ñ—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞...');

        if (!userData) {
            throw new Error('–î–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤—ñ–¥—Å—É—Ç–Ω—ñ');
        }

        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –æ–±–æ–≤'—è–∑–∫–æ–≤—ñ –ø–æ–ª—è
        if (!userData.id || typeof userData.id !== 'number' || userData.id <= 0) {
            throw new Error('–ù–µ–≤—ñ—Ä–Ω–∏–π ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞');
        }

        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –¥–æ–≤–∂–∏–Ω—É username —è–∫—â–æ —î
        if (userData.username && (userData.username.length < 5 || userData.username.length > 32)) {
            console.warn('‚ö†Ô∏è [TelegramValidator] –ü—ñ–¥–æ–∑—Ä—ñ–ª–∏–π username:', userData.username);
        }

        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –¥–∞–≤–Ω—ñ—Å—Ç—å auth_date —è–∫—â–æ —î
        const authDate = parseInt(userData.auth_date || 0);
        if (authDate) {
            const currentTime = Math.floor(Date.now() / 1000);
            const maxAge = 86400; // 24 –≥–æ–¥–∏–Ω–∏
            const age = currentTime - authDate;

            console.log('‚è∞ [TelegramValidator] –í—ñ–∫ –¥–∞–Ω–∏—Ö:', age, '—Å–µ–∫—É–Ω–¥');

            if (age > maxAge) {
                throw new Error('–î–∞–Ω—ñ –∑–∞—Å—Ç–∞—Ä—ñ–ª—ñ. –û–Ω–æ–≤—ñ—Ç—å —Å—Ç–æ—Ä—ñ–Ω–∫—É');
            }

            if (age < 0) {
                throw new Error('–ù–µ–≤—ñ—Ä–Ω–∞ –º—ñ—Ç–∫–∞ —á–∞—Å—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó');
            }
        }

        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –≤–∞–ª—ñ–¥–Ω—ñ—Å—Ç—å ID –∑–∞ –¥—ñ–∞–ø–∞–∑–æ–Ω–æ–º
        const validation = window.TasksConstants?.VALIDATION_RULES?.TELEGRAM_ID;
        if (validation) {
            if (userData.id < validation.MIN || userData.id > validation.MAX) {
                throw new Error('–ù–µ–≤—ñ—Ä–Ω–∏–π –¥—ñ–∞–ø–∞–∑–æ–Ω ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞');
            }
        }

        console.log('‚úÖ [TelegramValidator] –õ–æ–∫–∞–ª—å–Ω–∞ –≤–∞–ª—ñ–¥–∞—Ü—ñ—è –ø—Ä–æ–π–¥–µ–Ω–∞');
        return true;
    }

    /**
     * –í–∞–ª—ñ–¥–∞—Ü—ñ—è –¥–∞–Ω–∏—Ö –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ
     */
    async function validateOnServer(telegramData) {
        console.log('üåê [TelegramValidator] === –°–ï–†–í–ï–†–ù–ê –í–ê–õ–Ü–î–ê–¶–Ü–Ø ===');

        if (!telegramData || !telegramData.initData) {
            throw new Error('–ù–µ–º–∞—î –¥–∞–Ω–∏—Ö –¥–ª—è –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó');
        }

        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –¥–æ—Å—Ç—É–ø–Ω—ñ—Å—Ç—å API
        const apiAvailable = await checkApiAvailability();
        if (!apiAvailable) {
            console.error('‚ùå [TelegramValidator] API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π –¥–ª—è –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó');

            // –Ü–Ω–∫—Ä–µ–º–µ–Ω—Ç—É—î–º–æ –ª—ñ—á–∏–ª—å–Ω–∏–∫ —Å–ø—Ä–æ–±
            moduleState.retryCount++;

            if (moduleState.retryCount >= moduleState.maxRetries) {
                throw new Error('–°–µ—Ä–≤–µ—Ä —Ç–∏–º—á–∞—Å–æ–≤–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ –∞–±–æ –æ–Ω–æ–≤—ñ—Ç—å —Å—Ç–æ—Ä—ñ–Ω–∫—É');
            } else {
                throw new Error(`–°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π. –°–ø—Ä–æ–±–∞ ${moduleState.retryCount}/${moduleState.maxRetries}`);
            }
        }

        try {
            console.log('üì§ [TelegramValidator] –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–∏—Ö –Ω–∞ —Å–µ—Ä–≤–µ—Ä...');
            console.log('üìä [TelegramValidator] –î–æ–≤–∂–∏–Ω–∞ initData:', telegramData.initData.length);

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å TasksAPI
            if (!window.TasksAPI?.auth?.validateTelegram) {
                console.error('‚ùå [TelegramValidator] TasksAPI –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∏–π');
                throw new Error('API –º–æ–¥—É–ª—å –Ω–µ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ');
            }

            const response = await window.TasksAPI.auth.validateTelegram(telegramData.initData);

            console.log('üìä [TelegramValidator] –í—ñ–¥–ø–æ–≤—ñ–¥—å —Å–µ—Ä–≤–µ—Ä–∞ –æ—Ç—Ä–∏–º–∞–Ω–∞');

            if (response.valid) {
                console.log('‚úÖ [TelegramValidator] –°–µ—Ä–≤–µ—Ä–Ω–∞ –≤–∞–ª—ñ–¥–∞—Ü—ñ—è –ø—Ä–æ–π–¥–µ–Ω–∞');

                // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —Ç–æ–∫–µ–Ω –≤ sessionStorage
                if (response.token) {
                    const storageKey = window.TasksConstants?.STORAGE_KEYS?.AUTH_TOKEN || 'winix_auth_token';
                    sessionStorage.setItem(storageKey, response.token);
                    console.log('üíæ [TelegramValidator] –¢–æ–∫–µ–Ω –∑–±–µ—Ä–µ–∂–µ–Ω–æ');
                }

                // –°–∫–∏–¥–∞—î–º–æ –ª—ñ—á–∏–ª—å–Ω–∏–∫ –ø–æ–º–∏–ª–æ–∫
                moduleState.retryCount = 0;

                return {
                    valid: true,
                    user: response.user,
                    token: response.token
                };
            } else {
                console.error('‚ùå [TelegramValidator] –°–µ—Ä–≤–µ—Ä–Ω–∞ –≤–∞–ª—ñ–¥–∞—Ü—ñ—è –Ω–µ –ø—Ä–æ–π–¥–µ–Ω–∞');
                throw new Error(response.error || '–í–∞–ª—ñ–¥–∞—Ü—ñ—è –Ω–µ –ø—Ä–æ–π–¥–µ–Ω–∞');
            }

        } catch (error) {
            console.error('‚ùå [TelegramValidator] –ü–æ–º–∏–ª–∫–∞ —Å–µ—Ä–≤–µ—Ä–Ω–æ—ó –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó:', error);

            // –î–µ—Ç–∞–ª—å–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É
            if (error.status === 401) {
                throw new Error('–ü–æ–º–∏–ª–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç—ñ—Ç—å –¥–æ–¥–∞—Ç–æ–∫ —á–µ—Ä–µ–∑ Telegram');
            } else if (error.status === 403) {
                throw new Error('–î–æ—Å—Ç—É–ø –∑–∞–±–æ—Ä–æ–Ω–µ–Ω–æ. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø—É');
            } else if (error.status >= 500) {
                throw new Error('–°–µ—Ä–≤–µ—Ä —Ç–∏–º—á–∞—Å–æ–≤–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ');
            } else if (error.message.includes('NetworkError') || error.message.includes('Failed to fetch')) {
                throw new Error('–ü—Ä–æ–±–ª–µ–º–∏ –∑ –º–µ—Ä–µ–∂–µ—é. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ —ñ–Ω—Ç–µ—Ä–Ω–µ—Ç—É');
            } else if (error.message.includes('API –º–æ–¥—É–ª—å –Ω–µ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ')) {
                throw new Error('–°–∏—Å—Ç–µ–º–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î—Ç—å—Å—è. –ó–∞—á–µ–∫–∞–π—Ç–µ...');
            }

            throw new Error(error.message || '–ü–æ–º–∏–ª–∫–∞ –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó –¥–∞–Ω–∏—Ö');
        }
    }

    /**
     * –ü–æ–≤–Ω–∞ –≤–∞–ª—ñ–¥–∞—Ü—ñ—è (–ª–æ–∫–∞–ª—å–Ω–∞ + —Å–µ—Ä–≤–µ—Ä–Ω–∞)
     */
    async function validateTelegramAuth() {
        console.log('üîê [TelegramValidator] === –ü–û–í–ù–ê –í–ê–õ–Ü–î–ê–¶–Ü–Ø ===');
        console.log('üïê [TelegramValidator] –ß–∞—Å –ø–æ—á–∞—Ç–∫—É:', new Date().toISOString());

        try {
            // –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ
            const telegramData = getTelegramData();

            // –õ–æ–∫–∞–ª—å–Ω–∞ –≤–∞–ª—ñ–¥–∞—Ü—ñ—è
            validateUserLocally(telegramData.user);

            // –°–µ—Ä–≤–µ—Ä–Ω–∞ –≤–∞–ª—ñ–¥–∞—Ü—ñ—è –∑ –ø–µ—Ä–µ–≤—ñ—Ä–∫–æ—é –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—ñ API
            console.log('üîÑ [TelegramValidator] –ü–µ—Ä–µ—Ö–æ–¥–∏–º–æ –¥–æ —Å–µ—Ä–≤–µ—Ä–Ω–æ—ó –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó...');

            const serverValidation = await validateOnServer(telegramData);

            if (serverValidation.valid) {
                console.log('‚úÖ [TelegramValidator] –í–∞–ª—ñ–¥–∞—Ü—ñ—è —É—Å–ø—ñ—à–Ω–∞!');

                // –û–Ω–æ–≤–ª—é—î–º–æ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤ —Å—Ç–æ—Ä—ñ
                if (window.TasksStore) {
                    console.log('üìù [TelegramValidator] –û–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –≤ Store...');
                    window.TasksStore.actions.setUser({
                        id: serverValidation.user.id,
                        telegramId: serverValidation.user.telegram_id || telegramData.user.id,
                        username: serverValidation.user.username || telegramData.user.username,
                        firstName: serverValidation.user.first_name || telegramData.user.first_name,
                        lastName: serverValidation.user.last_name || telegramData.user.last_name,
                        photoUrl: serverValidation.user.photo_url || telegramData.user.photo_url,
                        languageCode: serverValidation.user.language_code || telegramData.user.language_code,
                        balance: serverValidation.user.balance || { winix: 0, tickets: 0, flex: 0 }
                    });
                    console.log('‚úÖ [TelegramValidator] –î–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –æ–Ω–æ–≤–ª–µ–Ω–æ –≤ Store');
                }

                return serverValidation;
            } else {
                throw new Error(serverValidation.error || '–í–∞–ª—ñ–¥–∞—Ü—ñ—è –ø—Ä–æ–≤–∞–ª–µ–Ω–∞');
            }

        } catch (error) {
            console.error('‚ùå [TelegramValidator] –í–∞–ª—ñ–¥–∞—Ü—ñ—è –ø—Ä–æ–≤–∞–ª–µ–Ω–∞:', error.message);

            // –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–º–∏–ª–∫—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É
            if (window.TasksUtils?.showToast) {
                window.TasksUtils.showToast(error.message, 'error');
            }

            return {
                valid: false,
                error: error.message
            };
        }
    }

    /**
     * –û—Ç—Ä–∏–º–∞—Ç–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–∏–π —Ç–æ–∫–µ–Ω
     */
    function getAuthToken() {
        const storageKey = window.TasksConstants?.STORAGE_KEYS?.AUTH_TOKEN || 'winix_auth_token';
        const token = sessionStorage.getItem(storageKey);

        if (!token) {
            console.log('üîë [TelegramValidator] –¢–æ–∫–µ–Ω –≤—ñ–¥—Å—É—Ç–Ω—ñ–π');
            return null;
        }

        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ç–µ—Ä–º—ñ–Ω –¥—ñ—ó —Ç–æ–∫–µ–Ω—É
        try {
            const payload = JSON.parse(atob(token.split('.')[1]));
            const exp = payload.exp * 1000;
            const now = Date.now();

            if (exp <= now) {
                console.warn('‚ö†Ô∏è [TelegramValidator] –¢–æ–∫–µ–Ω –∑–∞—Å—Ç–∞—Ä—ñ–ª–∏–π');
                clearAuthToken();
                return null;
            }

            console.log('üîë [TelegramValidator] –¢–æ–∫–µ–Ω –≤–∞–ª—ñ–¥–Ω–∏–π');
            return token;

        } catch (error) {
            console.error('‚ùå [TelegramValidator] –ü–æ–º–∏–ª–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥—É —Ç–æ–∫–µ–Ω—É:', error);
            clearAuthToken();
            return null;
        }
    }

    /**
     * –í–∏–¥–∞–ª–∏—Ç–∏ —Ç–æ–∫–µ–Ω
     */
    function clearAuthToken() {
        console.log('üóëÔ∏è [TelegramValidator] –û—á–∏—â–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω—É');
        const storageKey = window.TasksConstants?.STORAGE_KEYS?.AUTH_TOKEN || 'winix_auth_token';
        sessionStorage.removeItem(storageKey);

        // –û—á–∏—â–∞—î–º–æ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑—ñ Store
        if (window.TasksStore) {
            window.TasksStore.actions.clearUser();
        }

        console.log('‚úÖ [TelegramValidator] –¢–æ–∫–µ–Ω –≤–∏–¥–∞–ª–µ–Ω–æ');
    }

    /**
     * –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —á–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏–π
     */
    function isAuthenticated() {
        try {
            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å —Ç–æ–∫–µ–Ω—É
            const token = getAuthToken();
            if (!token) {
                console.log('üîê [TelegramValidator] –¢–æ–∫–µ–Ω –≤—ñ–¥—Å—É—Ç–Ω—ñ–π');
                return false;
            }

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å Telegram –¥–∞–Ω–∏—Ö
            checkTelegramAvailability();

            console.log('üîê [TelegramValidator] –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏–π');
            return true;

        } catch (error) {
            console.log('üîê [TelegramValidator] –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏–π:', error.message);
            return false;
        }
    }

    /**
     * –û–Ω–æ–≤–∏—Ç–∏ —Ç–æ–∫–µ–Ω
     */
    async function refreshToken() {
    console.log('üîÑ [TelegramValidator] –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω—É...');

    const currentToken = getAuthToken();
    if (!currentToken) {
        console.error('‚ùå [TelegramValidator] –ù–µ–º–∞—î —Ç–æ–∫–µ–Ω—É –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è');
        throw new Error('–ù–µ–º–∞—î —Ç–æ–∫–µ–Ω—É –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è');
    }
    try {
        // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ WinixAPI –∑–∞–º—ñ—Å—Ç—å TasksAPI —è–∫—â–æ –≤—ñ–Ω –¥–æ—Å—Ç—É–ø–Ω–∏–π
        if (window.WinixAPI?.refreshToken) {
            const newToken = await window.WinixAPI.refreshToken();
            if (newToken) {
                console.log('‚úÖ [TelegramValidator] –¢–æ–∫–µ–Ω –æ–Ω–æ–≤–ª–µ–Ω–æ —á–µ—Ä–µ–∑ WinixAPI');
                return true;
            }
        } else if (window.TasksAPI?.auth?.refreshToken) {
            const response = await window.TasksAPI.auth.refreshToken();
            if (response.token) {
                const storageKey = window.TasksConstants?.STORAGE_KEYS?.AUTH_TOKEN || 'winix_auth_token';
                sessionStorage.setItem(storageKey, response.token);
                console.log('‚úÖ [TelegramValidator] –¢–æ–∫–µ–Ω –æ–Ω–æ–≤–ª–µ–Ω–æ —á–µ—Ä–µ–∑ TasksAPI');
                return true;
            }
        } else {
            throw new Error('API –º–æ–¥—É–ª—å –Ω–µ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ');
        }

        throw new Error('–°–µ—Ä–≤–µ—Ä –Ω–µ –ø–æ–≤–µ—Ä–Ω—É–≤ –Ω–æ–≤–∏–π —Ç–æ–∫–µ–Ω');

    } catch (error) {
        console.error('‚ùå [TelegramValidator] –ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω—É:', error);

        // –Ø–∫—â–æ —Ü–µ 400/401 –ø–æ–º–∏–ª–∫–∞ - –æ—á–∏—â–∞—î–º–æ —Ç–æ–∫–µ–Ω
        if (error.message.includes('400') || error.message.includes('401') ||
            error.message.includes('–Ω–µ–¥—ñ–π—Å–Ω–∏–π')) {
            clearAuthToken();
        }

        throw error;
    }
}

    /**
     * –ù–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω—É
     */
    function setupTokenRefresh() {
        console.log('‚è∞ [TelegramValidator] –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∞–≤—Ç–æ–æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω—É');

        const refreshInterval = window.TasksConstants?.TIMERS?.SESSION_REFRESH || 30 * 60 * 1000;

        setInterval(async () => {
            if (isAuthenticated() && moduleState.apiAvailable) {
                try {
                    const token = getAuthToken();
                    if (token) {
                        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –ø–æ—Ç—Ä—ñ–±–Ω–æ –æ–Ω–æ–≤–∏—Ç–∏ —Ç–æ–∫–µ–Ω (–∑–∞ 5 —Ö–≤–∏–ª–∏–Ω –¥–æ –∑–∞–∫—ñ–Ω—á–µ–Ω–Ω—è)
                        const payload = JSON.parse(atob(token.split('.')[1]));
                        const exp = payload.exp * 1000;
                        const now = Date.now();
                        const timeUntilExpiry = exp - now;

                        if (timeUntilExpiry < 5 * 60 * 1000) { // –ú–µ–Ω—à–µ 5 —Ö–≤–∏–ª–∏–Ω
                            console.log('üîÑ [TelegramValidator] –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω—É');
                            await refreshToken();
                        }
                    }
                } catch (error) {
                    console.error('‚ùå [TelegramValidator] –ü–æ–º–∏–ª–∫–∞ –∞–≤—Ç–æ–æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω—É:', error);
                }
            }
        }, refreshInterval);

        console.log(`‚úÖ [TelegramValidator] –ê–≤—Ç–æ–æ–Ω–æ–≤–ª–µ–Ω–Ω—è –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–æ (–∫–æ–∂–Ω—ñ ${refreshInterval / 1000 / 60} —Ö–≤–∏–ª–∏–Ω)`);
    }

    /**
     * –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è WebApp
     */
    function setupWebApp() {
        console.log('üì± [TelegramValidator] –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è Telegram WebApp');

        try {
            checkTelegramAvailability();

            const webApp = window.Telegram.WebApp;

            // –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∫–æ–ª—å–æ—Ä—ñ–≤
            if (webApp.setHeaderColor) {
                webApp.setHeaderColor('#1a1a2e');
            }

            if (webApp.setBackgroundColor) {
                webApp.setBackgroundColor('#0f0f1e');
            }

            // –†–æ–∑–≥–æ—Ä—Ç–∞—î–º–æ –Ω–∞ –≤–µ—Å—å –µ–∫—Ä–∞–Ω
            if (webApp.expand) {
                webApp.expand();
            }

            // –ì–æ—Ç–æ–≤–Ω—ñ—Å—Ç—å
            if (webApp.ready) {
                webApp.ready();
            }

            console.log('‚úÖ [TelegramValidator] WebApp –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–æ');

        } catch (error) {
            console.error('‚ùå [TelegramValidator] –ü–æ–º–∏–ª–∫–∞ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è WebApp:', error);
            throw error;
        }
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ñ—Å—Ç—å —Å–µ—Ä–≤–µ—Ä–∞
     */
    function showServerUnavailableError() {
        const container = document.querySelector('.container') || document.body;
        if (container) {
            const errorDiv = document.createElement('div');
            errorDiv.style.cssText = `
                position: fixed;
                top: 0;
                left: 0;
                right: 0;
                bottom: 0;
                background: #1a1a2e;
                color: white;
                display: flex;
                flex-direction: column;
                justify-content: center;
                align-items: center;
                text-align: center;
                padding: 20px;
                z-index: 10000;
            `;
            errorDiv.innerHTML = `
                <h2 style="color: #e74c3c; margin-bottom: 20px;">üö´ –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π</h2>
                <p style="margin-bottom: 20px; font-size: 16px;">
                    –°–µ—Ä–≤–µ—Ä —Ç–∏–º—á–∞—Å–æ–≤–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π.<br>
                    –°–ø—Ä–æ–±—É–π—Ç–µ –æ–Ω–æ–≤–∏—Ç–∏ —Å—Ç–æ—Ä—ñ–Ω–∫—É.
                </p>
                <p style="color: #95a5a6; font-size: 14px; margin-bottom: 20px;">
                    –Ø–∫—â–æ –ø—Ä–æ–±–ª–µ–º–∞ –Ω–µ –∑–Ω–∏–∫–∞—î, –∑–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –ø—ñ–¥—Ç—Ä–∏–º–∫–∏
                </p>
                <button onclick="window.location.reload()" 
                        style="margin-top: 20px; padding: 10px 20px; background: #b366ff; color: white; border: none; border-radius: 8px; cursor: pointer;">
                    –û–Ω–æ–≤–∏—Ç–∏ —Å—Ç–æ—Ä—ñ–Ω–∫—É
                </button>
            `;
            container.appendChild(errorDiv);
        }
    }

    /**
     * –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è
     */
    function init() {
        console.log('üöÄ [TelegramValidator] –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –º–æ–¥—É–ª—è');

        try {
            // –ù–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ WebApp
            setupWebApp();

            // –ù–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ –∞–≤—Ç–æ–æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω—É
            setupTokenRefresh();

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –ø–æ—á–∞—Ç–∫–æ–≤—ñ –¥–∞–Ω—ñ
            const telegramData = getTelegramData();
            if (telegramData) {
                console.log('‚úÖ [TelegramValidator] Telegram –¥–∞–Ω—ñ –¥–æ—Å—Ç—É–ø–Ω—ñ –ø—Ä–∏ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó');
            }

            moduleState.isInitialized = true;
            console.log('‚úÖ [TelegramValidator] –ú–æ–¥—É–ª—å —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ');

        } catch (error) {
            console.error('‚ùå [TelegramValidator] –ü–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó:', error);

            // –ü–æ–∫–∞–∑—É—î–º–æ –∫—Ä–∏—Ç–∏—á–Ω—É –ø–æ–º–∏–ª–∫—É
            const container = document.querySelector('.container') || document.body;
            if (container) {
                const errorDiv = document.createElement('div');
                errorDiv.style.cssText = `
                    position: fixed;
                    top: 0;
                    left: 0;
                    right: 0;
                    bottom: 0;
                    background: #1a1a2e;
                    color: white;
                    display: flex;
                    flex-direction: column;
                    justify-content: center;
                    align-items: center;
                    text-align: center;
                    padding: 20px;
                    z-index: 10000;
                `;
                errorDiv.innerHTML = `
                    <h2 style="color: #e74c3c; margin-bottom: 20px;">‚ùå –ü–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó</h2>
                    <p style="margin-bottom: 20px; font-size: 16px;">${error.message}</p>
                    <p style="color: #95a5a6; font-size: 14px;">
                        –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—è, —â–æ –¥–æ–¥–∞—Ç–æ–∫ –≤—ñ–¥–∫—Ä–∏—Ç–æ —á–µ—Ä–µ–∑ Telegram, <br>
                        —Ç–∞ —Å–ø—Ä–æ–±—É–π—Ç–µ –æ–Ω–æ–≤–∏—Ç–∏ —Å—Ç–æ—Ä—ñ–Ω–∫—É
                    </p>
                    <button onclick="window.location.reload()" 
                            style="margin-top: 20px; padding: 10px 20px; background: #b366ff; color: white; border: none; border-radius: 8px; cursor: pointer;">
                        –û–Ω–æ–≤–∏—Ç–∏ —Å—Ç–æ—Ä—ñ–Ω–∫—É
                    </button>
                `;
                container.appendChild(errorDiv);
            }

            throw error;
        }
    }

    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –∑ –∑–∞—Ç—Ä–∏–º–∫–æ—é
    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', () => {
            setTimeout(init, 100); // –ù–µ–≤–µ–ª–∏–∫–∞ –∑–∞—Ç—Ä–∏–º–∫–∞ –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π
        });
    } else {
        setTimeout(init, 100);
    }

    console.log('‚úÖ [TelegramValidator] –ú–æ–¥—É–ª—å –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó Telegram –≥–æ—Ç–æ–≤–∏–π (Production)');

    // –ü—É–±–ª—ñ—á–Ω–∏–π API
    return {
        getTelegramData,
        validateTelegramAuth,
        isAuthenticated,
        getAuthToken,
        clearAuthToken,
        refreshToken,
        setupWebApp,
        checkTelegramAvailability,
        checkApiAvailability,
        showServerUnavailableError
    };

})();

console.log('‚úÖ [TelegramValidator] –ú–æ–¥—É–ª—å –µ–∫—Å–ø–æ—Ä—Ç–æ–≤–∞–Ω–æ –≥–ª–æ–±–∞–ª—å–Ω–æ (Production)');