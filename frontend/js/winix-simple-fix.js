/**
 * winix-simple-fix.js
 *
 * –°–ø—Ä–æ—â–µ–Ω–∏–π —Ñ–∞–π–ª –¥–ª—è –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –ø—Ä–æ–±–ª–µ–º –∑ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —Ç–∞ –∑–∞–ø–æ–±—ñ–≥–∞–Ω–Ω—è –∑–∞–≤–∏—Å–∞–Ω–Ω—é
 * –ó–∞–º—ñ–Ω—é—î api-id-patch.js, emergency-id-fix.js —Ç–∞ user-id-manager.js
 */

(function() {
    console.log("üîß –ó–∞–ø—É—Å–∫ —Å–ø—Ä–æ—â–µ–Ω–æ—ó —Å–∏—Å—Ç–µ–º–∏ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω—å WINIX");

    // –ó–º—ñ–Ω–Ω—ñ
    let currentUserId = null;
    let processingRequest = false;

    // –§—É–Ω–∫—Ü—ñ—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    function getUserId() {
        // –Ø–∫—â–æ ID –≤–∂–µ –∑–±–µ—Ä–µ–∂–µ–Ω–∏–π –≤ –∑–º—ñ–Ω–Ω—ñ–π - –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ –π–æ–≥–æ
        if (currentUserId) return currentUserId;

        // –û—Ç—Ä–∏–º—É—î–º–æ ID –∑ localStorage
        currentUserId = localStorage.getItem('telegram_user_id') ||
                        localStorage.getItem('userId') ||
                        localStorage.getItem('user_id');

        // –Ø–∫—â–æ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ localStorage, —à—É–∫–∞—î–º–æ –≤ URL
        if (!currentUserId) {
            const urlParams = new URLSearchParams(window.location.search);
            currentUserId = urlParams.get('id') || urlParams.get('user_id') || urlParams.get('telegram_id');
        }

        // –Ø–∫—â–æ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ URL, —à—É–∫–∞—î–º–æ –≤ DOM
        if (!currentUserId) {
            const idElement = document.getElementById('user-id');
            if (idElement && idElement.textContent) {
                currentUserId = idElement.textContent.trim();
            }
        }

        // –Ø–∫—â–æ ID –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∑–Ω–∞—á–µ–Ω–Ω—è –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
        if (!currentUserId || currentUserId === 'undefined' || currentUserId === 'null') {
            currentUserId = "12345678";
        }

        // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ ID –≤ localStorage –¥–ª—è –º–∞–π–±—É—Ç–Ω—å–æ–≥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è
        try {
            localStorage.setItem('telegram_user_id', currentUserId);
            localStorage.setItem('userId', currentUserId);
        } catch (e) {
            console.warn("–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–±–µ—Ä–µ–≥—Ç–∏ ID –≤ localStorage:", e);
        }

        // –û–Ω–æ–≤–ª—é—î–º–æ –µ–ª–µ–º–µ–Ω—Ç–∏ DOM –∑ ID
        updateDomElements();

        return currentUserId;
    }

    // –§—É–Ω–∫—Ü—ñ—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ DOM –∑ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    function updateDomElements() {
        try {
            if (!currentUserId) return;

            // –û–Ω–æ–≤–ª—é—î–º–æ –µ–ª–µ–º–µ–Ω—Ç user-id, —è–∫—â–æ –≤—ñ–Ω —ñ—Å–Ω—É—î
            const userIdElement = document.getElementById('user-id');
            if (userIdElement) {
                userIdElement.textContent = currentUserId;
            } else {
                // –Ø–∫—â–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –Ω–µ–º–∞—î, —Å—Ç–≤–æ—Ä—é—î–º–æ –ø—Ä–∏—Ö–æ–≤–∞–Ω–∏–π
                const hiddenId = document.createElement('div');
                hiddenId.id = 'user-id';
                hiddenId.style.display = 'none';
                hiddenId.textContent = currentUserId;
                document.body.appendChild(hiddenId);
            }

            // –û–Ω–æ–≤–ª—é—î–º–æ —ñ–Ω—à—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ –∑ –∫–ª–∞—Å–æ–º user-id-value
            const idElements = document.querySelectorAll('.user-id-value');
            idElements.forEach(el => {
                if (el) el.textContent = currentUserId;
            });
        } catch (e) {
            console.warn("–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è DOM –µ–ª–µ–º–µ–Ω—Ç—ñ–≤:", e);
        }
    }

    // –í–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –∑–∞–ø–∏—Ç—ñ–≤ API –¥–ª—è –ø—ñ–¥—Å—Ç–∞–Ω–æ–≤–∫–∏ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    function fixApiRequests() {
        // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–∏–π fetch
        const originalFetch = window.fetch;

        // –ó–∞–º—ñ–Ω—é—î–º–æ fetch –Ω–∞—à–æ—é –≤–µ—Ä—Å—ñ—î—é
        window.fetch = function(url, options = {}) {
            // –Ø–∫—â–æ —Ü–µ –∑–∞–ø–∏—Ç –¥–æ API
            if (typeof url === 'string' && url.includes('/api/')) {
                try {
                    const userId = getUserId();

                    if (url.includes('/api/user/') && !url.includes(`/api/user/${userId}`)) {
    // –î–æ–¥–∞—î–º–æ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–æ URL —Ç—ñ–ª—å–∫–∏ —è–∫—â–æ –π–æ–≥–æ —â–µ –Ω–µ–º–∞—î
    url = url.replace('/api/user/', `/api/user/${userId}/`);
}

                    // –î–æ–¥–∞—î–º–æ ID –≤ –∑–∞–≥–æ–ª–æ–≤–∫–∏
                    if (!options.headers) options.headers = {};
                    options.headers['X-User-Id'] = userId;
                    options.headers['X-Telegram-User-Id'] = userId;

                    // –î–æ–¥–∞—î–º–æ —Ç–∞–π–º–∞—É—Ç –¥–ª—è –∑–∞–ø–∏—Ç—É
                    const controller = new AbortController();
                    const timeoutId = setTimeout(() => controller.abort(), 10000);

                    // –Ø–∫—â–æ —Å–∏–≥–Ω–∞–ª –≤–∂–µ —ñ—Å–Ω—É—î, –∑–±–µ—Ä—ñ–≥–∞—î–º–æ –π–æ–≥–æ
                    const originalSignal = options.signal;
                    options.signal = controller.signal;

                    // –û–±—Ä–æ–±–ª—è—î–º–æ –∑–∞–ø–∏—Ç –∑—ñ —Å—Ç–µ–π–∫—ñ–Ω–≥—É –æ–∫—Ä–µ–º–æ
                    if (url.includes('/staking') && !processingRequest) {
                        processingRequest = true;

                        // –¢–∞–π–º–∞—É—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ–≥–æ —Å–∫–∞—Å—É–≤–∞–Ω–Ω—è –∑–∞–≤–∏—Å–∞–Ω–Ω—è –∑–∞–ø–∏—Ç—É —Å—Ç–µ–π–∫—ñ–Ω–≥—É
                        setTimeout(() => {
                            if (processingRequest) {
                                console.warn("–í–∏—è–≤–ª–µ–Ω–æ –∑–∞–≤–∏—Å–∞–Ω–Ω—è –∑–∞–ø–∏—Ç—É —Å—Ç–µ–π–∫—ñ–Ω–≥—É. –°–∫–∞—Å–æ–≤—É—î–º–æ...");
                                controller.abort();
                                processingRequest = false;

                                // –°–∫–∏–¥–∞—î–º–æ –¥–∞–Ω—ñ —Å—Ç–µ–π–∫—ñ–Ω–≥—É –¥–ª—è —É–Ω–∏–∫–Ω–µ–Ω–Ω—è –ø—Ä–æ–±–ª–µ–º
                                const emptyStaking = {
                                    hasActiveStaking: false,
                                    status: "cancelled",
                                    stakingAmount: 0,
                                    period: 0,
                                    rewardPercent: 0,
                                    expectedReward: 0,
                                    remainingDays: 0
                                };

                                localStorage.setItem('stakingData', JSON.stringify(emptyStaking));
                                localStorage.setItem('winix_staking', JSON.stringify(emptyStaking));

                                // –°–ø—Ä–æ–±—É—î–º–æ –ø–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Å—Ç–æ—Ä—ñ–Ω–∫—É, —è–∫—â–æ —Ü–µ —Å—Ç–æ—Ä—ñ–Ω–∫–∞ —Å—Ç–µ–π–∫—ñ–Ω–≥—É
                                if (window.location.href.includes('staking')) {
                                    alert("–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö —Å—Ç–µ–π–∫—ñ–Ω–≥—É. –°—Ç–æ—Ä—ñ–Ω–∫–∞ –±—É–¥–µ –ø–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∞.");
                                    window.location.reload();
                                }
                            }
                        }, 8000);
                    }

                    return originalFetch(url, options)
                        .then(response => {
                            clearTimeout(timeoutId);
                            processingRequest = false;
                            return response;
                        })
                        .catch(error => {
                            clearTimeout(timeoutId);
                            processingRequest = false;

                            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —Ü–µ –ø–æ–º–∏–ª–∫–∞ 404 –Ω–∞ –∑–∞–ø–∏—Ç —Å—Ç–µ–π–∫—ñ–Ω–≥—É
                            if (url.includes('/staking') && (error.message.includes('404') || error.message.includes('not found'))) {
                                console.warn("–û—Ç—Ä–∏–º–∞–Ω–æ 404 –¥–ª—è —Å—Ç–µ–π–∫—ñ–Ω–≥—É. –°—Ç–≤–æ—Ä—é—î–º–æ –ø–æ—Ä–æ–∂–Ω—ñ –¥–∞–Ω—ñ —Å—Ç–µ–π–∫—ñ–Ω–≥—É.");

                                // –°—Ç–≤–æ—Ä—é—î–º–æ –ø–æ—Ä–æ–∂–Ω—ñ –¥–∞–Ω—ñ —Å—Ç–µ–π–∫—ñ–Ω–≥—É
                                const emptyStaking = {
                                    hasActiveStaking: false,
                                    status: "cancelled",
                                    stakingAmount: 0,
                                    period: 0,
                                    rewardPercent: 0,
                                    expectedReward: 0,
                                    remainingDays: 0
                                };

                                localStorage.setItem('stakingData', JSON.stringify(emptyStaking));
                                localStorage.setItem('winix_staking', JSON.stringify(emptyStaking));

                                // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ —à—Ç—É—á–Ω—É –≤—ñ–¥–ø–æ–≤—ñ–¥—å –¥–ª—è –∑–∞–ø–∏—Ç—ñ–≤ —Å—Ç–µ–π–∫—ñ–Ω–≥—É
                                return {
                                    ok: true,
                                    status: 200,
                                    json: () => Promise.resolve({
                                        status: 'success',
                                        data: emptyStaking
                                    })
                                };
                            }

                            // –î–ª—è —ñ–Ω—à–∏—Ö –ø–æ–º–∏–ª–æ–∫ –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ–¥–∞—î–º–æ –¥–∞–ª—ñ
                            throw error;
                        });
                } catch (e) {
                    console.error("–ü–æ–º–∏–ª–∫–∞ –≤ –º–æ–¥–∏—Ñ—ñ–∫–æ–≤–∞–Ω–æ–º—É fetch:", e);
                    return originalFetch(url, options);
                }
            }

            // –î–ª—è –Ω–µ-API –∑–∞–ø–∏—Ç—ñ–≤ –≤–∏–∫–ª–∏–∫–∞—î–º–æ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–∏–π fetch
            return originalFetch(url, options);
        };
    }

    // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —à–≤–∏–¥–∫–æ–≥–æ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –∑–∞–≤–∏—Å–∞–Ω–Ω—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏ —Å—Ç–µ–π–∫—ñ–Ω–≥—É
    function fixStakingPage() {
        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –º–∏ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ —Å—Ç–µ–π–∫—ñ–Ω–≥—É
        if (window.location.href.includes('staking')) {
            console.log("üîß –ó–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è –≤–∏–ø—Ä–∞–≤–ª–µ–Ω—å –¥–ª—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏ —Å—Ç–µ–π–∫—ñ–Ω–≥—É");

            // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Ç–∞–π–º–∞—É—Ç –¥–ª—è –≤–∏—è–≤–ª–µ–Ω–Ω—è –∑–∞–≤–∏—Å–∞–Ω–Ω—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏
            setTimeout(() => {
                // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –µ–ª–µ–º–µ–Ω—Ç–∏, —è–∫—ñ –≤–∫–∞–∑—É—é—Ç—å –Ω–∞ –∑–∞–≤–∏—Å–∞–Ω–Ω—è
                const stakingStatus = document.getElementById('staking-status');
                const loadingElement = document.querySelector('.loading');

                if ((stakingStatus && stakingStatus.textContent.includes('–ó–∞–≤–∞–Ω—Ç–∞')) || loadingElement) {
                    console.warn("–í–∏—è–≤–ª–µ–Ω–æ –∑–∞–≤–∏—Å–∞–Ω–Ω—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏ —Å—Ç–µ–π–∫—ñ–Ω–≥—É. –í–∏–ø—Ä–∞–≤–ª—è—î–º–æ...");

                    // –°–∫–∏–¥–∞—î–º–æ –¥–∞–Ω—ñ —Å—Ç–µ–π–∫—ñ–Ω–≥—É
                    const emptyStaking = {
                        hasActiveStaking: false,
                        status: "cancelled",
                        stakingAmount: 0,
                        period: 0,
                        rewardPercent: 0,
                        expectedReward: 0,
                        remainingDays: 0
                    };

                    localStorage.setItem('stakingData', JSON.stringify(emptyStaking));
                    localStorage.setItem('winix_staking', JSON.stringify(emptyStaking));

                    // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è
                    if (stakingStatus) {
                        stakingStatus.textContent = "–ù–∞—Ä–∞–∑—ñ –Ω–µ–º–∞—î –∞–∫—Ç–∏–≤–Ω–∏—Ö —Å—Ç–µ–π–∫—ñ–Ω–≥—ñ–≤";
                    }

                    if (loadingElement) {
                        loadingElement.classList.remove('loading');
                    }

                    // –í–∏–ø—Ä–∞–≤–ª—è—î–º–æ –∫–Ω–æ–ø–∫–∏
                    const stakeButton = document.getElementById('stake-button');
                    if (stakeButton) {
                        const originalHandler = stakeButton.onclick;
                        stakeButton.onclick = function(e) {
                            // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–∏–π –æ–±—Ä–æ–±–Ω–∏–∫, —è–∫—â–æ –≤—ñ–Ω —î —ñ –ø—Ä–∞—Ü—é—î
                            try {
                                if (typeof window.handleStakeButton === 'function') {
                                    return window.handleStakeButton();
                                } else if (originalHandler) {
                                    return originalHandler.call(this, e);
                                }
                            } catch (error) {
                                console.error("–ü–æ–º–∏–ª–∫–∞ —É –æ–±—Ä–æ–±–Ω–∏–∫—É –∫–Ω–æ–ø–∫–∏ —Å—Ç–µ–π–∫—ñ–Ω–≥—É:", error);
                                return false;
                            }
                        };
                    }

                    // –û–Ω–æ–≤–ª—é—î–º–æ –æ—á—ñ–∫—É–≤–∞–Ω—É –Ω–∞–≥–æ—Ä–æ–¥—É
                    const rewardElement = document.getElementById('expected-reward');
                    if (rewardElement) {
                        rewardElement.textContent = "0.00";
                    }

                    // –í—ñ–¥–æ–±—Ä–∞–∂–∞—î–º–æ –∫–Ω–æ–ø–∫–∏
                    const buttons = document.querySelectorAll('button');
                    buttons.forEach(btn => {
                        if (btn.style.display === 'none') {
                            btn.style.display = '';
                        }
                    });

                    // –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É
                    console.log("–°—Ç–æ—Ä—ñ–Ω–∫—É —Å—Ç–µ–π–∫—ñ–Ω–≥—É –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–æ.");
                }
            }, 5000);
        }
    }

    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Å–∏—Å—Ç–µ–º–∏ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω—å
    function init() {
        // –û—Ç—Ä–∏–º—É—î–º–æ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        getUserId();

        // –ó–∞—Å—Ç–æ—Å–æ–≤—É—î–º–æ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –¥–ª—è API –∑–∞–ø–∏—Ç—ñ–≤
        fixApiRequests();

        // –ó–∞—Å—Ç–æ—Å–æ–≤—É—î–º–æ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –¥–ª—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏ —Å—Ç–µ–π–∫—ñ–Ω–≥—É
        fixStakingPage();

        // –ü–µ—Ä–µ—Ö–æ–ø–ª—é—î–º–æ –Ω–µ–æ–±—Ä–æ–±–ª–µ–Ω—ñ –ø—Ä–æ–º—ñ—Å–∏ —â–æ–± —É–Ω–∏–∫–Ω—É—Ç–∏ –∑–∞–≤–∏—Å–∞–Ω–Ω—è
        window.addEventListener('unhandledrejection', function(event) {
            if (event.reason && (
                event.reason.toString().includes('API') ||
                event.reason.toString().includes('404') ||
                event.reason.toString().includes('staking')
            )) {
                console.warn("–ü–µ—Ä–µ—Ö–æ–ø–ª–µ–Ω–æ –Ω–µ–æ–±—Ä–æ–±–ª–µ–Ω–∏–π –ø—Ä–æ–º—ñ—Å:", event.reason);
                // –ó–∞–ø–æ–±—ñ–≥–∞—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—é –ø–æ–º–∏–ª–∫–∏ –≤ –∫–æ–Ω—Å–æ–ª—ñ
                event.preventDefault();
            }
        });

        console.log("‚úÖ –°–∏—Å—Ç–µ–º—É –≤–∏–ø—Ä–∞–≤–ª–µ–Ω—å —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ");
    }

    // –ï–∫—Å–ø–æ—Ä—Ç—É—î–º–æ API –¥–ª—è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –≤ —ñ–Ω—à–∏—Ö —Å–∫—Ä–∏–ø—Ç–∞—Ö
    window.SimpleFix = {
        getUserId,
        updateDomElements,
        fixStakingPage
    };

    // –ó–∞–ø—É—Å–∫–∞—î–º–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—é
    init();
})();