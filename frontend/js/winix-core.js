/**
 * winix-core.js
 *
 * –û—Å–Ω–æ–≤–Ω–∏–π –º–æ–¥—É–ª—å WINIX –¥–ª—è —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó —Ç–∞ –æ–±—Å–ª—É–≥–æ–≤—É–≤–∞–Ω–Ω—è –±–∞–∑–æ–≤–∏—Ö —Ñ—É–Ω–∫—Ü—ñ–π.
 * –ó–∞–±–µ–∑–ø–µ—á—É—î —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º, –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É —Ç–∞ —ñ–Ω—à—ñ –æ–ø–µ—Ä–∞—Ü—ñ—ó,
 * —Å–ø—ñ–ª—å–Ω—ñ –¥–ª—è –≤—Å—å–æ–≥–æ –¥–æ–¥–∞—Ç–∫—É.
 */

(function() {
    'use strict';

    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å API –º–æ–¥—É–ª—è
    if (!window.WinixAPI) {
        console.error("‚ùå –ü–æ–º–∏–ª–∫–∞: –ú–æ–¥—É–ª—å WinixAPI –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!");
        return;
    }

    console.log("üîÑ –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —è–¥—Ä–∞ WINIX...");

    // ======== –ü–†–ò–í–ê–¢–ù–Ü –ó–ú–Ü–ù–ù–Ü ========

    // –ü—Ä–∞–ø–æ—Ä–µ—Ü—å –¥–ª—è —Ä–µ–∂–∏–º—É –≤—ñ–¥–ª–∞–≥–æ–¥–∂–µ–Ω–Ω—è
    let _debugMode = false;

    // –î–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    let _userData = null;

    // –ü—Ä–∞–ø–æ—Ä–µ—Ü—å –¥–ª—è —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
    let _loaderVisible = false;

    // –ß–µ—Ä–≥–∞ –∑–∞–ø–∏—Ç—ñ–≤ –¥–ª—è –∑–∞–ø–æ–±—ñ–≥–∞–Ω–Ω—è –±–ª–æ–∫—É–≤–∞–Ω–Ω—é —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É
    let _requestQueue = [];
    let _isProcessingQueue = false;

    // –Ü–Ω—Ç–µ—Ä–≤–∞–ª –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö
    let _refreshInterval = null;

    // ======== DOM –ï–õ–ï–ú–ï–ù–¢–ò ========

    const DOM = {
        // –ï–ª–µ–º–µ–Ω—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        userId: 'user-id',
        username: 'username',
        userAvatar: 'profile-avatar',

        // –ï–ª–µ–º–µ–Ω—Ç–∏ –±–∞–ª–∞–Ω—Å—É
        userTokens: 'user-tokens',
        userCoins: 'user-coins',

        // –ï–ª–µ–º–µ–Ω—Ç–∏ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó
        navItems: '.nav-item',

        // –ï–ª–µ–º–µ–Ω—Ç–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
        loader: 'loading-spinner'
    };

    // ======== –£–¢–ò–õ–Ü–¢–ò ========

    /**
     * –û—Ç—Ä–∏–º–∞–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç–∞ DOM
     * @param {string} selector - –°–µ–ª–µ–∫—Ç–æ—Ä –µ–ª–µ–º–µ–Ω—Ç–∞
     * @param {boolean} multiple - –ß–∏ –ø–æ–≤–µ—Ä—Ç–∞—Ç–∏ –∫–æ–ª–µ–∫—Ü—ñ—é –µ–ª–µ–º–µ–Ω—Ç—ñ–≤
     * @returns {HTMLElement|NodeList|null} –ï–ª–µ–º–µ–Ω—Ç DOM –∞–±–æ null
     */
    function getElement(selector, multiple = false) {
        try {
            if (multiple) {
                return document.querySelectorAll(selector);
            }
            if (selector.startsWith('#')) {
                return document.getElementById(selector.substring(1));
            }
            return document.querySelector(selector);
        } catch (e) {
            console.error('–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç–∞ DOM:', e);
            return null;
        }
    }

    /**
     * –ó–±–µ—Ä—ñ–≥–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –≤ localStorage
     * @param {string} key - –ö–ª—é—á
     * @param {any} value - –ó–Ω–∞—á–µ–Ω–Ω—è
     */
    function saveToStorage(key, value) {
        try {
            if (typeof value === 'object') {
                localStorage.setItem(key, JSON.stringify(value));
            } else {
                localStorage.setItem(key, value);
            }
        } catch (e) {
            console.error(`–ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –≤ localStorage: ${key}`, e);
        }
    }

    /**
     * –û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –∑ localStorage
     * @param {string} key - –ö–ª—é—á
     * @param {any} defaultValue - –ó–Ω–∞—á–µ–Ω–Ω—è –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
     * @param {boolean} isObject - –ß–∏ –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø–∞—Ä—Å–∏—Ç–∏ —è–∫ –æ–±'—î–∫—Ç
     * @returns {any} –ó–Ω–∞—á–µ–Ω–Ω—è –∞–±–æ –∑–Ω–∞—á–µ–Ω–Ω—è –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
     */
    function getFromStorage(key, defaultValue = null, isObject = false) {
        try {
            const value = localStorage.getItem(key);
            if (value === null) return defaultValue;

            if (isObject) {
                try {
                    return JSON.parse(value);
                } catch (e) {
                    console.warn(`–ü–æ–º–∏–ª–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥—É JSON –∑ localStorage: ${key}`, e);
                    return defaultValue;
                }
            }

            return value;
        } catch (e) {
            console.error(`–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∑ localStorage: ${key}`, e);
            return defaultValue;
        }
    }

    /**
     * –§–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è —á–∏—Å–ª–∞ —è–∫ –≥—Ä–æ—à–æ–≤–æ—ó —Å—É–º–∏
     * @param {number} amount - –°—É–º–∞
     * @param {number} decimals - –ö—ñ–ª—å–∫—ñ—Å—Ç—å –∑–Ω–∞–∫—ñ–≤ –ø—ñ—Å–ª—è –∫–æ–º–∏
     * @returns {string} –§–æ—Ä–º–∞—Ç–æ–≤–∞–Ω–∞ —Å—É–º–∞
     */
    function formatCurrency(amount, decimals = 2) {
        try {
            return parseFloat(amount)
                .toFixed(decimals)
                .replace(/\d(?=(\d{3})+\.)/g, '$& ');
        } catch (e) {
            console.error('–ü–æ–º–∏–ª–∫–∞ —Ñ–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è —Å—É–º–∏:', e);
            return amount.toString();
        }
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É
     * @param {string} message - –¢–µ–∫—Å—Ç –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
     * @param {string} type - –¢–∏–ø –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è ('success', 'error', 'info')
     * @param {Function} callback - –§—É–Ω–∫—Ü—ñ—è –∑–≤–æ—Ä–æ—Ç–Ω–æ–≥–æ –≤–∏–∫–ª–∏–∫—É
     */
    // –û–Ω–æ–≤–ª–µ–Ω–∞ –≤–µ—Ä—Å—ñ—è —Ñ—É–Ω–∫—Ü—ñ—ó showNotification —É winix-core.js
function showNotification(message, type = 'success', callback = null) {
    // –ó–∞–ø–æ–±—ñ–≥–∞—î–º–æ –ø–æ–∫–∞–∑—É –ø–æ—Ä–æ–∂–Ω—ñ—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
    if (!message || message.trim() === '') {
        console.warn("–°–ø—Ä–æ–±–∞ –ø–æ–∫–∞–∑–∞—Ç–∏ –ø–æ—Ä–æ–∂–Ω—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è");
        if (callback) setTimeout(callback, 100);
        return;
    }

    try {
        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —Ü–µ –Ω–µ —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–∏–π –≤–∏–∫–ª–∏–∫
        if (window._isShowingNotification) {
            console.warn("–ó–∞–ø–æ–±—ñ–≥–∞–Ω–Ω—è —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ–º—É –≤–∏–∫–ª–∏–∫—É showNotification");
            return;
        }

        window._isShowingNotification = true;

        // –°–ø–æ—á–∞—Ç–∫—É –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å —Å—É—á–∞—Å–Ω–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
        if (typeof window.showModernNotification === 'function') {
            window._isShowingNotification = false;
            window.showModernNotification(message, type === 'error', callback);
            return;
        }

        // –Ü–Ω–∞–∫—à–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —ñ–Ω—à—ñ –¥–æ—Å—Ç—É–ø–Ω—ñ –º–µ—Ç–æ–¥–∏
        if (typeof window.showToast === 'function' && window.showToast !== window.showNotification) {
            window._isShowingNotification = false;
            window.showToast(message, type);
            if (callback) setTimeout(callback, 1500);
            return;
        }

        if (typeof window.simpleAlert === 'function') {
            window._isShowingNotification = false;
            window.simpleAlert(message, type === 'error', callback);
            return;
        }

        // –í–ê–ñ–õ–ò–í–û: –ù–ï –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ window.showMessage —Ç—É—Ç, —â–æ–± —É–Ω–∏–∫–Ω—É—Ç–∏ —Ä–µ–∫—É—Ä—Å—ñ—ó

        // –Ø–∫ –æ—Å—Ç–∞–Ω–Ω—ñ–π –≤–∞—Ä—ñ–∞–Ω—Ç –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏–π alert
        alert(message);
        if (callback) callback();

        window._isShowingNotification = false;
    } catch (e) {
        window._isShowingNotification = false;
        console.error("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø–æ–∫–∞–∑—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:", e);
        alert(message);
        if (callback) callback();
    }
}
    // ======== –§–£–ù–ö–¶–Ü–á –î–õ–Ø –†–û–ë–û–¢–ò –ó –ö–û–†–ò–°–¢–£–í–ê–ß–ï–ú ========

    /**
     * –û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
     * @param {boolean} forceRefresh - –ß–∏ –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø—Ä–∏–º—É—Å–æ–≤–æ –æ–Ω–æ–≤–∏—Ç–∏ –¥–∞–Ω—ñ
     * @returns {Promise<Object>} –î–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
     */
    async function getUserData(forceRefresh = false) {
        try {
            // –Ø–∫—â–æ —É –Ω–∞—Å –≤–∂–µ —î –¥–∞–Ω—ñ —ñ –Ω–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ –æ–Ω–æ–≤–ª—é–≤–∞—Ç–∏
            if (_userData && !forceRefresh) {
                return _userData;
            }

            // –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ –∑ API
            const response = await window.WinixAPI.getUserData();

            if (response.status === 'success' && response.data) {
                _userData = response.data;

                // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –¥–∞–Ω—ñ –≤ localStorage
                saveToStorage('userData', _userData);

                // –û–Ω–æ–≤–ª—é—î–º–æ –±–∞–ª–∞–Ω—Å –≤ localStorage
                if (_userData.balance !== undefined) {
                    saveToStorage('userTokens', _userData.balance);
                    saveToStorage('winix_balance', _userData.balance);
                }

                if (_userData.coins !== undefined) {
                    saveToStorage('userCoins', _userData.coins);
                }

                return _userData;
            } else {
                throw new Error(response.message || '–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞');
            }
        } catch (error) {
            console.error('–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:', error);

            // –ù–∞–º–∞–≥–∞—î–º–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–∞–Ω—ñ –∑ localStorage
            const storedUserData = getFromStorage('userData', null, true);
            if (storedUserData) {
                _userData = storedUserData;
                return _userData;
            }

            throw error;
        }
    }

    /**
     * –û–Ω–æ–≤–ª–µ–Ω–Ω—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
     */
    function updateUserDisplay() {
        try {
            // –û–Ω–æ–≤–ª—é—î–º–æ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            const userIdElement = getElement(`#${DOM.userId}`);
            if (userIdElement && _userData && _userData.telegram_id) {
                userIdElement.textContent = _userData.telegram_id;
            } else if (userIdElement) {
                const userId = window.WinixAPI.getUserId() || getFromStorage('telegram_user_id', 'Unknown ID');
                userIdElement.textContent = userId;
            }

            // –û–Ω–æ–≤–ª—é—î–º–æ —ñ–º'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            const usernameElement = getElement(`#${DOM.username}`);
            if (usernameElement && _userData && _userData.username) {
                usernameElement.textContent = _userData.username;
            }

            // –û–Ω–æ–≤–ª—é—î–º–æ –∞–≤–∞—Ç–∞—Ä
            updateUserAvatar();
        } catch (e) {
            console.error('–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:', e);
        }
    }

    /**
     * –û–Ω–æ–≤–ª–µ–Ω–Ω—è –∞–≤–∞—Ç–∞—Ä–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
     */
    function updateUserAvatar() {
        try {
            const avatarElement = getElement(`#${DOM.userAvatar}`);
            if (!avatarElement) return;

            // –û—á–∏—â–∞—î–º–æ –≤–º—ñ—Å—Ç –∞–≤–∞—Ç–∞—Ä–∞
            avatarElement.innerHTML = '';

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∞–≤–∞—Ç–∞—Ä–∞
            const username = _userData?.username || getFromStorage('username', 'User');
            const avatarSrc = getFromStorage('userAvatarSrc') || getFromStorage('avatarSrc');

            if (avatarSrc) {
                // –°—Ç–≤–æ—Ä—é—î–º–æ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
                const img = document.createElement('img');
                img.src = avatarSrc;
                img.alt = username;
                img.onerror = () => {
                    // –Ø–∫—â–æ –Ω–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è, –ø–æ–∫–∞–∑—É—î–º–æ –ø–µ—Ä—à—É –ª—ñ—Ç–µ—Ä—É —ñ–º–µ–Ω—ñ
                    avatarElement.textContent = username[0].toUpperCase();
                };
                avatarElement.appendChild(img);
            } else {
                // –ü–æ–∫–∞–∑—É—î–º–æ –ø–µ—Ä—à—É –ª—ñ—Ç–µ—Ä—É —ñ–º–µ–Ω—ñ
                avatarElement.textContent = username[0].toUpperCase();
            }
        } catch (e) {
            console.error('–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∞–≤–∞—Ç–∞—Ä–∞:', e);
        }
    }

    // ======== –§–£–ù–ö–¶–Ü–á –î–õ–Ø –†–û–ë–û–¢–ò –ó –ë–ê–õ–ê–ù–°–û–ú ========

    /**
     * –û—Ç—Ä–∏–º–∞–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
     * @returns {number} –ë–∞–ª–∞–Ω—Å —É —Ç–æ–∫–µ–Ω–∞—Ö
     */
    function getBalance() {
        try {
            return _userData?.balance || parseFloat(getFromStorage('userTokens', '0'));
        } catch (e) {
            console.error('–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É:', e);
            return 0;
        }
    }

    /**
     * –û—Ç—Ä–∏–º–∞–Ω–Ω—è –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –∂–µ—Ç–æ–Ω—ñ–≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
     * @returns {number} –ö—ñ–ª—å–∫—ñ—Å—Ç—å –∂–µ—Ç–æ–Ω—ñ–≤
     */
    function getCoins() {
        try {
            return _userData?.coins || parseInt(getFromStorage('userCoins', '0'));
        } catch (e) {
            console.error('–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –∂–µ—Ç–æ–Ω—ñ–≤:', e);
            return 0;
        }
    }

    /**
     * –û–Ω–æ–≤–ª–µ–Ω–Ω—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É
     */
    function updateBalanceDisplay() {
        try {
            // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω—ñ–≤
            const tokensElement = getElement(`#${DOM.userTokens}`);
            if (tokensElement) {
                const balance = getBalance();
                tokensElement.textContent = formatCurrency(balance);
            }

            // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∂–µ—Ç–æ–Ω—ñ–≤
            const coinsElement = getElement(`#${DOM.userCoins}`);
            if (coinsElement) {
                const coins = getCoins();
                coinsElement.textContent = coins;
            }
        } catch (e) {
            console.error('–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É:', e);
        }
    }

    /**
     * –û–Ω–æ–≤–ª–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É –∑ —Å–µ—Ä–≤–µ—Ä–∞
     * @returns {Promise<Object>} –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–ø–µ—Ä–∞—Ü—ñ—ó
     */
    async function refreshBalance() {
        try {
            // –û—Ç—Ä–∏–º—É—î–º–æ –±–∞–ª–∞–Ω—Å –∑ API
            const response = await window.WinixAPI.getBalance();

            if (response.status === 'success' && response.data) {
                // –û–Ω–æ–≤–ª—é—î–º–æ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
                if (!_userData) _userData = {};
                _userData.balance = response.data.balance || _userData.balance;
                _userData.coins = response.data.coins || _userData.coins;

                // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –≤ localStorage
                saveToStorage('userTokens', _userData.balance);
                saveToStorage('winix_balance', _userData.balance);
                saveToStorage('userCoins', _userData.coins);

                // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è
                updateBalanceDisplay();

                return {
                    success: true,
                    data: {
                        balance: _userData.balance,
                        coins: _userData.coins
                    }
                };
            } else {
                throw new Error(response.message || '–ù–µ –≤–¥–∞–ª–æ—Å—è –æ–Ω–æ–≤–∏—Ç–∏ –±–∞–ª–∞–Ω—Å');
            }
        } catch (error) {
            console.error('–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É:', error);

            // –£ –≤–∏–ø–∞–¥–∫—É –ø–æ–º–∏–ª–∫–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∫–µ—à–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ
            updateBalanceDisplay();

            return {
                success: false,
                message: error.message || '–ù–µ –≤–¥–∞–ª–æ—Å—è –æ–Ω–æ–≤–∏—Ç–∏ –±–∞–ª–∞–Ω—Å'
            };
        }
    }

    // ======== –§–£–ù–ö–¶–Ü–á –î–õ–Ø –†–û–ë–û–¢–ò –ó –ù–ê–í–Ü–ì–ê–¶–Ü–Ñ–Æ ========

    /**
     * –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –Ω–∞–≤—ñ–≥–∞—Ü—ñ–π–Ω–∏—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤
     */
    function initNavigation() {
        try {
            const navItems = getElement(DOM.navItems, true);
            if (!navItems || navItems.length === 0) return;

            // –û—Ç—Ä–∏–º—É—î–º–æ –ø–æ—Ç–æ—á–Ω–∏–π —à–ª—è—Ö
            const currentPath = window.location.pathname;
            const currentPage = currentPath.split('/').pop().split('.')[0];

            navItems.forEach(item => {
                // –û—Ç—Ä–∏–º—É—î–º–æ —Å–µ–∫—Ü—ñ—é –∑ –∞—Ç—Ä–∏–±—É—Ç—É
                const section = item.getAttribute('data-section');

                // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –ø–æ—Ç–æ—á–Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î —Å–µ–∫—Ü—ñ—ó
                if ((currentPage === section) ||
                    (currentPage === '' && section === 'home') ||
                    (currentPage === 'index' && section === 'home')) {
                    item.classList.add('active');
                } else {
                    item.classList.remove('active');
                }

                // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –∫–ª—ñ–∫—É
                item.addEventListener('click', () => {
                    // –í–∏–∑–Ω–∞—á–∞—î–º–æ URL –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥—É
                    let url;
                    if (section === 'home') {
                        url = 'index.html';
                    } else {
                        url = `${section}.html`;
                    }

                    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º–æ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É
                    window.location.href = url;
                });
            });
        } catch (e) {
            console.error('–ü–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó:', e);
        }
    }

    // ======== –§–£–ù–ö–¶–Ü–á –î–õ–Ø –£–ü–†–ê–í–õ–Ü–ù–ù–Ø –ó–ê–í–ê–ù–¢–ê–ñ–ï–ù–ù–Ø–ú ========

    /**
     * –ü–æ–∫–∞–∑–∞—Ç–∏ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
     * @param {string} message - –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—ñ–¥ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–º
     */
    // –í–∏–ø—Ä–∞–≤–ª–µ–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è showLoading –≤ winix-core.js
function showLoading(message = '–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...') {
    try {
        // –ó–∞–ø–æ–±—ñ–≥–∞—î–º–æ –ø–æ–≤—Ç–æ—Ä–Ω–æ–º—É –ø–æ–∫–∞–∑—É —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞
        if (window._loaderVisible) {
            // –Ø–∫—â–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –≤–∂–µ –ø–æ–∫–∞–∑–∞–Ω–∏–π, –ø—Ä–æ—Å—Ç–æ –æ–Ω–æ–≤–ª—é—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
            const loaderMessage = document.querySelector('#loading-spinner .message');
            if (loaderMessage) loaderMessage.textContent = message;
            return;
        }

        window._loaderVisible = true;

        // –°—Ç–≤–æ—Ä—é—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä, —è–∫—â–æ –π–æ–≥–æ –Ω–µ–º–∞—î
        let loader = document.getElementById('loading-spinner');

        if (!loader) {
            loader = document.createElement('div');
            loader.id = 'loading-spinner';
            loader.innerHTML = `
                <div class="spinner"></div>
                <div class="message">${message}</div>
            `;

            // –î–æ–¥–∞—î–º–æ —Å—Ç–∏–ª—ñ
            loader.style.cssText = `
                position: fixed;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                background-color: rgba(0, 0, 0, 0.5);
                display: flex;
                flex-direction: column;
                justify-content: center;
                align-items: center;
                z-index: 9999;
            `;

            // –î–æ–¥–∞—î–º–æ –ª—ñ—á–∏–ª—å–Ω–∏–∫ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω—å –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –ø–æ–≤—Ç–æ—Ä–Ω–∏—Ö –≤–∏–∫–ª–∏–∫—ñ–≤
            loader.dataset.useCount = '1';

            document.body.appendChild(loader);
        } else {
            // –Ø–∫—â–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –≤–∂–µ —ñ—Å–Ω—É—î, –æ–Ω–æ–≤–ª—é—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —ñ –∑–±—ñ–ª—å—à—É—î–º–æ –ª—ñ—á–∏–ª—å–Ω–∏–∫
            const useCount = parseInt(loader.dataset.useCount || '0') + 1;
            loader.dataset.useCount = useCount.toString();

            const loaderMessage = loader.querySelector('.message');
            if (loaderMessage) loaderMessage.textContent = message;

            // –ü–æ–∫–∞–∑—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä
            loader.style.display = 'flex';
        }

        console.log("üîÑ –ü–æ–∫–∞–∑–∞–Ω–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è");
    } catch (e) {
        console.error('–ü–æ–º–∏–ª–∫–∞ –ø–æ–∫–∞–∑—É —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è:', e);
        window._loaderVisible = false;
    }
}

    /**
     * –ü—Ä–∏—Ö–æ–≤–∞—Ç–∏ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
     */
function hideLoading() {
    try {
        const loader = document.getElementById('loading-spinner');
        if (!loader) {
            window._loaderVisible = false;
            return;
        }

        // –ó–º–µ–Ω—à—É—î–º–æ –ª—ñ—á–∏–ª—å–Ω–∏–∫ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω—å
        let useCount = parseInt(loader.dataset.useCount || '1') - 1;

        // –Ø–∫—â–æ –ª—ñ—á–∏–ª—å–Ω–∏–∫ –¥–æ—Å—è–≥ –Ω—É–ª—è, –ø—Ä–∏—Ö–æ–≤—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä
        if (useCount <= 0) {
            loader.style.display = 'none';
            loader.dataset.useCount = '0';
            window._loaderVisible = false;
            console.log("‚úÖ –ü—Ä–∏—Ö–æ–≤–∞–Ω–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è");
        } else {
            // –Ü–Ω–∞–∫—à–µ –ø—Ä–æ—Å—Ç–æ –æ–Ω–æ–≤–ª—é—î–º–æ –ª—ñ—á–∏–ª—å–Ω–∏–∫
            loader.dataset.useCount = useCount.toString();
        }
    } catch (e) {
        console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏—Ö–æ–≤—É–≤–∞–Ω–Ω—è —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è:', e);
        window._loaderVisible = false;
    }
}

    // ======== –§–£–ù–ö–¶–Ü–á –î–õ–Ø –£–ü–†–ê–í–õ–Ü–ù–ù–Ø –ß–ï–†–ì–û–Æ –ó–ê–ü–ò–¢–Ü–í ========

    /**
     * –î–æ–¥–∞–≤–∞–Ω–Ω—è –∑–∞–ø–∏—Ç—É –¥–æ —á–µ—Ä–≥–∏
     * @param {Function} request - –§—É–Ω–∫—Ü—ñ—è –∑–∞–ø–∏—Ç—É
     * @returns {Promise} –†–µ–∑—É–ª—å—Ç–∞—Ç –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –∑–∞–ø–∏—Ç—É
     */
    function enqueue(request) {
        return new Promise((resolve, reject) => {
            _requestQueue.push({
                request,
                resolve,
                reject
            });

            // –ó–∞–ø—É—Å–∫–∞—î–º–æ –æ–±—Ä–æ–±–∫—É —á–µ—Ä–≥–∏, —è–∫—â–æ –≤–æ–Ω–∞ —â–µ –Ω–µ –∑–∞–ø—É—â–µ–Ω–∞
            if (!_isProcessingQueue) {
                processQueue();
            }
        });
    }

    /**
     * –û–±—Ä–æ–±–∫–∞ —á–µ—Ä–≥–∏ –∑–∞–ø–∏—Ç—ñ–≤
     */
    async function processQueue() {
        if (_isProcessingQueue || _requestQueue.length === 0) {
            return;
        }

        _isProcessingQueue = true;

        try {
            // –û—Ç—Ä–∏–º—É—î–º–æ –ø–µ—Ä—à–∏–π –∑–∞–ø–∏—Ç –∑ —á–µ—Ä–≥–∏
            const { request, resolve, reject } = _requestQueue.shift();

            // –í–∏–∫–æ–Ω—É—î–º–æ –∑–∞–ø–∏—Ç
            try {
                const result = await request();
                resolve(result);
            } catch (error) {
                reject(error);
            }
        } catch (e) {
            console.error('–ü–æ–º–∏–ª–∫–∞ –æ–±—Ä–æ–±–∫–∏ –∑–∞–ø–∏—Ç—É –≤ —á–µ—Ä–∑—ñ:', e);
        } finally {
            _isProcessingQueue = false;

            // –Ø–∫—â–æ –≤ —á–µ—Ä–∑—ñ —â–µ —î –∑–∞–ø–∏—Ç–∏, –∑–∞–ø—É—Å–∫–∞—î–º–æ —ó—Ö –æ–±—Ä–æ–±–∫—É
            if (_requestQueue.length > 0) {
                setTimeout(processQueue, 50);
            }
        }
    }

    // ======== –§–£–ù–ö–¶–Ü–á –°–ò–ù–•–†–û–ù–Ü–ó–ê–¶–Ü–á –î–ê–ù–ò–• ========

    /**
     * –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ —Å–µ—Ä–≤–µ—Ä–æ–º
     * @returns {Promise<Object>} –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó
     */
    async function syncUserData() {
        try {
            // –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            const userData = await getUserData(true);

            // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è
            updateUserDisplay();
            updateBalanceDisplay();

            // –í–∏–∫–ª–∏–∫–∞—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–µ–π–∫—ñ–Ω–≥—É, —è–∫—â–æ —î —Ç–∞–∫–∏–π –º–æ–¥—É–ª—å
            if (window.WinixStakingSystem && typeof window.WinixStakingSystem.refresh === 'function') {
                try {
                    await window.WinixStakingSystem.refresh();
                } catch (e) {
                    console.warn('–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö —Å—Ç–µ–π–∫—ñ–Ω–≥—É:', e);
                }
            }

            return {
                success: true,
                data: userData
            };
        } catch (error) {
            console.error('–ü–æ–º–∏–ª–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:', error);

            // –£ –≤–∏–ø–∞–¥–∫—É –ø–æ–º–∏–ª–∫–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∫–µ—à–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ
            updateUserDisplay();
            updateBalanceDisplay();

            return {
                success: false,
                message: error.message || '–ù–µ –≤–¥–∞–ª–æ—Å—è —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑—É–≤–∞—Ç–∏ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞'
            };
        }
    }

    /**
     * –ó–∞–ø—É—Å–∫ –ø–µ—Ä—ñ–æ–¥–∏—á–Ω–æ—ó —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó –¥–∞–Ω–∏—Ö
     * @param {number} interval - –Ü–Ω—Ç–µ—Ä–≤–∞–ª –≤ –º—ñ–ª—ñ—Å–µ–∫—É–Ω–¥–∞—Ö
     */
    function startAutoSync(interval = 300000) { // 5 —Ö–≤–∏–ª–∏–Ω –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
        // –ó—É–ø–∏–Ω—è—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ–π —ñ–Ω—Ç–µ—Ä–≤–∞–ª, —è–∫—â–æ –≤—ñ–Ω —î
        if (_refreshInterval) {
            clearInterval(_refreshInterval);
        }

        // –ó–∞–ø—É—Å–∫–∞—î–º–æ –ø–µ—Ä—ñ–æ–¥–∏—á–Ω—É —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—é
        _refreshInterval = setInterval(async () => {
            try {
                await syncUserData();
            } catch (e) {
                console.warn('–ü–æ–º–∏–ª–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ—ó —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó:', e);
            }
        }, interval);
    }

    /**
     * –ó—É–ø–∏–Ω–∫–∞ –ø–µ—Ä—ñ–æ–¥–∏—á–Ω–æ—ó —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó
     */
    function stopAutoSync() {
        if (_refreshInterval) {
            clearInterval(_refreshInterval);
            _refreshInterval = null;
        }
    }

    // ======== –§–£–ù–ö–¶–Ü–á –Ü–ù–Ü–¶–Ü–ê–õ–Ü–ó–ê–¶–Ü–á ========

    /**
     * –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —è–¥—Ä–∞ WINIX
     */
    async function init() {
        try {
            // –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            await getUserData();

            // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è
            updateUserDisplay();
            updateBalanceDisplay();

            // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—é
            initNavigation();

            // –ó–∞–ø—É—Å–∫–∞—î–º–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω—É —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—é
            startAutoSync();

            // –°—Ç–≤–æ—Ä—é—î–º–æ –≥–ª–æ–±–∞–ª—å–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –¥–ª—è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è —ñ–Ω—à–∏–º–∏ –º–æ–¥—É–ª—è–º–∏
            window.showLoading = showLoading;
            window.hideLoading = hideLoading;
            window.showToast = (message, type) => showNotification(message, type);

            console.log("‚úÖ –Ø–¥—Ä–æ WINIX —É—Å–ø—ñ—à–Ω–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ");

            // –í–∏–∫–ª–∏–∫–∞—î–º–æ –ø–æ–¥—ñ—é —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
            document.dispatchEvent(new CustomEvent('winix-initialized'));
        } catch (error) {
            console.error('–ü–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó —è–¥—Ä–∞ WINIX:', error);

            // –£ –≤–∏–ø–∞–¥–∫—É –ø–æ–º–∏–ª–∫–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∫–µ—à–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ
            updateUserDisplay();
            updateBalanceDisplay();

            document.dispatchEvent(new CustomEvent('winix-initialization-error', { detail: error }));
        }
    }

    // ======== –ü–£–ë–õ–Ü–ß–ù–ò–ô API ========

    // –ï–∫—Å–ø–æ—Ä—Ç—É—î–º–æ –ø—É–±–ª—ñ—á–Ω–∏–π API
    window.WinixCore = {
        // –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è
        setDebugMode: (debug) => { _debugMode = debug; },

        // –§—É–Ω–∫—Ü—ñ—ó –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º
        getUserData,
        updateUserDisplay,

        // –§—É–Ω–∫—Ü—ñ—ó –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ –±–∞–ª–∞–Ω—Å–æ–º
        getBalance,
        getCoins,
        updateBalanceDisplay,
        refreshBalance,

        // –§—É–Ω–∫—Ü—ñ—ó –¥–ª—è —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è–º
        showLoading,
        hideLoading,

        // –§—É–Ω–∫—Ü—ñ—ó –¥–ª—è —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è —á–µ—Ä–≥–æ—é –∑–∞–ø–∏—Ç—ñ–≤
        enqueue,

        // –§—É–Ω–∫—Ü—ñ—ó –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó –¥–∞–Ω–∏—Ö
        syncUserData,
        startAutoSync,
        stopAutoSync,

        // –£—Ç–∏–ª—ñ—Ç–∏
        formatCurrency,
        showNotification,
        saveToStorage,
        getFromStorage
    };

    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ —è–¥—Ä–æ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', init);
    } else {
        init();
    }
})();