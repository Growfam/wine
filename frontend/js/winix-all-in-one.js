/**
 * winix-all-in-one.js
 *
 * –û–±'—î–¥–Ω–∞–Ω–∏–π —Ñ–∞–π–ª –≤–∏–ø—Ä–∞–≤–ª–µ–Ω—å –¥–ª—è —Å–∏—Å—Ç–µ–º–∏ WINIX, —è–∫–∏–π –≤–∫–ª—é—á–∞—î –≤—Å—ñ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è
 * –∑ winix-fix.js, winix-debug.js, winix-staking-fix.js —ñ winix-ui-fix.js
 * –∞ —Ç–∞–∫–æ–∂ –¥–æ–¥–∞—Ç–∫–æ–≤—ñ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –¥–ª—è –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó —Ç–∞ —Å—Ç–∏–ª—ñ–≤ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å.
 *
 * –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î —î–¥–∏–Ω–∏–π API –º–æ–¥—É–ª—å –¥–ª—è –≤—Å—ñ—Ö –∑–∞–ø–∏—Ç—ñ–≤ –¥–æ —Å–µ—Ä–≤–µ—Ä–∞.
 *
 * –¶–µ–π —Ñ–∞–π–ª –ø–æ–≤–∏–Ω–µ–Ω –±—É—Ç–∏ –ø—ñ–¥–∫–ª—é—á–µ–Ω–∏–π –æ—Å—Ç–∞–Ω–Ω—ñ–º –ø—ñ—Å–ª—è –æ—Å–Ω–æ–≤–Ω–∏—Ö —Å–∫—Ä–∏–ø—Ç—ñ–≤:
 * - winix-init.js
 * - winix-core.js
 * - winix-connector.js
 * - api.js
 */

(function() {
    console.log("üöÄ WINIX-ALL-IN-ONE: –ó–∞–ø—É—Å–∫ —î–¥–∏–Ω–æ—ó —Å–∏—Å—Ç–µ–º–∏ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω—å...");

    // –ó–∞–ø–æ–±—ñ–≥–∞—î–º–æ –ø–æ–≤—Ç–æ—Ä–Ω—ñ–π —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
    if (window.WinixAllInOneInitialized) {
        console.log("‚ÑπÔ∏è WINIX-ALL-IN-ONE: –í–∂–µ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ");
        return;
    }

    // –ì–ª–æ–±–∞–ª—å–Ω—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
    const WINIX_SETTINGS = {
        debug: false,                  // –†–µ–∂–∏–º –≤—ñ–¥–ª–∞–≥–æ–¥–∂–µ–Ω–Ω—è
        autoRestoreStaking: true,      // –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö —Å—Ç–µ–π–∫—ñ–Ω–≥—É
        fixDuplicateEventListeners: true, // –í–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –¥—É–±–ª—é—é—á–∏—Ö –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –ø–æ–¥—ñ–π
        styledNotifications: true,     // –°—Ç–∏–ª—å–Ω—ñ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è
        navigatioFixes: true,          // –í–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó
        stakingCancelFee: 0.2,         // –ö–æ–º—ñ—Å—ñ—è –ø—Ä–∏ —Å–∫–∞—Å—É–≤–∞–Ω–Ω—ñ —Å—Ç–µ–π–∫—ñ–Ω–≥—É (20%)
        defaultGradient: 'linear-gradient(90deg, #1A1A2E, #0F3460, #00C9A7)' // –û—Å–Ω–æ–≤–Ω–∏–π –≥—Ä–∞–¥—ñ—î–Ω—Ç
    };

    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å API –º–æ–¥—É–ª—è
    if (!window.WinixAPI) {
        console.warn("‚ö†Ô∏è WINIX-ALL-IN-ONE: API –º–æ–¥—É–ª—å –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ! –†–µ–∫–æ–º–µ–Ω–¥—É—î–º–æ –ø—ñ–¥–∫–ª—é—á–∏—Ç–∏ api.js");
    }

    // ====================== –î–û–ü–û–ú–Ü–ñ–ù–Ü –§–£–ù–ö–¶–Ü–á ======================

    /**
     * –õ–æ–≥—É–≤–∞–Ω–Ω—è –∑ –ø—Ä–µ—Ñ—ñ–∫—Å–æ–º —Å–∏—Å—Ç–µ–º–∏
     * @param {string} type –¢–∏–ø –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è (log, error, warn, info)
     * @param {string} message –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
     * @param {any} data –î–æ–¥–∞—Ç–∫–æ–≤—ñ –¥–∞–Ω—ñ (–æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ)
     */
    function log(type, message, data) {
        if (!WINIX_SETTINGS.debug && type !== 'error') return;

        const prefix = 'üîß WINIX-ALL-IN-ONE';

        switch (type) {
            case 'error':
                console.error(`${prefix} –ü–û–ú–ò–õ–ö–ê:`, message, data);
                break;
            case 'warn':
                console.warn(`${prefix} –ü–û–ü–ï–†–ï–î–ñ–ï–ù–ù–Ø:`, message, data);
                break;
            case 'info':
                console.info(`${prefix} –Ü–ù–§–û:`, message, data);
                break;
            default:
                console.log(`${prefix}:`, message, data);
        }
    }

    /**
     * –ë–µ–∑–ø–µ—á–Ω–µ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –∑ localStorage
     * @param {string} key –ö–ª—é—á
     * @param {any} defaultValue –ó–Ω–∞—á–µ–Ω–Ω—è –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
     * @param {boolean} isJSON –ß–∏ –ø–∞—Ä—Å–∏—Ç–∏ —è–∫ JSON
     * @returns {any} –û—Ç—Ä–∏–º–∞–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è
     */
    function getStorage(key, defaultValue, isJSON = false) {
        try {
            const value = localStorage.getItem(key);
            if (value === null) return defaultValue;

            if (isJSON) {
                return JSON.parse(value);
            }

            // –Ø–∫—â–æ —Ü–µ —á–∏—Å–ª–æ, –ø–∞—Ä—Å–∏–º–æ —è–∫ —á–∏—Å–ª–æ
            if (!isNaN(parseFloat(value))) {
                return parseFloat(value);
            }

            return value;
        } catch (e) {
            log('error', `–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è ${key} –∑ localStorage:`, e);
            return defaultValue;
        }
    }

    /**
     * –ë–µ–∑–ø–µ—á–Ω–µ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –≤ localStorage
     * @param {string} key –ö–ª—é—á
     * @param {any} value –ó–Ω–∞—á–µ–Ω–Ω—è
     * @returns {boolean} –£—Å–ø—ñ—à–Ω—ñ—Å—Ç—å –æ–ø–µ—Ä–∞—Ü—ñ—ó
     */
    function setStorage(key, value) {
        try {
            if (typeof value === 'object') {
                localStorage.setItem(key, JSON.stringify(value));
            } else {
                localStorage.setItem(key, value);
            }
            return true;
        } catch (e) {
            log('error', `–ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è ${key} –≤ localStorage:`, e);
            return false;
        }
    }

    /**
     * –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è —É–Ω—ñ–∫–∞–ª—å–Ω–æ–≥–æ ID
     * @returns {string} –£–Ω—ñ–∫–∞–ª—å–Ω–∏–π ID
     */
    function generateId() {
        return Date.now().toString(36) + Math.random().toString(36).substring(2, 9);
    }

    /**
     * –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –≤–∞–ª—ñ–¥–Ω–æ—Å—Ç—ñ ID
     * @param {any} id - ID –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏
     * @returns {boolean} –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏
     */
    function isValidId(id) {
        return id &&
            id !== 'undefined' &&
            id !== 'null' &&
            id !== undefined &&
            id !== null &&
            id.toString().trim() !== '';
    }

    // ====================== –°–¢–ò–õ–¨–ù–Ü –ü–û–í–Ü–î–û–ú–õ–ï–ù–ù–Ø ======================

    /**
     * –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Å—Ç–∏–ª—å–Ω–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –∑ –≥—Ä–∞–¥—ñ—î–Ω—Ç–∞–º–∏ —Ç–∞ –∞–Ω—ñ–º–∞—Ü—ñ—è–º–∏
     */
    function setupStyledNotifications() {
        try {
            log('info', '–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Å—Ç–∏–ª—å–Ω–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å');

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –≤–∂–µ –¥–æ–¥–∞–Ω–æ —Ñ—É–Ω–∫—Ü—ñ—é simpleAlert
            if (window.simpleAlert) {
                log('info', '–§—É–Ω–∫—Ü—ñ—è simpleAlert –≤–∂–µ —ñ—Å–Ω—É—î');
                return true;
            }

            // –°—Ç–≤–æ—Ä—é—î–º–æ –≥–ª–æ–±–∞–ª—å–Ω–∏–π –æ–±'—î–∫—Ç –¥–ª—è UI-—Ñ—É–Ω–∫—Ü—ñ–π
            window.winixUI = window.winixUI || {};

            /**
             * –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–æ–∫–∞–∑—É —Å—Ç–∏–ª—å–Ω–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
             * @param {string} message –¢–µ–∫—Å—Ç –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
             * @param {boolean} isError –ß–∏ —Ü–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É
             * @param {Function} callback –§—É–Ω–∫—Ü—ñ—è –∑–≤–æ—Ä–æ—Ç–Ω–æ–≥–æ –≤–∏–∫–ª–∏–∫—É
             * @returns {Promise} Promise, —è–∫–∏–π –≤–∏–∫–æ–Ω–∞—î—Ç—å—Å—è –ø—ñ—Å–ª—è –∑–∞–∫—Ä–∏—Ç—Ç—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
             */
            window.simpleAlert = window.winixUI.simpleAlert = function(message, isError = false, callback) {
                if (!message || typeof message !== 'string') {
                    log('warn', '–°–ø—Ä–æ–±–∞ –ø–æ–∫–∞–∑–∞—Ç–∏ –ø–æ—Ä–æ–∂–Ω—î –∞–±–æ –Ω–µ–≤–∞–ª—ñ–¥–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è');
                    message = '–ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è';
                }

                return new Promise((resolve) => {
                    try {
                        // –í–∏–¥–∞–ª—è—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, —è–∫—â–æ –≤–æ–Ω–∏ —î
                        const existingOverlays = document.querySelectorAll('.alert-overlay');
                        existingOverlays.forEach(overlay => {
                            try {
                                overlay.parentNode.removeChild(overlay);
                            } catch (e) {
                                log('warn', '–ü–æ–º–∏–ª–∫–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è —ñ—Å–Ω—É—é—á–æ–≥–æ overlay:', e);
                            }
                        });

                        // –°—Ç–≤–æ—Ä—é—î–º–æ –µ–ª–µ–º–µ–Ω—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
                        const overlay = document.createElement('div');
                        overlay.className = 'alert-overlay';

                        const container = document.createElement('div');
                        container.className = 'alert-container ' + (isError ? 'error' : 'success');

                        const messageElement = document.createElement('div');
                        messageElement.className = 'alert-message';
                        messageElement.textContent = message;

                        const button = document.createElement('button');
                        button.className = 'alert-button';
                        button.textContent = 'OK';

                        // –î–æ–¥–∞—î–º–æ —Å—Ç–∏–ª—ñ
                        if (!document.getElementById('winix-styled-alerts-css')) {
                            const style = document.createElement('style');
                            style.id = 'winix-styled-alerts-css';
                            style.textContent = `
                                /* –°—Ç–∏–ª—ñ –¥–ª—è —Å–ø–æ–≤—ñ—â–µ–Ω—å */
                                .alert-overlay {
                                    position: fixed;
                                    top: 0;
                                    left: 0;
                                    right: 0;
                                    bottom: 0;
                                    background: rgba(0, 0, 0, 0.5);
                                    display: flex;
                                    justify-content: center;
                                    align-items: center;
                                    z-index: 1000;
                                    backdrop-filter: blur(0.1875rem); /* 3px */
                                    animation: fadeIn 0.2s ease-out;
                                }

                                @keyframes fadeIn {
                                    from { opacity: 0; }
                                    to { opacity: 1; }
                                }

                                .alert-container {
                                    width: 85%;
                                    max-width: 21.875rem; /* 350px */
                                    border-radius: 0.9375rem; /* 15px */
                                    padding: 1.25rem; /* 20px */
                                    box-shadow: 0 0.625rem 1.875rem rgba(0, 0, 0, 0.4);
                                    display: flex;
                                    flex-direction: column;
                                    gap: 1.25rem; /* 20px */
                                    animation: bounceIn 0.3s ease-out;
                                }

                                .alert-container.success {
                                    background: linear-gradient(135deg, rgba(26, 26, 46, 0.95), rgba(15, 52, 96, 0.95));
                                    border: 0.0625rem solid rgba(0, 201, 167, 0.5); /* 1px */
                                    box-shadow: 0 0.625rem 1.875rem rgba(0, 0, 0, 0.4), 0 0 0.9375rem rgba(0, 201, 167, 0.3);
                                }

                                .alert-container.error {
                                    background: linear-gradient(135deg, rgba(46, 26, 26, 0.95), rgba(96, 15, 15, 0.95));
                                    border: 0.0625rem solid rgba(201, 0, 0, 0.5); /* 1px */
                                    box-shadow: 0 0.625rem 1.875rem rgba(0, 0, 0, 0.4), 0 0 0.9375rem rgba(201, 0, 0, 0.3);
                                }

                                @keyframes bounceIn {
                                    0% { transform: scale(0.5); opacity: 0; }
                                    70% { transform: scale(1.05); }
                                    100% { transform: scale(1); opacity: 1; }
                                }

                                .alert-message {
                                    text-align: center;
                                    font-size: 1rem; /* 16px */
                                    color: #fff;
                                }

                                .alert-button {
                                    align-self: center;
                                    width: 6.25rem; /* 100px */
                                    height: 2.5rem; /* 40px */
                                    border-radius: 0.625rem; /* 10px */
                                    font-size: 1rem; /* 16px */
                                    font-weight: 500;
                                    cursor: pointer;
                                    transition: all 0.3s ease;
                                    border: none;
                                    background: linear-gradient(90deg, rgba(255, 255, 255, 0.2), rgba(255, 255, 255, 0.1));
                                    color: #fff;
                                    box-shadow: 0 0.25rem 0.5rem rgba(0, 0, 0, 0.2);
                                }

                                .alert-button:active {
                                    transform: scale(0.97);
                                }
                            `;
                            document.head.appendChild(style);
                        }

                        // –î–æ–¥–∞—î–º–æ –µ–ª–µ–º–µ–Ω—Ç–∏ —Ç–∞ —Å—Ç–∏–ª—ñ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É
                        container.appendChild(messageElement);
                        container.appendChild(button);
                        overlay.appendChild(container);
                        document.body.appendChild(overlay);

                        // –û–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ OK
                        button.addEventListener('click', function() {
                            try {
                                overlay.parentNode.removeChild(overlay);
                            } catch (e) {
                                log('warn', '–ü–æ–º–∏–ª–∫–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è overlay:', e);
                            }

                            if (typeof callback === 'function') {
                                callback();
                            }
                            resolve();
                        });
                    } catch (e) {
                        log('error', '–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø–æ–∫–∞–∑—ñ —Å—Ç–∏–ª—å–Ω–æ–≥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:', e);

                        // –†–µ–∑–µ—Ä–≤–Ω–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç - –∑–≤–∏—á–∞–π–Ω–∏–π alert
                        alert(message);

                        if (typeof callback === 'function') {
                            callback();
                        }
                        resolve();
                    }
                });
            };

            // –î–æ–¥–∞—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é —Å–ø–æ–≤—ñ—â–µ–Ω—å
            window.showToast = window.winixUI.showToast = function(message, type = 'success', duration = 3000) {
                if (!message || typeof message !== 'string') {
                    log('warn', '–°–ø—Ä–æ–±–∞ –ø–æ–∫–∞–∑–∞—Ç–∏ –ø–æ—Ä–æ–∂–Ω—î –∞–±–æ –Ω–µ–≤–∞–ª—ñ–¥–Ω–µ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è');
                    message = '–ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è';
                }

                try {
                    // –í–∏–¥–∞–ª—è—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è
                    const existingToasts = document.querySelectorAll('.winix-toast');
                    existingToasts.forEach(toast => {
                        try {
                            toast.parentNode.removeChild(toast);
                        } catch (e) {
                            log('warn', '–ü–æ–º–∏–ª–∫–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è —ñ—Å–Ω—É—é—á–æ–≥–æ toast:', e);
                        }
                    });

                    // –î–æ–¥–∞—î–º–æ —Å—Ç–∏–ª—ñ –¥–ª—è —Å–ø–æ–≤—ñ—â–µ–Ω—å, —è–∫—â–æ –≤–æ–Ω–∏ —â–µ –Ω–µ –¥–æ–¥–∞–Ω—ñ
                    if (!document.getElementById('winix-toast-css')) {
                        const style = document.createElement('style');
                        style.id = 'winix-toast-css';
                        style.textContent = `
                            .winix-toast {
                                position: fixed;
                                bottom: 20px;
                                left: 50%;
                                transform: translateX(-50%);
                                padding: 12px 20px;
                                border-radius: 10px;
                                color: white;
                                font-size: 16px;
                                z-index: 1000;
                                box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3);
                                animation: toast-in-out 0.5s ease-in-out;
                            }
                            
                            .winix-toast.success {
                                background: linear-gradient(90deg, #00C9A7, #0F3460);
                                border-left: 4px solid #00C9A7;
                            }
                            
                            .winix-toast.error {
                                background: linear-gradient(90deg, #CF0A0A, #7E1717);
                                border-left: 4px solid #CF0A0A;
                            }
                            
                            .winix-toast.info {
                                background: linear-gradient(90deg, #4285F4, #0F3460);
                                border-left: 4px solid #4285F4;
                            }
                            
                            .winix-toast.warning {
                                background: linear-gradient(90deg, #FFC107, #FF8F00);
                                border-left: 4px solid #FFC107;
                            }
                            
                            @keyframes toast-in-out {
                                0% { opacity: 0; transform: translate(-50%, 20px); }
                                10% { opacity: 1; transform: translate(-50%, 0); }
                                90% { opacity: 1; transform: translate(-50%, 0); }
                                100% { opacity: 0; transform: translate(-50%, -20px); }
                            }
                        `;
                        document.head.appendChild(style);
                    }

                    // –°—Ç–≤–æ—Ä—é—î–º–æ –µ–ª–µ–º–µ–Ω—Ç —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è
                    const toast = document.createElement('div');
                    toast.className = `winix-toast ${type}`;
                    toast.textContent = message;
                    document.body.appendChild(toast);

                    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –≤–∏–¥–∞–ª–µ–Ω–Ω—è —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è
                    setTimeout(() => {
                        try {
                            if (toast.parentNode) {
                                toast.parentNode.removeChild(toast);
                            }
                        } catch (e) {
                            log('warn', '–ü–æ–º–∏–ª–∫–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è toast:', e);
                        }
                    }, duration);
                } catch (e) {
                    log('error', '–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø–æ–∫–∞–∑—ñ toast:', e);
                }
            };

            // –Ø–∫—â–æ –≤ —Å–∏—Å—Ç–µ–º—ñ —î WinixCore, –∑–∞–º—ñ–Ω—é—î–º–æ –π–æ–≥–æ —Ñ—É–Ω–∫—Ü—ñ—é –ø–æ–∫–∞–∑—É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
            if (window.WinixCore && window.WinixCore.UI && window.WinixCore.UI.showNotification) {
                const originalShowNotification = window.WinixCore.UI.showNotification;

                window.WinixCore.UI.showNotification = function(message, type, callback) {
                    try {
                        // –í–∏–∑–Ω–∞—á–∞—î–º–æ, —á–∏ —Ü–µ –ø–æ–º–∏–ª–∫–∞
                        const isError = (
                            type === 'error' ||
                            type === 'ERROR' ||
                            (window.WinixCore.MESSAGE_TYPES && type === window.WinixCore.MESSAGE_TYPES.ERROR)
                        );

                        // –í–∏–∫–ª–∏–∫–∞—î–º–æ –Ω–∞—à—É —Å—Ç–∏–ª—å–Ω—É —Ñ—É–Ω–∫—Ü—ñ—é
                        return window.simpleAlert(message, isError, callback);
                    } catch (e) {
                        log('error', '–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–º—ñ–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó showNotification:', e);
                        // –í–∏–∫–ª–∏–∫–∞—î–º–æ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω—É —Ñ—É–Ω–∫—Ü—ñ—é —è–∫ –∑–∞–ø–∞—Å–Ω–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç
                        return originalShowNotification.call(window.WinixCore.UI, message, type, callback);
                    }
                };
            }

            log('info', '–°—Ç–∏–ª—å–Ω—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —É—Å–ø—ñ—à–Ω–æ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–æ');
            return true;
        } catch (e) {
            log('error', '–ü–æ–º–∏–ª–∫–∞ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Å—Ç–∏–ª—å–Ω–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å:', e);
            return false;
        }
    }

    // ====================== –í–ò–ü–†–ê–í–õ–ï–ù–ù–Ø –°–¢–ï–ô–ö–Ü–ù–ì–£ ======================

    /**
     * –ì–ª–∏–±–æ–∫–µ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö —Å—Ç–µ–π–∫—ñ–Ω–≥—É
     */
    function fixStakingData() {
        try {
            log('info', '–í–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö —Å—Ç–µ–π–∫—ñ–Ω–≥—É');

            // –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑—É—î–º–æ –º—ñ–∂ –∫–ª—é—á–∞–º–∏ localStorage
            syncStorageKeys();

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –¥–∞–Ω–∏—Ö —Å—Ç–µ–π–∫—ñ–Ω–≥—É
            const coreData = localStorage.getItem('winix_staking');
            const fixData = localStorage.getItem('stakingData');

            // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –Ω–∞—è–≤–Ω—ñ –¥–∞–Ω—ñ
            let dataToFix = null;
            if (coreData) {
                dataToFix = coreData;
            } else if (fixData) {
                dataToFix = fixData;
                // –ö–æ–ø—ñ—é—î–º–æ –≤ –æ—Å–Ω–æ–≤–Ω–∏–π –∫–ª—é—á
                localStorage.setItem('winix_staking', fixData);
            } else {
                log('info', '–î–∞–Ω–∏—Ö —Å—Ç–µ–π–∫—ñ–Ω–≥—É –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
                return false;
            }

            // –†–æ–∑–ø–∞–∫–æ–≤—É—î–º–æ –¥–∞–Ω—ñ
            let stakingData;
            try {
                stakingData = JSON.parse(dataToFix);
                log('info', '–†–æ–∑–ø–∞–∫–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ —Å—Ç–µ–π–∫—ñ–Ω–≥—É:', stakingData);
            } catch (e) {
                log('error', '–ü–æ–º–∏–ª–∫–∞ —Ä–æ–∑–ø–∞–∫—É–≤–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö —Å—Ç–µ–π–∫—ñ–Ω–≥—É:', e);
                return false;
            }

            // –í–∏–ø—Ä–∞–≤–ª—è—î–º–æ –¥–∞–Ω—ñ
            let needsFixing = false;

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ hasActiveStaking
            if (stakingData.stakingAmount > 0 && stakingData.hasActiveStaking !== true) {
                stakingData.hasActiveStaking = true;
                needsFixing = true;
                log('info', '–í–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è hasActiveStaking');
            }

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –æ—á—ñ–∫—É–≤–∞–Ω—É –≤–∏–Ω–∞–≥–æ—Ä–æ–¥—É
            if (stakingData.expectedReward === undefined && stakingData.stakingAmount > 0 && stakingData.period) {
                // –†–æ–∑—Ä–∞—Ö–æ–≤—É—î–º–æ –≤–∏–Ω–∞–≥–æ—Ä–æ–¥—É
                let rewardPercent;
                if (stakingData.period === 7) rewardPercent = 4;
                else if (stakingData.period === 14) rewardPercent = 9;
                else if (stakingData.period === 28) rewardPercent = 15;
                else rewardPercent = 7; // –ó–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º

                stakingData.rewardPercent = rewardPercent;
                stakingData.expectedReward = stakingData.stakingAmount * (rewardPercent / 100);
                needsFixing = true;
                log('info', '–í–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è expectedReward');
            }

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –¥–∞—Ç–∏
            if (!stakingData.startDate) {
                const now = new Date();
                stakingData.startDate = now.toISOString();
                needsFixing = true;
                log('info', '–í–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è startDate');
            }

            if (!stakingData.endDate && stakingData.startDate && stakingData.period) {
                const startDate = new Date(stakingData.startDate);
                const endDate = new Date(startDate);
                endDate.setDate(endDate.getDate() + stakingData.period);
                stakingData.endDate = endDate.toISOString();
                needsFixing = true;
                log('info', '–í–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è endDate');
            }

            // –û–Ω–æ–≤–ª—é—î–º–æ remainingDays
            if (stakingData.hasActiveStaking && stakingData.endDate) {
                const now = new Date();
                const endDate = new Date(stakingData.endDate);
                const diffTime = endDate - now;
                const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));
                stakingData.remainingDays = Math.max(0, diffDays);
                needsFixing = true;
                log('info', '–û–Ω–æ–≤–ª–µ–Ω–Ω—è remainingDays');
            }

            // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω—ñ –¥–∞–Ω—ñ
            if (needsFixing) {
                localStorage.setItem('winix_staking', JSON.stringify(stakingData));
                localStorage.setItem('stakingData', JSON.stringify(stakingData));
                log('info', '–î–∞–Ω—ñ —Å—Ç–µ–π–∫—ñ–Ω–≥—É —É—Å–ø—ñ—à–Ω–æ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–æ');
                return true;
            }

            log('info', '–í–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö —Å—Ç–µ–π–∫—ñ–Ω–≥—É –Ω–µ –ø–æ—Ç—Ä—ñ–±–Ω–µ');
            return false;
        } catch (e) {
            log('error', '–ü–æ–º–∏–ª–∫–∞ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö —Å—Ç–µ–π–∫—ñ–Ω–≥—É:', e);
            return false;
        }
    }

    /**
     * –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è –∫–ª—é—á—ñ–≤ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Å—Ö–æ–≤–∏—â–∞
     */
    function syncStorageKeys() {
        try {
            log('info', '–°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è –∫–ª—é—á—ñ–≤ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Å—Ö–æ–≤–∏—â–∞');

            // –ú–∞–ø—É–≤–∞–Ω–Ω—è –∫–ª—é—á—ñ–≤
            const keyMappings = {
                'winix_balance': 'userTokens',
                'userTokens': 'winix_balance',
                'winix_coins': 'userCoins',
                'userCoins': 'winix_coins',
                'winix_staking': 'stakingData',
                'stakingData': 'winix_staking',
                'winix_transactions': 'transactions',
                'transactions': 'winix_transactions'
            };

            // –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑—É—î–º–æ –∫–ª—é—á—ñ
            for (const [sourceKey, targetKey] of Object.entries(keyMappings)) {
                try {
                    const sourceValue = localStorage.getItem(sourceKey);
                    if (sourceValue !== null) {
                        const targetValue = localStorage.getItem(targetKey);
                        // –Ø–∫—â–æ –∑–Ω–∞—á–µ–Ω–Ω—è –≤–∂–µ —ñ—Å–Ω—É—î —ñ –≤—ñ–¥—Ä—ñ–∑–Ω—è—î—Ç—å—Å—è, –±–µ—Ä–µ–º–æ –±—ñ–ª—å—à –Ω–æ–≤–µ/–ª–æ–≥—ñ—á–Ω–µ
                        if (targetValue !== null && targetValue !== sourceValue) {
                            // –î–ª—è —Å—Ç–µ–π–∫—ñ–Ω–≥—É –æ–±–∏—Ä–∞—î–º–æ –æ–±'—î–∫—Ç –∑ hasActiveStaking
                            if (sourceKey === 'winix_staking' || sourceKey === 'stakingData') {
                                try {
                                    const sourceData = JSON.parse(sourceValue);
                                    const targetData = JSON.parse(targetValue);

                                    console.log(`–°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑—É—é –∫–ª—é—á—ñ ${sourceKey} —ñ ${targetKey}`, sourceData, targetData);

                                    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —è–∫–∏–π –æ–±'—î–∫—Ç –º–∞—î –∞–∫—Ç–∏–≤–Ω–∏–π —Å—Ç–µ–π–∫—ñ–Ω–≥
                                    const sourceHasActive = sourceData && sourceData.hasActiveStaking;
                                    const targetHasActive = targetData && targetData.hasActiveStaking;

                                    if (sourceHasActive && !targetHasActive) {
                                        console.log(`–ö–æ–ø—ñ—é—é –∞–∫—Ç–∏–≤–Ω–∏–π —Å—Ç–µ–π–∫—ñ–Ω–≥ –∑ ${sourceKey} –≤ ${targetKey}`);
                                        localStorage.setItem(targetKey, sourceValue);
                                    } else if (!sourceHasActive && targetHasActive) {
                                        console.log(`–ö–æ–ø—ñ—é—é –∞–∫—Ç–∏–≤–Ω–∏–π —Å—Ç–µ–π–∫—ñ–Ω–≥ –∑ ${targetKey} –≤ ${sourceKey}`);
                                        localStorage.setItem(sourceKey, targetValue);
                                    } else if (sourceHasActive && targetHasActive) {
                                        // –Ø–∫—â–æ –æ–±–∏–¥–≤–∞ –∞–∫—Ç–∏–≤–Ω—ñ, –ø–æ—Ä—ñ–≤–Ω—é—î–º–æ –∑–∞ –¥–∞—Ç–æ—é —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∞–±–æ —Å—É–º–æ—é
                                        const sourceTime = sourceData.creationTimestamp || 0;
                                        const targetTime = targetData.creationTimestamp || 0;

                                        if (sourceTime > targetTime) {
                                            console.log(`–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é –Ω–æ–≤—ñ—à–∏–π —Å—Ç–µ–π–∫—ñ–Ω–≥ –∑ ${sourceKey}`);
                                            localStorage.setItem(targetKey, sourceValue);
                                        } else if (targetTime > sourceTime) {
                                            console.log(`–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é –Ω–æ–≤—ñ—à–∏–π —Å—Ç–µ–π–∫—ñ–Ω–≥ –∑ ${targetKey}`);
                                            localStorage.setItem(sourceKey, targetValue);
                                        }
                                    }
                                } catch (e) {
                                    console.error(`–ü–æ–º–∏–ª–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó –∫–ª—é—á—ñ–≤ —Å—Ç–µ–π–∫—ñ–Ω–≥—É (${sourceKey}, ${targetKey}):`, e);
                                    // –£ –≤–∏–ø–∞–¥–∫—É –ø–æ–º–∏–ª–∫–∏, –±–µ–∑–ø–µ—á–Ω–æ –∫–æ–ø—ñ—é—î–º–æ –æ–¥–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è –≤ —ñ–Ω—à–µ
                                    localStorage.setItem(targetKey, sourceValue);
                                }
                            }
                            // –î–ª—è –±–∞–ª–∞–Ω—Å—É –æ–±–∏—Ä–∞—î–º–æ –±—ñ–ª—å—à–µ –∑–Ω–∞—á–µ–Ω–Ω—è
                            else if (sourceKey === 'winix_balance' || sourceKey === 'userTokens') {
                                const sourceAmount = parseFloat(sourceValue);
                                const targetAmount = parseFloat(targetValue);

                                if (!isNaN(sourceAmount) && !isNaN(targetAmount)) {
                                    if (sourceAmount > targetAmount) {
                                        localStorage.setItem(targetKey, sourceValue);
                                    } else {
                                        localStorage.setItem(sourceKey, targetValue);
                                    }
                                }
                            }
                            // –î–ª—è —Ä–µ—à—Ç–∏ –ø—Ä–æ—Å—Ç–æ –∫–æ–ø—ñ—é—î–º–æ
                            else {
                                localStorage.setItem(targetKey, sourceValue);
                            }
                        }
                        // –Ø–∫—â–æ —Ü—ñ–ª—å–æ–≤–æ–≥–æ –∑–Ω–∞—á–µ–Ω–Ω—è –Ω–µ–º–∞—î, –ø—Ä–æ—Å—Ç–æ –∫–æ–ø—ñ—é—î–º–æ
                        else if (targetValue === null) {
                            localStorage.setItem(targetKey, sourceValue);
                        }
                    }
                } catch (e) {
                    log('error', `–ü–æ–º–∏–ª–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó ${sourceKey} –∑ ${targetKey}:`, e);
                }
            }

            log('info', '–ö–ª—é—á—ñ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Å—Ö–æ–≤–∏—â–∞ —É—Å–ø—ñ—à–Ω–æ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–æ–≤–∞–Ω–æ');
            return true;
        } catch (e) {
            log('error', '–ü–æ–º–∏–ª–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó –∫–ª—é—á—ñ–≤ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Å—Ö–æ–≤–∏—â–∞:', e);
            return false;
        }
    }

    // ====================== –í–ò–ü–†–ê–í–õ–ï–ù–ù–Ø –ù–ê–í–Ü–ì–ê–¶–Ü–á ======================

    /**
     * –í–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó –≤ –¥–æ–¥–∞—Ç–∫—É
     */
    function fixNavigation() {
        try {
            log('info', '–í–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó');

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤–∏–ø—Ä–∞–≤–ª—è—Ç–∏ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—é
            if (!WINIX_SETTINGS.navigatioFixes) {
                log('info', '–í–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó –≤–∏–º–∫–Ω–µ–Ω–æ –≤ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è—Ö');
                return false;
            }

            // –í–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
            const backButton = document.getElementById('back-button');
            if (backButton) {
                // –í–∏–¥–∞–ª—è—î–º–æ –≤—Å—ñ —ñ—Å–Ω—É—é—á—ñ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –∑ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
                const newBackButton = backButton.cloneNode(true);
                if (backButton.parentNode) {
                    backButton.parentNode.replaceChild(newBackButton, backButton);
                }

                // –î–æ–¥–∞—î–º–æ –Ω–æ–≤–∏–π –æ–±—Ä–æ–±–Ω–∏–∫
                newBackButton.addEventListener('click', function() {
                    log('info', '–ö–ª—ñ–∫ –Ω–∞ –∫–Ω–æ–ø—Ü—ñ "–ù–∞–∑–∞–¥"');

                    // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ø–æ—Ç–æ—á–Ω–∏–π –±–∞–ª–∞–Ω—Å –ø–µ—Ä–µ–¥ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—î—é
                    if (window.WinixCore && window.WinixCore.Balance) {
                        const tokens = window.WinixCore.Balance.getTokens();
                        sessionStorage.setItem('lastBalance', tokens.toString());
                    } else if (window.balanceSystem) {
                        const tokens = window.balanceSystem.getTokens();
                        sessionStorage.setItem('lastBalance', tokens.toString());
                    }

                    sessionStorage.setItem('navigationTime', Date.now().toString());

                    // –í–∏–∑–Ω–∞—á–∞—î–º–æ, –Ω–∞ —è–∫—É —Å—Ç–æ—Ä—ñ–Ω–∫—É –ø–æ–≤–µ—Ä—Ç–∞—Ç–∏—Å—è
                    const currentPage = window.location.pathname.split('/').pop();

                    if (currentPage === 'staking-details.html') {
                        window.location.href = 'staking.html';
                    } else if (currentPage === 'staking.html') {
                        window.location.href = 'wallet.html';
                    } else {
                        window.history.back();
                    }
                });

                log('info', '–ö–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥" —É—Å–ø—ñ—à–Ω–æ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–æ');
            }

            // –í–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –Ω–∞–≤—ñ–≥–∞—Ü—ñ–π–Ω–æ–≥–æ –º–µ–Ω—é
            const navItems = document.querySelectorAll('.nav-item');
            navItems.forEach(navItem => {
                // –í–∏–¥–∞–ª—è—î–º–æ –≤—Å—ñ —ñ—Å–Ω—É—é—á—ñ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –∑ –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó
                try {
                    const newNavItem = navItem.cloneNode(true);
                    if (navItem.parentNode) {
                        navItem.parentNode.replaceChild(newNavItem, navItem);
                    }

                    // –î–æ–¥–∞—î–º–æ –Ω–æ–≤–∏–π –æ–±—Ä–æ–±–Ω–∏–∫
                    newNavItem.addEventListener('click', function() {
                        const section = this.getAttribute('data-section');
                        if (!section) return;

                        log('info', `–ö–ª—ñ–∫ –Ω–∞ –µ–ª–µ–º–µ–Ω—Ç—ñ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó "${section}"`);

                        // –û–Ω–æ–≤–ª—é—î–º–æ –∫–ª–∞—Å–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ
                        document.querySelectorAll('.nav-item').forEach(item => {
                            item.classList.remove('active');
                        });
                        this.classList.add('active');

                        // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ø–æ—Ç–æ—á–Ω–∏–π –±–∞–ª–∞–Ω—Å –ø–µ—Ä–µ–¥ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—î—é
                        if (window.WinixCore && window.WinixCore.Balance) {
                            const tokens = window.WinixCore.Balance.getTokens();
                            const coins = window.WinixCore.Balance.getCoins();
                            sessionStorage.setItem('lastBalance', tokens.toString());
                            sessionStorage.setItem('lastCoins', coins.toString());
                        } else if (window.balanceSystem) {
                            const tokens = window.balanceSystem.getTokens();
                            const coins = window.balanceSystem.getCoins();
                            sessionStorage.setItem('lastBalance', tokens.toString());
                            sessionStorage.setItem('lastCoins', coins.toString());
                        }

                        sessionStorage.setItem('navigationTime', Date.now().toString());

                        // –í–∏–∑–Ω–∞—á–∞—î–º–æ URL –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥—É
                        let url = '';
                        switch (section) {
                            case 'home':
                                url = 'original-index.html';
                                break;
                            case 'earn':
                                url = 'earn.html';
                                break;
                            case 'referrals':
                                url = 'referrals.html';
                                break;
                            case 'wallet':
                                url = 'wallet.html';
                                break;
                            case 'general':
                                if (window.simpleAlert) {
                                    window.simpleAlert("–¶—è —Ñ—É–Ω–∫—Ü—ñ—è –±—É–¥–µ –¥–æ—Å—Ç—É–ø–Ω–∞ –ø—ñ–∑–Ω—ñ—à–µ");
                                    return; // –ó–∞–ø–æ–±—ñ–≥–∞—î–º–æ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó
                                } else if (window.WinixCore && window.WinixCore.UI && window.WinixCore.UI.showNotification) {
                                    window.WinixCore.UI.showNotification("–¶—è —Ñ—É–Ω–∫—Ü—ñ—è –±—É–¥–µ –¥–æ—Å—Ç—É–ø–Ω–∞ –ø—ñ–∑–Ω—ñ—à–µ", window.WinixCore.MESSAGE_TYPES ? window.WinixCore.MESSAGE_TYPES.INFO : 'info');
                                    return; // –ó–∞–ø–æ–±—ñ–≥–∞—î–º–æ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó
                                } else {
                                    alert("–¶—è —Ñ—É–Ω–∫—Ü—ñ—è –±—É–¥–µ –¥–æ—Å—Ç—É–ø–Ω–∞ –ø—ñ–∑–Ω—ñ—à–µ");
                                    return; // –ó–∞–ø–æ–±—ñ–≥–∞—î–º–æ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó
                                }
                            default:
                                url = section + '.html';
                        }

                        // –ü–µ—Ä–µ—Ö–æ–¥–∏–º–æ –∑–∞ –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º
                        window.location.href = url;
                    });
                } catch (e) {
                    log('error', '–ü–æ–º–∏–ª–∫–∞ –æ–±—Ä–æ–±–∫–∏ –Ω–∞–≤—ñ–≥–∞—Ü—ñ–π–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞:', e);
                }
            });

            log('info', '–ù–∞–≤—ñ–≥–∞—Ü—ñ–π–Ω–µ –º–µ–Ω—é —É—Å–ø—ñ—à–Ω–æ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–æ');

            // –°—Ç–≤–æ—Ä—é—î–º–æ –≥–ª–æ–±–∞–ª—å–Ω–∏–π –æ–±'—î–∫—Ç –¥–ª—è –¥–æ–¥–∞—Ç–∫–æ–≤–∏—Ö —Ñ—É–Ω–∫—Ü—ñ–π –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó
            window.WinixNavigation = {
                // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥—É –Ω–∞ —ñ–Ω—à—É —Å—Ç–æ—Ä—ñ–Ω–∫—É –∑—ñ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è–º –ø–æ—Ç–æ—á–Ω–æ–≥–æ —Å—Ç–∞–Ω—É
                navigateTo: function(page) {
                    try {
                        log('info', `–ù–∞–≤—ñ–≥–∞—Ü—ñ—è –¥–æ ${page}`);

                        // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ø–æ—Ç–æ—á–Ω–∏–π –±–∞–ª–∞–Ω—Å –ø–µ—Ä–µ–¥ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—î—é
                        if (window.WinixCore && window.WinixCore.Balance) {
                            if (typeof window.WinixCore.Balance.getTokens === 'function') {
                                const tokens = window.WinixCore.Balance.getTokens();
                                sessionStorage.setItem('lastBalance', tokens.toString());
                            }

                            if (typeof window.WinixCore.Balance.getCoins === 'function') {
                                const coins = window.WinixCore.Balance.getCoins();
                                sessionStorage.setItem('lastCoins', coins.toString());
                            }
                        } else if (window.balanceSystem) {
                            if (typeof window.balanceSystem.getTokens === 'function') {
                                const tokens = window.balanceSystem.getTokens();
                                sessionStorage.setItem('lastBalance', tokens.toString());
                            }

                            if (typeof window.balanceSystem.getCoins === 'function') {
                                const coins = window.balanceSystem.getCoins();
                                sessionStorage.setItem('lastCoins', coins.toString());
                            }
                        }

                        sessionStorage.setItem('navigationTime', Date.now().toString());

                        // –ü–µ—Ä–µ—Ö–æ–¥–∏–º–æ –Ω–∞ —ñ–Ω—à—É —Å—Ç–æ—Ä—ñ–Ω–∫—É
                        window.location.href = page;

                        return true;
                    } catch (e) {
                        log('error', `–ü–æ–º–∏–ª–∫–∞ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó –¥–æ ${page}:`, e);
                        return false;
                    }
                },

                // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –Ω–∞–∑–∞–¥
                goBack: function() {
                    try {
                        log('info', '–ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –Ω–∞–∑–∞–¥');

                        // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ø–æ—Ç–æ—á–Ω–∏–π –±–∞–ª–∞–Ω—Å –ø–µ—Ä–µ–¥ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—î—é
                        if (window.WinixCore && window.WinixCore.Balance) {
                            const tokens = window.WinixCore.Balance.getTokens();
                            sessionStorage.setItem('lastBalance', tokens.toString());
                        } else if (window.balanceSystem) {
                            const tokens = window.balanceSystem.getTokens();
                            sessionStorage.setItem('lastBalance', tokens.toString());
                        }

                        sessionStorage.setItem('navigationTime', Date.now().toString());

                        // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ—Å—è –Ω–∞–∑–∞–¥
                        window.history.back();

                        return true;
                    } catch (e) {
                        log('error', '–ü–æ–º–∏–ª–∫–∞ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –Ω–∞–∑–∞–¥:', e);
                        return false;
                    }
                },

                // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó
                refreshNavigationHandlers: function() {
                    return fixNavigation();
                }
            };

            // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –Ω–∞ –≥–ª–æ–±–∞–ª—å–Ω–æ–º—É —Ä—ñ–≤–Ω—ñ –¥–ª—è –∑—Ä—É—á–Ω–æ—Å—Ç—ñ
            window.navigateTo = window.WinixNavigation.navigateTo;
            window.goBack = window.WinixNavigation.goBack;

            log('info', '–ù–∞–≤—ñ–≥–∞—Ü—ñ—é —É—Å–ø—ñ—à–Ω–æ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–æ');
            return true;
        } catch (e) {
            log('error', '–ü–æ–º–∏–ª–∫–∞ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó:', e);
            return false;
        }
    }

    // ====================== –í–ò–ü–†–ê–í–õ–ï–ù–ù–Ø –î–£–ë–õ–Ü–ö–ê–¢–Ü–í –û–ë–†–û–ë–ù–ò–ö–Ü–í –ü–û–î–Ü–ô ======================

    /**
     * –í–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –¥—É–±–ª—ñ–∫–∞—Ç—ñ–≤ –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –ø–æ–¥—ñ–π –¥–ª—è –≤—Å—ñ—Ö –∫–ª—é—á–æ–≤–∏—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤
     */
    function fixDuplicateEventListeners() {
        try {
            log('info', '–í–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –¥—É–±–ª—ñ–∫–∞—Ç—ñ–≤ –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –ø–æ–¥—ñ–π');

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤–∏–ø—Ä–∞–≤–ª—è—Ç–∏ –¥—É–±–ª—ñ–∫–∞—Ç–∏
            if (!WINIX_SETTINGS.fixDuplicateEventListeners) {
                log('info', '–í–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –¥—É–±–ª—ñ–∫–∞—Ç—ñ–≤ –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –ø–æ–¥—ñ–π –≤–∏–º–∫–Ω–µ–Ω–æ –≤ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è—Ö');
                return false;
            }

            // –°–ø–∏—Å–æ–∫ —É—Å—ñ—Ö –≤–∞–∂–ª–∏–≤–∏—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤, —è–∫—ñ –ø–æ—Ç–µ–Ω—Ü—ñ–π–Ω–æ –º–æ–∂—É—Ç—å –º–∞—Ç–∏ –¥—É–±–ª—é—é—á—ñ –æ–±—Ä–æ–±–Ω–∏–∫–∏
            const importantElements = [
                'back-button',
                'stake-button',
                'cancel-staking-button',
                'add-to-stake-button',
                'details-button',
                'max-button',
                'staking-amount',
                'staking-period'
            ];

            // –°—Ç–≤–æ—Ä—é—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é –¥–ª—è –±–µ–∑–ø–µ—á–Ω–æ–≥–æ –∫–ª–æ–Ω—É–≤–∞–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤
            const safeClone = function(element) {
                if (!element || !element.parentNode) return element;

                try {
                    const clone = element.cloneNode(true);
                    element.parentNode.replaceChild(clone, element);
                    return clone;
                } catch (e) {
                    log('error', `–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∫–ª–æ–Ω—É–≤–∞–Ω–Ω—ñ –µ–ª–µ–º–µ–Ω—Ç–∞ ${element.id || '–±–µ–∑ ID'}:`, e);
                    return element;
                }
            };

            // –ó–∞–ø–æ–±—ñ–≥–∞—î–º–æ –≥–ª–æ–±–∞–ª—å–Ω–æ–º—É –∫–ª–æ–Ω—É–≤–∞–Ω–Ω—é –¥–æ–∫—É–º–µ–Ω—Ç–∞, —è–∫–µ –ø—Ä–∏–∑–≤–æ–¥–∏—Ç—å –¥–æ –≤—Ç—Ä–∞—Ç–∏ –≤—Å—ñ—Ö –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤
            window.dangerousCloneDocument = function() {
                log('warn', '–°–ø—Ä–æ–±–∞ –∫–ª–æ–Ω—É–≤–∞–Ω–Ω—è –≤—Å—å–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–∞ - —Ü–µ –º–æ–∂–µ –ø—Ä–∏–∑–≤–µ—Å—Ç–∏ –¥–æ –≤—Ç—Ä–∞—Ç–∏ –≤—Å—ñ—Ö –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –ø–æ–¥—ñ–π');
                return false;
            };

            // –û–±—Ä–æ–±–ª—è—î–º–æ –≤–∞–∂–ª–∏–≤—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ —ñ –≤–∏–¥–∞–ª—è—î–º–æ –≤—Å—ñ –¥—É–±–ª—é—é—á—ñ –æ–±—Ä–æ–±–Ω–∏–∫–∏
            importantElements.forEach(elementId => {
                const element = document.getElementById(elementId);
                if (element) {
                    safeClone(element);
                    log('info', `–û—á–∏—â–µ–Ω–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –¥–ª—è –µ–ª–µ–º–µ–Ω—Ç–∞ ${elementId}`);
                }
            });

            log('info', '–í–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –¥—É–±–ª—ñ–∫–∞—Ç—ñ–≤ –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –ø–æ–¥—ñ–π —É—Å–ø—ñ—à–Ω–æ –∑–∞—Å—Ç–æ—Å–æ–≤–∞–Ω–æ');
            return true;
        } catch (e) {
            log('error', '–ü–æ–º–∏–ª–∫–∞ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –¥—É–±–ª—ñ–∫–∞—Ç—ñ–≤ –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –ø–æ–¥—ñ–π:', e);
            return false;
        }
    }

    // ====================== –í–Ü–î–ù–û–í–õ–ï–ù–ù–Ø –î–ê–ù–ò–• –°–¢–ï–ô–ö–Ü–ù–ì–£ ======================

    /**
     * –°–ø—Ä–æ–±–∞ –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö —Å—Ç–µ–π–∫—ñ–Ω–≥—É –∑ —Å–µ—Ä–≤–µ—Ä–∞
     */
    function restoreStakingData() {
        try {
            console.log("üîÑ –°–ø—Ä–æ–±–∞ –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö —Å—Ç–µ–π–∫—ñ–Ω–≥—É –∑ —Å–µ—Ä–≤–µ—Ä–∞");

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å API –º–æ–¥—É–ª—è
            if (!window.WinixAPI || typeof window.WinixAPI.getStakingData !== 'function') {
                console.warn("‚ö†Ô∏è API –º–æ–¥—É–ª—å –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∞–±–æ –≤—ñ–¥—Å—É—Ç–Ω—è —Ñ—É–Ω–∫—Ü—ñ—è getStakingData");
                return false;
            }

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –≤–∞–ª—ñ–¥–Ω–æ–≥–æ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            if (window.WinixAPI.getUserId && !isValidId(window.WinixAPI.getUserId())) {
                console.warn("‚ö†Ô∏è –í—ñ–¥—Å—É—Ç–Ω—ñ–π –≤–∞–ª—ñ–¥–Ω–∏–π ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞");
                return false;
            }

            // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ API –º–æ–¥—É–ª—å –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö —Å—Ç–µ–π–∫—ñ–Ω–≥—É
            window.WinixAPI.getStakingData()
                .then(data => {
                    if (data.status === 'success' && data.data) {
                        console.log("‚úÖ –û—Ç—Ä–∏–º–∞–Ω–æ –¥–∞–Ω—ñ —Å—Ç–µ–π–∫—ñ–Ω–≥—É –∑ —Å–µ—Ä–≤–µ—Ä–∞:", data.data);

                        // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –¥–∞–Ω—ñ –≤ –æ–±–æ—Ö –∫–ª—é—á–∞—Ö
                        const stakingStr = JSON.stringify(data.data);
                        try {
                            localStorage.setItem('stakingData', stakingStr);
                            localStorage.setItem('winix_staking', stakingStr);
                        } catch (e) {
                            console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö —Å—Ç–µ–π–∫—ñ–Ω–≥—É –≤ localStorage:", e);
                        }

                        // –û–Ω–æ–≤–ª—é—î–º–æ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å, —è–∫—â–æ –º–æ–∂–ª–∏–≤–æ
                        if (window.updateStakingDisplay) {
                            window.updateStakingDisplay();
                        } else if (window.WinixCore && window.WinixCore.UI && typeof window.WinixCore.UI.updateStakingDisplay === 'function') {
                            window.WinixCore.UI.updateStakingDisplay();
                        } else if (window.WinixStakingSystem && typeof window.WinixStakingSystem.updateStakingDisplay === 'function') {
                            window.WinixStakingSystem.updateStakingDisplay();
                        }

                        return true;
                    } else {
                        console.warn("‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–∞–Ω—ñ —Å—Ç–µ–π–∫—ñ–Ω–≥—É –∑ —Å–µ—Ä–≤–µ—Ä–∞", data);
                        return false;
                    }
                })
                .catch(error => {
                    console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—ñ –¥–∞–Ω–∏—Ö —Å—Ç–µ–π–∫—ñ–Ω–≥—É:", error);
                    return false;
                });

            return true;
        } catch (e) {
            console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ —Ñ—É–Ω–∫—Ü—ñ—ó –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö —Å—Ç–µ–π–∫—ñ–Ω–≥—É:", e);
            return false;
        }
    }

    // ====================== –ó–ê–ü–£–°–ö –í–°–Ü–• –í–ò–ü–†–ê–í–õ–ï–ù–¨ ======================

    /**
     * –û—Å–Ω–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –∑–∞–ø—É—Å–∫—É –≤—Å—ñ—Ö –≤–∏–ø—Ä–∞–≤–ª–µ–Ω—å
     */
    function runAllFixes() {
        try {
            log('info', '–ó–∞–ø—É—Å–∫ –≤—Å—ñ—Ö –≤–∏–ø—Ä–∞–≤–ª–µ–Ω—å');

            // 1. –í–∫–ª—é—á–∞—î–º–æ —Ä–µ–∂–∏–º –≤—ñ–¥–ª–∞–≥–æ–¥–∂–µ–Ω–Ω—è, —è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ
            if (WINIX_SETTINGS.debug) {
                console.log("üîß WINIX-ALL-IN-ONE: –†–µ–∂–∏–º –≤—ñ–¥–ª–∞–≥–æ–¥–∂–µ–Ω–Ω—è —É–≤—ñ–º–∫–Ω–µ–Ω–æ");
                if (window.WinixAPI) {
                    window.WinixAPI.setDebugMode(true);
                }
            }

            // 2. –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑—É—î–º–æ –∫–ª—é—á—ñ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Å—Ö–æ–≤–∏—â–∞
            syncStorageKeys();

            // 3. –ù–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ —Å—Ç–∏–ª—å–Ω—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
            if (WINIX_SETTINGS.styledNotifications) {
                setupStyledNotifications();
            }

            // 4. –í–∏–ø—Ä–∞–≤–ª—è—î–º–æ –¥–∞–Ω—ñ —Å—Ç–µ–π–∫—ñ–Ω–≥—É
            if (WINIX_SETTINGS.autoRestoreStaking) {
                fixStakingData();
                // –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –≤—ñ–¥–Ω–æ–≤–ª—é—î–º–æ –¥–∞–Ω—ñ —Å—Ç–µ–π–∫—ñ–Ω–≥—É –∑ —Å–µ—Ä–≤–µ—Ä–∞
                setTimeout(restoreStakingData, 1000);
            }

            // 5. –í–∏–ø—Ä–∞–≤–ª—è—î–º–æ –¥—É–±–ª—ñ–∫–∞—Ç–∏ –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –ø–æ–¥—ñ–π
            fixDuplicateEventListeners();

            // 6. –í–∏–ø—Ä–∞–≤–ª—è—î–º–æ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—é
            fixNavigation();

            // 7. –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –≥–ª–æ–±–∞–ª—å–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –¥–ª—è —Å—É–º—ñ—Å–Ω–æ—Å—Ç—ñ
            window.fixNavigation = fixNavigation;
            window.fixStakingData = fixStakingData;

            if (!window.simpleAlert) {
                window.simpleAlert = function(message, isError, callback) {
                    alert(message);
                    if (callback) callback();
                };
            }

            // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Ñ–ª–∞–≥ —É—Å–ø—ñ—à–Ω–æ—ó —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
            window.WinixAllInOneInitialized = true;

            log('info', '–í—Å—ñ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è —É—Å–ø—ñ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–æ');
            return true;
        } catch (e) {
            log('error', '–ü–æ–º–∏–ª–∫–∞ –∑–∞–ø—É—Å–∫—É –≤–∏–ø—Ä–∞–≤–ª–µ–Ω—å:', e);
            return false;
        }
    }

    // –í–∏–∫–æ–Ω—É—î–º–æ –≤—Å—ñ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
    if (document.readyState === 'loading') {
        window.addEventListener('load', function() {
            // –ó–∞–ø—É—Å–∫–∞—î–º–æ –≤—Å—ñ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è
            runAllFixes();

            // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –≥–ª–æ–±–∞–ª—å–Ω–∏–π –æ–±—Ä–æ–±–Ω–∏–∫ –ø–æ–º–∏–ª–æ–∫
            window.onerror = function(message, source, lineno, colno, error) {
                if (WINIX_SETTINGS.debug) {
                    console.error(`üîß WINIX-ALL-IN-ONE: –ü–æ–º–∏–ª–∫–∞ JavaScript: ${message} —É ${source}:${lineno}:${colno}`);
                }
                return true;
            };

            console.log("‚úÖ WINIX-ALL-IN-ONE: –í—Å—ñ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è —É—Å–ø—ñ—à–Ω–æ –∑–∞—Å—Ç–æ—Å–æ–≤–∞–Ω–æ");
        });
    }
    // –Ø–∫—â–æ —Å—Ç–æ—Ä—ñ–Ω–∫–∞ –≤–∂–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∞
    else {
        runAllFixes();
        console.log("‚úÖ WINIX-ALL-IN-ONE: –í—Å—ñ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è —É—Å–ø—ñ—à–Ω–æ –∑–∞—Å—Ç–æ—Å–æ–≤–∞–Ω–æ (—Å—Ç–æ—Ä—ñ–Ω–∫–∞ –≤–∂–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∞)");
    }

    // –¢–∞–∫–æ–∂ –≤–∏–∫–æ–Ω–∞—î–º–æ –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö —Å—Ç–µ–π–∫—ñ–Ω–≥—É –ø—Ä–∏ –ø–æ–≤–Ω–æ–º—É –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ DOM
    document.addEventListener('DOMContentLoaded', function() {
        if (WINIX_SETTINGS.autoRestoreStaking) {
            // –í—ñ–¥–Ω–æ–≤–ª—é—î–º–æ –¥–∞–Ω—ñ —Å—Ç–µ–π–∫—ñ–Ω–≥—É –∑–∞ —Ä–æ–∑–∫–ª–∞–¥–æ–º
            setTimeout(restoreStakingData, 2000);
        }
    });

    console.log("‚úÖ WINIX-ALL-IN-ONE: –ú–æ–¥—É–ª—å –≤–∏–ø—Ä–∞–≤–ª–µ–Ω—å —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ");
})();