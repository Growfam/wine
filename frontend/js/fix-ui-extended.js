/**
 * fix-ui-extended.js - —Ä–æ–∑—à–∏—Ä–µ–Ω—ñ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –¥–ª—è –ø–æ–º–∏–ª–æ–∫ UI WINIX
 *
 * –í–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –¥–æ–¥–∞—Ç–∫–æ–≤–∏—Ö –ø–æ–º–∏–ª–æ–∫:
 * - "–ü–æ–º–∏–ª–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è UI"
 * - "–ü–æ–º–∏–ª–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó –¥–∞–Ω–∏—Ö –∑ —Å–µ—Ä–≤–µ—Ä–æ–º"
 */

(function() {
    console.log("üîß –ó–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è —Ä–æ–∑—à–∏—Ä–µ–Ω–∏—Ö –≤–∏–ø—Ä–∞–≤–ª–µ–Ω—å –¥–ª—è UI WINIX...");

    // –í–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –¥–ª—è winix-core.js
    function fixWinixCore() {
        if (!window.WinixCore) return;

        // –í–∏–ø—Ä–∞–≤–ª—è—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—ó –¥–ª—è updateDisplay
        const uiModule = window.WinixCore.UI;
        if (uiModule) {
            // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω—É —Ñ—É–Ω–∫—Ü—ñ—é updateBalanceDisplay
            const originalUpdateBalanceDisplay = uiModule.updateBalanceDisplay;

            // –ü–µ—Ä–µ–≤–∏–∑–Ω–∞—á–∞—î–º–æ –∑ –±–µ–∑–ø–µ—á–Ω–æ—é –æ–±—Ä–æ–±–∫–æ—é –ø–æ–º–∏–ª–æ–∫
            uiModule.updateBalanceDisplay = function() {
                try {
                    return originalUpdateBalanceDisplay.apply(this, arguments);
                } catch (e) {
                    console.warn("‚ö†Ô∏è –ü–µ—Ä–µ—Ö–æ–ø–ª–µ–Ω–æ –ø–æ–º–∏–ª–∫—É –≤ updateBalanceDisplay:", e);

                    // –ó–∞–ø–∞—Å–Ω–∏–π –º–µ—Ç–æ–¥ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É
                    try {
                        // –û—Ç—Ä–∏–º—É—î–º–æ –ø–æ—Ç–æ—á–Ω–∏–π –±–∞–ª–∞–Ω—Å –∑ localStorage
                        const tokens = parseFloat(localStorage.getItem('userTokens') || '0').toFixed(2);
                        const coins = parseInt(localStorage.getItem('userCoins') || '0');

                        // –û–Ω–æ–≤–ª—é—î–º–æ –µ–ª–µ–º–µ–Ω—Ç–∏ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É
                        const userTokensElement = document.getElementById('user-tokens');
                        const userCoinsElement = document.getElementById('user-coins');

                        if (userTokensElement) userTokensElement.textContent = tokens;
                        if (userCoinsElement) userCoinsElement.textContent = coins;
                    } catch (fallbackError) {
                        console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø–∞—Å–Ω–æ–≥–æ –º–µ—Ç–æ–¥—É –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É:", fallbackError);
                    }
                }
            };

            // –í–∏–ø—Ä–∞–≤–ª—è—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–µ–π–∫—ñ–Ω–≥—É
            const originalUpdateStakingDisplay = uiModule.updateStakingDisplay;

            if (originalUpdateStakingDisplay) {
                uiModule.updateStakingDisplay = function() {
                    try {
                        return originalUpdateStakingDisplay.apply(this, arguments);
                    } catch (e) {
                        console.warn("‚ö†Ô∏è –ü–µ—Ä–µ—Ö–æ–ø–ª–µ–Ω–æ –ø–æ–º–∏–ª–∫—É –≤ updateStakingDisplay:", e);

                        // –ó–∞–ø–∞—Å–Ω–∏–π –º–µ—Ç–æ–¥ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–µ–π–∫—ñ–Ω–≥—É
                        try {
                            if (window.WinixStakingSystem && typeof window.WinixStakingSystem.renderStakingDetails === 'function') {
                                window.WinixStakingSystem.renderStakingDetails();
                            } else if (window.StakingSystem && typeof window.StakingSystem.renderStakingDetails === 'function') {
                                window.StakingSystem.renderStakingDetails();
                            } else {
                                // –†—É—á–Ω–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Å—Ç–µ–π–∫—ñ–Ω–≥—É
                                updateStakingDisplayManually();
                            }
                        } catch (fallbackError) {
                            console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø–∞—Å–Ω–æ–≥–æ –º–µ—Ç–æ–¥—É –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–µ–π–∫—ñ–Ω–≥—É:", fallbackError);
                        }
                    }
                };
            }
        }

        // –í–∏–ø—Ä–∞–≤–ª—è—î–º–æ –ø—Ä–æ–±–ª–µ–º—É —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó –¥–∞–Ω–∏—Ö
        if (typeof window.WinixCore.syncUserData === 'function') {
            const originalSyncUserData = window.WinixCore.syncUserData;

            window.WinixCore.syncUserData = function() {
                try {
                    return originalSyncUserData.apply(this, arguments);
                } catch (e) {
                    console.warn("‚ö†Ô∏è –ü–µ—Ä–µ—Ö–æ–ø–ª–µ–Ω–æ –ø–æ–º–∏–ª–∫—É –≤ syncUserData:", e);

                    // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –ø—Ä–æ–º—ñ—Å, —â–æ–± –∫–æ–¥ –ø—Ä–æ–¥–æ–≤–∂–∏–≤ –≤–∏–∫–æ–Ω—É–≤–∞—Ç–∏—Å—è
                    return new Promise((resolve) => {
                        console.log("‚ÑπÔ∏è –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –ª–æ–∫–∞–ª—å–Ω–∏—Ö –¥–∞–Ω–∏—Ö –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó");

                        // –°–ø—Ä–æ–±–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É –∑ –ª–æ–∫–∞–ª—å–Ω–∏–º–∏ –¥–∞–Ω–∏–º–∏
                        setTimeout(() => {
                            try {
                                if (window.WinixCore && window.WinixCore.UI) {
                                    window.WinixCore.UI.updateBalanceDisplay();
                                }
                            } catch (uiError) {
                                console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è UI –ø—ñ—Å–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó:", uiError);
                            }

                            resolve({ success: true, source: 'local' });
                        }, 100);
                    });
                }
            };
        }
    }

    // –†—É—á–Ω–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Å—Ç–µ–π–∫—ñ–Ω–≥—É
    function updateStakingDisplayManually() {
        // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å—Ç–µ–π–∫—ñ–Ω–≥—É
        let stakingData = null;
        try {
            const stakingDataStr = localStorage.getItem('stakingData') || localStorage.getItem('winix_staking');
            if (stakingDataStr) {
                stakingData = JSON.parse(stakingDataStr);
            }
        } catch (e) {
            console.warn("‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –¥–∞–Ω–∏—Ö —Å—Ç–µ–π–∫—ñ–Ω–≥—É –∑ localStorage:", e);
        }

        const hasActiveStaking = stakingData && stakingData.hasActiveStaking === true;

        // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞—Ç—É—Å —Å—Ç–µ–π–∫—ñ–Ω–≥—É
        const statusElement = document.getElementById('staking-status');
        if (statusElement) {
            if (hasActiveStaking && stakingData) {
                statusElement.textContent = `–£ —Å—Ç–µ–π–∫—ñ–Ω–≥—É: ${stakingData.stakingAmount || 0} $WINIX`;
            } else {
                statusElement.textContent = "–ù–∞—Ä–∞–∑—ñ –Ω–µ–º–∞—î –∞–∫—Ç–∏–≤–Ω–∏—Ö —Å—Ç–µ–π–∫—ñ–Ω–≥—ñ–≤";
            }
        }

        // –û–Ω–æ–≤–ª—é—î–º–æ –∫–Ω–æ–ø–∫–∏ —Å—Ç–µ–π–∫—ñ–Ω–≥—É
        const activeStakingButton = document.getElementById('active-staking-button');
        if (activeStakingButton) {
            if (hasActiveStaking) {
                activeStakingButton.classList.remove('disabled');
                activeStakingButton.disabled = false;
            } else {
                activeStakingButton.classList.add('disabled');
                activeStakingButton.disabled = true;
            }
        }

        // –ö–Ω–æ–ø–∫–∞ "–°–∫–∞—Å—É–≤–∞—Ç–∏ —Å—Ç–µ–π–∫—ñ–Ω–≥"
        const cancelStakingButton = document.getElementById('cancel-staking-button');
        if (cancelStakingButton) {
            if (hasActiveStaking) {
                cancelStakingButton.style.opacity = '1';
                cancelStakingButton.style.pointerEvents = 'auto';
                cancelStakingButton.disabled = false;
            } else {
                cancelStakingButton.style.opacity = '0.5';
                cancelStakingButton.style.pointerEvents = 'none';
                cancelStakingButton.disabled = true;
            }
        }
    }

    // –ü–µ—Ä–µ–≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ–π –ª–æ–≥—É–≤–∞–Ω–Ω—è –ø–æ–º–∏–ª–æ–∫ —É core
    function fixCoreLogs() {
        // –ó–∞–º—ñ–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—ó –ª–æ–≥—É–≤–∞–Ω–Ω—è –≤ winix-core
        const originalLogError = console.error;

        console.error = function() {
            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —Ü–µ –ø–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è UI
            const args = Array.from(arguments);
            const errorMsg = args.join(' ');

            if (
                (typeof errorMsg === 'string' &&
                (errorMsg.includes('originalUpdateDisplay') ||
                errorMsg.includes('undefined is not an object') ||
                errorMsg.includes('–∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è UI') ||
                errorMsg.includes('—Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó –¥–∞–Ω–∏—Ö')))
            ) {
                // –ó–∞–º—ñ–Ω—é—î–º–æ –Ω–∞ –ø–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è
                console.warn("‚ö†Ô∏è –ó–∞–±–ª–æ–∫–æ–≤–∞–Ω–æ UI –ø–æ–º–∏–ª–∫—É:", ...args);

                // –°–ø—Ä–æ–±–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ–≥–æ –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è
                setTimeout(() => {
                    try {
                        if (window.WinixCore && window.WinixCore.UI) {
                            window.WinixCore.UI.updateBalanceDisplay();
                        }

                        updateStakingDisplayManually();
                    } catch (e) {
                        // –Ü–≥–Ω–æ—Ä—É—î–º–æ –ø–æ–º–∏–ª–∫–∏ –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è
                    }
                }, 200);

                return;
            }

            // –í—Å—ñ —ñ–Ω—à—ñ –ø–æ–º–∏–ª–∫–∏ –ø–µ—Ä–µ–¥–∞—î–º–æ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω—ñ–π —Ñ—É–Ω–∫—Ü—ñ—ó
            originalLogError.apply(console, arguments);
        };
    }

    // –í–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –¥–ª—è –º–µ—Ç–æ–¥—É enqueue –≤ winix-core
    function fixCoreEnqueue() {
        if (typeof window.enqueue === 'function') {
            const originalEnqueue = window.enqueue;

            window.enqueue = function(job) {
                try {
                    return originalEnqueue.apply(this, arguments);
                } catch (e) {
                    console.warn("‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –≤ enqueue:", e);

                    // –°–ø—Ä–æ–±–∞ –≤–∏–∫–æ–Ω–∞—Ç–∏ —Ñ—É–Ω–∫—Ü—ñ—é –Ω–∞–ø—Ä—è–º—É
                    if (typeof job === 'function') {
                        try {
                            job();
                        } catch (jobError) {
                            console.warn("‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è job:", jobError);
                        }
                    }
                }
            };
        }
    }

    // –ó–∞–ø—É—Å–∫–∞—î–º–æ –≤—Å—ñ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è
    fixCoreLogs();
    fixCoreEnqueue();

    // –ß–µ–∫–∞—î–º–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è WinixCore
    function waitForWinixCore() {
        if (window.WinixCore) {
            fixWinixCore();
        } else {
            setTimeout(waitForWinixCore, 100);
        }
    }

    waitForWinixCore();

    // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –¥–æ –°—Ç–µ–π–∫—ñ–Ω–≥ —Ñ—É–Ω–∫—Ü—ñ–π –¥–ª—è –∫–Ω–æ–ø–æ–∫
    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', setupStakingButtons);
    } else {
        setupStakingButtons();
    }

    function setupStakingButtons() {
        // –í–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ê–∫—Ç–∏–≤–Ω–∏–π —Å—Ç–µ–π–∫—ñ–Ω–≥"
        const activeStakingButton = document.getElementById('active-staking-button');
        if (activeStakingButton) {
            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –≤–∂–µ —î –æ–±—Ä–æ–±–Ω–∏–∫
            if (!activeStakingButton._fixedClickHandler) {
                activeStakingButton._fixedClickHandler = true;

                // –î–æ–¥–∞—î–º–æ –Ω–æ–≤–∏–π –æ–±—Ä–æ–±–Ω–∏–∫, —è–∫–∏–π –Ω–µ –¥–∞—Å—Ç—å –≤–ø–∞—Å—Ç–∏ —Ñ—É–Ω–∫—Ü—ñ—ó
                activeStakingButton.addEventListener('click', function(e) {
                    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –∫–Ω–æ–ø–∫–∞ –Ω–µ –≤—ñ–¥–∫–ª—é—á–µ–Ω–∞
                    if (this.classList.contains('disabled') || this.disabled) {
                        e.preventDefault();
                        e.stopPropagation();
                        return false;
                    }

                    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å—Ç–µ–π–∫—ñ–Ω–≥—É
                    let hasActiveStaking = false;
                    try {
                        const stakingDataStr = localStorage.getItem('stakingData') || localStorage.getItem('winix_staking');
                        const stakingData = JSON.parse(stakingDataStr);
                        hasActiveStaking = stakingData && stakingData.hasActiveStaking === true;
                    } catch (e) {
                        hasActiveStaking = false;
                    }

                    // –Ø–∫—â–æ –Ω–µ–º–∞—î –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å—Ç–µ–π–∫—ñ–Ω–≥—É, –ø–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —ñ –∑—É–ø–∏–Ω—è—î–º–æ
                    if (!hasActiveStaking) {
                        if (window.WinixCore && window.WinixCore.UI && window.WinixCore.UI.showNotification) {
                            window.WinixCore.UI.showNotification('–£ –≤–∞—Å –Ω–µ–º–∞—î –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å—Ç–µ–π–∫—ñ–Ω–≥—É');
                        } else {
                            alert('–£ –≤–∞—Å –Ω–µ–º–∞—î –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å—Ç–µ–π–∫—ñ–Ω–≥—É');
                        }
                        e.preventDefault();
                        e.stopPropagation();
                        return false;
                    }
                });
            }
        }

        // –í–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–°—Ç–≤–æ—Ä–∏—Ç–∏ —Å—Ç–µ–π–∫—ñ–Ω–≥"
        const createStakingButton = document.getElementById('stake-button');
        if (createStakingButton) {
            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –≤–∂–µ —î –æ–±—Ä–æ–±–Ω–∏–∫
            if (!createStakingButton._fixedClickHandler) {
                createStakingButton._fixedClickHandler = true;

                // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫, —è–∫–∏–π –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç—å –≤–∞–ª—ñ–¥–Ω—ñ—Å—Ç—å –¥–∞–Ω–∏—Ö
                createStakingButton.addEventListener('click', function(e) {
                    // –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ –∑ —Ñ–æ—Ä–º–∏
                    const amountInput = document.getElementById('staking-amount');
                    const periodSelect = document.getElementById('staking-period');

                    if (!amountInput || !periodSelect) return;

                    const amount = parseFloat(amountInput.value) || 0;
                    const period = parseInt(periodSelect.value) || 14;

                    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –º—ñ–Ω—ñ–º–∞–ª—å–Ω—É —Å—É–º—É
                    if (amount < 50) {
                        if (window.WinixCore && window.WinixCore.UI && window.WinixCore.UI.showNotification) {
                            window.WinixCore.UI.showNotification('–ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∞ —Å—É–º–∞ —Å—Ç–µ–π–∫—ñ–Ω–≥—É - 50 WINIX', 'error');
                        } else {
                            alert('–ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∞ —Å—É–º–∞ —Å—Ç–µ–π–∫—ñ–Ω–≥—É - 50 WINIX');
                        }
                        e.preventDefault();
                        e.stopPropagation();
                        return false;
                    }

                    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –¥–æ—Å—Ç–∞—Ç–Ω—å–æ—ó –∫—ñ–ª—å–∫–æ—Å—Ç—ñ —Ç–æ–∫–µ–Ω—ñ–≤
                    const balance = parseFloat(localStorage.getItem('userTokens') || localStorage.getItem('winix_balance') || '0');
                    if (amount > balance) {
                        if (window.WinixCore && window.WinixCore.UI && window.WinixCore.UI.showNotification) {
                            window.WinixCore.UI.showNotification('–ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –∫–æ—à—Ç—ñ–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å—ñ', 'error');
                        } else {
                            alert('–ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –∫–æ—à—Ç—ñ–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å—ñ');
                        }
                        e.preventDefault();
                        e.stopPropagation();
                        return false;
                    }
                });
            }
        }
    }

    console.log("‚úÖ –†–æ–∑—à–∏—Ä–µ–Ω—ñ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –¥–ª—è UI WINIX —É—Å–ø—ñ—à–Ω–æ –∑–∞—Å—Ç–æ—Å–æ–≤–∞–Ω—ñ");
})();