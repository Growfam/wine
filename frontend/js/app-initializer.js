/**
 * app-initializer.js - –ú–æ–¥—É–ª—å —Ü–µ–Ω—Ç—Ä–∞–ª—ñ–∑–æ–≤–∞–Ω–æ—ó —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó WINIX
 * –ó–∞–±–µ–∑–ø–µ—á—É—î –ø–æ—Å–ª—ñ–¥–æ–≤–Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—é –º–æ–¥—É–ª—ñ–≤ –¥–æ–¥–∞—Ç–∫—É
 * @version 1.0.0
 */

(function() {
  'use strict';

  // –ü—Ä–∏–≤–∞—Ç–Ω—ñ –∑–º—ñ–Ω–Ω—ñ –º–æ–¥—É–ª—è
  const _state = {
    isInitializing: false,
    isInitialized: false,
    modules: {}, // —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —Å—Ç–∞—Ç—É—Å –º–æ–¥—É–ª—ñ–≤
    initQueue: [], // —á–µ—Ä–≥–∞ –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è –Ω–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—é
    maxRetryAttempts: 5,
    retryTimeouts: [1000, 2000, 3000, 5000, 8000], // –∑–∞—Ç—Ä–∏–º–∫–∏ –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–∏—Ö —Å–ø—Ä–æ–± (–º—Å)
    currentRetry: 0
  };

  // –®–∏–Ω–∞ –ø–æ–¥—ñ–π –¥–ª—è –∫–æ–º—É–Ω—ñ–∫–∞—Ü—ñ—ó –º—ñ–∂ –º–æ–¥—É–ª—è–º–∏
  const _eventBus = {
    events: {},
    subscribe: function(event, callback) {
      if (!this.events[event]) {
        this.events[event] = [];
      }
      this.events[event].push(callback);
      return this; // –¥–ª—è –ª–∞–Ω—Ü—é–∂–∫–æ–≤–∏—Ö –≤–∏–∫–ª–∏–∫—ñ–≤
    },
    unsubscribe: function(event, callback) {
      if (this.events[event]) {
        this.events[event] = this.events[event].filter(cb => cb !== callback);
      }
      return this;
    },
    publish: function(event, data) {
      if (!this.events[event]) return;
      this.events[event].forEach(callback => {
        try {
          callback(data);
        } catch (e) {
          console.error(`–ü–æ–º–∏–ª–∫–∞ –ø–æ–¥—ñ—ó ${event}:`, e);
        }
      });
      return this;
    }
  };

  // –î–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
  let _userData = null;
  let _userId = null;

  // –°—Ç–∞–Ω –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ–≤
  const _moduleStatuses = {
    PENDING: 'pending', // –≤ –æ—á—ñ–∫—É–≤–∞–Ω–Ω—ñ
    INITIALIZING: 'initializing', // –ø—Ä–æ—Ü–µ—Å —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
    SUCCESS: 'success', // —É—Å–ø—ñ—à–Ω–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ
    ERROR: 'error', // –ø–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
    RETRY: 'retry' // –ø–æ–≤—Ç–æ—Ä–Ω–∞ —Å–ø—Ä–æ–±–∞
  };

  // –°—Ö–µ–º–∞ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π –º—ñ–∂ –º–æ–¥—É–ª—è–º–∏
  // –ö–æ–∂–µ–Ω –º–æ–¥—É–ª—å –º–æ–∂–µ –º–∞—Ç–∏ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –≤—ñ–¥ —ñ–Ω—à–∏—Ö –º–æ–¥—É–ª—ñ–≤
  const _moduleDependencies = {
    telegram: [], // –¢–µ–ª–µ–≥—Ä–∞–º API –Ω–µ –º–∞—î –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π
    core: ['telegram'], // Core –∑–∞–ª–µ–∂–∏—Ç—å –≤—ñ–¥ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó Telegram
    api: ['core', 'telegram'], // API –∑–∞–ª–µ–∂–∏—Ç—å –≤—ñ–¥ Core —Ç–∞ Telegram
    referrals: ['api', 'core'] // –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞ —Å–∏—Å—Ç–µ–º–∞ –∑–∞–ª–µ–∂–∏—Ç—å –≤—ñ–¥ API —Ç–∞ Core
  };

  // –ü—Ä—ñ–æ—Ä–∏—Ç–µ—Ç –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –º–æ–¥—É–ª—ñ–≤ (–º–µ–Ω—à–µ –∑–Ω–∞—á–µ–Ω–Ω—è = –≤–∏—â–∏–π –ø—Ä—ñ–æ—Ä–∏—Ç–µ—Ç)
  const _modulePriorities = {
    telegram: 10,
    core: 20,
    api: 30,
    referrals: 40
  };

  /**
   * –õ–æ–≥—É–≤–∞–Ω–Ω—è –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —Ç–∞ —Ñ–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è–º
   */
  function log(message, level = 'log') {
    const timestamp = new Date().toISOString().substring(11, 19);
    const prefix = `[${timestamp}] [AppInitializer]`;

    switch (level) {
      case 'error':
        console.error(`‚ùå ${prefix} ${message}`);
        break;
      case 'warn':
        console.warn(`‚ö†Ô∏è ${prefix} ${message}`);
        break;
      case 'success':
        console.log(`‚úÖ ${prefix} ${message}`);
        break;
      default:
        console.log(`üîÑ ${prefix} ${message}`);
    }
  }

  /**
   * –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –º–æ–¥—É–ª—è –≤ —Å–∏—Å—Ç–µ–º—ñ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
   * @param {string} moduleId - –Ü–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –º–æ–¥—É–ª—è
   * @param {function} initFunction - –§—É–Ω–∫—Ü—ñ—è —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó –º–æ–¥—É–ª—è
   * @param {object} options - –î–æ–¥–∞—Ç–∫–æ–≤—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏
   */
  function registerModule(moduleId, initFunction, options = {}) {
    if (!moduleId || typeof initFunction !== 'function') {
      log(`–ù–µ–º–æ–∂–ª–∏–≤–æ –∑–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞—Ç–∏ –º–æ–¥—É–ª—å "${moduleId}": –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏`, 'error');
      return false;
    }

    if (_state.modules[moduleId]) {
      log(`–ú–æ–¥—É–ª—å "${moduleId}" –≤–∂–µ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–∏–π`, 'warn');
      return false;
    }

    // –í–∏–∑–Ω–∞—á–∞—î–º–æ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –∞–±–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∑–Ω–∞—á–µ–Ω–Ω—è –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
    const dependencies = options.dependencies || _moduleDependencies[moduleId] || [];
    const priority = options.priority || _modulePriorities[moduleId] || 100;

    // –†–µ—î—Å—Ç—Ä—É—î–º–æ –º–æ–¥—É–ª—å
    _state.modules[moduleId] = {
      id: moduleId,
      status: _moduleStatuses.PENDING,
      initFunction: initFunction,
      dependencies: dependencies,
      priority: priority,
      retryCount: 0,
      lastError: null,
      initTime: null
    };

    log(`–ú–æ–¥—É–ª—å "${moduleId}" –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–æ –∑ –ø—Ä—ñ–æ—Ä–∏—Ç–µ—Ç–æ–º ${priority}`);

    // –ü—É–±–ª—ñ–∫—É—î–º–æ –ø–æ–¥—ñ—é —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó –º–æ–¥—É–ª—è
    _eventBus.publish('module-registered', { moduleId, dependencies, priority });

    return true;
  }

  /**
   * –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ –≤—Å—ñ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –º–æ–¥—É–ª—è —É—Å–ø—ñ—à–Ω–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ
   * @param {string} moduleId - ID –º–æ–¥—É–ª—è –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏
   * @returns {boolean} –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏
   */
  function areDependenciesMet(moduleId) {
    const module = _state.modules[moduleId];
    if (!module) return false;

    // –Ø–∫—â–æ –Ω–µ–º–∞—î –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π, —É–º–æ–≤–∞ –≤–∏–∫–æ–Ω–∞–Ω–∞
    if (!module.dependencies || module.dependencies.length === 0) {
      return true;
    }

    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Å—Ç–∞—Ç—É—Å –∫–æ–∂–Ω–æ—ó –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ
    return module.dependencies.every(depId => {
      const dep = _state.modules[depId];
      return dep && dep.status === _moduleStatuses.SUCCESS;
    });
  }

  /**
   * –ó–∞–ø—É—Å–∫–∞—î —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—é –º–æ–¥—É–ª—è
   * @param {string} moduleId - ID –º–æ–¥—É–ª—è
   * @returns {Promise} –ü—Ä–æ–º—ñ—Å, —â–æ –≤–∏—Ä—ñ—à—É—î—Ç—å—Å—è –ø—ñ—Å–ª—è —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
   */
  async function initializeModule(moduleId) {
    const module = _state.modules[moduleId];
    if (!module) {
      return Promise.reject(new Error(`–ú–æ–¥—É–ª—å "${moduleId}" –Ω–µ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–∏–π`));
    }

    // –Ø–∫—â–æ –º–æ–¥—É–ª—å –≤–∂–µ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î—Ç—å—Å—è –∞–±–æ –±—É–≤ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–∏–π
    if (module.status === _moduleStatuses.INITIALIZING) {
      log(`–ú–æ–¥—É–ª—å "${moduleId}" –≤–∂–µ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î—Ç—å—Å—è`, 'warn');
      return new Promise((resolve, reject) => {
        _state.initQueue.push({ moduleId, resolve, reject });
      });
    }

    if (module.status === _moduleStatuses.SUCCESS) {
      log(`–ú–æ–¥—É–ª—å "${moduleId}" –≤–∂–µ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–∏–π`, 'warn');
      return Promise.resolve();
    }

    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ
    if (!areDependenciesMet(moduleId)) {
      log(`–ù–µ –≤—Å—ñ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –º–æ–¥—É–ª—è "${moduleId}" –∑–∞–¥–æ–≤–æ–ª–µ–Ω—ñ`, 'warn');

      // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –ø—Ä–æ–º—ñ—Å, —è–∫–∏–π –≤–∏—Ä—ñ—à–∏—Ç—å—Å—è, –∫–æ–ª–∏ –≤—Å—ñ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –±—É–¥—É—Ç—å —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω—ñ
      return new Promise((resolve, reject) => {
        _state.initQueue.push({ moduleId, resolve, reject });

        // –°–ø—Ä–æ–±—É—î–º–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ
        module.dependencies.forEach(depId => {
          if (_state.modules[depId] && _state.modules[depId].status === _moduleStatuses.PENDING) {
            scheduleModuleInitialization(depId);
          }
        });
      });
    }

    // –ó–º—ñ–Ω—é—î–º–æ —Å—Ç–∞—Ç—É—Å –º–æ–¥—É–ª—è
    module.status = _moduleStatuses.INITIALIZING;
    module.initTime = Date.now();

    // –ü—É–±–ª—ñ–∫—É—î–º–æ –ø–æ–¥—ñ—é –ø–æ—á–∞—Ç–∫—É —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
    _eventBus.publish('module-init-start', { moduleId });

    log(`–ü–æ—á–∞—Ç–æ–∫ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó –º–æ–¥—É–ª—è "${moduleId}"...`);

    // –ó–∞–ø—É—Å–∫–∞—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
    try {
      await module.initFunction();

      // –£—Å–ø—ñ—à–Ω–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è
      module.status = _moduleStatuses.SUCCESS;
      module.retryCount = 0;

      log(`–ú–æ–¥—É–ª—å "${moduleId}" —É—Å–ø—ñ—à–Ω–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–∏–π`, 'success');

      // –ü—É–±–ª—ñ–∫—É—î–º–æ –ø–æ–¥—ñ—é —É—Å–ø—ñ—à–Ω–æ—ó —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
      _eventBus.publish('module-init-success', { moduleId });

      // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–µ—Ä–≥—É –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è
      processInitQueue();

      return Promise.resolve();
    } catch (error) {
      // –ü–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
      module.status = _moduleStatuses.ERROR;
      module.lastError = error;

      log(`–ü–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó –º–æ–¥—É–ª—è "${moduleId}": ${error.message}`, 'error');

      // –ü—É–±–ª—ñ–∫—É—î–º–æ –ø–æ–¥—ñ—é –ø–æ–º–∏–ª–∫–∏ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
      _eventBus.publish('module-init-error', { moduleId, error });

      // –°–ø—Ä–æ–±—É—î–º–æ –ø–æ–≤—Ç–æ—Ä–∏—Ç–∏ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—é
      if (module.retryCount < _state.maxRetryAttempts) {
        module.retryCount++;
        module.status = _moduleStatuses.RETRY;

        const retryDelay = _state.retryTimeouts[Math.min(module.retryCount - 1, _state.retryTimeouts.length - 1)];

        log(`–ü–æ–≤—Ç–æ—Ä–Ω–∞ —Å–ø—Ä–æ–±–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó –º–æ–¥—É–ª—è "${moduleId}" —á–µ—Ä–µ–∑ ${retryDelay}ms (—Å–ø—Ä–æ–±–∞ ${module.retryCount}/${_state.maxRetryAttempts})`, 'warn');

        // –ü–ª–∞–Ω—É—î–º–æ –ø–æ–≤—Ç–æ—Ä–Ω—É —Å–ø—Ä–æ–±—É
        setTimeout(() => {
          scheduleModuleInitialization(moduleId);
        }, retryDelay);
      } else {
        log(`–í–∏—á–µ—Ä–ø–∞–Ω–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Å–ø—Ä–æ–± —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó –º–æ–¥—É–ª—è "${moduleId}"`, 'error');

        // –ü—É–±–ª—ñ–∫—É—î–º–æ –ø–æ–¥—ñ—é –∫—Ä–∏—Ç–∏—á–Ω–æ—ó –ø–æ–º–∏–ª–∫–∏
        _eventBus.publish('module-init-critical-error', { moduleId, error });

        // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞—Ç—É—Å–∏ –∑–∞–ª–µ–∂–Ω–∏—Ö –º–æ–¥—É–ª—ñ–≤
        updateDependentModules(moduleId);
      }

      return Promise.reject(error);
    }
  }

  /**
   * –û–Ω–æ–≤–ª—é—î —Å—Ç–∞—Ç—É—Å–∏ –º–æ–¥—É–ª—ñ–≤, —è–∫—ñ –∑–∞–ª–µ–∂–∞—Ç—å –≤—ñ–¥ –Ω–µ—ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ–≥–æ –º–æ–¥—É–ª—è
   * @param {string} failedModuleId - ID –º–æ–¥—É–ª—è, —è–∫–∏–π –Ω–µ –≤–¥–∞–ª–æ—Å—è —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É–≤–∞—Ç–∏
   */
  function updateDependentModules(failedModuleId) {
    // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –≤—Å—ñ –º–æ–¥—É–ª—ñ, —è–∫—ñ –∑–∞–ª–µ–∂–∞—Ç—å –≤—ñ–¥ –Ω–µ—ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ–≥–æ
    Object.keys(_state.modules).forEach(moduleId => {
      const module = _state.modules[moduleId];
      if (module.dependencies && module.dependencies.includes(failedModuleId)) {
        if (module.status !== _moduleStatuses.SUCCESS) {
          log(`–ú–æ–¥—É–ª—å "${moduleId}" –∑–∞–ª–µ–∂–∏—Ç—å –≤—ñ–¥ "${failedModuleId}", —è–∫–∏–π –Ω–µ –≤–¥–∞–ª–æ—Å—è —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É–≤–∞—Ç–∏`, 'warn');
          module.status = _moduleStatuses.ERROR;
          module.lastError = new Error(`–ö—Ä–∏—Ç–∏—á–Ω–∞ –∑–∞–ª–µ–∂–Ω—ñ—Å—Ç—å "${failedModuleId}" –Ω–µ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–∞`);

          // –û–±—Ä–æ–±–ª—è—î–º–æ –º–æ–¥—É–ª—ñ, —è–∫—ñ –∑–∞–ª–µ–∂–∞—Ç—å –≤—ñ–¥ —Ü—å–æ–≥–æ –º–æ–¥—É–ª—è
          updateDependentModules(moduleId);
        }
      }
    });
  }

  /**
   * –û–±—Ä–æ–±–ª—è—î —á–µ—Ä–≥—É –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
   */
  function processInitQueue() {
    // –ö–æ–ø—ñ—é—î–º–æ —á–µ—Ä–≥—É, —â–æ–± —É–Ω–∏–∫–Ω—É—Ç–∏ –ø—Ä–æ–±–ª–µ–º –ø—Ä–∏ —ó—ó –º–æ–¥–∏—Ñ—ñ–∫–∞—Ü—ñ—ó –≤ —Ü–∏–∫–ª—ñ
    const queue = [..._state.initQueue];
    _state.initQueue = [];

    queue.forEach(item => {
      // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –≤—Å—ñ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –∑–∞–¥–æ–≤–æ–ª–µ–Ω—ñ
      if (areDependenciesMet(item.moduleId)) {
        // –ó–∞–ø—É—Å–∫–∞—î–º–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—é –º–æ–¥—É–ª—è
        initializeModule(item.moduleId)
          .then(() => item.resolve())
          .catch(error => item.reject(error));
      } else {
        // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –µ–ª–µ–º–µ–Ω—Ç —É —á–µ—Ä–≥—É –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è
        _state.initQueue.push(item);
      }
    });
  }

  /**
   * –ü–ª–∞–Ω—É—î —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—é –º–æ–¥—É–ª—è –∑ —É—Ä–∞—Ö—É–≤–∞–Ω–Ω—è–º –ø—Ä—ñ–æ—Ä–∏—Ç–µ—Ç—É
   * @param {string} moduleId - ID –º–æ–¥—É–ª—è
   */
  function scheduleModuleInitialization(moduleId) {
    const module = _state.modules[moduleId];
    if (!module) return;

    // –ó–º—ñ–Ω—é—î–º–æ —Å—Ç–∞—Ç—É—Å –º–æ–¥—É–ª—è –Ω–∞ PENDING, —è–∫—â–æ –≤—ñ–Ω –Ω–µ –±—É–≤ SUCCESS
    if (module.status !== _moduleStatuses.SUCCESS) {
      module.status = _moduleStatuses.PENDING;
    }

    // –î–æ–¥–∞—î–º–æ –º–æ–¥—É–ª—å –¥–æ —á–µ—Ä–≥–∏ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó, —è–∫—â–æ –≤—Å—ñ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –∑–∞–¥–æ–≤–æ–ª–µ–Ω—ñ
    if (areDependenciesMet(moduleId)) {
      initializeModule(moduleId).catch(error => {
        log(`–ù–µ –≤–¥–∞–ª–æ—Å—è —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ –º–æ–¥—É–ª—å "${moduleId}": ${error.message}`, 'error');
      });
    } else {
      // –î–æ–¥–∞—î–º–æ –º–æ–¥—É–ª—å –¥–æ —á–µ—Ä–≥–∏ –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è
      _state.initQueue.push({
        moduleId,
        resolve: () => {},
        reject: () => {}
      });

      // –°–ø—Ä–æ–±—É—î–º–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ
      module.dependencies.forEach(depId => {
        if (_state.modules[depId] && _state.modules[depId].status === _moduleStatuses.PENDING) {
          scheduleModuleInitialization(depId);
        }
      });
    }
  }

  /**
   * –ó–∞–ø—É—Å–∫–∞—î –ø—Ä–æ—Ü–µ—Å —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó –≤—Å—ñ—Ö –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–∏—Ö –º–æ–¥—É–ª—ñ–≤
   * @returns {Promise} –ü—Ä–æ–º—ñ—Å, —â–æ –≤–∏—Ä—ñ—à—É—î—Ç—å—Å—è –ø—ñ—Å–ª—è —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó –≤—Å—ñ—Ö –º–æ–¥—É–ª—ñ–≤
   */
  async function initializeAllModules() {
    if (_state.isInitializing) {
      log("–Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –≤–∂–µ –∑–∞–ø—É—â–µ–Ω–∞", 'warn');
      return;
    }

    if (_state.isInitialized) {
      log("–î–æ–¥–∞—Ç–æ–∫ –≤–∂–µ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ", 'warn');
      return;
    }

    log("–ü–æ—á–∞—Ç–æ–∫ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó –≤—Å—ñ—Ö –º–æ–¥—É–ª—ñ–≤");
    _state.isInitializing = true;

    // –ü–æ–∫–∞–∑—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
    showLoadingIndicator("–Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –¥–æ–¥–∞—Ç–∫—É...");

    // –û—Ç—Ä–∏–º—É—î–º–æ –≤—Å—ñ –º–æ–¥—É–ª—ñ –≤ –ø–æ—Ä—è–¥–∫—É —ó—Ö –ø—Ä—ñ–æ—Ä–∏—Ç–µ—Ç—É
    const moduleIds = Object.keys(_state.modules)
      .sort((a, b) => _state.modules[a].priority - _state.modules[b].priority);

    let initPromises = [];

    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ –º–æ–¥—É–ª—ñ –≤ –ø–æ—Ä—è–¥–∫—É –ø—Ä—ñ–æ—Ä–∏—Ç–µ—Ç—É
    for (const moduleId of moduleIds) {
      const module = _state.modules[moduleId];

      // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ
      if (areDependenciesMet(moduleId)) {
        initPromises.push(initializeModule(moduleId));
      } else {
        // –î–æ–¥–∞—î–º–æ –º–æ–¥—É–ª—å –¥–æ —á–µ—Ä–≥–∏ –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è
        _state.initQueue.push({
          moduleId,
          resolve: () => {},
          reject: () => {}
        });
      }
    }

    try {
      await Promise.all(initPromises);

      // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Å—Ç–∞—Ç—É—Å –≤—Å—ñ—Ö –º–æ–¥—É–ª—ñ–≤
      const allModulesInitialized = moduleIds.every(
        moduleId => _state.modules[moduleId].status === _moduleStatuses.SUCCESS
      );

      if (allModulesInitialized) {
        _state.isInitialized = true;
        _state.isInitializing = false;

        log("–í—Å—ñ –º–æ–¥—É–ª—ñ —É—Å–ø—ñ—à–Ω–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω—ñ", 'success');

        // –ü—Ä–∏—Ö–æ–≤—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
        hideLoadingIndicator();

        // –ü—É–±–ª—ñ–∫—É—î–º–æ –ø–æ–¥—ñ—é —É—Å–ø—ñ—à–Ω–æ—ó —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
        _eventBus.publish('app-init-success', { modules: _state.modules });

        return Promise.resolve();
      } else {
        _state.isInitializing = false;

        const failedModules = moduleIds.filter(
          moduleId => _state.modules[moduleId].status !== _moduleStatuses.SUCCESS
        );

        log(`–ù–µ –≤–¥–∞–ª–æ—Å—è —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ –≤—Å—ñ –º–æ–¥—É–ª—ñ. –ü—Ä–æ–≤–∞–ª–µ–Ω—ñ: ${failedModules.join(", ")}`, 'error');

        // –ü—Ä–∏—Ö–æ–≤—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —ñ –ø–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É
        hideLoadingIndicator();
        showErrorMessage("–î–µ—è–∫—ñ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∏ –¥–æ–¥–∞—Ç–∫—É –Ω–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏. –°–ø—Ä–æ–±—É–π—Ç–µ –æ–Ω–æ–≤–∏—Ç–∏ —Å—Ç–æ—Ä—ñ–Ω–∫—É.");

        // –ü—É–±–ª—ñ–∫—É—î–º–æ –ø–æ–¥—ñ—é –ø–æ–º–∏–ª–∫–∏ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
        _eventBus.publish('app-init-error', { modules: _state.modules, failedModules });

        return Promise.reject(new Error(`–Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –ü—Ä–æ–≤–∞–ª–µ–Ω—ñ –º–æ–¥—É–ª—ñ: ${failedModules.join(", ")}`));
      }
    } catch (error) {
      _state.isInitializing = false;

      log(`–ü–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó –¥–æ–¥–∞—Ç–∫—É: ${error.message}`, 'error');

      // –ü—Ä–∏—Ö–æ–≤—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —ñ –ø–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É
      hideLoadingIndicator();
      showErrorMessage("–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –¥–æ–¥–∞—Ç–æ–∫. –°–ø—Ä–æ–±—É–π—Ç–µ –æ–Ω–æ–≤–∏—Ç–∏ —Å—Ç–æ—Ä—ñ–Ω–∫—É.");

      // –ü—É–±–ª—ñ–∫—É—î–º–æ –ø–æ–¥—ñ—é –ø–æ–º–∏–ª–∫–∏ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
      _eventBus.publish('app-init-critical-error', { error });

      return Promise.reject(error);
    }
  }

  /**
   * –£–Ω—ñ—Ñ—ñ–∫–æ–≤–∞–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ —Ä—ñ–∑–Ω–∏—Ö –¥–∂–µ—Ä–µ–ª
   * @returns {Promise<string|null>} ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∞–±–æ null
   */
  async function getUserId() {
    if (_userId) {
      return _userId;
    }

    log("–°–ø—Ä–æ–±–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ —É—Å—ñ—Ö –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –¥–∂–µ—Ä–µ–ª");

    // –ü—Ä—ñ–æ—Ä–∏—Ç–µ—Ç–Ω—ñ –¥–∂–µ—Ä–µ–ª–∞ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    const sources = [
      // 1. Telegram WebApp
      async () => {
        try {
          if (window.Telegram && window.Telegram.WebApp &&
              window.Telegram.WebApp.initDataUnsafe &&
              window.Telegram.WebApp.initDataUnsafe.user &&
              window.Telegram.WebApp.initDataUnsafe.user.id) {

            const id = window.Telegram.WebApp.initDataUnsafe.user.id.toString();
            log(`–û—Ç—Ä–∏–º–∞–Ω–æ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ Telegram WebApp: ${id}`, 'success');
            return id;
          }
        } catch (e) {
          log(`–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è ID –∑ Telegram WebApp: ${e.message}`, 'warn');
        }
        return null;
      },

      // 2. WinixAPI
      async () => {
        try {
          if (window.WinixAPI && typeof window.WinixAPI.getUserId === 'function') {
            const id = window.WinixAPI.getUserId();
            if (id && id !== 'undefined' && id !== 'null') {
              log(`–û—Ç—Ä–∏–º–∞–Ω–æ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ WinixAPI: ${id}`, 'success');
              return id;
            }
          }
        } catch (e) {
          log(`–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è ID –∑ WinixAPI: ${e.message}`, 'warn');
        }
        return null;
      },

      // 3. localStorage
      async () => {
        try {
          const id = localStorage.getItem('telegram_user_id') || localStorage.getItem('user_id');
          if (id && id !== 'undefined' && id !== 'null') {
            log(`–û—Ç—Ä–∏–º–∞–Ω–æ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ localStorage: ${id}`, 'success');
            return id;
          }
        } catch (e) {
          log(`–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è ID –∑ localStorage: ${e.message}`, 'warn');
        }
        return null;
      },

      // 4. DOM –µ–ª–µ–º–µ–Ω—Ç–∏
      async () => {
        try {
          // –°–ø–æ—á–∞—Ç–∫—É –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –µ–ª–µ–º–µ–Ω—Ç –≤ —Ö–µ–¥–µ—Ä—ñ
          const headerUserIdElement = document.getElementById('header-user-id');
          if (headerUserIdElement && headerUserIdElement.textContent) {
            const id = headerUserIdElement.textContent.trim();
            if (id && id !== 'undefined' && id !== 'null') {
              log(`–û—Ç—Ä–∏–º–∞–Ω–æ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ DOM (header): ${id}`, 'success');
              return id;
            }
          }

          // –ü–æ—Ç—ñ–º –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –ø—Ä–∏—Ö–æ–≤–∞–Ω–∏–π –µ–ª–µ–º–µ–Ω—Ç
          const userIdElement = document.getElementById('user-id');
          if (userIdElement && userIdElement.textContent) {
            const id = userIdElement.textContent.trim();
            if (id && id !== 'undefined' && id !== 'null') {
              log(`–û—Ç—Ä–∏–º–∞–Ω–æ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ DOM (hidden): ${id}`, 'success');
              return id;
            }
          }
        } catch (e) {
          log(`–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è ID –∑ DOM: ${e.message}`, 'warn');
        }
        return null;
      },

      // 5. URL –ø–∞—Ä–∞–º–µ—Ç—Ä–∏
      async () => {
        try {
          const urlParams = new URLSearchParams(window.location.search);
          const id = urlParams.get('id') || urlParams.get('user_id') || urlParams.get('telegram_id');
          if (id && id !== 'undefined' && id !== 'null') {
            log(`–û—Ç—Ä–∏–º–∞–Ω–æ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ URL –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤: ${id}`, 'success');
            return id;
          }
        } catch (e) {
          log(`–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è ID –∑ URL: ${e.message}`, 'warn');
        }
        return null;
      }
    ];

    // –ü–µ—Ä–µ–±–∏—Ä–∞—î–º–æ –≤—Å—ñ –¥–∂–µ—Ä–µ–ª–∞ –ø–æ —á–µ—Ä–∑—ñ, –ø–æ–∫–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–º–æ ID
    for (const source of sources) {
      const id = await source();
      if (id) {
        _userId = id;

        // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ ID –≤ localStorage –¥–ª—è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –≤ –º–∞–π–±—É—Ç–Ω—å–æ–º—É
        try {
          localStorage.setItem('telegram_user_id', id);
        } catch (e) {
          log(`–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–±–µ—Ä–µ–≥—Ç–∏ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤ localStorage: ${e.message}`, 'warn');
        }

        // –ü—É–±–ª—ñ–∫—É—î–º–æ –ø–æ–¥—ñ—é –æ—Ç—Ä–∏–º–∞–Ω–Ω—è ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        _eventBus.publish('user-id-received', { userId: id });

        return id;
      }
    }

    // –Ø–∫—â–æ –Ω–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ ID –∑ –∂–æ–¥–Ω–æ–≥–æ –¥–∂–µ—Ä–µ–ª–∞
    log("–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ –∂–æ–¥–Ω–æ–≥–æ –¥–∂–µ—Ä–µ–ª–∞", 'error');

    // –ü—É–±–ª—ñ–∫—É—î–º–æ –ø–æ–¥—ñ—é –ø–æ–º–∏–ª–∫–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    _eventBus.publish('user-id-error', { error: new Error("ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ") });

    return null;
  }

  /**
   * –ü–æ–∫–∞–∑—É—î —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
   * @param {string} message - –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è
   */
  function showLoadingIndicator(message = "–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...") {
    if (typeof window.showLoading === 'function') {
      window.showLoading();
      return;
    }

    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —ñ—Å–Ω—É—î –≤–ª–∞—Å–Ω–∏–π —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä
    let loader = document.getElementById('app-loader');

    if (!loader) {
      // –°—Ç–≤–æ—Ä—é—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
      loader = document.createElement('div');
      loader.id = 'app-loader';
      loader.innerHTML = `
        <div class="loader-overlay">
          <div class="loader-container">
            <div class="loader-spinner"></div>
            <div class="loader-message">${message}</div>
          </div>
        </div>
      `;

      // –î–æ–¥–∞—î–º–æ —Å—Ç–∏–ª—ñ –¥–ª—è —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞
      const style = document.createElement('style');
      style.textContent = `
        .loader-overlay {
          position: fixed;
          top: 0;
          left: 0;
          right: 0;
          bottom: 0;
          background-color: rgba(0, 0, 0, 0.5);
          z-index: 9999;
          display: flex;
          justify-content: center;
          align-items: center;
        }
        .loader-container {
          background-color: white;
          padding: 20px;
          border-radius: 10px;
          box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
          text-align: center;
        }
        .loader-spinner {
          border: 4px solid #f3f3f3;
          border-top: 4px solid #3498db;
          border-radius: 50%;
          width: 30px;
          height: 30px;
          animation: spin 1s linear infinite;
          margin: 0 auto 10px;
        }
        .loader-message {
          font-family: Arial, sans-serif;
          font-size: 14px;
          color: #333;
        }
        @keyframes spin {
          0% { transform: rotate(0deg); }
          100% { transform: rotate(360deg); }
        }
      `;

      document.head.appendChild(style);
      document.body.appendChild(loader);
    } else {
      // –û–Ω–æ–≤–ª—é—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
      const messageElement = loader.querySelector('.loader-message');
      if (messageElement) {
        messageElement.textContent = message;
      }

      // –ü–æ–∫–∞–∑—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä
      loader.style.display = 'block';
    }
  }

  /**
   * –ü—Ä–∏—Ö–æ–≤—É—î —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
   */
  function hideLoadingIndicator() {
    if (typeof window.hideLoading === 'function') {
      window.hideLoading();
      return;
    }

    // –ü—Ä–∏—Ö–æ–≤—É—î–º–æ –≤–ª–∞—Å–Ω–∏–π —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä
    const loader = document.getElementById('app-loader');
    if (loader) {
      loader.style.display = 'none';
    }
  }

  /**
   * –ü–æ–∫–∞–∑—É—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É
   * @param {string} message - –¢–µ–∫—Å—Ç –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
   */
  function showErrorMessage(message) {
    if (typeof window.showToast === 'function') {
      window.showToast(message, 'error');
      return;
    }

    // –°—Ç–≤–æ—Ä—é—î–º–æ –≤–ª–∞—Å–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É
    const errorElement = document.createElement('div');
    errorElement.className = 'error-message';
    errorElement.innerHTML = `
      <div class="error-container">
        <div class="error-icon">‚ö†Ô∏è</div>
        <div class="error-text">${message}</div>
        <div class="error-close">√ó</div>
      </div>
    `;

    // –î–æ–¥–∞—î–º–æ —Å—Ç–∏–ª—ñ
    const style = document.createElement('style');
    style.textContent = `
      .error-message {
        position: fixed;
        top: 20px;
        left: 50%;
        transform: translateX(-50%);
        background-color: #f44336;
        color: white;
        padding: 10px 20px;
        border-radius: 5px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        z-index: 10000;
        max-width: 90%;
        animation: fadeIn 0.3s;
      }
      .error-container {
        display: flex;
        align-items: center;
      }
      .error-icon {
        margin-right: 10px;
        font-size: 20px;
      }
      .error-text {
        flex-grow: 1;
        font-family: Arial, sans-serif;
        font-size: 14px;
      }
      .error-close {
        cursor: pointer;
        font-size: 20px;
        margin-left: 10px;
      }
      @keyframes fadeIn {
        from { opacity: 0; transform: translate(-50%, -20px); }
        to { opacity: 1; transform: translate(-50%, 0); }
      }
    `;

    document.head.appendChild(style);
    document.body.appendChild(errorElement);

    // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –∫–ª—ñ–∫—É –¥–ª—è –∑–∞–∫—Ä–∏—Ç—Ç—è
    const closeButton = errorElement.querySelector('.error-close');
    if (closeButton) {
      closeButton.addEventListener('click', function() {
        document.body.removeChild(errorElement);
      });
    }

    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –∑–∞–∫—Ä–∏–≤–∞—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
    setTimeout(() => {
      if (document.body.contains(errorElement)) {
        document.body.removeChild(errorElement);
      }
    }, 5000);
  }

  /**
   * –†–µ—î—Å—Ç—Ä—É—î —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ñ –º–æ–¥—É–ª—ñ –∑–∞—Å—Ç–æ—Å—É–Ω–∫—É
   */
  function registerStandardModules() {
    // –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –º–æ–¥—É–ª—è Telegram WebApp
    registerModule('telegram', async function() {
      if (!window.Telegram || !window.Telegram.WebApp) {
        throw new Error("Telegram WebApp –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ");
      }

      log("–Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è Telegram WebApp");

      // –ß–µ–∫–∞—î–º–æ –Ω–∞ –≥–æ—Ç–æ–≤–Ω—ñ—Å—Ç—å Telegram WebApp
      return new Promise((resolve, reject) => {
        // –Ø–∫—â–æ WebApp –≤–∂–µ –≥–æ—Ç–æ–≤–∏–π, –ø—Ä–æ—Å—Ç–æ –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        if (window.Telegram.WebApp.initDataUnsafe &&
            window.Telegram.WebApp.initDataUnsafe.user) {
          log("Telegram WebApp –≤–∂–µ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–∏–π", 'success');
          resolve();
          return;
        }

        // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Ç–∞–π–º–∞—É—Ç –Ω–∞ –≤–∏–ø–∞–¥–æ–∫, —è–∫—â–æ —â–æ—Å—å –ø—ñ–¥–µ –Ω–µ —Ç–∞–∫
        const timeout = setTimeout(() => {
          window.Telegram.WebApp.offEvent('viewportChanged', onViewportChanged);
          reject(new Error("–¢–∞–π–º–∞—É—Ç —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó Telegram WebApp"));
        }, 5000);

        // –û–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ—ó –∑–º—ñ–Ω–∏ –≤—å—é–ø–æ—Ä—Ç–∞ (—ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä —Ç–æ–≥–æ, —â–æ WebApp —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–∏–π)
        function onViewportChanged() {
          clearTimeout(timeout);
          window.Telegram.WebApp.offEvent('viewportChanged', onViewportChanged);
          log("Telegram WebApp —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–∏–π (–æ—Ç—Ä–∏–º–∞–Ω–æ viewportChanged)", 'success');
          resolve();
        }

        // –ü—ñ–¥–ø–∏—Å—É—î–º–æ—Å—è –Ω–∞ –ø–æ–¥—ñ—é –∑–º—ñ–Ω–∏ –≤—å—é–ø–æ—Ä—Ç–∞
        window.Telegram.WebApp.onEvent('viewportChanged', onViewportChanged);

        // –ü–æ–≤—ñ–¥–æ–º–ª—è—î–º–æ Telegram WebApp –ø—Ä–æ –≥–æ—Ç–æ–≤–Ω—ñ—Å—Ç—å
        window.Telegram.WebApp.ready();
        window.Telegram.WebApp.expand();
      });
    });

    // –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –º–æ–¥—É–ª—è Core
    registerModule('core', async function() {
      if (!window.WinixCore) {
        throw new Error("–ú–æ–¥—É–ª—å WinixCore –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ");
      }

      log("–Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è WinixCore");

      // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –≤–∂–µ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–∏–π
      if (window.WinixCore.isInitialized && window.WinixCore.isInitialized()) {
        log("WinixCore –≤–∂–µ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–∏–π", 'success');
        return;
      }

      // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ Core –∑ –æ—Ç—Ä–∏–º–∞–Ω–∏–º ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
      const userId = await getUserId();
      if (!userId) {
        throw new Error("–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–ª—è —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó Core");
      }

      return new Promise((resolve, reject) => {
        try {
          window.WinixCore.init({
            debug: true,
            userId: userId
          }).then(() => {
            log("WinixCore —É—Å–ø—ñ—à–Ω–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–∏–π", 'success');
            resolve();
          }).catch(error => {
            reject(new Error(`–ü–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó WinixCore: ${error.message}`));
          });
        } catch (error) {
          reject(new Error(`–ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó WinixCore: ${error.message}`));
        }
      });
    });

    // –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –º–æ–¥—É–ª—è API
    registerModule('api', async function() {
      if (!window.WinixAPI) {
        if (typeof window.apiRequest === 'function') {
          log("–ó–Ω–∞–π–¥–µ–Ω–æ —Ñ—É–Ω–∫—Ü—ñ—é apiRequest, –∞–ª–µ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ WinixAPI", 'warn');
        }

        throw new Error("–ú–æ–¥—É–ª—å WinixAPI –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ");
      }

      log("–Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è WinixAPI");

      // –û—Ç—Ä–∏–º—É—î–º–æ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–ª—è API
      const userId = await getUserId();
      if (!userId) {
        throw new Error("–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–ª—è —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó API");
      }

      // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –±–∞–∑–æ–≤—ñ —Ñ—É–Ω–∫—Ü—ñ—ó API
      if (typeof window.WinixAPI.getUserData !== 'function') {
        throw new Error("WinixAPI –Ω–µ –º—ñ—Å—Ç–∏—Ç—å –Ω–µ–æ–±—Ö—ñ–¥–Ω–∏—Ö –º–µ—Ç–æ–¥—ñ–≤");
      }

      // –í–∏–∫–æ–Ω—É—î–º–æ —Ç–µ—Å—Ç–æ–≤–∏–π –∑–∞–ø–∏—Ç –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –ø—Ä–∞—Ü–µ–∑–¥–∞—Ç–Ω–æ—Å—Ç—ñ API
      return new Promise((resolve, reject) => {
        try {
          // –ù–∞–º–∞–≥–∞—î–º–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
          window.WinixAPI.getUserData(true).then(function(response) {
            if (response && (response.status === 'success' || response.source)) {
              log("WinixAPI —É—Å–ø—ñ—à–Ω–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–∏–π", 'success');
              resolve();
            } else {
              log("WinixAPI –ø–æ–≤–µ—Ä–Ω—É–≤ –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω—ñ –¥–∞–Ω—ñ", 'warn');
              // –í–≤–∞–∂–∞—î–º–æ, —â–æ API –≤—Å–µ –æ–¥–Ω–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–∏–π
              resolve();
            }
          }).catch(function(error) {
            log(`–ü–æ–º–∏–ª–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∑–∞–ø–∏—Ç—É WinixAPI: ${error.message}`, 'warn');
            // –í–≤–∞–∂–∞—î–º–æ, —â–æ API –≤—Å–µ –æ–¥–Ω–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–∏–π
            resolve();
          });
        } catch (error) {
          reject(new Error(`–ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó WinixAPI: ${error.message}`));
        }
      });
    });

    // –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –º–æ–¥—É–ª—è Referrals
    registerModule('referrals', async function() {
      // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –ø–æ—Ç—Ä—ñ–±–µ–Ω —Ü–µ–π –º–æ–¥—É–ª—å –Ω–∞ –ø–æ—Ç–æ—á–Ω—ñ–π —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ
      const isReferralPage = window.location.pathname.includes('referral') ||
                            window.location.pathname.includes('invite');

      if (!isReferralPage) {
        log("–°—Ç–æ—Ä—ñ–Ω–∫–∞ –Ω–µ –ø–æ—Ç—Ä–µ–±—É—î —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó –º–æ–¥—É–ª—è Referrals, –ø—Ä–æ–ø—É—Å–∫–∞—î–º–æ", 'success');
        return;
      }

      if (!window.ReferralIntegration || !window.initReferralSystem) {
        throw new Error("–ú–æ–¥—É–ª—å ReferralIntegration –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ");
      }

      log("–Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è ReferralIntegration");

      return new Promise((resolve, reject) => {
        try {
          window.initReferralSystem().then(function() {
            log("ReferralIntegration —É—Å–ø—ñ—à–Ω–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–∏–π", 'success');
            resolve();
          }).catch(function(error) {
            reject(new Error(`–ü–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó ReferralIntegration: ${error.message}`));
          });
        } catch (error) {
          reject(new Error(`–ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó ReferralIntegration: ${error.message}`));
        }
      });
    });
  }

  /**
   * –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –¥–æ–¥–∞—Ç–∫—É
   * @returns {Promise} –ü—Ä–æ–º—ñ—Å, —â–æ –≤–∏—Ä—ñ—à—É—î—Ç—å—Å—è –ø—ñ—Å–ª—è —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
   */
  async function init() {
    log("–ü–æ—á–∞—Ç–æ–∫ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó –¥–æ–¥–∞—Ç–∫—É");

    // –†–µ—î—Å—Ç—Ä—É—î–º–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ñ –º–æ–¥—É–ª—ñ
    registerStandardModules();

    // –ó–∞–ø—É—Å–∫–∞—î–º–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—é
    return initializeAllModules()
      .then(() => {
        // –î–æ–¥–∞—Ç–∫–æ–≤—ñ –¥—ñ—ó –ø—ñ—Å–ª—è —É—Å–ø—ñ—à–Ω–æ—ó —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
        log("–î–æ–¥–∞—Ç–æ–∫ —É—Å–ø—ñ—à–Ω–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ", 'success');

        // –ü—É–±–ª—ñ–∫—É—î–º–æ –ø–æ–¥—ñ—é –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
        _eventBus.publish('app-ready', {});

        // –í–∏–¥–∞–ª—è—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ beforeunload
        window.removeEventListener('beforeunload', handleBeforeUnload);

        return true;
      })
      .catch(error => {
        log(`–ù–µ –≤–¥–∞–ª–æ—Å—è —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ –¥–æ–¥–∞—Ç–æ–∫: ${error.message}`, 'error');

        // –ü—É–±–ª—ñ–∫—É—î–º–æ –ø–æ–¥—ñ—é –ø–æ–º–∏–ª–∫–∏ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
        _eventBus.publish('app-init-failed', { error });

        return false;
      });
  }

  /**
   * –û–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ—ó beforeunload
   * @param {Event} event - –ü–æ–¥—ñ—è beforeunload
   */
  function handleBeforeUnload(event) {
    if (_state.isInitializing) {
      // –Ø–∫—â–æ –π–¥–µ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è, –ø—Ä–æ—Å–∏–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ –∑–∞–∫—Ä–∏—Ç—Ç—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏
      event.preventDefault();
      event.returnValue = '–î–æ–¥–∞—Ç–æ–∫ —â–µ –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î—Ç—å—Å—è. –í–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ, —â–æ —Ö–æ—á–µ—Ç–µ –∑–∞–ª–∏—à–∏—Ç–∏ —Å—Ç–æ—Ä—ñ–Ω–∫—É?';
    }
  }

  // –†–µ—î—Å—Ç—Ä—É—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ beforeunload
  window.addEventListener('beforeunload', handleBeforeUnload);

  // –†–µ—î—Å—Ç—Ä—É—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ DOMContentLoaded
  document.addEventListener('DOMContentLoaded', function() {
    log("DOM –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ, –ø–æ—á–∏–Ω–∞—î–º–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—é");
    init();
  });

  // –ó–∞–ø—É—Å–∫–∞—î–º–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—é, —è–∫—â–æ DOM –≤–∂–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ
  if (document.readyState === 'complete' || document.readyState === 'interactive') {
    log("DOM –≤–∂–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ, –ø–æ—á–∏–Ω–∞—î–º–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—é");
    init();
  }

  // –ï–∫—Å–ø–æ—Ä—Ç—É—î–º–æ –ø—É–±–ª—ñ—á–Ω–µ API
  window.AppInitializer = {
    // –û—Å–Ω–æ–≤–Ω—ñ –º–µ—Ç–æ–¥–∏
    init,
    registerModule,
    getUserId,

    // –ú–µ—Ç–æ–¥–∏ –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ –ø–æ–¥—ñ—è–º–∏
    onEvent: function(event, callback) {
      _eventBus.subscribe(event, callback);
    },
    offEvent: function(event, callback) {
      _eventBus.unsubscribe(event, callback);
    },

    // –ú–µ—Ç–æ–¥–∏ –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ UI
    showLoadingIndicator,
    hideLoadingIndicator,
    showErrorMessage,

    // –ú–µ—Ç–æ–¥ –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Å—Ç–∞—Ç—É—Å—É —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
    getStatus: function() {
      return {
        isInitialized: _state.isInitialized,
        isInitializing: _state.isInitializing,
        modules: Object.keys(_state.modules).map(moduleId => {
          const module = _state.modules[moduleId];
          return {
            id: module.id,
            status: module.status,
            dependencies: module.dependencies,
            priority: module.priority,
            retryCount: module.retryCount,
            initTime: module.initTime
          };
        })
      };
    }
  };
})();