/**
 * api-id-patch.js
 *
 * –ü–∞—Ç—á –¥–ª—è –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –ø—Ä–æ–±–ª–µ–º –∑ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤ API —Ç–∞ –º–æ–¥—É–ª—ñ —Å—Ç–µ–π–∫—ñ–Ω–≥—É
 */

(function() {
    console.log("üîÑ –ó–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è –ø–∞—Ç—á—ñ–≤ –¥–ª—è API —Ç–∞ —Å—Ç–µ–π–∫—ñ–Ω–≥—É...");

    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ –º–æ–¥—É–ª—å —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è ID
    if (!window.UserIdManager) {
        console.error("‚ùå –ú–æ–¥—É–ª—å UserIdManager –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ! –°–ø–æ—á–∞—Ç–∫—É –ø—ñ–¥–∫–ª—é—á—ñ—Ç—å user-id-manager.js");
        return;
    }

    /**
     * –ü–∞—Ç—á –¥–ª—è WinixAPI.getStakingData
     */
    function patchStakingApi() {
        if (window.WinixAPI && window.WinixAPI.getStakingData) {
            const originalGetStakingData = window.WinixAPI.getStakingData;

            window.WinixAPI.getStakingData = async function() {
                // –û—Ç—Ä–∏–º—É—î–º–æ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —á–µ—Ä–µ–∑ –º–µ–Ω–µ–¥–∂–µ—Ä
                const userId = window.UserIdManager.getUserId();

                if (!userId) {
                    console.error("üö´ –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–ª—è –∑–∞–ø–∏—Ç—É —Å—Ç–µ–π–∫—ñ–Ω–≥—É!");
                    return { status: 'error', message: 'ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ' };
                }

                console.log(`üîÑ –ó–∞–ø–∏—Ç –Ω–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö —Å—Ç–µ–π–∫—ñ–Ω–≥—É –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ ${userId}`);

                try {
                    // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω—É —Ñ—É–Ω–∫—Ü—ñ—é, –∞–ª–µ –∑ –ø—Ä–∞–≤–∏–ª—å–Ω–∏–º ID
                    return await originalGetStakingData();
                } catch (error) {
                    console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö —Å—Ç–µ–π–∫—ñ–Ω–≥—É:", error);
                    return { status: 'error', message: error.message || '–ü–æ–º–∏–ª–∫–∞ –∑–∞–ø–∏—Ç—É –¥–∞–Ω–∏—Ö —Å—Ç–µ–π–∫—ñ–Ω–≥—É' };
                }
            };

            console.log("‚úÖ –§—É–Ω–∫—Ü—ñ—é WinixAPI.getStakingData —É—Å–ø—ñ—à–Ω–æ –ø–∞—Ç—á–µ–Ω–æ");
        }
    }

    /**
     * –ü–∞—Ç—á –¥–ª—è WinixStakingSystem
     */
    function patchStakingSystem() {
        if (window.WinixStakingSystem) {
            // –ü–∞—Ç—á –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö —Å—Ç–µ–π–∫—ñ–Ω–≥—É
            if (window.WinixStakingSystem.getStakingData) {
                const originalGetStakingData = window.WinixStakingSystem.getStakingData;

                window.WinixStakingSystem.getStakingData = function() {
                    // –û–Ω–æ–≤–ª—é—î–º–æ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤ DOM –ø–µ—Ä–µ–¥ –∑–∞–ø–∏—Ç–æ–º
                    const userId = window.UserIdManager.getUserId();
                    if (userId) {
                        window.UserIdManager.updateDomElements(userId);
                    }

                    return originalGetStakingData();
                };

                console.log("‚úÖ –§—É–Ω–∫—Ü—ñ—é WinixStakingSystem.getStakingData —É—Å–ø—ñ—à–Ω–æ –ø–∞—Ç—á–µ–Ω–æ");
            }

            // –ü–∞—Ç—á –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å—Ç–µ–π–∫—ñ–Ω–≥—É
            if (window.WinixStakingSystem.createStaking) {
                const originalCreateStaking = window.WinixStakingSystem.createStaking;

                window.WinixStakingSystem.createStaking = async function(amount, period) {
                    // –û–Ω–æ–≤–ª—é—î–º–æ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤ DOM –ø–µ—Ä–µ–¥ –∑–∞–ø–∏—Ç–æ–º
                    const userId = window.UserIdManager.getUserId();
                    if (userId) {
                        window.UserIdManager.updateDomElements(userId);
                    }

                    return await originalCreateStaking(amount, period);
                };

                console.log("‚úÖ –§—É–Ω–∫—Ü—ñ—é WinixStakingSystem.createStaking —É—Å–ø—ñ—à–Ω–æ –ø–∞—Ç—á–µ–Ω–æ");
            }
        }
    }

    /**
     * –ü–∞—Ç—á –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è DOM –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ ID –ø–µ—Ä–µ–¥ –∫—Ä–∏—Ç–∏—á–Ω–∏–º–∏ –æ–ø–µ—Ä–∞—Ü—ñ—è–º–∏
     */
    function setupDomObserver() {
        // –°–ø–æ—Å—Ç–µ—Ä–µ–∂–µ–Ω–Ω—è –∑–∞ –∑–º—ñ–Ω–∞–º–∏ –≤ DOM –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è ID
        const observer = new MutationObserver(function(mutations) {
            mutations.forEach(function(mutation) {
                if (mutation.type === 'childList' || mutation.type === 'attributes') {
                    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –±—É–ª–∏ –¥–æ–¥–∞–Ω—ñ –∞–±–æ –∑–º—ñ–Ω–µ–Ω—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ –∑ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
                    const idElements = document.querySelectorAll('#user-id, .user-id-value, [data-user-id]');
                    if (idElements.length > 0) {
                        const userId = window.UserIdManager.getUserId();
                        if (userId) {
                            window.UserIdManager.updateDomElements(userId);
                        }
                    }
                }
            });
        });

        // –°–ø–æ—Å—Ç–µ—Ä—ñ–≥–∞—î–º–æ –∑–∞ –∑–º—ñ–Ω–∞–º–∏ –≤ —É—Å—å–æ–º—É –¥–æ–∫—É–º–µ–Ω—Ç—ñ
        observer.observe(document.body, {
            childList: true,
            subtree: true,
            attributes: true,
            attributeFilter: ['id', 'class', 'data-user-id']
        });

        console.log("‚úÖ –°–ø–æ—Å—Ç–µ—Ä–µ–∂–µ–Ω–Ω—è –∑–∞ DOM –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è ID —É—Å–ø—ñ—à–Ω–æ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–æ");
    }

    /**
     * –ü–∞—Ç—á –¥–ª—è —Ñ—É–Ω–∫—Ü—ñ–π –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó
     */
    function patchNavigation() {
        // –ü–∞—Ç—á –¥–ª—è window.navigateTo
        if (typeof window.navigateTo === 'function') {
            const originalNavigateTo = window.navigateTo;

            window.navigateTo = function(page) {
                // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –ø–µ—Ä–µ–¥ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—î—é
                const userId = window.UserIdManager.getUserId();
                if (userId) {
                    window.UserIdManager.saveUserId(userId);

                    // –î–æ–¥–∞—î–º–æ ID –¥–æ URL, —è–∫—â–æ –π–æ–≥–æ —Ç–∞–º —â–µ –Ω–µ–º–∞—î
                    if (page.indexOf('?') === -1) {
                        page += `?id=${userId}`;
                    } else if (page.indexOf('id=') === -1) {
                        page += `&id=${userId}`;
                    }
                }

                // –í–∏–∫–ª–∏–∫–∞—î–º–æ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω—É —Ñ—É–Ω–∫—Ü—ñ—é –∑ –º–æ–¥–∏—Ñ—ñ–∫–æ–≤–∞–Ω–æ—é —Å—Ç–æ—Ä—ñ–Ω–∫–æ—é
                return originalNavigateTo(page);
            };

            console.log("‚úÖ –§—É–Ω–∫—Ü—ñ—é window.navigateTo —É—Å–ø—ñ—à–Ω–æ –ø–∞—Ç—á–µ–Ω–æ");
        }
    }

    /**
     * –û—Å–Ω–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó –ø–∞—Ç—á—ñ–≤
     */
    function init() {
        // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ –º–æ–¥—É–ª—å —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è ID
        window.UserIdManager.init();

        // –î–æ–¥–∞—î–º–æ –ø–∞—Ç—á—ñ –¥–ª—è —Ä—ñ–∑–Ω–∏—Ö –º–æ–¥—É–ª—ñ–≤
        patchStakingApi();
        patchStakingSystem();
        patchNavigation();
        setupDomObserver();

        // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è ID –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
        window.addEventListener('load', function() {
            const userId = window.UserIdManager.getUserId();
            if (userId) {
                console.log("üîÑ –û–Ω–æ–≤–ª–µ–Ω–Ω—è ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ –ø—ñ—Å–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è:", userId);
                window.UserIdManager.updateDomElements(userId);
            }
        });

        console.log("‚úÖ –ü–∞—Ç—á—ñ —É—Å–ø—ñ—à–Ω–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ");
    }

    // –ó–∞–ø—É—Å–∫–∞—î–º–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—é
    init();
})();