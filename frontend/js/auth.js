/**
 * auth.js v2.0 - –£–¥–æ—Å–∫–æ–Ω–∞–ª–µ–Ω–∏–π –º–æ–¥—É–ª—å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó –¥–ª—è WINIX
 *
 * –¶–µ–π –º–æ–¥—É–ª—å –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î –∑–∞:
 * 1. –ù–∞–¥—ñ–π–Ω—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—é –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —á–µ—Ä–µ–∑ Telegram WebApp
 * 2. –ü–µ—Ä–µ–≤—ñ—Ä–∫—É –ø—ñ–¥–ø–∏—Å—É –¥–∞–Ω–∏—Ö Telegram
 * 3. –£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è —Å–µ—Å—ñ—è–º–∏ —Ç–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω—ñ–≤
 * 4. –û–±—Ä–æ–±–∫—É –ø–æ–¥—ñ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó —Ç–∞ –¥–µ–∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó
 */

(function() {
    console.log("üîê AUTH: –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –Ω–æ–≤–æ—ó —Å–∏—Å—Ç–µ–º–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó");

    // ======== –ü–†–ò–í–ê–¢–ù–Ü –ó–ú–Ü–ù–ù–Ü –¢–ê –ö–û–ù–°–¢–ê–ù–¢–ò ========

    // –í–µ—Ä—Å—ñ—è –º–æ–¥—É–ª—è
    const AUTH_VERSION = '2.0';

    // –ß–∞—Å —Å–µ—Å—ñ—ó —Ç–∞ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
    const SESSION_LIFETIME = 24 * 60 * 60 * 1000; // 24 –≥–æ–¥–∏–Ω–∏
    const TOKEN_REFRESH_INTERVAL = 30 * 60 * 1000; // 30 —Ö–≤–∏–ª–∏–Ω
    const SESSION_VALIDATE_INTERVAL = 5 * 60 * 1000; // 5 —Ö–≤–∏–ª–∏–Ω

    // –ö–ª—é—á—ñ –¥–ª—è —Å—Ö–æ–≤–∏—â–∞
    const STORAGE_KEYS = {
        SESSION: 'winix_session',
        AUTH_TOKEN: 'auth_token',
        REFRESH_TOKEN: 'refresh_token',
        USER_ID: 'telegram_user_id',
        USER_DATA: 'user_data',
        LANGUAGE: 'user_language'
    };

    // –ü—Ä–∞–ø–æ—Ä—Ü—ñ —Å—Ç–∞–Ω—É
    let _isInitialized = false;
    let _isAuthorizing = false;
    let _debugMode = false;
    let _sessionValidationTimer = null;
    let _tokenRefreshTimer = null;

    // –ü–æ—Ç–æ—á–Ω—ñ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    let _currentUser = null;

    // –ü–æ–¥—ñ—ó
    const _events = {
        authSuccess: [],
        authError: [],
        sessionExpired: [],
        tokenRefreshed: [],
        userUpdated: [],
        logout: []
    };

    // –ú–æ–≤–∏ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É
    const _translations = {
        uk: {
            authError: "–ü–æ–º–∏–ª–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó. –°–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–∏ –¥–æ–¥–∞—Ç–æ–∫.",
            dataError: "–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.",
            welcome: "–í—ñ—Ç–∞—î–º–æ —É WINIX!",
            sessionExpired: "–ß–∞—Å —Å–µ—Å—ñ—ó –≤–∏—á–µ—Ä–ø–∞–Ω–æ. –ë—É–¥—å –ª–∞—Å–∫–∞, —É–≤—ñ–π–¥—ñ—Ç—å –∑–Ω–æ–≤—É.",
            tokenError: "–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω–∞."
        },
        ru: {
            authError: "–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.",
            dataError: "–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.",
            welcome: "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ WINIX!",
            sessionExpired: "–í—Ä–µ–º—è —Å–µ—Å—Å–∏–∏ –∏—Å—Ç–µ–∫–ª–æ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ —Å–Ω–æ–≤–∞.",
            tokenError: "–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞."
        },
        en: {
            authError: "Authorization error. Try restarting the app.",
            dataError: "Error retrieving user data.",
            welcome: "Welcome to WINIX!",
            sessionExpired: "Your session has expired. Please log in again.",
            tokenError: "Error refreshing token."
        }
    };

    // –ü–æ—Ç–æ—á–Ω–∞ –º–æ–≤–∞
    let _currentLang = 'uk';

    // ======== –î–û–ü–û–ú–Ü–ñ–ù–Ü –§–£–ù–ö–¶–Ü–á ========

    /**
     * –û—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–µ—Ä–µ–∫–ª–∞–¥–µ–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç—É
     * @param {string} key - –ö–ª—é—á —Ç–µ–∫—Å—Ç—É
     * @returns {string} - –ü–µ—Ä–µ–∫–ª–∞–¥–µ–Ω–∏–π —Ç–µ–∫—Å—Ç
     */
    function getText(key) {
        // –°–ø—Ä–æ–±—É—î–º–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ —Ç–µ–∫—Å—Ç –¥–ª—è –ø–æ—Ç–æ—á–Ω–æ—ó –º–æ–≤–∏
        if (_translations[_currentLang] && _translations[_currentLang][key]) {
            return _translations[_currentLang][key];
        }

        // –ó–∞–ø–∞—Å–Ω–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç - —É–∫—Ä–∞—ó–Ω—Å—å–∫–∞ –º–æ–≤–∞
        return _translations.uk[key] || key;
    }

    /**
     * –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è —É–Ω—ñ–∫–∞–ª—å–Ω–æ–≥–æ ID
     * @returns {string} - –£–Ω—ñ–∫–∞–ª—å–Ω–∏–π ID
     */
    function generateUniqueId() {
        return Date.now().toString(36) + Math.random().toString(36).substring(2);
    }

    /**
     * –ë–µ–∑–ø–µ—á–Ω–µ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –≤ localStorage
     * @param {string} key - –ö–ª—é—á
     * @param {*} value - –ó–Ω–∞—á–µ–Ω–Ω—è
     */
    function safeSetItem(key, value) {
        try {
            // –î–ª—è –æ–±'—î–∫—Ç—ñ–≤ —ñ –º–∞—Å–∏–≤—ñ–≤ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ JSON.stringify
            const valueToStore = typeof value === 'object' && value !== null
                ? JSON.stringify(value)
                : String(value);

            localStorage.setItem(key, valueToStore);
            return true;
        } catch (e) {
            console.error(`–ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è ${key} –≤ localStorage:`, e);
            return false;
        }
    }

    /**
     * –ë–µ–∑–ø–µ—á–Ω–µ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –∑ localStorage
     * @param {string} key - –ö–ª—é—á
     * @param {*} defaultValue - –ó–Ω–∞—á–µ–Ω–Ω—è –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
     * @param {boolean} parse - –ß–∏ –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø–∞—Ä—Å–∏—Ç–∏ JSON
     * @returns {*} - –û—Ç—Ä–∏–º–∞–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è
     */
    function safeGetItem(key, defaultValue = null, parse = false) {
        try {
            const value = localStorage.getItem(key);

            if (value === null) return defaultValue;

            if (parse) {
                try {
                    return JSON.parse(value);
                } catch {
                    return defaultValue;
                }
            }

            return value;
        } catch (e) {
            console.error(`–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è ${key} –∑ localStorage:`, e);
            return defaultValue;
        }
    }

    /**
     * –í–∏–∫–ª–∏–∫ –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –ø–æ–¥—ñ—ó
     * @param {string} eventName - –ù–∞–∑–≤–∞ –ø–æ–¥—ñ—ó
     * @param {*} data - –î–∞–Ω—ñ –ø–æ–¥—ñ—ó
     */
    function triggerEvent(eventName, data) {
        if (!_events[eventName]) return;

        _events[eventName].forEach(callback => {
            try {
                callback(data);
            } catch (e) {
                console.error(`–ü–æ–º–∏–ª–∫–∞ –≤ –æ–±—Ä–æ–±–Ω–∏–∫—É –ø–æ–¥—ñ—ó ${eventName}:`, e);
            }
        });
    }

    /**
     * –û–Ω–æ–≤–ª–µ–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ DOM –∑ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
     * @param {string} userId - ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
     */
    function updateUserIdElements(userId) {
        if (!userId) return;

        try {
            // –°–ø—Ä–æ–±–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è UserIdManager –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è DOM
            if (window.UserIdManager && typeof window.UserIdManager.updateDomElements === 'function') {
                window.UserIdManager.updateDomElements(userId);
                return;
            }

            // –ó–∞–ø–∞—Å–Ω–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç - –æ–Ω–æ–≤–ª–µ–Ω–Ω—è DOM –≤—Ä—É—á–Ω—É
            const userIdElement = document.getElementById('user-id');
            if (userIdElement) {
                userIdElement.textContent = userId;
            }

            const userIdValueElements = document.querySelectorAll('.user-id-value');
            userIdValueElements.forEach(element => {
                element.textContent = userId;
            });
        } catch (e) {
            console.error('–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ DOM –∑ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:', e);
        }
    }

    /**
     * –ü–æ–∫–∞–∑ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
     * @param {string} message - –¢–µ–∫—Å—Ç –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
     * @param {boolean} isError - –ß–∏ —î –ø–æ–º–∏–ª–∫–æ—é
     * @param {Function} callback - –§—É–Ω–∫—Ü—ñ—è –∑–≤–æ—Ä–æ—Ç–Ω–æ–≥–æ –≤–∏–∫–ª–∏–∫—É
     * @returns {Promise<void>}
     */
    async function showMessage(message, isError = false, callback = null) {
        console.log(`${isError ? "‚ùå" : "‚úÖ"} ${message}`);

        // –°–ø–æ—á–∞—Ç–∫—É –Ω–∞–º–∞–≥–∞—î–º–æ—Å—è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏ —ñ—Å–Ω—É—é—á—ñ —Ñ—É–Ω–∫—Ü—ñ—ó
        if (window.simpleAlert) {
            window.simpleAlert(message, isError, callback);
            return;
        }

        if (window.showToast) {
            window.showToast(message);
            if (callback) setTimeout(callback, 3000);
            return;
        }

        // –í–¥–æ—Å–∫–æ–Ω–∞–ª–µ–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –∫–∞—Å—Ç–æ–º–Ω–∏–º UI –∑–∞–º—ñ—Å—Ç—å alert
        const notificationId = 'auth-notification-' + Date.now();

        const notification = document.createElement('div');
        notification.id = notificationId;
        notification.style.cssText = `
            position: fixed;
            top: 20px;
            left: 50%;
            transform: translateX(-50%) translateY(-100px);
            background: ${isError ? 'linear-gradient(90deg, #F44336, #E91E63)' : 'linear-gradient(90deg, #4CAF50, #00BFA5)'};
            color: white;
            padding: 15px 20px;
            border-radius: 8px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
            z-index: 10000;
            text-align: center;
            max-width: 90%;
            font-weight: 500;
            transition: transform 0.3s ease;
        `;
        notification.textContent = message;

        document.body.appendChild(notification);

        // –ê–Ω—ñ–º—É—î–º–æ –ø–æ—è–≤—É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        setTimeout(() => {
            notification.style.transform = 'translateX(-50%) translateY(0)';
        }, 10);

        // –ß–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥–∏ –ø—Ä–∏—Ö–æ–≤—É—î–º–æ
        setTimeout(() => {
            notification.style.transform = 'translateX(-50%) translateY(-100px)';

            // –í–∏–¥–∞–ª—è—î–º–æ –∑ DOM –ø—ñ—Å–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –∞–Ω—ñ–º–∞—Ü—ñ—ó
            setTimeout(() => {
                if (document.getElementById(notificationId)) {
                    document.body.removeChild(notification);
                }
                if (callback) callback();
            }, 300);
        }, 3000);
    }

    // ======== –§–£–ù–ö–¶–Ü–á –£–ü–†–ê–í–õ–Ü–ù–ù–Ø –°–ï–°–Ü–Ñ–Æ ========

    /**
     * –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ—ó —Å–µ—Å—ñ—ó
     * @param {Object} userData - –î–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
     * @param {string} token - –¢–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó
     * @param {string} refreshToken - –¢–æ–∫–µ–Ω –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
     * @returns {Object} - –û–±'—î–∫—Ç —Å–µ—Å—ñ—ó
     */
    function createSession(userData, token, refreshToken) {
        const sessionId = generateUniqueId();
        const now = Date.now();

        const session = {
            id: sessionId,
            userId: userData.telegram_id || userData.id,
            token: token,
            refreshToken: refreshToken,
            created: now,
            expires: now + SESSION_LIFETIME,
            lastActivity: now
        };

        // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —Å–µ—Å—ñ—é –≤ localStorage
        safeSetItem(STORAGE_KEYS.SESSION, session, true);

        // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —Ç–æ–∫–µ–Ω–∏ –¥–ª—è –∑—Ä—É—á–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø—É
        if (token) safeSetItem(STORAGE_KEYS.AUTH_TOKEN, token);
        if (refreshToken) safeSetItem(STORAGE_KEYS.REFRESH_TOKEN, refreshToken);

        if (_debugMode) {
            console.log('–°—Ç–≤–æ—Ä–µ–Ω–æ –Ω–æ–≤—É —Å–µ—Å—ñ—é:', {
                id: sessionId,
                userId: session.userId,
                expires: new Date(session.expires).toLocaleString()
            });
        }

        return session;
    }

    /**
     * –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Å–µ—Å—ñ—ó
     * @param {Object} session - –ü–æ—Ç–æ—á–Ω–∞ —Å–µ—Å—ñ—è
     * @param {Object} updates - –û–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–ª—è —Å–µ—Å—ñ—ó
     * @returns {Object} - –û–Ω–æ–≤–ª–µ–Ω–∞ —Å–µ—Å—ñ—è
     */
    function updateSession(session, updates = {}) {
        if (!session) return null;

        const updatedSession = { ...session, ...updates, lastActivity: Date.now() };

        // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω—É —Å–µ—Å—ñ—é
        safeSetItem(STORAGE_KEYS.SESSION, updatedSession, true);

        // –û–Ω–æ–≤–ª—é—î–º–æ —Ç–æ–∫–µ–Ω–∏, —è–∫—â–æ –≤–æ–Ω–∏ –∑–º—ñ–Ω–∏–ª–∏—Å—è
        if (updates.token) safeSetItem(STORAGE_KEYS.AUTH_TOKEN, updates.token);
        if (updates.refreshToken) safeSetItem(STORAGE_KEYS.REFRESH_TOKEN, updates.refreshToken);

        return updatedSession;
    }

    /**
     * –û—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–æ—Ç–æ—á–Ω–æ—ó —Å–µ—Å—ñ—ó
     * @returns {Object|null} - –ü–æ—Ç–æ—á–Ω–∞ —Å–µ—Å—ñ—è –∞–±–æ null
     */
    function getCurrentSession() {
        return safeGetItem(STORAGE_KEYS.SESSION, null, true);
    }

    /**
     * –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥—ñ–π—Å–Ω–æ—Å—Ç—ñ —Å–µ—Å—ñ—ó
     * @param {Object} session - –°–µ—Å—ñ—è –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏
     * @returns {boolean} - –ß–∏ –¥—ñ–π—Å–Ω–∞ —Å–µ—Å—ñ—è
     */
    function isSessionValid(session) {
        if (!session) return false;

        const now = Date.now();
        return session.expires > now;
    }

    /**
     * –í–∏–¥–∞–ª–µ–Ω–Ω—è —Å–µ—Å—ñ—ó
     */
    function clearSession() {
        localStorage.removeItem(STORAGE_KEYS.SESSION);
        localStorage.removeItem(STORAGE_KEYS.AUTH_TOKEN);
        localStorage.removeItem(STORAGE_KEYS.REFRESH_TOKEN);

        // –ó—É–ø–∏–Ω—è—î–º–æ —Ç–∞–π–º–µ—Ä–∏
        if (_sessionValidationTimer) {
            clearInterval(_sessionValidationTimer);
            _sessionValidationTimer = null;
        }

        if (_tokenRefreshTimer) {
            clearInterval(_tokenRefreshTimer);
            _tokenRefreshTimer = null;
        }
    }

    /**
     * –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω–∞
     * @returns {Promise<boolean>} - –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
     */
    async function refreshToken() {
        try {
            const session = getCurrentSession();
            if (!session || !session.refreshToken) {
                throw new Error('–í—ñ–¥—Å—É—Ç–Ω—ñ–π —Ç–æ–∫–µ–Ω –æ–Ω–æ–≤–ª–µ–Ω–Ω—è');
            }

            // –í —Ä–µ–∞–ª—å–Ω—ñ–π —Å–∏—Å—Ç–µ–º—ñ —Ç—É—Ç –º–∞—î –±—É—Ç–∏ –∑–∞–ø–∏—Ç –¥–æ —Å–µ—Ä–≤–µ—Ä—É
            // –û—Å–∫—ñ–ª—å–∫–∏ WINIX –Ω–µ –º–∞—î –æ–∫—Ä–µ–º–æ–≥–æ API –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω—ñ–≤,
            // –º–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∑–≤–∏—á–∞–π–Ω–∏–π –∑–∞–ø–∏—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó

            const refreshResponse = await window.WinixAPI.apiRequest('/api/auth/refresh', 'POST', {
                refresh_token: session.refreshToken,
                telegram_id: session.userId
            });

            if (refreshResponse.status === 'success' && refreshResponse.data && refreshResponse.data.token) {
                // –û–Ω–æ–≤–ª—é—î–º–æ —Ç–æ–∫–µ–Ω–∏ –≤ —Å–µ—Å—ñ—ó
                updateSession(session, {
                    token: refreshResponse.data.token,
                    refreshToken: refreshResponse.data.refresh_token || session.refreshToken,
                    expires: Date.now() + SESSION_LIFETIME
                });

                // –í–∏–∫–ª–∏–∫–∞—î–º–æ –ø–æ–¥—ñ—é –ø—Ä–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω–∞
                triggerEvent('tokenRefreshed', { userId: session.userId });

                if (_debugMode) {
                    console.log('‚úÖ –¢–æ–∫–µ–Ω —É—Å–ø—ñ—à–Ω–æ –æ–Ω–æ–≤–ª–µ–Ω–æ');
                }

                return true;
            } else {
                throw new Error(refreshResponse.message || '–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω–∞');
            }
        } catch (error) {
            console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω–∞:', error);

            // –£ –≤–∏–ø–∞–¥–∫—É –ø–æ–º–∏–ª–∫–∏ –≤–∏–¥–∞–ª—è—î–º–æ —Å–µ—Å—ñ—é —ñ –ø–æ–≤—ñ–¥–æ–º–ª—è—î–º–æ –ø—Ä–æ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ—Å—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω–æ—ó –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó
            clearSession();
            triggerEvent('sessionExpired', { error });

            return false;
        }
    }

    /**
     * –ó–∞–ø—É—Å–∫ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Å–µ—Å—ñ—ó
     */
    function startSessionValidation() {
        // –ó–∞–ø—É—Å–∫–∞—î–º–æ —Ç–∞–π–º–µ—Ä –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Å–µ—Å—ñ—ó
        _sessionValidationTimer = setInterval(() => {
            const session = getCurrentSession();

            if (!isSessionValid(session)) {
                console.log('‚ö†Ô∏è –°–µ—Å—ñ—è –∑–∞—Å—Ç–∞—Ä—ñ–ª–∞, —Å–ø—Ä–æ–±–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω–∞');

                // –°–ø—Ä–æ–±—É—î–º–æ –æ–Ω–æ–≤–∏—Ç–∏ —Ç–æ–∫–µ–Ω
                refreshToken().then(success => {
                    if (!success) {
                        // –Ø–∫—â–æ –Ω–µ –≤–¥–∞–ª–æ—Å—è, –≤–∏–¥–∞–ª—è—î–º–æ —Å–µ—Å—ñ—é —ñ –ø–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
                        clearSession();
                        showMessage(getText('sessionExpired'), true);
                        triggerEvent('sessionExpired', { message: '–ß–∞—Å —Å–µ—Å—ñ—ó –≤–∏—á–µ—Ä–ø–∞–Ω–æ' });
                    }
                });
            } else {
                // –û–Ω–æ–≤–ª—é—î–º–æ —á–∞—Å –æ—Å—Ç–∞–Ω–Ω—å–æ—ó –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ
                updateSession(session);
            }
        }, SESSION_VALIDATE_INTERVAL);

        // –ó–∞–ø—É—Å–∫–∞—î–º–æ —Ç–∞–π–º–µ—Ä –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω–∞
        _tokenRefreshTimer = setInterval(() => {
            const session = getCurrentSession();

            if (session) {
                // –û–Ω–æ–≤–ª—é—î–º–æ —Ç–æ–∫–µ–Ω –∑–∞ 30 —Ö–≤–∏–ª–∏–Ω –¥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è —Ç–µ—Ä–º—ñ–Ω—É –¥—ñ—ó
                const expiryCheck = session.expires - TOKEN_REFRESH_INTERVAL;

                if (Date.now() > expiryCheck) {
                    console.log('‚è∞ –ü–ª–∞–Ω–æ–≤–∞–Ω–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω–∞');
                    refreshToken();
                }
            }
        }, TOKEN_REFRESH_INTERVAL);
    }

    // ======== –§–£–ù–ö–¶–Ü–á TELEGRAM WEBAPP ========

    /**
     * –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø—ñ–¥–ø–∏—Å—É Telegram
     * @param {string} initData - –î–∞–Ω—ñ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó Telegram WebApp
     * @returns {boolean} - –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏
     */
    function verifyTelegramSignature(initData) {
        // –£ —Ä–µ–∞–ª—å–Ω—ñ–π —Å–∏—Å—Ç–µ–º—ñ —Ç—É—Ç –º–∞—î –±—É—Ç–∏ –ø–æ–≤–Ω–æ—Ü—ñ–Ω–Ω–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø—ñ–¥–ø–∏—Å—É
        // –∑ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è–º HMAC-SHA-256 —ñ —Ç–æ–∫–µ–Ω–∞ –±–æ—Ç–∞
        //
        // –û—Å–∫—ñ–ª—å–∫–∏ —Ü–µ —Ä–æ–±–∏—Ç—å—Å—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ, –º–∏ –ª–∏—à–µ –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –ø—ñ–¥–ø–∏—Å—É

        if (!initData) return false;

        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –º—ñ—Å—Ç–∏—Ç—å initData –ø–∞—Ä–∞–º–µ—Ç—Ä hash
        const params = new URLSearchParams(initData);
        return params.has('hash');
    }

    /**
     * –û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –∑ Telegram WebApp
     * @returns {Object|null} - –î–∞–Ω—ñ Telegram –∞–±–æ null
     */
    function getTelegramWebAppData() {
        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —î Telegram WebApp
        if (!window.Telegram || !window.Telegram.WebApp) {
            console.warn("‚ùì Telegram WebApp –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ");
            return null;
        }

        try {
            // –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ –∑ Telegram WebApp
            const tg = window.Telegram.WebApp;
            tg.ready();
            tg.expand();

            const initData = tg.initData || "";
            const userData = tg.initDataUnsafe?.user || null;

            if (!userData) {
                console.warn("‚ùì –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ Telegram WebApp");
                return null;
            }

            // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –∫–æ–º–±—ñ–Ω–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ
            return {
                user: userData,
                initData: initData,
                colorScheme: tg.colorScheme,
                themeParams: tg.themeParams,
                version: tg.version
            };
        } catch (e) {
            console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö Telegram WebApp:", e);
            return null;
        }
    }

    /**
     * –ü—ñ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–∏—Ö –¥–ª—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
     * @param {Object} telegramData - –î–∞–Ω—ñ Telegram WebApp
     * @returns {Object} - –ü—ñ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω—ñ –¥–∞–Ω—ñ
     */
    function prepareAuthData(telegramData) {
        if (!telegramData || !telegramData.user) {
            return { hasError: true, error: '–í—ñ–¥—Å—É—Ç–Ω—ñ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞' };
        }

        const userData = telegramData.user;

        // –ë–∞–∑–æ–≤—ñ –¥–∞–Ω—ñ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó
        const authData = {
            id: userData.id,
            first_name: userData.first_name || '',
            last_name: userData.last_name || '',
            username: userData.username || '',
            language_code: userData.language_code || 'uk',
            initData: telegramData.initData || '',

            // –î–æ–¥–∞—Ç–∫–æ–≤—ñ –º–µ—Ç–∞–¥–∞–Ω—ñ
            app_version: telegramData.version || '',
            color_scheme: telegramData.colorScheme || 'light',
            platform: navigator.platform,
            user_agent: navigator.userAgent
        };

        // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –º–æ–≤—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        if (authData.language_code) {
            _currentLang = authData.language_code;
            localStorage.setItem('userLanguage', authData.language_code);
        }

        // –î–æ–¥–∞—î–º–æ –æ—Å–æ–±–ª–∏–≤—ñ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –¥–ª—è OAuth, —è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ
        if (window.location.search.includes('auth_code=') || window.location.search.includes('state=')) {
            authData.oauth_code = new URLSearchParams(window.location.search).get('auth_code');
            authData.oauth_state = new URLSearchParams(window.location.search).get('state');
        }

        return { hasError: false, data: authData };
    }

    // ======== –û–°–ù–û–í–ù–Ü –§–£–ù–ö–¶–Ü–á –ê–í–¢–û–†–ò–ó–ê–¶–Ü–á ========

    /**
     * –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
     * @param {Object} userData - –î–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ Telegram WebApp
     * @returns {Promise<Object>} - –†–µ–∑—É–ª—å—Ç–∞—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó
     */
    async function authorizeUser(userData) {
        if (_isAuthorizing) {
            console.log("üîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è –≤–∂–µ –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è");
            return Promise.reject(new Error("–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è –≤–∂–µ –≤ –ø—Ä–æ—Ü–µ—Å—ñ"));
        }

        _isAuthorizing = true;
        console.log("üîê –ó–∞–ø–∏—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ", userData);

        try {
            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å API –º–æ–¥—É–ª—è
            if (!window.WinixAPI || !window.WinixAPI.authorize) {
                throw new Error("API –º–æ–¥—É–ª—å –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –ü–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ —Å—Ç–æ—Ä—ñ–Ω–∫—É.");
            }

            // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ API –º–æ–¥—É–ª—å –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó
            const authResult = await window.WinixAPI.authorize(userData);

            // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —É—Å–ø—ñ—à–Ω–æ—Å—Ç—ñ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó
            if (authResult.status !== 'success' || !authResult.data) {
                throw new Error(authResult.message || "–ü–æ–º–∏–ª–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ");
            }

            // –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            const user = authResult.data;

            // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            _currentUser = user;
            safeSetItem(STORAGE_KEYS.USER_DATA, user, true);

            // –û—Ç—Ä–∏–º—É—î–º–æ —Ç–æ–∫–µ–Ω–∏ –∑ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ (—è–∫—â–æ —î)
            const token = user.token || authResult.token || null;
            const refreshToken = user.refresh_token || authResult.refresh_token || null;

            // –°—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤—É —Å–µ—Å—ñ—é
            if (token) {
                createSession(user, token, refreshToken);
                startSessionValidation();
            }

            // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–ª—è —ñ–Ω—à–∏—Ö —á–∞—Å—Ç–∏–Ω –¥–æ–¥–∞—Ç–∫—É
            if (user.telegram_id) {
                safeSetItem(STORAGE_KEYS.USER_ID, user.telegram_id);

                // –û–Ω–æ–≤–ª—é—î–º–æ –≤—Å—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ DOM –∑ ID
                updateUserIdElements(user.telegram_id);

                // –Ø–∫—â–æ —î UserIdManager, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –π–æ–≥–æ
                if (window.UserIdManager && typeof window.UserIdManager.setUserId === 'function') {
                    window.UserIdManager.setUserId(user.telegram_id);
                }
            }

            // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –¥–æ–¥–∞—Ç–∫–æ–≤—ñ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            if (user.language_code) {
                _currentLang = user.language_code;
                safeSetItem(STORAGE_KEYS.LANGUAGE, user.language_code);
            }

            // –ü–æ–∫–∞–∑—É—î–º–æ –≤—ñ—Ç–∞–ª—å–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–ª—è –Ω–æ–≤–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
            if (authResult.data.is_new_user) {
                showMessage(getText('welcome'), false);
            }

            // –í–∏–∫–ª–∏–∫–∞—î–º–æ –ø–æ–¥—ñ—é –ø—Ä–æ —É—Å–ø—ñ—à–Ω—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—é
            triggerEvent('authSuccess', user);

            // –ó–∞–ø—É—Å–∫–∞—î–º–æ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—é –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            syncUserData();

            _isAuthorizing = false;
            return user;
        } catch (error) {
            _isAuthorizing = false;

            // –î–µ—Ç–∞–ª—å–Ω–µ –ª–æ–≥—É–≤–∞–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏
            console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó:", error);

            // –î–æ–¥–∞—Ç–∫–æ–≤–∞ –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏—á–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è
            if (error.name === 'TypeError' && error.message.includes('Failed to fetch')) {
                console.error("‚ùå –ü—Ä–æ–±–ª–µ–º–∞ –º–µ—Ä–µ–∂–µ–≤–æ–≥–æ –∑'—î–¥–Ω–∞–Ω–Ω—è - —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π");
            } else if (error.status || error.statusText) {
                console.error(`‚ùå HTTP –ø–æ–º–∏–ª–∫–∞ (${error.status}): ${error.statusText}`);
            }

            // –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É
            await showMessage(getText('authError'), true);

            // –í–∏–∫–ª–∏–∫–∞—î–º–æ –ø–æ–¥—ñ—é –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó
            triggerEvent('authError', error);

            throw error;
        }
    }

    /**
     * –í–∏–∫–æ–Ω–∞–Ω–Ω—è –≤–∏—Ö–æ–¥—É –∑ —Å–∏—Å—Ç–µ–º–∏
     * @returns {Promise<boolean>} - –†–µ–∑—É–ª—å—Ç–∞—Ç –≤–∏—Ö–æ–¥—É
     */
    async function logout() {
        try {
            // –í–∏–∫–ª–∏–∫–∞—î–º–æ API –¥–ª—è –≤–∏—Ö–æ–¥—É (—è–∫—â–æ —î)
            if (window.WinixAPI && window.WinixAPI.apiRequest) {
                try {
                    await window.WinixAPI.apiRequest('/api/auth/logout', 'POST');
                } catch (e) {
                    console.warn('–ü–æ–º–∏–ª–∫–∞ –≤–∏–∫–ª–∏–∫—É API –¥–ª—è –≤–∏—Ö–æ–¥—É:', e);
                }
            }

            // –û—á–∏—â–∞—î–º–æ –¥–∞–Ω—ñ —Å–µ—Å—ñ—ó
            clearSession();

            // –û—á–∏—â–∞—î–º–æ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            _currentUser = null;
            localStorage.removeItem(STORAGE_KEYS.USER_DATA);

            // –í–∏–∫–ª–∏–∫–∞—î–º–æ –ø–æ–¥—ñ—é –ø—Ä–æ –≤–∏—Ö—ñ–¥
            triggerEvent('logout', {});

            return true;
        } catch (e) {
            console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏—Ö–æ–¥—ñ –∑ —Å–∏—Å—Ç–µ–º–∏:', e);
            return false;
        }
    }

    /**
     * –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ —Å–µ—Ä–≤–µ—Ä–∞
     * @returns {Promise<Object|null>} - –î–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∞–±–æ null
     */
    async function syncUserData() {
        try {
            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            const userId = getCurrentUserId();
            if (!userId) {
                console.warn('–ù–µ–º–æ–∂–ª–∏–≤–æ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑—É–≤–∞—Ç–∏ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞: ID –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
                return null;
            }

            // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ API –º–æ–¥—É–ª—å –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            if (window.WinixAPI && window.WinixAPI.getUserData) {
                const userData = await window.WinixAPI.getUserData(userId);

                if (userData.status === 'success' && userData.data) {
                    // –û–Ω–æ–≤–ª—é—î–º–æ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
                    _currentUser = userData.data;
                    safeSetItem(STORAGE_KEYS.USER_DATA, userData.data, true);

                    // –í–∏–∫–ª–∏–∫–∞—î–º–æ –ø–æ–¥—ñ—é –ø—Ä–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
                    triggerEvent('userUpdated', userData.data);

                    return userData.data;
                }
            }

            return null;
        } catch (e) {
            console.error('–ü–æ–º–∏–ª–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:', e);
            return null;
        }
    }

    /**
     * –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏–π
     * @returns {boolean} - –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏
     */
    function isUserAuthorized() {
        const session = getCurrentSession();
        return isSessionValid(session);
    }

    /**
     * –û—Ç—Ä–∏–º–∞–Ω–Ω—è ID –ø–æ—Ç–æ—á–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
     * @returns {string|null} - ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∞–±–æ null
     */
    function getCurrentUserId() {
        // –°–ø–æ—á–∞—Ç–∫—É –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –ø–æ—Ç–æ—á–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        if (_currentUser && _currentUser.telegram_id) {
            return _currentUser.telegram_id;
        }

        // –ü–æ—Ç—ñ–º –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Å–µ—Å—ñ—é
        const session = getCurrentSession();
        if (session && session.userId) {
            return session.userId;
        }

        // –ù–∞—Ä–µ—à—Ç—ñ, –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ localStorage
        return safeGetItem(STORAGE_KEYS.USER_ID);
    }

    /**
     * –û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –ø–æ—Ç–æ—á–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
     * @returns {Object|null} - –î–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∞–±–æ null
     */
    function getCurrentUser() {
        if (_currentUser) {
            return { ..._currentUser };
        }

        // –°–ø—Ä–æ–±–∞ –æ—Ç—Ä–∏–º–∞—Ç–∏ –∑ localStorage
        const storedUser = safeGetItem(STORAGE_KEYS.USER_DATA, null, true);
        if (storedUser) {
            _currentUser = storedUser;
            return { ...storedUser };
        }

        return null;
    }

    /**
     * –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç–æ–∫–µ–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó
     * @returns {string|null} - –¢–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó –∞–±–æ null
     */
    function getAuthToken() {
        // –°–ø–æ—á–∞—Ç–∫—É –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Å–µ—Å—ñ—é
        const session = getCurrentSession();
        if (session && session.token) {
            return session.token;
        }

        // –ü–æ—Ç—ñ–º –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ localStorage
        return safeGetItem(STORAGE_KEYS.AUTH_TOKEN);
    }

    // ======== –Ü–ù–Ü–¶–Ü–ê–õ–Ü–ó–ê–¶–Ü–Ø –ú–û–î–£–õ–Ø ========

    /**
     * –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Å–∏—Å—Ç–µ–º–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó
     * @param {Object} config - –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è
     * @returns {Promise<Object|null>} - –†–µ–∑—É–ª—å—Ç–∞—Ç —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
     */
    async function init(config = {}) {
        try {
            console.log("üîê –ó–∞–ø—É—Å–∫ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó —Å–∏—Å—Ç–µ–º–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó");

            if (_isInitialized) {
                console.log("üîê –°–∏—Å—Ç–µ–º–∞ –≤–∂–µ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–∞");
                return _currentUser;
            }

            // –ó–∞—Å—Ç–æ—Å–æ–≤—É—î–º–æ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—é
            if (config.debug !== undefined) _debugMode = config.debug;
            if (config.language) _currentLang = config.language;

            // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –ø—Ä–∞–ø–æ—Ä–µ—Ü—å —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
            _isInitialized = true;

            // –û—Ç—Ä–∏–º—É—î–º–æ –ø–æ—Ç–æ—á–Ω—É –º–æ–≤—É –∑ localStorage
            const storedLang = safeGetItem(STORAGE_KEYS.LANGUAGE);
            if (storedLang) {
                _currentLang = storedLang;
            }

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —î –∞–∫—Ç–∏–≤–Ω–∞ —Å–µ—Å—ñ—è
            const session = getCurrentSession();
            if (isSessionValid(session)) {
                // –°–µ—Å—ñ—è –¥—ñ–π—Å–Ω–∞, –æ—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
                console.log("üîê –í–∏—è–≤–ª–µ–Ω–æ –∞–∫—Ç–∏–≤–Ω—É —Å–µ—Å—ñ—é, –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞");

                // –û–Ω–æ–≤–ª—é—î–º–æ —á–∞—Å –æ—Å—Ç–∞–Ω–Ω—å–æ—ó –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ
                updateSession(session);

                // –ó–∞–ø—É—Å–∫–∞—î–º–æ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É —Å–µ—Å—ñ—ó
                startSessionValidation();

                // –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ localStorage
                const storedUser = safeGetItem(STORAGE_KEYS.USER_DATA, null, true);
                if (storedUser) {
                    _currentUser = storedUser;

                    // –û–Ω–æ–≤–ª—é—î–º–æ –µ–ª–µ–º–µ–Ω—Ç–∏ DOM –∑ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
                    if (storedUser.telegram_id) {
                        updateUserIdElements(storedUser.telegram_id);
                    }

                    // –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑—É—î–º–æ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ —Å–µ—Ä–≤–µ—Ä–∞
                    syncUserData().catch(error => {
                        console.warn('–ü–æ–º–∏–ª–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:', error);
                    });

                    return _currentUser;
                }

                // –Ø–∫—â–æ –Ω–µ–º–∞—î –ª–æ–∫–∞–ª—å–Ω–∏—Ö –¥–∞–Ω–∏—Ö, –∞–ª–µ —î —Å–µ—Å—ñ—è,
                // —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑—É—î–º–æ –¥–∞–Ω—ñ –∑ —Å–µ—Ä–≤–µ—Ä–∞
                try {
                    const userData = await syncUserData();
                    if (userData) {
                        return userData;
                    }
                } catch (e) {
                    console.warn('–ü–æ–º–∏–ª–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:', e);
                }
            }

            // –Ø–∫—â–æ –Ω–µ–º–∞—î –∞–∫—Ç–∏–≤–Ω–æ—ó —Å–µ—Å—ñ—ó –∞–±–æ –Ω–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–∞–Ω—ñ,
            // —Å–ø—Ä–æ–±—É—î–º–æ –∞–≤—Ç–æ—Ä–∏–∑—É–≤–∞—Ç–∏—Å—è —á–µ—Ä–µ–∑ Telegram WebApp
            const telegramData = getTelegramWebAppData();
            if (telegramData) {
                // –ü—ñ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–∏—Ö –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó
                const authDataResult = prepareAuthData(telegramData);

                if (!authDataResult.hasError) {
                    // –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
                    console.log("üîê –í–∏–∫–æ–Ω–∞–Ω–Ω—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó —á–µ—Ä–µ–∑ Telegram WebApp");
                    return await authorizeUser(authDataResult.data);
                } else {
                    console.warn("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥–≥–æ—Ç–æ–≤–∫–∏ –¥–∞–Ω–∏—Ö –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó:", authDataResult.error);
                }
            }

            console.warn("‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –∞–≤—Ç–æ—Ä–∏–∑—É–≤–∞—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –ø—Ä–∏ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó");
            return null;
        } catch (e) {
            console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó —Å–∏—Å—Ç–µ–º–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó:", e);
            return null;
        }
    }

    /**
     * –î–æ–¥–∞–≤–∞–Ω–Ω—è –æ–±—Ä–æ–±–Ω–∏–∫–∞ –ø–æ–¥—ñ—ó
     * @param {string} eventName - –ù–∞–∑–≤–∞ –ø–æ–¥—ñ—ó
     * @param {Function} callback - –§—É–Ω–∫—Ü—ñ—è-–æ–±—Ä–æ–±–Ω–∏–∫
     */
    function on(eventName, callback) {
        if (!_events[eventName]) {
            console.warn(`–ü–æ–¥—ñ—è "${eventName}" –Ω–µ –ø—ñ–¥—Ç—Ä–∏–º—É—î—Ç—å—Å—è`);
            return;
        }

        _events[eventName].push(callback);
    }

    /**
     * –í–∏–¥–∞–ª–µ–Ω–Ω—è –æ–±—Ä–æ–±–Ω–∏–∫–∞ –ø–æ–¥—ñ—ó
     * @param {string} eventName - –ù–∞–∑–≤–∞ –ø–æ–¥—ñ—ó
     * @param {Function} callback - –§—É–Ω–∫—Ü—ñ—è-–æ–±—Ä–æ–±–Ω–∏–∫
     */
    function off(eventName, callback) {
        if (!_events[eventName]) return;

        _events[eventName] = _events[eventName].filter(cb => cb !== callback);
    }

    // ======== –ï–ö–°–ü–û–†–¢ –ü–£–ë–õ–Ü–ß–ù–û–ì–û API ========

    // –°—Ç–≤–æ—Ä—é—î–º–æ –ø—É–±–ª—ñ—á–Ω–∏–π API –º–æ–¥—É–ª—è
    window.WinixAuth = {
        // –û—Å–Ω–æ–≤–Ω—ñ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ
        VERSION: AUTH_VERSION,
        isInitialized: () => _isInitialized,

        // –ü–æ—Ç–æ—á–Ω—ñ –¥–∞–Ω—ñ
        currentUser: null, // –ë—É–¥–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—é –Ω–∏–∂—á–µ

        // –ú–æ–≤–∏ —ñ –ø–µ—Ä–µ–∫–ª–∞–¥–∏
        lang: _translations,

        // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è
        init,

        // –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è —ñ —Å–µ—Å—ñ—è
        authorizeUser,
        logout,
        isUserAuthorized,
        getAuthToken,
        getCurrentUser,
        getCurrentUserId,

        // –£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –ø–æ–¥—ñ—è–º–∏
        on,
        off,

        // –î–æ–ø–æ–º—ñ–∂–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó
        syncUserData,
        showMessage,
        getText,

        // –ú–µ—Ç–æ–¥–∏ –¥–ª—è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –≤ —ñ–Ω—à–∏—Ö –º–æ–¥—É–ª—è—Ö
        updateUserIdElements
    };

    // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ getter –¥–ª—è currentUser –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∞–∫—Ç—É–∞–ª—å–Ω–∏—Ö –¥–∞–Ω–∏—Ö
    Object.defineProperty(window.WinixAuth, 'currentUser', {
        get: function() {
            return getCurrentUser();
        },
        enumerable: true,
        configurable: true
    });

    // ======== –ê–í–¢–û–ú–ê–¢–ò–ß–ù–ê –Ü–ù–Ü–¶–Ü–ê–õ–Ü–ó–ê–¶–Ü–Ø ========

    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ DOM
    document.addEventListener('DOMContentLoaded', function() {
        console.log("üîê DOMContentLoaded, –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è");

        // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ –º–æ–¥—É–ª—å
        init().then(user => {
            if (user) {
                console.log("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è –≤–∏–∫–æ–Ω–∞–Ω–∞ —É—Å–ø—ñ—à–Ω–æ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ DOM");

                // –í–∏–∫–ª–∏–∫–∞—î–º–æ –ø–æ–¥—ñ—é –ø—Ä–æ —É—Å–ø—ñ—à–Ω—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—é
                document.dispatchEvent(new CustomEvent('auth-success', {
                    detail: user
                }));
            } else {
                console.warn("‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –∞–≤—Ç–æ—Ä–∏–∑—É–≤–∞—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ DOM");

                // –í–∏–∫–ª–∏–∫–∞—î–º–æ –ø–æ–¥—ñ—é –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó
                document.dispatchEvent(new CustomEvent('auth-error', {
                    detail: { message: '–ù–µ –≤–¥–∞–ª–æ—Å—è –∞–≤—Ç–æ—Ä–∏–∑—É–≤–∞—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞' }
                }));
            }
        }).catch(error => {
            console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó:", error);

            // –í–∏–∫–ª–∏–∫–∞—î–º–æ –ø–æ–¥—ñ—é –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó
            document.dispatchEvent(new CustomEvent('auth-error', {
                detail: error
            }));
        });
    });

    // –Ø–∫—â–æ DOM –≤–∂–µ –≥–æ—Ç–æ–≤–∏–π, —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ –º–æ–¥—É–ª—å –∑–∞—Ä–∞–∑
    if (document.readyState === 'interactive' || document.readyState === 'complete') {
        console.log("üîê –î–æ–∫—É–º–µ–Ω—Ç –≤–∂–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ, –∑–∞–ø—É—Å–∫ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó");

        setTimeout(() => {
            init().then(user => {
                if (user) {
                    console.log("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è –≤–∏–∫–æ–Ω–∞–Ω–∞ —É—Å–ø—ñ—à–Ω–æ (–≤—ñ–¥–∫–ª–∞–¥–µ–Ω–∏–π –∑–∞–ø—É—Å–∫)");
                } else {
                    console.warn("‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –∞–≤—Ç–æ—Ä–∏–∑—É–≤–∞—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ (–≤—ñ–¥–∫–ª–∞–¥–µ–Ω–∏–π –∑–∞–ø—É—Å–∫)");
                }
            }).catch(error => {
                console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–∫–ª–∞–¥–µ–Ω–æ—ó —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó:", error);
            });
        }, 100);
    }

    // –û–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ—ó Telegram WebApp
    document.addEventListener('telegram-ready', function() {
        console.log("üîê –û—Ç—Ä–∏–º–∞–Ω–æ –ø–æ–¥—ñ—é telegram-ready, –∑–∞–ø—É—Å–∫ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó");

        // –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ –≤—ñ–¥ Telegram
        const telegramData = getTelegramWebAppData();
        if (telegramData) {
            // –ü—ñ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–∏—Ö –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó
            const authDataResult = prepareAuthData(telegramData);

            if (!authDataResult.hasError) {
                // –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
                authorizeUser(authDataResult.data).catch(error => {
                    console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó –ø—ñ—Å–ª—è telegram-ready:", error);
                });
            } else {
                console.warn("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥–≥–æ—Ç–æ–≤–∫–∏ –¥–∞–Ω–∏—Ö –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó:", authDataResult.error);
            }
        } else {
            console.warn("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–∞–Ω—ñ Telegram WebApp");
        }
    });

    // –û–±—Ä–æ–±–Ω–∏–∫ –ø–æ–º–∏–ª–æ–∫ Fetch API –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω–∞
    const originalFetch = window.fetch;
    window.fetch = async function(resource, options = {}) {
        try {
            // –í–∏–∫–æ–Ω—É—î–º–æ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–∏–π –∑–∞–ø–∏—Ç
            const response = await originalFetch(resource, options);

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Å—Ç–∞—Ç—É—Å –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ
            if (response.status === 401 || response.status === 403) {
                // –û—Ç—Ä–∏–º—É—î–º–æ –ø–æ—Ç–æ—á–Ω—É —Å–µ—Å—ñ—é
                const session = getCurrentSession();

                // –Ø–∫—â–æ —î —Å–µ—Å—ñ—è, —Å–ø—Ä–æ–±—É—î–º–æ –æ–Ω–æ–≤–∏—Ç–∏ —Ç–æ–∫–µ–Ω
                if (session) {
                    const refreshed = await refreshToken();

                    if (refreshed) {
                        // –û—Ç—Ä–∏–º—É—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω—É —Å–µ—Å—ñ—é
                        const updatedSession = getCurrentSession();

                        // –ü–æ–≤—Ç–æ—Ä—é—î–º–æ –∑–∞–ø–∏—Ç –∑ –Ω–æ–≤–∏–º —Ç–æ–∫–µ–Ω–æ–º
                        const newOptions = { ...options };

                        // –û–Ω–æ–≤–ª—é—î–º–æ –∑–∞–≥–æ–ª–æ–≤–æ–∫ Authorization, —è–∫—â–æ –≤—ñ–Ω –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è
                        if (updatedSession && updatedSession.token) {
                            if (!newOptions.headers) newOptions.headers = {};
                            newOptions.headers['Authorization'] = `Bearer ${updatedSession.token}`;
                        }

                        // –ü–æ–≤—Ç–æ—Ä—é—î–º–æ –∑–∞–ø–∏—Ç
                        return originalFetch(resource, newOptions);
                    }
                }
            }

            return response;
        } catch (error) {
            // –Ø–∫—â–æ –ø–æ–º–∏–ª–∫–∞ –ø–æ–≤'—è–∑–∞–Ω–∞ –∑ –º–µ—Ä–µ–∂–µ—é, –º–æ–∂–Ω–∞ —Å–ø—Ä–æ–±—É–≤–∞—Ç–∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–∏ –∑–∞–ø–∏—Ç
            // –∞–±–æ –ø—Ä–æ–≤–µ—Å—Ç–∏ —ñ–Ω—à—ñ –¥—ñ—ó –∑ –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è
            throw error;
        }
    };

    console.log("‚úÖ –°–∏—Å—Ç–µ–º—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó —É—Å–ø—ñ—à–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ");
})();