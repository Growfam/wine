/**
 * auth.js - –ú–æ–¥—É–ª—å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó –¥–ª—è Telegram Mini App
 * –í–ò–ü–†–ê–í–õ–ï–ù–ê –í–ï–†–°–Ü–Ø –∑ –ø–æ–∫—Ä–∞—â–µ–Ω–æ—é –æ–±—Ä–æ–±–∫–æ—é –ø–æ–º–∏–ª–æ–∫ —Ç–∞ fallback –º–µ—Ö–∞–Ω—ñ–∑–º–∞–º–∏
 * @version 3.0.0
 */

(function() {
    'use strict';

    console.log("üîê AUTH: –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –í–ò–ü–†–ê–í–õ–ï–ù–û–á —Å–∏—Å—Ç–µ–º–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó");

    // ======== –ü–†–ò–í–ê–¢–ù–Ü –ó–ú–Ü–ù–ù–Ü ========

    // –§–ª–∞–≥–∏ –¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª—é –∑–∞–ø–∏—Ç—ñ–≤
    let _authRequestInProgress = false;
    let _userDataRequestInProgress = false;
    let _lastRequestTime = 0;

    // –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–π —ñ–Ω—Ç–µ—Ä–≤–∞–ª –º—ñ–∂ –∑–∞–ø–∏—Ç–∞–º–∏ (10 —Å–µ–∫—É–Ω–¥ –∑–∞–º—ñ—Å—Ç—å 15)
    const MIN_REQUEST_INTERVAL = 10000;

    // –ü—ñ–¥—Ç—Ä–∏–º–∫–∞ –ø–æ–¥—ñ–π
    const EVENT_USER_DATA_UPDATED = 'user-data-updated';
    const EVENT_AUTH_SUCCESS = 'auth-success';
    const EVENT_AUTH_ERROR = 'auth-error';
    const EVENT_ACCESS_DENIED = 'access-denied';

    // –î–ª—è –ø–µ—Ä—ñ–æ–¥–∏—á–Ω–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
    let _periodicUpdateInterval = null;

    // –ü–æ—Ç–æ—á–Ω–∞ –º–æ–≤–∞ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É
    let _currentLang = 'uk';

    // –¢–µ–∫—Å—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
    const MESSAGES = {
        uk: {
            authError: "–ü–æ–º–∏–ª–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó. –°–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–∏ –¥–æ–¥–∞—Ç–æ–∫.",
            dataError: "–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.",
            welcome: "–í—ñ—Ç–∞—î–º–æ —É WINIX!",
            noTelegramId: "–î–æ–¥–∞—Ç–æ–∫ –¥–æ—Å—Ç—É–ø–Ω–∏–π —Ç—ñ–ª—å–∫–∏ —á–µ—Ä–µ–∑ Telegram",
            accessDenied: "–î–æ—Å—Ç—É–ø –∑–∞–±–æ—Ä–æ–Ω–µ–Ω–æ. –í—ñ–¥–∫—Ä–∏–π—Ç–µ –¥–æ–¥–∞—Ç–æ–∫ —á–µ—Ä–µ–∑ Telegram.",
            connectionIssue: "–ü—Ä–æ–±–ª–µ–º–∏ –∑ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è–º. –ü—Ä–∞—Ü—é—î–º–æ –≤ –æ—Ñ–ª–∞–π–Ω —Ä–µ–∂–∏–º—ñ."
        },
        ru: {
            authError: "–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.",
            dataError: "–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.",
            welcome: "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ WINIX!",
            noTelegramId: "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ Telegram",
            accessDenied: "–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω. –û—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —á–µ—Ä–µ–∑ Telegram.",
            connectionIssue: "–ü—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º. –†–∞–±–æ—Ç–∞–µ–º –≤ –æ—Ñ–ª–∞–π–Ω —Ä–µ–∂–∏–º–µ."
        },
        en: {
            authError: "Authorization error. Try restarting the app.",
            dataError: "Error retrieving user data.",
            welcome: "Welcome to WINIX!",
            noTelegramId: "App is only available through Telegram",
            accessDenied: "Access denied. Open the app through Telegram.",
            connectionIssue: "Connection issues. Working in offline mode."
        }
    };

    // ======== TELEGRAM WEBAPP –Ü–ù–Ü–¶–Ü–ê–õ–Ü–ó–ê–¶–Ü–Ø ========

    if (window.Telegram && window.Telegram.WebApp) {
        window.Telegram.WebApp.ready();
        window.Telegram.WebApp.expand();
        console.log("üîê AUTH: Telegram WebApp —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ");
    }

    // ======== –î–û–ü–û–ú–Ü–ñ–ù–Ü –§–£–ù–ö–¶–Ü–á ========

    /**
     * –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –≤–∞–ª—ñ–¥–Ω–æ—Å—Ç—ñ ID
     */
    function isValidId(id) {
        return id &&
               id !== 'undefined' &&
               id !== 'null' &&
               id !== undefined &&
               id !== null &&
               typeof id !== 'function' &&
               id.toString().trim() !== '' &&
               !id.toString().includes('function') &&
               !id.toString().includes('=>') &&
               /^\d+$/.test(id.toString());
    }

    /**
     * –ú'—è–∫–µ –±–ª–æ–∫—É–≤–∞–Ω–Ω—è –¥–æ—Å—Ç—É–ø—É (—Ç–µ–ø–µ—Ä –∑ fallback –æ–ø—Ü—ñ—è–º–∏)
     */
    function softBlockAccess() {
        console.warn("‚ö†Ô∏è AUTH: –ú'—è–∫–µ –±–ª–æ–∫—É–≤–∞–Ω–Ω—è –¥–æ—Å—Ç—É–ø—É - –Ω–µ–º–∞—î –≤–∞–ª—ñ–¥–Ω–æ–≥–æ Telegram ID");

        document.dispatchEvent(new CustomEvent(EVENT_ACCESS_DENIED));

        const message = getLocalizedText('accessDenied');
        showError(message, 'warning'); // warning –∑–∞–º—ñ—Å—Ç—å error

        // –ù–ï –ø—Ä–∏—Ö–æ–≤—É—î–º–æ –∫–æ–Ω—Ç–µ–Ω—Ç –ø–æ–≤–Ω—ñ—Å—Ç—é, –ø–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        const blockScreen = document.createElement('div');
        blockScreen.id = 'soft-block-screen';
        blockScreen.style.cssText = `
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(26, 26, 26, 0.95);
            color: white;
            display: flex;
            align-items: center;
            justify-content: center;
            text-align: center;
            font-size: 16px;
            z-index: 999999;
            backdrop-filter: blur(5px);
        `;
        blockScreen.innerHTML = `
            <div style="max-width: 300px; padding: 20px;">
                <h2 style="margin-bottom: 15px;">üîê ${getLocalizedText('noTelegramId')}</h2>
                <p style="margin-bottom: 20px; opacity: 0.9;">${message}</p>
                <button onclick="window.WinixAuth.retryInit()" style="
                    background: #007ACC;
                    color: white;
                    border: none;
                    padding: 12px 24px;
                    border-radius: 8px;
                    cursor: pointer;
                    font-size: 14px;
                ">–°–ø—Ä–æ–±—É–≤–∞—Ç–∏ —â–µ —Ä–∞–∑</button>
            </div>
        `;

        // –í–∏–¥–∞–ª—è—î–º–æ —Å—Ç–∞—Ä–∏–π –µ–∫—Ä–∞–Ω —è–∫—â–æ —î
        const oldScreen = document.getElementById('soft-block-screen');
        if (oldScreen) oldScreen.remove();

        document.body.appendChild(blockScreen);
    }

    /**
     * –ü—Ä–∏—Ö–æ–≤–∞—Ç–∏ –µ–∫—Ä–∞–Ω –±–ª–æ–∫—É–≤–∞–Ω–Ω—è
     */
    function hideSoftBlockScreen() {
        const blockScreen = document.getElementById('soft-block-screen');
        if (blockScreen) {
            blockScreen.remove();
            console.log("‚úÖ AUTH: –ï–∫—Ä–∞–Ω –±–ª–æ–∫—É–≤–∞–Ω–Ω—è –ø—Ä–∏—Ö–æ–≤–∞–Ω–æ");
        }
    }

    /**
     * –û—Ç—Ä–∏–º–∞–Ω–Ω—è –ª–æ–∫–∞–ª—ñ–∑–æ–≤–∞–Ω–∏–π —Ç–µ–∫—Å—Ç –∑–∞ –ø–æ—Ç–æ—á–Ω–æ—é –º–æ–≤–æ—é
     */
    function getLocalizedText(key) {
        let currentLang = _currentLang;

        if (window.WinixLanguage && window.WinixLanguage.currentLang) {
            currentLang = window.WinixLanguage.currentLang;
        }

        if (MESSAGES[currentLang] && MESSAGES[currentLang][key]) {
            return MESSAGES[currentLang][key];
        }

        return MESSAGES.uk[key];
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É
     */
    function showError(message, type = 'error') {
        console.error("‚ùå AUTH: " + message);

        if (window.simpleAlert) {
            window.simpleAlert(message, type === 'error');
            return;
        }

        if (window.showToast) {
            window.showToast(message, type);
            return;
        }

        // Fallback alert
        if (type === 'error') {
            alert(message);
        }
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç–∏ –≤—ñ—Ç–∞–ª—å–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
     */
    function showWelcomeMessage() {
        console.log("üîê AUTH: –ü–æ–∫–∞–∑ –≤—ñ—Ç–∞–ª—å–Ω–æ–≥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è");
        const message = getLocalizedText('welcome');

        if (window.simpleAlert) {
            window.simpleAlert(message, false);
            return;
        }

        if (window.showToast) {
            window.showToast(message, 'success');
            return;
        }
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø—Ä–æ–±–ª–µ–º–∏ –∑ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è–º
     */
    function showConnectionIssue() {
        const message = getLocalizedText('connectionIssue');
        console.warn("‚ö†Ô∏è AUTH: " + message);

        if (window.showToast) {
            window.showToast(message, 'warning');
            return;
        }

        showError(message, 'warning');
    }

    // ======== –§–£–ù–ö–¶–Ü–á –ê–í–¢–û–†–ò–ó–ê–¶–Ü–á ========

    /**
     * –û—Ç—Ä–∏–º–∞—Ç–∏ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¢–Ü–õ–¨–ö–ò –∑ Telegram WebApp
     */
    function getTelegramUserId() {
        try {
            if (window.Telegram &&
                window.Telegram.WebApp &&
                window.Telegram.WebApp.initDataUnsafe &&
                window.Telegram.WebApp.initDataUnsafe.user &&
                window.Telegram.WebApp.initDataUnsafe.user.id) {

                const tgUserId = window.Telegram.WebApp.initDataUnsafe.user.id.toString();

                if (isValidId(tgUserId)) {
                    return tgUserId;
                }
            }

            return null;
        } catch (e) {
            console.error("üîê AUTH: –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è ID –∑ Telegram WebApp:", e);
            return null;
        }
    }

    /**
     * –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ API –º–æ–¥—É–ª—è
     */
    function hasApiModule() {
        try {
            return window.WinixAPI &&
                   typeof window.WinixAPI.apiRequest === 'function';
        } catch (e) {
            console.error("üîê AUTH: –ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ API –º–æ–¥—É–ª—è:", e);
            return false;
        }
    }

    /**
     * –û—Ç—Ä–∏–º–∞–Ω–Ω—è fallback –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
     */
    function getFallbackUserData(telegramId) {
        return {
            telegram_id: telegramId,
            username: `User_${telegramId.slice(-4)}`,
            balance: 0,
            coins: 0,
            is_new_user: false,
            fallback: true,
            offline_mode: true
        };
    }

    /**
     * –ü–û–ö–†–ê–©–ï–ù–ê —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Å–∏—Å—Ç–µ–º–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó
     */
    async function init() {
        console.log("üîê AUTH: –ó–∞–ø—É—Å–∫ –ü–û–ö–†–ê–©–ï–ù–û–á —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó");

        const now = Date.now();
        if ((now - _lastRequestTime) < MIN_REQUEST_INTERVAL) {
            console.log("üîê AUTH: –ß–∞—Å—Ç–∏–π –≤–∏–∫–ª–∏–∫ init, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∫–µ—à–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ");

            if (window.WinixAuth.currentUser) {
                return Promise.resolve(window.WinixAuth.currentUser);
            }

            return Promise.resolve(getFallbackUserData('000000'));
        }

        _lastRequestTime = now;

        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ Telegram ID
        const telegramId = getTelegramUserId();
        if (!telegramId) {
            console.warn("‚ö†Ô∏è AUTH: –ù–µ–º–∞—î Telegram ID, –∞–ª–µ –ø—Ä–æ–¥–æ–≤–∂—É—î–º–æ –∑ fallback");
            softBlockAccess();

            // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ fallback –¥–∞–Ω—ñ –∑–∞–º—ñ—Å—Ç—å –ø–æ–≤–Ω–æ—ó –±–ª–æ–∫—É–≤–∞–Ω–Ω—è
            const fallbackData = getFallbackUserData('000000');
            window.WinixAuth.currentUser = fallbackData;
            return Promise.resolve(fallbackData);
        }

        // –ü—Ä–∏—Ö–æ–≤—É—î–º–æ –µ–∫—Ä–∞–Ω –±–ª–æ–∫—É–≤–∞–Ω–Ω—è —è–∫—â–æ –≤—ñ–Ω —î
        hideSoftBlockScreen();

        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å API –º–æ–¥—É–ª—è
        if (!hasApiModule()) {
            console.warn("‚ö†Ô∏è AUTH: API –º–æ–¥—É–ª—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ fallback");
            showConnectionIssue();

            const fallbackData = getFallbackUserData(telegramId);
            window.WinixAuth.currentUser = fallbackData;
            return Promise.resolve(fallbackData);
        }

        try {
            console.log('üîÑ [AUTH] –°–ø—Ä–æ–±–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω—É');

            // –°–ø—Ä–æ–±—É—î–º–æ –æ–Ω–æ–≤–∏—Ç–∏ —Ç–æ–∫–µ–Ω (–±–µ–∑ –±–ª–æ–∫—É–≤–∞–Ω–Ω—è –ø—Ä–∏ –ø–æ–º–∏–ª—Ü—ñ)
            try {
                await window.WinixAPI.refreshToken();
                console.log('‚úÖ [AUTH] –¢–æ–∫–µ–Ω —É—Å–ø—ñ—à–Ω–æ –æ–Ω–æ–≤–ª–µ–Ω–æ');
            } catch (e) {
                console.warn("‚ö†Ô∏è AUTH: –ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω—É, –ø—Ä–æ–¥–æ–≤–∂—É—î–º–æ –±–µ–∑ –Ω—å–æ–≥–æ:", e);
                showConnectionIssue();
            }

            // –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ (–∑ fallback –ø—Ä–∏ –ø–æ–º–∏–ª—Ü—ñ)
            return await getUserData();
        } catch (error) {
            console.warn("‚ö†Ô∏è AUTH: –ü–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ fallback:", error);
            showConnectionIssue();

            const fallbackData = getFallbackUserData(telegramId);
            window.WinixAuth.currentUser = fallbackData;
            return Promise.resolve(fallbackData);
        }
    }

    /**
     * –ü–û–ö–†–ê–©–ï–ù–ê –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ
     */
    async function authorizeUser(userData) {
        if (_authRequestInProgress) {
            console.log("üîê AUTH: –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è –≤–∂–µ –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è");
            return Promise.resolve(window.WinixAuth.currentUser || {});
        }

        _authRequestInProgress = true;

        try {
            const telegramId = getTelegramUserId();
            if (!telegramId) {
                console.warn("‚ö†Ô∏è AUTH: –ù–µ–º–∞—î Telegram ID –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó");
                throw new Error("No Telegram ID");
            }

            // –û–Ω–æ–≤–ª—é—î–º–æ userData –∑ –∞–∫—Ç—É–∞–ª—å–Ω–∏–º ID
            userData = {
                ...userData,
                id: telegramId,
                telegram_id: telegramId
            };

            // –ü–æ–∫–∞–∑—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
            const spinner = document.getElementById('loading-spinner');
            if (spinner) spinner.classList.add('show');

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å API –º–æ–¥—É–ª—è
            if (!hasApiModule()) {
                console.warn("‚ö†Ô∏è AUTH: API –º–æ–¥—É–ª—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó");
                throw new Error("API module not available");
            }

            // –í–∏–∫–æ–Ω—É—î–º–æ –∑–∞–ø–∏—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó –∑ –ø–æ–∫—Ä–∞—â–µ–Ω–æ—é –æ–±—Ä–æ–±–∫–æ—é –ø–æ–º–∏–ª–æ–∫
            const response = await window.WinixAPI.apiRequest('api/auth', 'POST', userData, {
                timeout: 12000,
                suppressErrors: true // –í–∫–ª—é—á–∞—î–º–æ –º'—è–∫—É –æ–±—Ä–æ–±–∫—É –ø–æ–º–∏–ª–æ–∫
            });

            // –ü—Ä–∏—Ö–æ–≤—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
            if (spinner) spinner.classList.remove('show');

            if (response && response.status === 'success' && response.data) {
                // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
                window.WinixAuth.currentUser = response.data;
                console.log("‚úÖ AUTH: –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —É—Å–ø—ñ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–æ", response.data);

                // –ü–æ–∫–∞–∑—É—î–º–æ –≤—ñ—Ç–∞–ª—å–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–ª—è –Ω–æ–≤–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
                if (response.data.is_new_user) {
                    showWelcomeMessage();
                }

                // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–¥—ñ—é –ø—Ä–æ —É—Å–ø—ñ—à–Ω—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—é
                document.dispatchEvent(new CustomEvent(EVENT_AUTH_SUCCESS, {
                    detail: response.data
                }));

                return response.data;
            } else {
                // –ú'—è–∫–∞ –æ–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–∫–∏ - –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ fallback
                console.warn("‚ö†Ô∏è AUTH: –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ fallback –¥–∞–Ω—ñ");
                showConnectionIssue();

                const fallbackData = getFallbackUserData(telegramId);
                window.WinixAuth.currentUser = fallbackData;
                return fallbackData;
            }
        } catch (error) {
            console.warn("‚ö†Ô∏è AUTH: –ü–æ–º–∏–ª–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ fallback", error);

            // –ü—Ä–∏—Ö–æ–≤—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
            const spinner = document.getElementById('loading-spinner');
            if (spinner) spinner.classList.remove('show');

            // –ó–∞–º—ñ—Å—Ç—å –±–ª–æ–∫—É–≤–∞–Ω–Ω—è –ø–æ–∫–∞–∑—É—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è —ñ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ fallback
            const telegramId = getTelegramUserId();
            if (telegramId) {
                showConnectionIssue();
                const fallbackData = getFallbackUserData(telegramId);
                window.WinixAuth.currentUser = fallbackData;

                // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–¥—ñ—é –ø—Ä–æ –ø–æ–º–∏–ª–∫—É, –∞–ª–µ –Ω–µ –±–ª–æ–∫—É—î–º–æ —Ä–æ–±–æ—Ç—É
                document.dispatchEvent(new CustomEvent(EVENT_AUTH_ERROR, {
                    detail: { error, fallback: true }
                }));

                return fallbackData;
            } else {
                // –¢—ñ–ª—å–∫–∏ —è–∫—â–æ –Ω–µ–º–∞—î Telegram ID –≤–∑–∞–≥–∞–ª—ñ
                softBlockAccess();
                throw error;
            }
        } finally {
            _authRequestInProgress = false;
        }
    }

    /**
     * –ü–û–ö–†–ê–©–ï–ù–ï –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ —Å–µ—Ä–≤–µ—Ä–∞
     */
    async function getUserData(forceRefresh = false) {
        const telegramId = getTelegramUserId();
        if (!telegramId) {
            console.warn("‚ö†Ô∏è AUTH: –ù–µ–º–∞—î Telegram ID –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö");
            softBlockAccess();
            return getFallbackUserData('000000');
        }

        // –ó–∞–ø–æ–±—ñ–≥–∞–Ω–Ω—è –ø–∞—Ä–∞–ª–µ–ª—å–Ω–∏–º –∑–∞–ø–∏—Ç–∞–º
        if (_userDataRequestInProgress) {
            console.log("üîê AUTH: –ó–∞–ø–∏—Ç –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤–∂–µ –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è");

            if (window.WinixAuth.currentUser) {
                return Promise.resolve(window.WinixAuth.currentUser);
            }

            return Promise.resolve(getFallbackUserData(telegramId));
        }

        // –ó–∞–ø–æ–±—ñ–≥–∞–Ω–Ω—è —á–∞—Å—Ç–∏–º –∑–∞–ø–∏—Ç–∞–º
        const now = Date.now();
        const timeSinceLastRequest = now - _lastRequestTime;
        if (timeSinceLastRequest < MIN_REQUEST_INTERVAL && !forceRefresh) {
            console.log(`üîê AUTH: –ó–∞–Ω–∞–¥—Ç–æ —á–∞—Å—Ç–∏–π –∑–∞–ø–∏—Ç –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞`);

            if (window.WinixAuth.currentUser) {
                return Promise.resolve(window.WinixAuth.currentUser);
            }

            return Promise.resolve(getFallbackUserData(telegramId));
        }

        _lastRequestTime = now;
        _userDataRequestInProgress = true;

        try {
            // –ü–æ–∫–∞–∑—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
            const spinner = document.getElementById('loading-spinner');
            if (spinner) spinner.classList.add('show');

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å API –º–æ–¥—É–ª—è
            if (!hasApiModule()) {
                console.warn("‚ö†Ô∏è AUTH: API –º–æ–¥—É–ª—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π");
                throw new Error("API module not available");
            }

            // –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ –º'—è–∫–æ—é –æ–±—Ä–æ–±–∫–æ—é –ø–æ–º–∏–ª–æ–∫
            const response = await window.WinixAPI.getUserData(forceRefresh);

            // –ü—Ä–∏—Ö–æ–≤—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
            if (spinner) spinner.classList.remove('show');

            if (response && response.status === 'success' && response.data) {
                // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –¥–∞–Ω—ñ
                window.WinixAuth.currentUser = response.data;
                console.log("‚úÖ AUTH: –î–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —É—Å–ø—ñ—à–Ω–æ –æ—Ç—Ä–∏–º–∞–Ω–æ", response.data);

                // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–¥—ñ—é –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö
                document.dispatchEvent(new CustomEvent(EVENT_USER_DATA_UPDATED, {
                    detail: response.data,
                    source: 'auth.js'
                }));

                return response.data;
            } else {
                throw new Error(response?.message || "–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö");
            }
        } catch (error) {
            console.warn("‚ö†Ô∏è AUTH: –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ fallback", error);

            // –ü—Ä–∏—Ö–æ–≤—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
            const spinner = document.getElementById('loading-spinner');
            if (spinner) spinner.classList.remove('show');

            // –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è –ø—Ä–æ –ø—Ä–æ–±–ª–µ–º–∏ –∑ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è–º
            showConnectionIssue();

            // –ì–µ–Ω–µ—Ä—É—î–º–æ –ø–æ–¥—ñ—é –ø—Ä–æ –ø–æ–º–∏–ª–∫—É
            document.dispatchEvent(new CustomEvent(EVENT_AUTH_ERROR, {
                detail: {
                    error,
                    method: 'getUserData',
                    fallback: true
                }
            }));

            // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ fallback –¥–∞–Ω—ñ –∑–∞–º—ñ—Å—Ç—å –ø–æ—Ä–æ–∂–Ω—å–æ–≥–æ –æ–±'—î–∫—Ç–∞
            const fallbackData = getFallbackUserData(telegramId);
            window.WinixAuth.currentUser = fallbackData;
            return fallbackData;
        } finally {
            _userDataRequestInProgress = false;
        }
    }

    /**
     * –§—É–Ω–∫—Ü—ñ—è –∑–∞–ø—É—Å–∫—É –ø–µ—Ä—ñ–æ–¥–∏—á–Ω–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è (–º–µ–Ω—à –∞–≥—Ä–µ—Å–∏–≤–Ω–∞)
     */
    function startPeriodicUpdate(interval = 300000) { // 5 —Ö–≤–∏–ª–∏–Ω –∑–∞–º—ñ—Å—Ç—å 2
        if (_periodicUpdateInterval) {
            stopPeriodicUpdate();
        }

        _periodicUpdateInterval = setInterval(function() {
            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∞—Å –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ –∑–∞–ø–∏—Ç—É —Ç–∞ —á–∏ –Ω–µ –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è —ñ–Ω—à–∏–π –∑–∞–ø–∏—Ç
            if ((Date.now() - _lastRequestTime) >= MIN_REQUEST_INTERVAL &&
                !_userDataRequestInProgress &&
                !_authRequestInProgress) {

                getUserData()
                    .then(() => console.log("‚úÖ AUTH: –ü–µ—Ä—ñ–æ–¥–∏—á–Ω–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞"))
                    .catch(err => console.warn("‚ö†Ô∏è AUTH: –ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä—ñ–æ–¥–∏—á–Ω–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è:", err));
            }
        }, interval);

        console.log(`üîÑ AUTH: –ú'—è–∫–µ –ø–µ—Ä—ñ–æ–¥–∏—á–Ω–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ø—É—â–µ–Ω–æ (—ñ–Ω—Ç–µ—Ä–≤–∞–ª: ${interval}ms)`);
    }

    /**
     * –§—É–Ω–∫—Ü—ñ—è –∑—É–ø–∏–Ω–∫–∏ –ø–µ—Ä—ñ–æ–¥–∏—á–Ω–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
     */
    function stopPeriodicUpdate() {
        if (_periodicUpdateInterval) {
            clearInterval(_periodicUpdateInterval);
            _periodicUpdateInterval = null;
            console.log("‚èπÔ∏è AUTH: –ü–µ—Ä—ñ–æ–¥–∏—á–Ω–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∑—É–ø–∏–Ω–µ–Ω–æ");
        }
    }

    /**
     * –ü—Ä–∏–º—É—Å–æ–≤–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
     */
    async function refreshUserData() {
        console.log("üîÑ AUTH: –ü—Ä–∏–º—É—Å–æ–≤–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞");
        return getUserData(true);
    }

    /**
     * –ü–æ–≤—Ç–æ—Ä–Ω–∞ —Å–ø—Ä–æ–±–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
     */
    async function retryInit() {
        console.log("üîÑ AUTH: –ü–æ–≤—Ç–æ—Ä–Ω–∞ —Å–ø—Ä–æ–±–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó");

        // –°–∫–∏–¥–∞—î–º–æ —á–∞—Å –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ –∑–∞–ø–∏—Ç—É
        _lastRequestTime = 0;

        // –ü—Ä–∏—Ö–æ–≤—É—î–º–æ –µ–∫—Ä–∞–Ω –±–ª–æ–∫—É–≤–∞–Ω–Ω—è
        hideSoftBlockScreen();

        try {
            const userData = await init();
            console.log("‚úÖ AUTH: –ü–æ–≤—Ç–æ—Ä–Ω–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —É—Å–ø—ñ—à–Ω–∞");
            return userData;
        } catch (error) {
            console.warn("‚ö†Ô∏è AUTH: –ü–æ–º–∏–ª–∫–∞ –ø–æ–≤—Ç–æ—Ä–Ω–æ—ó —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó:", error);
            return getFallbackUserData(getTelegramUserId() || '000000');
        }
    }

    /**
     * –û—á–∏—â–µ–Ω–Ω—è –∫–µ—à—É –¥–∞–Ω–∏—Ö
     */
    function clearCache() {
        console.log("üßπ AUTH: –û—á–∏—â–µ–Ω–Ω—è –∫–µ—à—É –¥–∞–Ω–∏—Ö");
        window.WinixAuth.currentUser = null;
        _lastRequestTime = 0;

        // –¢–∞–∫–æ–∂ –æ—á–∏—â–∞—î–º–æ –∫–µ—à –≤ WinixAPI
        if (hasApiModule() && typeof window.WinixAPI.clearCache === 'function') {
            window.WinixAPI.clearCache();
        }

        return window.WinixAuth;
    }

    // ======== –°–¢–í–û–†–ï–ù–ù–Ø –ü–£–ë–õ–Ü–ß–ù–û–ì–û API ========

    window.WinixAuth = {
        // –î–∞–Ω—ñ –ø–æ—Ç–æ—á–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        currentUser: null,

        // –ü—Ä–∞–ø–æ—Ä—Ü—ñ —Å—Ç–∞–Ω—É
        isInitialized: false,
        isAuthorizing: false,

        // –ú–æ–≤–∏ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É
        lang: MESSAGES,

        // –ú–µ—Ç–æ–¥–∏ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏
        isValidId,

        // –û—Å–Ω–æ–≤–Ω—ñ –º–µ—Ç–æ–¥–∏
        init,
        authorizeUser,
        getUserData,
        getTelegramUserId,
        refreshUserData,
        clearCache,
        retryInit, // –ù–û–í–ò–ô –º–µ—Ç–æ–¥

        // –ú–µ—Ç–æ–¥–∏ –¥–ª—è –ø–æ–∫–∞–∑—É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
        showError,
        showWelcomeMessage,
        getLocalizedText,
        showConnectionIssue, // –ù–û–í–ò–ô –º–µ—Ç–æ–¥

        // –ú–µ—Ç–æ–¥–∏ –¥–ª—è –ø–µ—Ä—ñ–æ–¥–∏—á–Ω–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
        startPeriodicUpdate,
        stopPeriodicUpdate,

        // –ú–µ—Ç–æ–¥–∏ –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ –±–ª–æ–∫—É–≤–∞–Ω–Ω—è–º
        softBlockAccess,
        hideSoftBlockScreen,

        // Fallback –º–µ—Ç–æ–¥–∏
        getFallbackUserData,
        hasApiModule,

        // –¢–µ—Ö–Ω—ñ—á–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è
        version: '3.0.0'
    };

    // ======== –ê–í–¢–û–ú–ê–¢–ò–ß–ù–ê –Ü–ù–Ü–¶–Ü–ê–õ–Ü–ó–ê–¶–Ü–Ø ========

    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ DOM
    document.addEventListener('DOMContentLoaded', function() {
        console.log("üîê AUTH: DOMContentLoaded, –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è");

        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ Telegram ID
        const telegramId = getTelegramUserId();
        if (!telegramId) {
            console.warn("‚ö†Ô∏è AUTH: –ù–µ–º–∞—î Telegram ID –ø—Ä–∏ DOMContentLoaded");
            // –ù–ï –±–ª–æ–∫—É—î–º–æ –æ–¥—Ä–∞–∑—É, –¥–∞—î–º–æ —à–∞–Ω—Å
        }

        // –û–Ω–æ–≤–ª—é—î–º–æ –µ–ª–µ–º–µ–Ω—Ç –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ, —è–∫—â–æ –≤—ñ–Ω —î
        const userIdElement = document.getElementById('user-id');
        if (userIdElement && telegramId) {
            userIdElement.textContent = telegramId;
            console.log(`üîê AUTH: –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞: ${telegramId}`);
        }

        // –ó–∞–ø—É—Å–∫–∞—î–º–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—é –∑ fallback –æ–±—Ä–æ–±–∫–æ—é
        init()
            .then((userData) => {
                console.log("‚úÖ AUTH: –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—é —É—Å–ø—ñ—à–Ω–æ –≤–∏–∫–æ–Ω–∞–Ω–æ", userData);
                window.WinixAuth.isInitialized = true;
            })
            .catch(error => {
                console.warn("‚ö†Ô∏è AUTH: –ü–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó, –∞–ª–µ –ø—Ä–æ–¥–æ–≤–∂—É—î–º–æ —Ä–æ–±–æ—Ç—É:", error);
                window.WinixAuth.isInitialized = true; // –ü–æ–∑–Ω–∞—á–∞—î–º–æ —è–∫ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–∏–π –Ω–∞–≤—ñ—Ç—å –∑ –ø–æ–º–∏–ª–∫–∞–º–∏
            });
    });

    // –ó–∞–ø—É—Å–∫–∞—î–º–æ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—é –¥–ª—è –≤–µ–±-–∞–ø–ª—ñ–∫–∞—Ü—ñ–π, —è–∫—ñ –≤–∂–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–∏–ª–∏—Å—è
    if (document.readyState === 'complete' || document.readyState === 'interactive') {
        console.log("üîê AUTH: –î–æ–∫—É–º–µ–Ω—Ç –≤–∂–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ, –∑–∞–ø—É—Å–∫ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó");

        setTimeout(() => {
            const telegramId = getTelegramUserId();

            // –û–Ω–æ–≤–ª—é—î–º–æ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ (–∑ fallback –æ–±—Ä–æ–±–∫–æ—é)
            getUserData()
                .then((userData) => {
                    console.log("‚úÖ AUTH: –î–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –æ–Ω–æ–≤–ª–µ–Ω–æ –ø—ñ—Å–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è", userData);
                    window.WinixAuth.isInitialized = true;
                })
                .catch(error => {
                    console.warn("‚ö†Ô∏è AUTH: –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ fallback", error);
                    window.WinixAuth.isInitialized = true;
                });
        }, 100);
    }

    // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ—ó 'telegram-ready'
    document.addEventListener('telegram-ready', function() {
        console.log("üîê AUTH: –û—Ç—Ä–∏–º–∞–Ω–æ –ø–æ–¥—ñ—é telegram-ready, –∑–∞–ø—É—Å–∫ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó");

        getUserData()
            .then((userData) => {
                console.log("‚úÖ AUTH: –î–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –æ–Ω–æ–≤–ª–µ–Ω–æ –ø—ñ—Å–ª—è telegram-ready", userData);
                window.WinixAuth.isInitialized = true;
            })
            .catch(error => {
                console.warn("‚ö†Ô∏è AUTH: –ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –ø—ñ—Å–ª—è telegram-ready, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ fallback", error);
                window.WinixAuth.isInitialized = true;
            });
    });

    // –ó–∞–ø—É—Å–∫–∞—î–º–æ –º'—è–∫–µ –ø–µ—Ä—ñ–æ–¥–∏—á–Ω–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
    startPeriodicUpdate();

    // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ–π –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó –∑ —ñ–Ω—à–∏–º–∏ –º–æ–¥—É–ª—è–º–∏
    document.addEventListener(EVENT_USER_DATA_UPDATED, function(event) {
        if (event.detail && event.source !== 'auth.js') {
            console.log("üîÑ AUTH: –û–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ —ñ–Ω—à–æ–≥–æ –º–æ–¥—É–ª—è");
            window.WinixAuth.currentUser = event.detail;
        }
    });

    console.log("‚úÖ AUTH: –í–ò–ü–†–ê–í–õ–ï–ù–£ —Å–∏—Å—Ç–µ–º—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó —É—Å–ø—ñ—à–Ω–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ");
})();