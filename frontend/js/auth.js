/**
 * auth.js - –ú–æ–¥—É–ª—å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó –¥–ª—è Telegram Mini App
 * –í–µ—Ä—Å—ñ—è –±–µ–∑ –∑–∞–≥–ª—É—à–æ–∫ - —Ç—ñ–ª—å–∫–∏ —Ä–µ–∞–ª—å–Ω—ñ –¥–∞–Ω—ñ –∑ –±–µ–∫–µ–Ω–¥—É
 * @version 2.0.0
 */

(function() {
    'use strict';

    console.log("üîê AUTH: –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Å–∏—Å—Ç–µ–º–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó");

    // ======== –ü–†–ò–í–ê–¢–ù–Ü –ó–ú–Ü–ù–ù–Ü ========

    // –§–ª–∞–≥–∏ –¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª—é –∑–∞–ø–∏—Ç—ñ–≤
    let _authRequestInProgress = false;
    let _userDataRequestInProgress = false;
    let _lastRequestTime = 0;

    // –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–π —ñ–Ω—Ç–µ—Ä–≤–∞–ª –º—ñ–∂ –∑–∞–ø–∏—Ç–∞–º–∏ (30 —Å–µ–∫—É–Ω–¥)
    const MIN_REQUEST_INTERVAL = 30000;

    // –ü—ñ–¥—Ç—Ä–∏–º–∫–∞ –ø–æ–¥—ñ–π
    const EVENT_USER_DATA_UPDATED = 'user-data-updated';
    const EVENT_AUTH_SUCCESS = 'auth-success';
    const EVENT_AUTH_ERROR = 'auth-error';
    const EVENT_ACCESS_DENIED = 'access-denied';

    // –î–ª—è –ø–µ—Ä—ñ–æ–¥–∏—á–Ω–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
    let _periodicUpdateInterval = null;

    // –ü–æ—Ç–æ—á–Ω–∞ –º–æ–≤–∞ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É
    let _currentLang = 'uk';

    // –¢–µ–∫—Å—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
    const MESSAGES = {
        uk: {
            authError: "–ü–æ–º–∏–ª–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó. –°–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–∏ –¥–æ–¥–∞—Ç–æ–∫.",
            dataError: "–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.",
            welcome: "–í—ñ—Ç–∞—î–º–æ —É WINIX!",
            noTelegramId: "–î–æ–¥–∞—Ç–æ–∫ –¥–æ—Å—Ç—É–ø–Ω–∏–π —Ç—ñ–ª—å–∫–∏ —á–µ—Ä–µ–∑ Telegram",
            accessDenied: "–î–æ—Å—Ç—É–ø –∑–∞–±–æ—Ä–æ–Ω–µ–Ω–æ. –í—ñ–¥–∫—Ä–∏–π—Ç–µ –¥–æ–¥–∞—Ç–æ–∫ —á–µ—Ä–µ–∑ Telegram."
        },
        ru: {
            authError: "–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.",
            dataError: "–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.",
            welcome: "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ WINIX!",
            noTelegramId: "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ Telegram",
            accessDenied: "–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω. –û—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —á–µ—Ä–µ–∑ Telegram."
        },
        en: {
            authError: "Authorization error. Try restarting the app.",
            dataError: "Error retrieving user data.",
            welcome: "Welcome to WINIX!",
            noTelegramId: "App is only available through Telegram",
            accessDenied: "Access denied. Open the app through Telegram."
        }
    };

    // ======== TELEGRAM WEBAPP –Ü–ù–Ü–¶–Ü–ê–õ–Ü–ó–ê–¶–Ü–Ø ========

    if (window.Telegram && window.Telegram.WebApp) {
        window.Telegram.WebApp.ready();
        window.Telegram.WebApp.expand();
        console.log("üîê AUTH: Telegram WebApp —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ");
    }

    // ======== –î–û–ü–û–ú–Ü–ñ–ù–Ü –§–£–ù–ö–¶–Ü–á ========

    /**
     * –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –≤–∞–ª—ñ–¥–Ω–æ—Å—Ç—ñ ID
     * @param {any} id - ID –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏
     * @returns {boolean} - –ß–∏ –≤–∞–ª—ñ–¥–Ω–∏–π ID
     */
    function isValidId(id) {
        return id &&
               id !== 'undefined' &&
               id !== 'null' &&
               id !== undefined &&
               id !== null &&
               typeof id !== 'function' &&
               id.toString().trim() !== '' &&
               !id.toString().includes('function') &&
               !id.toString().includes('=>') &&
               /^\d+$/.test(id.toString()); // –¢—ñ–ª—å–∫–∏ —Ü–∏—Ñ—Ä–∏
    }

    /**
     * –ë–ª–æ–∫—É–≤–∞–Ω–Ω—è –¥–æ—Å—Ç—É–ø—É –¥–æ –¥–æ–¥–∞—Ç–∫—É
     */
    function blockAccess() {
        console.error("‚ùå AUTH: –î–æ—Å—Ç—É–ø –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–æ - –Ω–µ–º–∞—î –≤–∞–ª—ñ–¥–Ω–æ–≥–æ Telegram ID");

        // –ì–µ–Ω–µ—Ä—É—î–º–æ –ø–æ–¥—ñ—é –ø—Ä–æ –±–ª–æ–∫—É–≤–∞–Ω–Ω—è –¥–æ—Å—Ç—É–ø—É
        document.dispatchEvent(new CustomEvent(EVENT_ACCESS_DENIED));

        // –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        const message = getLocalizedText('accessDenied');
        showError(message);

        // –ü—Ä–∏—Ö–æ–≤—É—î–º–æ –∫–æ–Ω—Ç–µ–Ω—Ç —Å—Ç–æ—Ä—ñ–Ω–∫–∏
        if (document.body) {
            document.body.style.display = 'none';
        }

        // –°—Ç–≤–æ—Ä—é—î–º–æ –µ–∫—Ä–∞–Ω –±–ª–æ–∫—É–≤–∞–Ω–Ω—è
        const blockScreen = document.createElement('div');
        blockScreen.style.cssText = `
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: #1a1a1a;
            color: white;
            display: flex;
            align-items: center;
            justify-content: center;
            text-align: center;
            font-size: 18px;
            z-index: 999999;
        `;
        blockScreen.innerHTML = `
            <div>
                <h2>${getLocalizedText('noTelegramId')}</h2>
                <p>${message}</p>
            </div>
        `;
        document.body.appendChild(blockScreen);
    }

    /**
     * –û—Ç—Ä–∏–º–∞–Ω–Ω—è –ª–æ–∫–∞–ª—ñ–∑–æ–≤–∞–Ω–∏–π —Ç–µ–∫—Å—Ç –∑–∞ –ø–æ—Ç–æ—á–Ω–æ—é –º–æ–≤–æ—é
     * @param {string} key - –ö–ª—é—á –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
     * @returns {string} - –õ–æ–∫–∞–ª—ñ–∑–æ–≤–∞–Ω–∏–π —Ç–µ–∫—Å—Ç
     */
    function getLocalizedText(key) {
        let currentLang = _currentLang;

        if (window.WinixLanguage && window.WinixLanguage.currentLang) {
            currentLang = window.WinixLanguage.currentLang;
        }

        if (MESSAGES[currentLang] && MESSAGES[currentLang][key]) {
            return MESSAGES[currentLang][key];
        }

        return MESSAGES.uk[key];
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É
     * @param {string} message - –¢–µ–∫—Å—Ç –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
     */
    function showError(message) {
        console.error("‚ùå AUTH: " + message);

        if (window.simpleAlert) {
            window.simpleAlert(message, true);
            return;
        }

        if (window.showToast) {
            window.showToast(message, true);
            return;
        }

        alert(message);
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç–∏ –≤—ñ—Ç–∞–ª—å–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
     */
    function showWelcomeMessage() {
        console.log("üîê AUTH: –ü–æ–∫–∞–∑ –≤—ñ—Ç–∞–ª—å–Ω–æ–≥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è");
        const message = getLocalizedText('welcome');

        if (window.simpleAlert) {
            window.simpleAlert(message, false);
            return;
        }

        if (window.showToast) {
            window.showToast(message);
            return;
        }

        alert(message);
    }

    // ======== –§–£–ù–ö–¶–Ü–á –ê–í–¢–û–†–ò–ó–ê–¶–Ü–á ========

    /**
     * –û—Ç—Ä–∏–º–∞—Ç–∏ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¢–Ü–õ–¨–ö–ò –∑ Telegram WebApp
     * @returns {string|null} ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∞–±–æ null
     */
    function getTelegramUserId() {
        try {
            // –¢–Ü–õ–¨–ö–ò Telegram WebApp —è–∫ –¥–∂–µ—Ä–µ–ª–æ ID
            if (window.Telegram &&
                window.Telegram.WebApp &&
                window.Telegram.WebApp.initDataUnsafe &&
                window.Telegram.WebApp.initDataUnsafe.user &&
                window.Telegram.WebApp.initDataUnsafe.user.id) {

                const tgUserId = window.Telegram.WebApp.initDataUnsafe.user.id.toString();

                if (isValidId(tgUserId)) {
                    return tgUserId;
                }
            }

            return null;
        } catch (e) {
            console.error("üîê AUTH: –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è ID –∑ Telegram WebApp:", e);
            return null;
        }
    }

    /**
     * –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ API –º–æ–¥—É–ª—è
     * @returns {boolean} –ß–∏ –¥–æ—Å—Ç—É–ø–Ω–∏–π API –º–æ–¥—É–ª—å
     */
    function hasApiModule() {
        try {
            return window.WinixAPI &&
                   typeof window.WinixAPI.apiRequest === 'function';
        } catch (e) {
            console.error("üîê AUTH: –ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ API –º–æ–¥—É–ª—è:", e);
            return false;
        }
    }

    /**
     * –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Å–∏—Å—Ç–µ–º–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó
     * @returns {Promise<Object>} –û–±'—î–∫—Ç –∑ –¥–∞–Ω–∏–º–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
     */
    async function init() {
    console.log("üîê AUTH: –ó–∞–ø—É—Å–∫ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó");

    const now = Date.now();
    if ((now - _lastRequestTime) < MIN_REQUEST_INTERVAL) {
        console.log("üîê AUTH: –ß–∞—Å—Ç—ñ –≤–∏–∫–ª–∏–∫–∏ init, —ñ–≥–Ω–æ—Ä—É—î–º–æ");
        if (window.WinixAuth.currentUser) {
            return Promise.resolve(window.WinixAuth.currentUser);
        }
        return Promise.resolve({});
    }

    _lastRequestTime = now;

    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ Telegram ID
    const telegramId = getTelegramUserId();
    if (!telegramId) {
        blockAccess();
        return Promise.reject(new Error('No Telegram ID'));
    }

    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å API –º–æ–¥—É–ª—è
    if (!hasApiModule()) {
        console.error("‚ö†Ô∏è AUTH: API –º–æ–¥—É–ª—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π");
        showError(getLocalizedText('authError'));
        return Promise.reject(new Error('API module not available'));
    }

 try {
    // –ì–æ—Ç—É—î–º–æ –¥–∞–Ω—ñ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó
    const authData = {
        id: telegramId,
        telegram_id: telegramId
    };

    // –ö–†–ò–¢–ò–ß–ù–û: –î–æ–¥–∞—î–º–æ initData –û–î–†–ê–ó–£ –ø—Ä–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—ñ authData
    if (window.Telegram && window.Telegram.WebApp && window.Telegram.WebApp.initData) {
        authData.initData = window.Telegram.WebApp.initData;
        console.log("‚úÖ AUTH: initData –¥–æ–¥–∞–Ω–æ –¥–æ authData (–¥–æ–≤–∂–∏–Ω–∞: " + authData.initData.length + ")");
    } else {
        console.error("‚ùå AUTH: Telegram WebApp initData –í–Ü–î–°–£–¢–ù–Ü–ô!");
        throw new Error("–î–æ–¥–∞—Ç–æ–∫ –ø–æ–≤–∏–Ω–µ–Ω –±—É—Ç–∏ –≤—ñ–¥–∫—Ä–∏—Ç–∏–π —á–µ—Ä–µ–∑ Telegram");
    }

        // –í–ê–ñ–õ–ò–í–û: –î–æ–¥–∞—î–º–æ –¥–∞–Ω—ñ –≤—ñ–¥ Telegram
        if (window.Telegram && window.Telegram.WebApp) {
            const tgWebApp = window.Telegram.WebApp;

            // –î–æ–¥–∞—î–º–æ initData –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –ø—ñ–¥–ø–∏—Å—É
            if (tgWebApp.initData) {
                authData.initData = tgWebApp.initData;
            }

            // –î–æ–¥–∞—î–º–æ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            if (tgWebApp.initDataUnsafe && tgWebApp.initDataUnsafe.user) {
                const tgUser = tgWebApp.initDataUnsafe.user;
                authData.username = tgUser.username;
                authData.first_name = tgUser.first_name;
                authData.last_name = tgUser.last_name;
                authData.language_code = tgUser.language_code;
            }
        }

        // –ê–≤—Ç–æ—Ä–∏–∑—É—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        return await authorizeUser(authData);
    } catch (error) {
        console.error("‚ùå AUTH: –ü–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó:", error);
        showError(getLocalizedText('authError'));
        return Promise.reject(error);
    }
}
    /**
     * –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ
     * @param {Object} userData - –î–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ Telegram
     * @returns {Promise<Object>} –û–±'—î–∫—Ç –∑ –¥–∞–Ω–∏–º–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
     */
    async function authorizeUser(userData) {
    if (_authRequestInProgress) {
        console.log("üîê AUTH: –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è –≤–∂–µ –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è");
        return Promise.reject(new Error("Authorization already in progress"));
    }

    _authRequestInProgress = true;

    try {
        // –û—Ç—Ä–∏–º—É—î–º–æ Telegram ID
        const telegramId = getTelegramUserId();
        if (!telegramId) {
            blockAccess();
            throw new Error("No Telegram ID");
        }

        // –û–Ω–æ–≤–ª—é—î–º–æ userData –∑ –∞–∫—Ç—É–∞–ª—å–Ω–∏–º ID
        userData = {
            ...userData,
            id: telegramId,
            telegram_id: telegramId
        };

        // –í–ê–ñ–õ–ò–í–û: –î–æ–¥–∞—î–º–æ initData –≤—ñ–¥ Telegram
        if (window.Telegram && window.Telegram.WebApp) {
            // –û—Ç—Ä–∏–º—É—î–º–æ –≤—Å—ñ –¥–∞–Ω—ñ –≤—ñ–¥ Telegram
            const tgWebApp = window.Telegram.WebApp;

            // –î–æ–¥–∞—î–º–æ initData (—Ü–µ –≥–æ–ª–æ–≤–Ω–µ –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –ø—ñ–¥–ø–∏—Å—É!)
            if (tgWebApp.initData) {
                userData.initData = tgWebApp.initData;
                console.log("‚úÖ AUTH: initData –¥–æ–¥–∞–Ω–æ –≤—ñ–¥ Telegram");
            }

            // –î–æ–¥–∞—î–º–æ –¥–æ–¥–∞—Ç–∫–æ–≤—ñ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —è–∫—â–æ —î
            if (tgWebApp.initDataUnsafe && tgWebApp.initDataUnsafe.user) {
                const tgUser = tgWebApp.initDataUnsafe.user;
                userData.username = userData.username || tgUser.username;
                userData.first_name = userData.first_name || tgUser.first_name;
                userData.last_name = userData.last_name || tgUser.last_name;
                userData.language_code = userData.language_code || tgUser.language_code;
            }
        }

        console.log('üîê AUTH: –î–∞–Ω—ñ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó –≥–æ—Ç–æ–≤—ñ:', {
            hasInitData: !!userData.initData,
            telegramId: userData.telegram_id,
            username: userData.username
        });

        // –ü–æ–∫–∞–∑—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
        const spinner = document.getElementById('loading-spinner');
        if (spinner) spinner.classList.add('show');

        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å API –º–æ–¥—É–ª—è
        if (!hasApiModule()) {
            throw new Error("API module not available");
        }

        console.log('üîê AUTH: –§—ñ–Ω–∞–ª—å–Ω—ñ –¥–∞–Ω—ñ –ø–µ—Ä–µ–¥ –≤—ñ–¥–ø—Ä–∞–≤–∫–æ—é:', {
    userData: userData,
    hasInitData: !!userData.initData,
    initDataPreview: userData.initData ? userData.initData.substring(0, 100) + '...' : '–í–Ü–î–°–£–¢–ù–Ü–ô',
    hasTelegramWebApp: !!window.Telegram?.WebApp,
    telegramInitData: window.Telegram?.WebApp?.initData ? '–Ñ' : '–ù–µ–º–∞—î'
});

// –ö–†–ò–¢–ò–ß–ù–ê –ü–ï–†–ï–í–Ü–†–ö–ê: –±–µ–∑ initData –Ω–µ –ø—Ä–æ–¥–æ–≤–∂—É—î–º–æ
if (!window.Telegram || !window.Telegram.WebApp || !window.Telegram.WebApp.initData) {
    console.error('‚ùå AUTH: –î–æ–¥–∞—Ç–æ–∫ –ù–ï –≤—ñ–¥–∫—Ä–∏—Ç–∏–π —á–µ—Ä–µ–∑ Telegram –∞–±–æ initData –≤—ñ–¥—Å—É—Ç–Ω—ñ–π!');
    throw new Error("–î–æ–¥–∞—Ç–æ–∫ –¥–æ—Å—Ç—É–ø–Ω–∏–π —Ç—ñ–ª—å–∫–∏ —á–µ—Ä–µ–∑ Telegram");
}

// –û–ë–û–í'–Ø–ó–ö–û–í–û: –î–æ–¥–∞—î–º–æ initData —è–∫—â–æ –π–æ–≥–æ —â–µ –Ω–µ–º–∞—î
if (!userData.initData && window.Telegram.WebApp.initData) {
    userData.initData = window.Telegram.WebApp.initData;
}
// –î–Ü–ê–ì–ù–û–°–¢–ò–ö–ê –ü–ï–†–ï–î –í–Ü–î–ü–†–ê–í–ö–û–Æ
console.log('üîê AUTH: === –î–Ü–ê–ì–ù–û–°–¢–ò–ö–ê –ü–ï–†–ï–î –ó–ê–ü–ò–¢–û–ú ===');
console.log('userData:', userData);
console.log('–ú–∞—î initData:', !!userData.initData);

// –°–ø—Ä–æ–±–∞ –¥–æ–¥–∞—Ç–∏ initData —è–∫—â–æ –π–æ–≥–æ –Ω–µ–º–∞—î
if (!userData.initData && window.Telegram?.WebApp?.initData) {
    userData.initData = window.Telegram.WebApp.initData;
    console.log('‚úÖ AUTH: initData –¥–æ–¥–∞–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ! –î–æ–≤–∂–∏–Ω–∞:', userData.initData.length);
} else if (!userData.initData) {
    console.error('‚ùå AUTH: initData –≤—ñ–¥—Å—É—Ç–Ω—ñ–π!');
    console.log('  Telegram WebApp:', window.Telegram?.WebApp);
}

        // –í–∏–∫–æ–Ω—É—î–º–æ –∑–∞–ø–∏—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó
        const response = await window.WinixAPI.apiRequest('/api/auth/telegram', 'POST', userData, {
            timeout: 15000,
            suppressErrors: false
        });

        // –ü—Ä–∏—Ö–æ–≤—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
        if (spinner) spinner.classList.remove('show');

        if (response && response.status === 'success' && response.user) {
            // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            window.WinixAuth.currentUser = response.user;
            console.log("‚úÖ AUTH: –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —É—Å–ø—ñ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–æ", response.user);

            // –ü–æ–∫–∞–∑—É—î–º–æ –≤—ñ—Ç–∞–ª—å–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–ª—è –Ω–æ–≤–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
            if (response.user.is_new_user) {
                showWelcomeMessage();
            }

            // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–¥—ñ—é –ø—Ä–æ —É—Å–ø—ñ—à–Ω—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—é
            document.dispatchEvent(new CustomEvent(EVENT_AUTH_SUCCESS, {
                detail: response.user
            }));

            return response.user;
        } else {
            throw new Error(response?.message || "–ü–æ–º–∏–ª–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó");
        }
    } catch (error) {
        console.error("‚ùå AUTH: –ü–æ–º–∏–ª–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó", error);

        // –ü—Ä–∏—Ö–æ–≤—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
        const spinner = document.getElementById('loading-spinner');
        if (spinner) spinner.classList.remove('show');

        showError(getLocalizedText('authError'));

        // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–¥—ñ—é –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó
        document.dispatchEvent(new CustomEvent(EVENT_AUTH_ERROR, {
            detail: error
        }));

        throw error;
    } finally {
        _authRequestInProgress = false;
    }
}

    /**
     * –û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ —Å–µ—Ä–≤–µ—Ä–∞
     * @param {boolean} forceRefresh - –ü—Ä–∏–º—É—Å–æ–≤–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö
     * @returns {Promise<Object>} –û–±'—î–∫—Ç –∑ –¥–∞–Ω–∏–º–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
     */
    async function getUserData(forceRefresh = false) {
        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ Telegram ID
        const telegramId = getTelegramUserId();
        if (!telegramId) {
            blockAccess();
            return Promise.reject(new Error('No Telegram ID'));
        }

        // –ó–∞–ø–æ–±—ñ–≥–∞–Ω–Ω—è –ø–∞—Ä–∞–ª–µ–ª—å–Ω–∏–º –∑–∞–ø–∏—Ç–∞–º
        if (_userDataRequestInProgress) {
            console.log("üîê AUTH: –ó–∞–ø–∏—Ç –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤–∂–µ –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è");

            if (window.WinixAuth.currentUser) {
                return Promise.resolve(window.WinixAuth.currentUser);
            }

            return Promise.resolve({});
        }

        // –ó–∞–ø–æ–±—ñ–≥–∞–Ω–Ω—è —á–∞—Å—Ç–∏–º –∑–∞–ø–∏—Ç–∞–º
        const now = Date.now();
        const timeSinceLastRequest = now - _lastRequestTime;
        if (timeSinceLastRequest < MIN_REQUEST_INTERVAL && !forceRefresh) {
            console.log(`üîê AUTH: –ó–∞–Ω–∞–¥—Ç–æ —á–∞—Å—Ç–∏–π –∑–∞–ø–∏—Ç –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞`);

            if (window.WinixAuth.currentUser) {
                return Promise.resolve(window.WinixAuth.currentUser);
            }

            return Promise.resolve({});
        }

        _lastRequestTime = now;
        _userDataRequestInProgress = true;

        try {
            // –ü–æ–∫–∞–∑—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
            const spinner = document.getElementById('loading-spinner');
            if (spinner) spinner.classList.add('show');

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å API –º–æ–¥—É–ª—è
            if (!hasApiModule()) {
                throw new Error("API module not available");
            }

            // –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            const response = await window.WinixAPI.getUserData(forceRefresh);

            // –ü—Ä–∏—Ö–æ–≤—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
            if (spinner) spinner.classList.remove('show');

            if (response && response.status === 'success' && response.user) {
                // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –¥–∞–Ω—ñ
                window.WinixAuth.currentUser = response.user;
                console.log("‚úÖ AUTH: –î–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —É—Å–ø—ñ—à–Ω–æ –æ—Ç—Ä–∏–º–∞–Ω–æ", response.user);

                // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–¥—ñ—é –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö
                document.dispatchEvent(new CustomEvent(EVENT_USER_DATA_UPDATED, {
                    detail: response.user,
                    source: 'auth.js'
                }));

                return response.user;
            } else {
                throw new Error(response?.message || "–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö");
            }
        } catch (error) {
            console.error("‚ùå AUTH: –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞", error);

            // –ü—Ä–∏—Ö–æ–≤—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
            const spinner = document.getElementById('loading-spinner');
            if (spinner) spinner.classList.remove('show');

            showError(getLocalizedText('dataError'));

            // –ì–µ–Ω–µ—Ä—É—î–º–æ –ø–æ–¥—ñ—é –ø—Ä–æ –ø–æ–º–∏–ª–∫—É
            document.dispatchEvent(new CustomEvent(EVENT_AUTH_ERROR, {
                detail: {
                    error,
                    method: 'getUserData'
                }
            }));

            // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –ø–æ—Ä–æ–∂–Ω—ñ–π –æ–±'—î–∫—Ç –ø—Ä–∏ –ø–æ–º–∏–ª—Ü—ñ
            return {};
        } finally {
            _userDataRequestInProgress = false;
        }
    }

    /**
     * –§—É–Ω–∫—Ü—ñ—è –∑–∞–ø—É—Å–∫—É –ø–µ—Ä—ñ–æ–¥–∏—á–Ω–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
     * @param {number} interval - –Ü–Ω—Ç–µ—Ä–≤–∞–ª –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –≤ –º—ñ–ª—ñ—Å–µ–∫—É–Ω–¥–∞—Ö
     */
    function startPeriodicUpdate(interval = 120000) { // 2 —Ö–≤–∏–ª–∏–Ω–∏ –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
        if (_periodicUpdateInterval) {
            stopPeriodicUpdate();
        }

        _periodicUpdateInterval = setInterval(function() {
            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∞—Å –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ –∑–∞–ø–∏—Ç—É
            if ((Date.now() - _lastRequestTime) >= MIN_REQUEST_INTERVAL && !_userDataRequestInProgress) {
                getUserData()
                    .then(() => console.log("‚úÖ AUTH: –ü–µ—Ä—ñ–æ–¥–∏—á–Ω–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞"))
                    .catch(err => console.warn("‚ö†Ô∏è AUTH: –ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä—ñ–æ–¥–∏—á–Ω–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è:", err));
            }
        }, interval);

        console.log(`üîÑ AUTH: –ü–µ—Ä—ñ–æ–¥–∏—á–Ω–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ø—É—â–µ–Ω–æ (—ñ–Ω—Ç–µ—Ä–≤–∞–ª: ${interval}ms)`);
    }

    /**
     * –§—É–Ω–∫—Ü—ñ—è –∑—É–ø–∏–Ω–∫–∏ –ø–µ—Ä—ñ–æ–¥–∏—á–Ω–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
     */
    function stopPeriodicUpdate() {
        if (_periodicUpdateInterval) {
            clearInterval(_periodicUpdateInterval);
            _periodicUpdateInterval = null;
            console.log("‚èπÔ∏è AUTH: –ü–µ—Ä—ñ–æ–¥–∏—á–Ω–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∑—É–ø–∏–Ω–µ–Ω–æ");
        }
    }

    /**
     * –ü—Ä–∏–º—É—Å–æ–≤–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
     * @returns {Promise<Object>} –û–Ω–æ–≤–ª–µ–Ω—ñ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
     */
    async function refreshUserData() {
        console.log("üîÑ AUTH: –ü—Ä–∏–º—É—Å–æ–≤–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞");
        return getUserData(true);
    }

    /**
     * –û—á–∏—â–µ–Ω–Ω—è –∫–µ—à—É –¥–∞–Ω–∏—Ö
     * @returns {Object} WinixAuth –¥–ª—è –ª–∞–Ω—Ü—é–∂–∫–æ–≤–∏—Ö –≤–∏–∫–ª–∏–∫—ñ–≤
     */
    function clearCache() {
        console.log("üßπ AUTH: –û—á–∏—â–µ–Ω–Ω—è –∫–µ—à—É –¥–∞–Ω–∏—Ö");
        window.WinixAuth.currentUser = null;
        _lastRequestTime = 0;

        // –¢–∞–∫–æ–∂ –æ—á–∏—â–∞—î–º–æ –∫–µ—à –≤ WinixAPI
        if (hasApiModule() && typeof window.WinixAPI.clearCache === 'function') {
            window.WinixAPI.clearCache();
        }

        return window.WinixAuth;
    }

    // ======== –°–¢–í–û–†–ï–ù–ù–Ø –ü–£–ë–õ–Ü–ß–ù–û–ì–û API ========

    window.WinixAuth = {
        // –î–∞–Ω—ñ –ø–æ—Ç–æ—á–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        currentUser: null,

        // –ü—Ä–∞–ø–æ—Ä—Ü—ñ —Å—Ç–∞–Ω—É
        isInitialized: false,
        isAuthorizing: false,

        // –ú–æ–≤–∏ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É
        lang: MESSAGES,

        // –ú–µ—Ç–æ–¥–∏ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏
        isValidId,

        // –û—Å–Ω–æ–≤–Ω—ñ –º–µ—Ç–æ–¥–∏
        init,
        authorizeUser,
        getUserData,
        getTelegramUserId,
        refreshUserData,
        clearCache,

        // –ú–µ—Ç–æ–¥–∏ –¥–ª—è –ø–æ–∫–∞–∑—É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
        showError,
        showWelcomeMessage,
        getLocalizedText,

        // –ú–µ—Ç–æ–¥–∏ –¥–ª—è –ø–µ—Ä—ñ–æ–¥–∏—á–Ω–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
        startPeriodicUpdate,
        stopPeriodicUpdate,

        // –¢–µ—Ö–Ω—ñ—á–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è
        version: '2.0.0'
    };

    // ======== –ê–í–¢–û–ú–ê–¢–ò–ß–ù–ê –Ü–ù–Ü–¶–Ü–ê–õ–Ü–ó–ê–¶–Ü–Ø ========

// –ù–ï –∑–∞–ø—É—Å–∫–∞—î–º–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ - loader.js —Ü–µ –∑—Ä–æ–±–∏—Ç—å
console.log("‚úÖ AUTH: –ú–æ–¥—É–ª—å –≥–æ—Ç–æ–≤–∏–π, —á–µ–∫–∞—î–º–æ –Ω–∞ –≤–∏–∫–ª–∏–∫ –≤—ñ–¥ loader");

    // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ–π –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó –∑ —ñ–Ω—à–∏–º–∏ –º–æ–¥—É–ª—è–º–∏
    document.addEventListener(EVENT_USER_DATA_UPDATED, function(event) {
        if (event.detail && event.source !== 'auth.js') {
            console.log("üîÑ AUTH: –û–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ —ñ–Ω—à–æ–≥–æ –º–æ–¥—É–ª—è");
            window.WinixAuth.currentUser = event.detail;
        }
    });


    // –ü–æ–∑–Ω–∞—á–∞—î–º–æ –º–æ–¥—É–ª—å —è–∫ –≥–æ—Ç–æ–≤–∏–π
    if (window.WinixInit) {
        window.WinixInit.checkModule('auth');
    }

    console.log("‚úÖ AUTH: –°–∏—Å—Ç–µ–º—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó —É—Å–ø—ñ—à–Ω–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ");
})();