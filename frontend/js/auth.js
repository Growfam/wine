/**
 * auth.js - –ú–æ–¥—É–ª—å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó –¥–ª—è Telegram Mini App
 * –í–ò–ü–†–ê–í–õ–ï–ù–ê –í–ï–†–°–Ü–Ø –ë–ï–ó undefined –ø—Ä–æ–±–ª–µ–º —Ç–∞ fallback –ø–ª—É—Ç–∞–Ω–∏–Ω–∏
 * @version 4.0.0
 */

(function() {
    'use strict';

    console.log("üîê AUTH: –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –í–ò–ü–†–ê–í–õ–ï–ù–û–á —Å–∏—Å—Ç–µ–º–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó");

    // ======== –ü–†–ò–í–ê–¢–ù–Ü –ó–ú–Ü–ù–ù–Ü ========

    // –§–ª–∞–≥–∏ –¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª—é –∑–∞–ø–∏—Ç—ñ–≤
    let _authRequestInProgress = false;
    let _userDataRequestInProgress = false;
    let _lastRequestTime = 0;
    let _initializationInProgress = false;

    // –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–π —ñ–Ω—Ç–µ—Ä–≤–∞–ª –º—ñ–∂ –∑–∞–ø–∏—Ç–∞–º–∏
    const MIN_REQUEST_INTERVAL = 5000; // 5 —Å–µ–∫—É–Ω–¥

    // –ü—ñ–¥—Ç—Ä–∏–º–∫–∞ –ø–æ–¥—ñ–π
    const EVENT_USER_DATA_UPDATED = 'user-data-updated';
    const EVENT_AUTH_SUCCESS = 'auth-success';
    const EVENT_AUTH_ERROR = 'auth-error';

    // –ö–µ—à–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ
    let _currentUser = null;
    let _telegramReady = false;

    // ======== –§–£–ù–ö–¶–Ü–á TELEGRAM WEBAPP ========

    /**
     * –ö–†–ò–¢–ò–ß–ù–û –í–ê–ñ–õ–ò–í–ê —Ñ—É–Ω–∫—Ü—ñ—è - —á–µ–∫–∞–Ω–Ω—è –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—ñ Telegram WebApp
     */
    function waitForTelegramReady(timeout = 10000) {
        return new Promise((resolve) => {
            console.log("‚è≥ AUTH: –û—á—ñ–∫—É–≤–∞–Ω–Ω—è –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—ñ Telegram WebApp...");

            const startTime = Date.now();

            function checkTelegram() {
                // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –≤—Å—ñ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ –æ–±'—î–∫—Ç–∏ Telegram WebApp
                if (window.Telegram &&
                    window.Telegram.WebApp &&
                    window.Telegram.WebApp.initDataUnsafe &&
                    window.Telegram.WebApp.initDataUnsafe.user &&
                    window.Telegram.WebApp.initDataUnsafe.user.id) {

                    _telegramReady = true;
                    console.log("‚úÖ AUTH: Telegram WebApp –≥–æ—Ç–æ–≤–∏–π");
                    resolve(true);
                    return;
                }

                // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ timeout
                if (Date.now() - startTime > timeout) {
                    console.warn("‚ö†Ô∏è AUTH: Timeout –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è Telegram WebApp");
                    resolve(false);
                    return;
                }

                // –ü—Ä–æ–¥–æ–≤–∂—É—î–º–æ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É
                setTimeout(checkTelegram, 100);
            }

            checkTelegram();
        });
    }

    /**
     * –í–ò–ü–†–ê–í–õ–ï–ù–ê —Ñ—É–Ω–∫—Ü—ñ—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è Telegram User ID
     */
    function getTelegramUserId() {
        try {
            // –§—É–Ω–∫—Ü—ñ—è –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó ID
            function isValidId(id) {
                if (!id) return false;
                if (typeof id === 'function') return false;
                if (id === 'undefined' || id === 'null') return false;

                const idStr = String(id).trim();
                if (!idStr || idStr === 'undefined' || idStr === 'null') return false;

                const idNum = parseInt(idStr);
                if (isNaN(idNum) || idNum <= 0) return false;

                return true;
            }

            // 1. –ü—Ä—ñ–æ—Ä–∏—Ç–µ—Ç: Telegram WebApp
            if (_telegramReady && window.Telegram && window.Telegram.WebApp) {
                console.log("üîç AUTH: –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ Telegram WebApp...");

                try {
                    if (window.Telegram.WebApp.initDataUnsafe &&
                        window.Telegram.WebApp.initDataUnsafe.user &&
                        window.Telegram.WebApp.initDataUnsafe.user.id) {

                        const tgUserId = window.Telegram.WebApp.initDataUnsafe.user.id;
                        console.log(`üîç AUTH: Telegram WebApp ID: ${tgUserId}`);

                        if (isValidId(tgUserId)) {
                            const validId = String(tgUserId);
                            console.log(`‚úÖ AUTH: –í–∞–ª—ñ–¥–Ω–∏–π ID –∑ Telegram: ${validId}`);

                            // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –≤ localStorage
                            try {
                                localStorage.setItem('telegram_user_id', validId);
                            } catch (e) {}

                            return validId;
                        }
                    }
                } catch (e) {
                    console.warn("‚ö†Ô∏è AUTH: –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è ID –∑ Telegram WebApp:", e);
                }
            }

            // 2. localStorage (fallback)
            try {
                const localId = localStorage.getItem('telegram_user_id');
                if (isValidId(localId)) {
                    console.log(`üíæ AUTH: ID –∑ localStorage: ${localId}`);
                    return String(localId);
                }
            } catch (e) {
                console.warn("‚ö†Ô∏è AUTH: –ü–æ–º–∏–ª–∫–∞ —á–∏—Ç–∞–Ω–Ω—è localStorage:", e);
            }

            // ID –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ
            console.warn("‚ö†Ô∏è AUTH: –í–∞–ª—ñ–¥–Ω–∏–π Telegram ID –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ");
            return null;

        } catch (e) {
            console.error("üí• AUTH: –ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:", e);
            return null;
        }
    }

    /**
     * –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ API –º–æ–¥—É–ª—è
     */
    function hasApiModule() {
        try {
            return window.WinixAPI &&
                   typeof window.WinixAPI.apiRequest === 'function' &&
                   typeof window.WinixAPI.getUserId === 'function';
        } catch (e) {
            console.error("üîê AUTH: –ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ API –º–æ–¥—É–ª—è:", e);
            return false;
        }
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É
     */
    function showError(message, type = 'error') {
        console.error("‚ùå AUTH: " + message);

        if (window.showToast) {
            window.showToast(message, type);
            return;
        }

        // Fallback alert —Ç—ñ–ª—å–∫–∏ –¥–ª—è –∫—Ä–∏—Ç–∏—á–Ω–∏—Ö –ø–æ–º–∏–ª–æ–∫
        if (type === 'error') {
            console.error("–ö–†–ò–¢–ò–ß–ù–ê –ü–û–ú–ò–õ–ö–ê AUTH:", message);
        }
    }

    // ======== –§–£–ù–ö–¶–Ü–á –ê–í–¢–û–†–ò–ó–ê–¶–Ü–á ========

    /**
     * –í–ò–ü–†–ê–í–õ–ï–ù–ê –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ
     */
    async function authorizeUser(userData) {
        if (_authRequestInProgress) {
            console.log("üîê AUTH: –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è –≤–∂–µ –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è");
            return _currentUser || {};
        }

        _authRequestInProgress = true;

        try {
            // –û–±–æ–≤'—è–∑–∫–æ–≤–æ –æ—Ç—Ä–∏–º—É—î–º–æ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            const telegramId = getTelegramUserId();
            if (!telegramId) {
                throw new Error("Telegram ID –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—è, —â–æ –¥–æ–¥–∞—Ç–æ–∫ –∑–∞–ø—É—â–µ–Ω–æ —á–µ—Ä–µ–∑ Telegram.");
            }

            console.log(`üîê AUTH: –ü–æ—á–∞—Ç–æ–∫ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ ${telegramId}`);

            // –û–Ω–æ–≤–ª—é—î–º–æ userData –∑ –∞–∫—Ç—É–∞–ª—å–Ω–∏–º ID
            userData = {
                ...userData,
                id: telegramId,
                telegram_id: telegramId
            };

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å API –º–æ–¥—É–ª—è
            if (!hasApiModule()) {
                throw new Error("API –º–æ–¥—É–ª—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π");
            }

            // –ü–æ–∫–∞–∑—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
            if (typeof window.showLoading === 'function') {
                window.showLoading();
            }

            // –í–∏–∫–æ–Ω—É—î–º–æ –∑–∞–ø–∏—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó
            const response = await window.WinixAPI.apiRequest('api/auth', 'POST', userData, {
                timeout: 15000
            });

            // –ü—Ä–∏—Ö–æ–≤—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
            if (typeof window.hideLoading === 'function') {
                window.hideLoading();
            }

            if (response && response.status === 'success' && response.data) {
                // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
                _currentUser = response.data;
                console.log("‚úÖ AUTH: –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —É—Å–ø—ñ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–æ", response.data);

                // –ü–æ–∫–∞–∑—É—î–º–æ –≤—ñ—Ç–∞–ª—å–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–ª—è –Ω–æ–≤–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
                if (response.data.is_new_user) {
                    if (window.showToast) {
                        window.showToast('–í—ñ—Ç–∞—î–º–æ —É WINIX!', 'success');
                    }
                }

                // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–¥—ñ—é –ø—Ä–æ —É—Å–ø—ñ—à–Ω—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—é
                document.dispatchEvent(new CustomEvent(EVENT_AUTH_SUCCESS, {
                    detail: response.data
                }));

                return response.data;
            } else {
                throw new Error(response?.message || "–ü–æ–º–∏–ª–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ");
            }

        } catch (error) {
            console.error("‚ùå AUTH: –ü–æ–º–∏–ª–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó:", error);

            // –ü—Ä–∏—Ö–æ–≤—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
            if (typeof window.hideLoading === 'function') {
                window.hideLoading();
            }

            // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–¥—ñ—é –ø—Ä–æ –ø–æ–º–∏–ª–∫—É
            document.dispatchEvent(new CustomEvent(EVENT_AUTH_ERROR, {
                detail: { error: error.message }
            }));

            // –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É
            showError(error.message || '–ü–æ–º–∏–ª–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó', 'error');

            throw error;

        } finally {
            _authRequestInProgress = false;
        }
    }

    /**
     * –í–ò–ü–†–ê–í–õ–ï–ù–ï –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ —Å–µ—Ä–≤–µ—Ä–∞
     */
    async function getUserData(forceRefresh = false) {
        // –û–±–æ–≤'—è–∑–∫–æ–≤–æ –æ—Ç—Ä–∏–º—É—î–º–æ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        const telegramId = getTelegramUserId();
        if (!telegramId) {
            throw new Error("Telegram ID –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ");
        }

        // –ó–∞–ø–æ–±—ñ–≥–∞–Ω–Ω—è –ø–∞—Ä–∞–ª–µ–ª—å–Ω–∏–º –∑–∞–ø–∏—Ç–∞–º
        if (_userDataRequestInProgress && !forceRefresh) {
            console.log("üîê AUTH: –ó–∞–ø–∏—Ç –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤–∂–µ –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è");
            return _currentUser || {};
        }

        // –ó–∞–ø–æ–±—ñ–≥–∞–Ω–Ω—è —á–∞—Å—Ç–∏–º –∑–∞–ø–∏—Ç–∞–º
        const now = Date.now();
        const timeSinceLastRequest = now - _lastRequestTime;
        if (timeSinceLastRequest < MIN_REQUEST_INTERVAL && !forceRefresh) {
            console.log(`üîê AUTH: –ó–∞–Ω–∞–¥—Ç–æ —á–∞—Å—Ç–∏–π –∑–∞–ø–∏—Ç –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞`);
            return _currentUser || {};
        }

        _lastRequestTime = now;
        _userDataRequestInProgress = true;

        try {
            console.log(`üîê AUTH: –û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ ${telegramId}`);

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å API –º–æ–¥—É–ª—è
            if (!hasApiModule()) {
                throw new Error("API –º–æ–¥—É–ª—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π");
            }

            // –ü–æ–∫–∞–∑—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
            if (typeof window.showLoading === 'function') {
                window.showLoading();
            }

            // –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            const response = await window.WinixAPI.getUserData(forceRefresh);

            // –ü—Ä–∏—Ö–æ–≤—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
            if (typeof window.hideLoading === 'function') {
                window.hideLoading();
            }

            if (response && response.status === 'success' && response.data) {
                // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –¥–∞–Ω—ñ
                _currentUser = response.data;
                console.log("‚úÖ AUTH: –î–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —É—Å–ø—ñ—à–Ω–æ –æ—Ç—Ä–∏–º–∞–Ω–æ", response.data);

                // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–¥—ñ—é –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö
                document.dispatchEvent(new CustomEvent(EVENT_USER_DATA_UPDATED, {
                    detail: response.data
                }));

                return response.data;
            } else {
                throw new Error(response?.message || "–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞");
            }

        } catch (error) {
            console.error("‚ùå AUTH: –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:", error);

            // –ü—Ä–∏—Ö–æ–≤—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
            if (typeof window.hideLoading === 'function') {
                window.hideLoading();
            }

            throw error;

        } finally {
            _userDataRequestInProgress = false;
        }
    }

    /**
     * –í–ò–ü–†–ê–í–õ–ï–ù–ê —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Å–∏—Å—Ç–µ–º–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó
     */
    async function init() {
        if (_initializationInProgress) {
            console.log("üîê AUTH: –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –≤–∂–µ –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è");
            return _currentUser;
        }

        _initializationInProgress = true;

        try {
            console.log("üîê AUTH: –ü–æ—á–∞—Ç–æ–∫ –í–ò–ü–†–ê–í–õ–ï–ù–û–á —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó");

            // 1. –ß–µ–∫–∞—î–º–æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—ñ Telegram WebApp
            console.log("‚è≥ AUTH: –û—á—ñ–∫—É–≤–∞–Ω–Ω—è Telegram WebApp...");
            const telegramReady = await waitForTelegramReady();

            if (!telegramReady) {
                throw new Error("Telegram WebApp –Ω–µ –≥–æ—Ç–æ–≤–∏–π. –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—è, —â–æ –¥–æ–¥–∞—Ç–æ–∫ –∑–∞–ø—É—â–µ–Ω–æ —á–µ—Ä–µ–∑ Telegram.");
            }

            // 2. –ß–µ–∫–∞—î–º–æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—ñ API –º–æ–¥—É–ª—è
            console.log("‚è≥ AUTH: –û—á—ñ–∫—É–≤–∞–Ω–Ω—è API –º–æ–¥—É–ª—è...");
            let apiWaitAttempts = 0;
            const maxApiWaitAttempts = 20; // 10 —Å–µ–∫—É–Ω–¥

            while (!hasApiModule() && apiWaitAttempts < maxApiWaitAttempts) {
                await new Promise(resolve => setTimeout(resolve, 500));
                apiWaitAttempts++;
            }

            if (!hasApiModule()) {
                throw new Error("API –º–æ–¥—É–ª—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π");
            }

            console.log("‚úÖ AUTH: API –º–æ–¥—É–ª—å –≥–æ—Ç–æ–≤–∏–π");

            // 3. –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ Telegram WebApp
            if (window.Telegram && window.Telegram.WebApp) {
                try {
                    window.Telegram.WebApp.ready();
                    window.Telegram.WebApp.expand();
                    console.log("‚úÖ AUTH: Telegram WebApp —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ");
                } catch (e) {
                    console.warn("‚ö†Ô∏è AUTH: –ü–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó Telegram WebApp:", e);
                }
            }

            // 4. –û—Ç—Ä–∏–º—É—î–º–æ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            const telegramId = getTelegramUserId();
            if (!telegramId) {
                throw new Error("–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ Telegram ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞");
            }

            console.log(`‚úÖ AUTH: Telegram ID –æ—Ç—Ä–∏–º–∞–Ω–æ: ${telegramId}`);

            // 5. –û–Ω–æ–≤–ª—é—î–º–æ –µ–ª–µ–º–µ–Ω—Ç –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ
            const userIdElement = document.getElementById('user-id');
            if (userIdElement) {
                userIdElement.textContent = telegramId;
            }

            // 6. –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            try {
                const userData = await getUserData();
                console.log("‚úÖ AUTH: –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø—ñ—à–Ω–æ");
                return userData;
            } catch (error) {
                console.warn("‚ö†Ô∏è AUTH: –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞, –∞–ª–µ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –ø—Ä–æ–¥–æ–≤–∂—É—î—Ç—å—Å—è:", error);
                // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –±–∞–∑–æ–≤–∏–π –æ–±'—î–∫—Ç –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
                return {
                    telegram_id: telegramId,
                    username: `User_${telegramId.slice(-4)}`,
                    balance: 0,
                    coins: 0
                };
            }

        } catch (error) {
            console.error("‚ùå AUTH: –ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó:", error);
            showError(error.message || '–ü–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó —Å–∏—Å—Ç–µ–º–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó', 'error');
            throw error;

        } finally {
            _initializationInProgress = false;
        }
    }

    /**
     * –ü—Ä–∏–º—É—Å–æ–≤–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
     */
    async function refreshUserData() {
        console.log("üîÑ AUTH: –ü—Ä–∏–º—É—Å–æ–≤–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞");
        return getUserData(true);
    }

    /**
     * –û—á–∏—â–µ–Ω–Ω—è –∫–µ—à—É –¥–∞–Ω–∏—Ö
     */
    function clearCache() {
        console.log("üßπ AUTH: –û—á–∏—â–µ–Ω–Ω—è –∫–µ—à—É –¥–∞–Ω–∏—Ö");
        _currentUser = null;
        _lastRequestTime = 0;

        // –¢–∞–∫–æ–∂ –æ—á–∏—â–∞—î–º–æ –∫–µ—à –≤ WinixAPI
        if (hasApiModule() && typeof window.WinixAPI.clearCache === 'function') {
            window.WinixAPI.clearCache();
        }

        return window.WinixAuth;
    }

    // ======== –°–¢–í–û–†–ï–ù–ù–Ø –ü–£–ë–õ–Ü–ß–ù–û–ì–û API ========

    window.WinixAuth = {
        // –î–∞–Ω—ñ –ø–æ—Ç–æ—á–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        currentUser: null,

        // –ü—Ä–∞–ø–æ—Ä—Ü—ñ —Å—Ç–∞–Ω—É
        isInitialized: false,
        telegramReady: false,

        // –û—Å–Ω–æ–≤–Ω—ñ –º–µ—Ç–æ–¥–∏
        init,
        authorizeUser,
        getUserData,
        getTelegramUserId,
        refreshUserData,
        clearCache,

        // –ú–µ—Ç–æ–¥–∏ –¥–ª—è –ø–æ–∫–∞–∑—É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
        showError,

        // –¢–µ—Ö–Ω—ñ—á–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è
        version: '4.0.0',

        // –ì–µ—Ç—Ç–µ—Ä–∏ –¥–ª—è —Å—Ç–∞–Ω—É
        get isReady() {
            return _telegramReady && hasApiModule();
        },

        get currentUserId() {
            return getTelegramUserId();
        }
    };

    // ======== –ê–í–¢–û–ú–ê–¢–ò–ß–ù–ê –Ü–ù–Ü–¶–Ü–ê–õ–Ü–ó–ê–¶–Ü–Ø ========

    // –§—É–Ω–∫—Ü—ñ—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ—ó —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
    async function autoInit() {
        try {
            console.log("üîê AUTH: –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è");

            const userData = await init();
            window.WinixAuth.currentUser = userData;
            window.WinixAuth.isInitialized = true;
            window.WinixAuth.telegramReady = _telegramReady;

            console.log("‚úÖ AUTH: –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø—ñ—à–Ω–æ");
        } catch (error) {
            console.error("‚ùå AUTH: –ü–æ–º–∏–ª–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ—ó —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó:", error);
            window.WinixAuth.isInitialized = false;
        }
    }

    // –ó–∞–ø—É—Å–∫–∞—î–º–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—é –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ —Å—Ç–∞–Ω—É DOM
    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', autoInit);
    } else {
        // –î–æ–∫—É–º–µ–Ω—Ç –≤–∂–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∏–π, –∑–∞–ø—É—Å–∫–∞—î–º–æ –∑ –Ω–µ–≤–µ–ª–∏–∫–æ—é –∑–∞—Ç—Ä–∏–º–∫–æ—é
        setTimeout(autoInit, 100);
    }

    console.log("‚úÖ AUTH: –í–ò–ü–†–ê–í–õ–ï–ù–£ —Å–∏—Å—Ç–µ–º—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó —É—Å–ø—ñ—à–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ");
})();