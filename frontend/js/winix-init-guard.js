/**
 * WINIX Init Guard - –ë–ª–æ–∫—É—î –≤—Å—ñ –∑–∞–ø–∏—Ç–∏ –¥–æ –ø–æ–≤–Ω–æ—ó –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—ñ —Å–∏—Å—Ç–µ–º–∏
 * CRITICAL: –¶–µ–π —Ñ–∞–π–ª MUST –±—É—Ç–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∏–π –ü–ï–†–®–ò–ú!
 */
(function() {
    'use strict';

    console.log('üõ°Ô∏è WINIX Guard: –ê–∫—Ç–∏–≤–∞—Ü—ñ—è –∑–∞—Ö–∏—Å—Ç—É –≤—ñ–¥ –ø–µ—Ä–µ–¥—á–∞—Å–Ω–∏—Ö –∑–∞–ø–∏—Ç—ñ–≤');

    // –ì–ª–æ–±–∞–ª—å–Ω—ñ –ø—Ä–∞–ø–æ—Ä—Ü—ñ
    window._WINIX_SYSTEM_READY = false;
    window._WINIX_USER_ID = null;
    window._WINIX_INIT_PROMISE = null;

    // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–∏–π fetch
    const originalFetch = window.fetch;

    // –ü–µ—Ä–µ—Ö–æ–ø–ª—é—î–º–æ –≤—Å—ñ fetch –∑–∞–ø–∏—Ç–∏
    window.fetch = function(...args) {
        const [url, options] = args;

        // –î–æ–∑–≤–æ–ª—è—î–º–æ —Ç—ñ–ª—å–∫–∏ health check –∑–∞–ø–∏—Ç–∏
        if (url && url.includes('/health')) {
            return originalFetch.apply(this, args);
        }

        // –ë–ª–æ–∫—É—î–º–æ –∑–∞–ø–∏—Ç–∏ –∑ undefined –≤ URL
        if (url && url.includes('undefined')) {
            console.error('üõ°Ô∏è BLOCKED: –ó–∞–ø–∏—Ç –∑ undefined –≤ URL:', url);
            return Promise.reject(new Error('Invalid request with undefined'));
        }

        // –Ø–∫—â–æ —Å–∏—Å—Ç–µ–º–∞ –Ω–µ –≥–æ—Ç–æ–≤–∞, —á–µ–∫–∞—î–º–æ
        if (!window._WINIX_SYSTEM_READY) {
            console.warn('üõ°Ô∏è DELAYED: –ó–∞–ø–∏—Ç –∑–∞—Ç—Ä–∏–º–∞–Ω–æ –¥–æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—ñ —Å–∏—Å—Ç–µ–º–∏:', url);

            return new Promise((resolve, reject) => {
                const checkReady = setInterval(() => {
                    if (window._WINIX_SYSTEM_READY) {
                        clearInterval(checkReady);
                        console.log('üõ°Ô∏è RELEASED: –í–∏–∫–æ–Ω—É—î–º–æ –∑–∞—Ç—Ä–∏–º–∞–Ω–∏–π –∑–∞–ø–∏—Ç:', url);
                        originalFetch.apply(window, args).then(resolve).catch(reject);
                    }
                }, 100);

                // –¢–∞–π–º–∞—É—Ç 10 —Å–µ–∫—É–Ω–¥
                setTimeout(() => {
                    clearInterval(checkReady);
                    reject(new Error('System initialization timeout'));
                }, 10000);
            });
        }

        // –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ - –≤–∏–∫–æ–Ω—É—î–º–æ –∑–∞–ø–∏—Ç
        return originalFetch.apply(this, args);
    };

    // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Ä–æ–∑–±–ª–æ–∫—É–≤–∞–Ω–Ω—è —Å–∏—Å—Ç–µ–º–∏
    window._unlockWinixSystem = function(userId) {
        if (userId && userId !== 'undefined') {
            window._WINIX_USER_ID = userId;
            window._WINIX_SYSTEM_READY = true;
            console.log('üõ°Ô∏è UNLOCKED: –°–∏—Å—Ç–µ–º–∞ —Ä–æ–∑–±–ª–æ–∫–æ–≤–∞–Ω–∞ –∑ User ID:', userId);
        }
    };
})();