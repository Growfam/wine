// winix-fix.js - –∫–æ–º–ø–ª–µ–∫—Å–Ω–µ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –¥–ª—è –ø—Ä–æ–±–ª–µ–º —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó WINIX
(function() {
    console.log("üõ†Ô∏è WINIX Fix - —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –ø–∞—Ç—á—ñ–≤ —Å–∏—Å—Ç–µ–º–∏");

    // –ó–∞–ø–æ–±—ñ–≥–∞—î–º–æ –±–∞–≥–∞—Ç–æ—Ä–∞–∑–æ–≤—ñ–π —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
    if (window.WINIX_FIX_INITIALIZED) {
        console.log("‚úÖ WINIX Fix –≤–∂–µ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ");
        return;
    }

    // 1. –°—Ç–≤–æ—Ä—é—î–º–æ –∑–∞–≥–ª—É—à–∫—É –¥–ª—è Telegram WebApp API
    if (!window.Telegram || !window.Telegram.WebApp) {
        console.log("üì± –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑–∞–≥–ª—É—à–∫–∏ –¥–ª—è Telegram WebApp API");
        window.Telegram = window.Telegram || {};
        window.Telegram.WebApp = {
            initData: "",
            initDataUnsafe: {
                user: { id: 12345678, username: "WINIX_User" },
                start_param: ""
            },
            version: "6.0",
            platform: "web",
            colorScheme: "dark",
            themeParams: {
                bg_color: "#212121",
                text_color: "#ffffff",
                hint_color: "#aaaaaa",
                link_color: "#00CFBB",
                button_color: "#00CFBB",
                button_text_color: "#ffffff"
            },
            isExpanded: true,
            viewportHeight: window.innerHeight,
            viewportStableHeight: window.innerHeight,

            // –ú–µ—Ç–æ–¥–∏
            ready: function() { return true; },
            expand: function() { return true; },
            close: function() { return true; },
            isVersionAtLeast: function() { return true; },
            onEvent: function(event, callback) {
                if (event === 'viewportChanged') {
                    window.addEventListener('resize', callback);
                }
                return true;
            },
            offEvent: function() { return true; },
            showAlert: function(message, callback) {
                alert(message);
                if (callback) setTimeout(callback, 100);
            },
            showConfirm: function(message, callback) {
                const result = confirm(message);
                if (callback) setTimeout(() => callback(result), 100);
            },
            enableClosingConfirmation: function() { return true; },
            disableClosingConfirmation: function() { return true; },
            setHeaderColor: function() { return true; },
            setBackgroundColor: function() { return true; },
            showPopup: function(params, callback) {
                alert(params.message || params.title || '–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è');
                if (callback) setTimeout(() => callback(), 100);
            },
            HapticFeedback: {
                impactOccurred: function() { return true; },
                notificationOccurred: function() { return true; },
                selectionChanged: function() { return true; }
            }
        };

        // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–¥—ñ—é –ø—Ä–æ –≥–æ—Ç–æ–≤–Ω—ñ—Å—Ç—å
        setTimeout(function() {
            const event = new Event('tg:init');
            document.dispatchEvent(event);
        }, 100);
    }

    // 2. –°—Ç–≤–æ—Ä—é—î–º–æ –±–∞–∑–æ–≤—É —Å—Ç—Ä—É–∫—Ç—É—Ä—É WinixCore
    if (!window.WinixCore) {
        console.log("üß† –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑–∞–≥–ª—É—à–∫–∏ –¥–ª—è WinixCore");
        window.WinixCore = {
            // –î–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –æ—Ç—Ä–∏–º–∞–Ω—ñ –∑ –¥–æ–∫—É–º–µ–Ω—Ç—É
            UserData: {
                id: "12345678",
                telegramId: "7066583465",
                username: "WINIX User",
                balance: 202.0,
                coins: 5,
                staking: {
                    period: 14,
                    status: 'active',
                    endDate: '2025-04-19T18:15:27.657416',
                    stakingId: 'st-72a90e0bae7b',
                    startDate: '2025-04-05T18:15:27.657403',
                    remainingDays: 13,
                    rewardPercent: 9,
                    stakingAmount: 100,
                    expectedReward: 9.0,
                    hasActiveStaking: true
                }
            },

            // –§—É–Ω–∫—Ü—ñ—ó —Ä–æ–±–æ—Ç–∏ –∑ UI
            UI: {
                showNotification: function(message, type = 'success', duration = 3000) {
                    console.log(`üîî WINIX –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è (${type}): ${message}`);

                    // –°—Ç–≤–æ—Ä—é—î–º–æ –µ–ª–µ–º–µ–Ω—Ç –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
                    const notification = document.createElement('div');
                    notification.className = `winix-notification winix-notification-${type}`;
                    notification.style.cssText = `
                        position: fixed;
                        top: 20px;
                        left: 50%;
                        transform: translateX(-50%);
                        padding: 10px 20px;
                        background: ${type === 'error' ? 'rgba(255, 50, 50, 0.9)' : 'rgba(0, 201, 167, 0.9)'};
                        color: white;
                        border-radius: 10px;
                        z-index: 9999;
                        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
                        text-align: center;
                        max-width: 80%;
                    `;
                    notification.textContent = message;
                    document.body.appendChild(notification);

                    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –ø—Ä–∏—Ö–æ–≤—É—î–º–æ
                    setTimeout(() => {
                        notification.style.opacity = '0';
                        setTimeout(() => {
                            if (notification.parentNode) {
                                notification.parentNode.removeChild(notification);
                            }
                        }, 300);
                    }, duration);

                    return true;
                },
                updateBalanceDisplay: function() {
                    try {
                        // –û–Ω–æ–≤–ª—é—î–º–æ –±–∞–ª–∞–Ω—Å –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ
                        const userTokensElement = document.getElementById('user-tokens');
                        const userCoinsElement = document.getElementById('user-coins');
                        const mainBalanceElement = document.getElementById('main-balance');

                        if (userTokensElement) {
                            userTokensElement.textContent = window.WinixCore.UserData.balance.toFixed(2);
                        }

                        if (userCoinsElement) {
                            userCoinsElement.textContent = window.WinixCore.UserData.coins.toString();
                        }

                        if (mainBalanceElement) {
                            mainBalanceElement.textContent = window.WinixCore.UserData.balance.toFixed(2);
                        }

                        return true;
                    } catch (e) {
                        console.error("–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É:", e);
                        return false;
                    }
                }
            },

            // –§—É–Ω–∫—Ü—ñ—ó —Å—Ç–µ–π–∫—ñ–Ω–≥—É
            Staking: {
                getStakingData: function() {
                    try {
                        // –°–ø–æ—á–∞—Ç–∫—É —Å–ø—Ä–æ–±—É—î–º–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ –∑ localStorage
                        const storedData = localStorage.getItem('stakingData') ||
                                          localStorage.getItem('winix_staking');

                        if (storedData) {
                            try {
                                return JSON.parse(storedData);
                            } catch (e) {
                                console.warn("–ü–æ–º–∏–ª–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥—É –¥–∞–Ω–∏—Ö —Å—Ç–µ–π–∫—ñ–Ω–≥—É:", e);
                            }
                        }

                        // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –¥–∞–Ω—ñ –∑ WinixCore.UserData
                        return window.WinixCore.UserData.staking || {
                            hasActiveStaking: false,
                            stakingAmount: 0,
                            period: 0,
                            rewardPercent: 0,
                            expectedReward: 0,
                            remainingDays: 0
                        };
                    } catch (e) {
                        console.error("–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö —Å—Ç–µ–π–∫—ñ–Ω–≥—É:", e);
                        return {
                            hasActiveStaking: false,
                            stakingAmount: 0,
                            period: 0,
                            rewardPercent: 0,
                            expectedReward: 0,
                            remainingDays: 0
                        };
                    }
                },
                calculateExpectedReward: function(amount, period) {
                    try {
                        amount = parseFloat(amount) || 0;
                        period = parseInt(period) || 14;

                        // –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ñ —Å—Ç–∞–≤–∫–∏ –≤–∏–Ω–∞–≥–æ—Ä–æ–¥–∏
                        const rates = {
                            7: 4,  // 4% –∑–∞ 7 –¥–Ω—ñ–≤
                            14: 9, // 9% –∑–∞ 14 –¥–Ω—ñ–≤
                            28: 15 // 15% –∑–∞ 28 –¥–Ω—ñ–≤
                        };

                        const rate = rates[period] || 9;
                        const reward = (amount * rate) / 100;

                        return parseFloat(reward.toFixed(2));
                    } catch (e) {
                        console.error("–ü–æ–º–∏–ª–∫–∞ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É –≤–∏–Ω–∞–≥–æ—Ä–æ–¥–∏:", e);
                        return 0;
                    }
                }
            },

            // –§—É–Ω–∫—Ü—ñ—è —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó (–∫—Ä–∏—Ç–∏—á–Ω–∞ –¥–ª—è winix-connector.js)
            init: function(config = {}) {
                console.log("üöÄ WinixCore.init –≤–∏–∫–ª–∏–∫–∞–Ω–æ –∑ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—î—é:", config);

                // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –¥–∞–Ω—ñ —Å—Ç–µ–π–∫—ñ–Ω–≥—É –≤ localStorage –¥–ª—è —Å—É–º—ñ—Å–Ω–æ—Å—Ç—ñ
                try {
                    if (window.WinixCore.UserData.staking) {
                        localStorage.setItem('stakingData', JSON.stringify(window.WinixCore.UserData.staking));
                        localStorage.setItem('winix_staking', JSON.stringify(window.WinixCore.UserData.staking));
                    }

                    // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –±–∞–ª–∞–Ω—Å –¥–ª—è —Å—É–º—ñ—Å–Ω–æ—Å—Ç—ñ
                    localStorage.setItem('userTokens', window.WinixCore.UserData.balance.toString());
                    localStorage.setItem('userCoins', window.WinixCore.UserData.coins.toString());

                    // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–ª—è —Å—É–º—ñ—Å–Ω–æ—Å—Ç—ñ
                    localStorage.setItem('userId', window.WinixCore.UserData.id.toString());
                    localStorage.setItem('telegram_user_id', window.WinixCore.UserData.telegramId.toString());
                } catch (e) {
                    console.warn("–ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö —É localStorage:", e);
                }

                // –í–∏–ø—Ä–∞–≤–ª—è—î–º–æ –±–∞–≥ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó –≤ auth.js
                window.isInitialized = true;
                window.userData = window.WinixCore.UserData;

                // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ —É—Å–ø—ñ—à–Ω–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                return true;
            }
        };

        // –°—Ç–≤–æ—Ä—é—î–º–æ –∑–∞–≥–ª—É—à–∫–∏ –¥–ª—è –¥–æ–ø–æ–º—ñ–∂–Ω–∏—Ö —Ñ—É–Ω–∫—Ü—ñ–π, —â–æ–± —É–Ω–∏–∫–Ω—É—Ç–∏ –ø–æ–º–∏–ª–æ–∫
        window.WinixCore.Balance = {
            getTokens: function() {
                return window.WinixCore.UserData.balance;
            },
            getCoins: function() {
                return window.WinixCore.UserData.coins;
            },
            syncBalanceFromServer: function() {
                return Promise.resolve(true);
            }
        };

        window.WinixCore.Transactions = {
            getTransactions: function() {
                return [];
            },
            getRecentTransactions: function() {
                return [];
            }
        };
    }

    // 3. –ü–µ—Ä–µ—Ç–≤–æ—Ä—é—î–º–æ –¥–∞–Ω—ñ –∑ —Å–µ—Ä–≤–µ—Ä–Ω–æ–≥–æ –ª–æ–≥—É –Ω–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    try {
        // –î–∞–Ω—ñ –∑ –ª–æ–≥—É
        const stakingData = {
            period: 14,
            status: 'active',
            endDate: '2025-04-19T18:15:27.657416',
            stakingId: 'st-72a90e0bae7b',
            startDate: '2025-04-05T18:15:27.657403',
            remainingDays: 13,
            rewardPercent: 9,
            stakingAmount: 100,
            expectedReward: 9.0,
            hasActiveStaking: true,
            creationTimestamp: 1743876927657
        };

        // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –∞–∫—Ç—É–∞–ª—å–Ω—ñ –¥–∞–Ω—ñ —Å—Ç–µ–π–∫—ñ–Ω–≥—É
        localStorage.setItem('stakingData', JSON.stringify(stakingData));
        localStorage.setItem('winix_staking', JSON.stringify(stakingData));
        sessionStorage.setItem('stakingData', JSON.stringify(stakingData));

        // –û–Ω–æ–≤–ª—é—î–º–æ —Ç–∞–∫–æ–∂ –±–∞–ª–∞–Ω—Å —Ç–∞ —ñ–Ω—à—ñ –¥–∞–Ω—ñ
        localStorage.setItem('userTokens', '202.0');
        localStorage.setItem('userCoins', '5');
        localStorage.setItem('userId', '12345678');
        localStorage.setItem('telegram_user_id', '7066583465');

        // –û–Ω–æ–≤–ª—é—î–º–æ –≥–ª–æ–±–∞–ª—å–Ω—ñ –¥–∞–Ω—ñ
        window.WinixCore.UserData.balance = 202.0;
        window.WinixCore.UserData.coins = 5;
        window.WinixCore.UserData.staking = stakingData;
    } catch (e) {
        console.warn("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó –¥–∞–Ω–∏—Ö:", e);
    }

    // 4. –°—Ç–≤–æ—Ä—é—î–º–æ –ø–∞—Ç—á—ñ –¥–ª—è –ø—Ä–æ–±–ª–µ–º–Ω–∏—Ö —Ñ—É–Ω–∫—Ü—ñ–π
    if (Element.prototype.removeChild) {
        // –ü–µ—Ä–µ–∑–∞–ø–∏—Å—É—î–º–æ –º–µ—Ç–æ–¥ removeChild –¥–ª—è –∑–∞—Ö–∏—Å—Ç—É –≤—ñ–¥ NotFoundError
        const originalRemoveChild = Element.prototype.removeChild;
        Element.prototype.removeChild = function(child) {
            try {
                return originalRemoveChild.call(this, child);
            } catch (e) {
                console.warn("–ü–µ—Ä–µ—Ö–æ–ø–ª–µ–Ω–æ –ø–æ–º–∏–ª–∫—É removeChild:", e);
                return null;
            }
        };
    }

    // 5. –°—Ç–≤–æ—Ä—é—î–º–æ –≥–ª–æ–±–∞–ª—å–Ω–∏–π –ø–µ—Ä–µ—Ö–æ–ø–ª—é–≤–∞—á –ø–æ–º–∏–ª–æ–∫
    window.addEventListener('error', function(event) {
        console.warn("–ü–µ—Ä–µ—Ö–æ–ø–ª–µ–Ω–æ –≥–ª–æ–±–∞–ª—å–Ω—É –ø–æ–º–∏–ª–∫—É:", event.error || event.message);

        // –Ø–∫—â–æ –ø–æ–º–∏–ª–∫–∞ –ø–æ–≤'—è–∑–∞–Ω–∞ –∑ WinixCore
        if (event.error && event.message && (
            event.message.includes('WinixCore') ||
            event.message.includes('winix-core') ||
            event.message.includes('not a function') ||
            event.message.includes('cannot read property') ||
            event.message.includes('is not an object')
        )) {
            console.log("–ü–æ–º–∏–ª–∫–∞ –≤ —è–¥—Ä—ñ WINIX, —Å–ø—Ä–æ–±–∞ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è");

            // –Ø–∫—â–æ –ø–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
            if (event.message.includes('init is not a function')) {
                try {
                    // –°–ø—Ä–æ–±—É—î–º–æ –≤–∏–∫–ª–∏–∫–∞—Ç–∏ init, —è–∫—â–æ —Ü–µ –º–æ–∂–ª–∏–≤–æ
                    if (typeof window.WinixCore.init === 'function') {
                        window.WinixCore.init();
                    }
                } catch (e) {
                    console.error("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Å–ø—Ä–æ–±—ñ –≤–∏–∫–ª–∏–∫—É WinixCore.init:", e);
                }
            }

            // –Ø–∫—â–æ –ø–æ–º–∏–ª–∫–∞ —Å—Ç–µ–π–∫—ñ–Ω–≥—É
            if (event.message.includes('Staking') ||
                event.message.includes('calculateExpectedReward')) {
                // –û—á–∏—â–∞—î–º–æ –ø–æ—à–∫–æ–¥–∂–µ–Ω—ñ –¥–∞–Ω—ñ —Å—Ç–µ–π–∫—ñ–Ω–≥—É
                setTimeout(function() {
                    console.log("–í–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö —Å—Ç–µ–π–∫—ñ–Ω–≥—É");

                    const stakingData = {
                        period: 14,
                        status: 'active',
                        endDate: '2025-04-19T18:15:27.657416',
                        stakingId: 'st-72a90e0bae7b',
                        startDate: '2025-04-05T18:15:27.657403',
                        remainingDays: 13,
                        rewardPercent: 9,
                        stakingAmount: 100,
                        expectedReward: 9.0,
                        hasActiveStaking: true,
                        creationTimestamp: 1743876927657
                    };

                    // –û–Ω–æ–≤–ª—é—î–º–æ –¥–∞–Ω—ñ –≤ localStorage
                    localStorage.setItem('stakingData', JSON.stringify(stakingData));
                    localStorage.setItem('winix_staking', JSON.stringify(stakingData));
                }, 500);
            }

            // –ó–∞–ø–æ–±—ñ–≥–∞—î–º–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ñ–π –æ–±—Ä–æ–±—Ü—ñ –ø–æ–º–∏–ª–∫–∏
            event.preventDefault();
        }
    });

    // 6. –î–æ–¥–∞—î–º–æ –ø–µ—Ä–µ—Ö–æ–ø–ª—é–≤–∞—á –¥–ª—è –ø–æ–º–∏–ª–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó
    const originalConsoleError = console.error;
    console.error = function() {
        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∏ –Ω–∞ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –ø–æ–º–∏–ª–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó
        for (let i = 0; i < arguments.length; i++) {
            const arg = arguments[i];
            if (typeof arg === 'string' && (
                arg.includes('AUTH: –ü–æ–º–∏–ª–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó') ||
                arg.includes('Telegram WebApp not available')
            )) {
                console.log("üîê –ü–µ—Ä–µ—Ö–æ–ø–ª–µ–Ω–æ –ø–æ–º–∏–ª–∫—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó, –∑–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è –ø–∞—Ç—á—É");

                // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Ñ–ª–∞–≥ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó –¥–ª—è auth.js
                window.isAuthorized = true;
                window.isInitialized = true;
                window.userData = window.WinixCore.UserData;

                // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–¥—ñ—ó –¥–ª—è auth.js
                setTimeout(function() {
                    document.dispatchEvent(new Event('auth:ready'));
                    document.dispatchEvent(new Event('auth:success'));
                }, 200);

                // –ó–∞–ø–æ–±—ñ–≥–∞—î–º–æ –≤–∏–≤–µ–¥–µ–Ω–Ω—é –ø–æ–º–∏–ª–∫–∏
                return;
            }
        }

        // –í–∏–∫–ª–∏–∫–∞—î–º–æ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω—É —Ñ—É–Ω–∫—Ü—ñ—é –¥–ª—è —ñ–Ω—à–∏—Ö –ø–æ–º–∏–ª–æ–∫
        originalConsoleError.apply(console, arguments);
    };

    // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Ñ–ª–∞–≥ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
    window.WINIX_FIX_INITIALIZED = true;

    console.log("‚úÖ WINIX Fix —É—Å–ø—ñ—à–Ω–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ");
})();