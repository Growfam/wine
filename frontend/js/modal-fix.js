/**
 * modal-fix.js
 * –£–Ω—ñ—Ñ—ñ–∫–æ–≤–∞–Ω–∞ —Å–∏—Å—Ç–µ–º–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –º–æ–¥–∞–ª—å–Ω–∏–º–∏ –≤—ñ–∫–Ω–∞–º–∏ —É WINIX.
 * –¶–µ–π —Ñ–∞–π–ª –º–∞—î –±—É—Ç–∏ –ø—ñ–¥–∫–ª—é—á–µ–Ω–∏–π –û–°–¢–ê–ù–ù–Ü–ú, –ø—ñ—Å–ª—è –≤—Å—ñ—Ö —ñ–Ω—à–∏—Ö —Å–∫—Ä–∏–ø—Ç—ñ–≤.
 */

(function() {
    console.log("üîí –ó–∞–ø—É—Å–∫ —î–¥–∏–Ω–æ—ó —Å–∏—Å—Ç–µ–º–∏ –º–æ–¥–∞–ª—å–Ω–∏—Ö –≤—ñ–∫–æ–Ω WINIX...");

    // –ó–∞–ø–æ–±—ñ–≥–∞–Ω–Ω—è –ø–æ–≤—Ç–æ—Ä–Ω—ñ–π —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
    if (window.WinixModalSystem) {
        console.log("‚ö†Ô∏è –°–∏—Å—Ç–µ–º—É –º–æ–¥–∞–ª—å–Ω–∏—Ö –≤—ñ–∫–æ–Ω –≤–∂–µ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ");
        return;
    }

    // –°—Ç–≤–æ—Ä—é—î–º–æ –≥–ª–æ–±–∞–ª—å–Ω–∏–π –æ–±'—î–∫—Ç –¥–ª—è –∫–µ—Ä—É–≤–∞–Ω–Ω—è –º–æ–¥–∞–ª—å–Ω–∏–º–∏ –≤—ñ–∫–Ω–∞–º–∏
    window.WinixModalSystem = {
        // –°—Ç–∞–Ω –º–æ–¥–∞–ª—å–Ω–∏—Ö –≤—ñ–∫–æ–Ω
        state: {
            isModalOpen: false,
            isAlertOpen: false,
            isNotificationOpen: false,
            lastOpenTime: 0
        },

        // –û—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó, —è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ –±—É–¥–µ –≤—ñ–¥–Ω–æ–≤–∏—Ç–∏
        originalFunctions: {
            createInputModal: window.createInputModal,
            simpleAlert: window.simpleAlert,
            showNotification: window.showNotification
        },

        // –§—É–Ω–∫—Ü—ñ—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è –≤—Å—ñ—Ö –º–æ–¥–∞–ª—å–Ω–∏—Ö –≤—ñ–∫–æ–Ω
        removeAllModals: function() {
            document.querySelectorAll('.modal-overlay, .winix-modal-overlay, .alert-overlay, .modal-fix-overlay').forEach(modal => {
                try {
                    modal.remove();
                } catch (e) {
                    console.error("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏–¥–∞–ª–µ–Ω–Ω—ñ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞:", e);
                }
            });
            this.state.isModalOpen = false;
            this.state.isAlertOpen = false;
        },

        // –§—É–Ω–∫—Ü—ñ—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è –≤—Å—ñ—Ö —Å–ø–æ–≤—ñ—â–µ–Ω—å
        removeAllNotifications: function() {
            document.querySelectorAll('.winix-notification, .notification, .toast-message.show').forEach(notification => {
                try {
                    if (notification.classList.contains('toast-message')) {
                        notification.classList.remove('show');
                    } else {
                        notification.remove();
                    }
                } catch (e) {
                    console.error("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏–¥–∞–ª–µ–Ω–Ω—ñ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è:", e);
                }
            });
            this.state.isNotificationOpen = false;
        }
    };

    // –°—Ç–≤–æ—Ä—é—î–º–æ —Å—Ç–∏–ª—ñ –¥–ª—è –Ω–∞—à–∏—Ö –º–æ–¥–∞–ª—å–Ω–∏—Ö –≤—ñ–∫–æ–Ω
    const styles = document.createElement('style');
    styles.id = 'winix-modal-styles';
    styles.innerHTML = `
        .modal-fix-overlay {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0, 0, 0, 0.7);
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 9999;
            backdrop-filter: blur(5px);
            animation: winix-fade-in 0.2s ease-out;
        }
        
        .modal-fix-container {
            width: 85%;
            max-width: 350px;
            background: linear-gradient(135deg, rgba(26, 26, 46, 0.95), rgba(15, 52, 96, 0.95));
            border-radius: 20px;
            padding: 25px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.5), 0 0 15px rgba(0, 201, 167, 0.3);
            border: 1px solid rgba(0, 201, 167, 0.2);
            display: flex;
            flex-direction: column;
            gap: 20px;
            animation: winix-slide-up 0.3s ease-out;
        }
        
        .modal-fix-container.error {
            background: linear-gradient(135deg, rgba(46, 26, 26, 0.95), rgba(96, 15, 15, 0.95));
            border: 1px solid rgba(201, 0, 0, 0.2);
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.5), 0 0 15px rgba(201, 0, 0, 0.3);
        }
        
        .modal-fix-title {
            font-size: 18px;
            font-weight: 500;
            text-align: center;
            color: #fff;
            margin-bottom: 5px;
            text-shadow: 0 0 10px rgba(0, 201, 167, 0.5);
        }
        
        .modal-fix-message {
            text-align: center;
            font-size: 16px;
            color: #fff;
            margin-bottom: 10px;
        }
        
        .modal-fix-input {
            width: 100%;
            height: 45px;
            background: rgba(20, 30, 60, 0.6);
            border: 1px solid rgba(0, 201, 167, 0.3);
            border-radius: 12px;
            padding: 0 15px;
            color: #fff;
            font-size: 16px;
            box-sizing: border-box;
            transition: all 0.3s ease;
            box-shadow: inset 0 2px 5px rgba(0, 0, 0, 0.2);
            margin-bottom: 10px;
        }
        
        .modal-fix-input:focus {
            outline: none;
            border-color: rgba(0, 201, 167, 0.8);
            box-shadow: 0 0 10px rgba(0, 201, 167, 0.4), inset 0 2px 5px rgba(0, 0, 0, 0.2);
        }
        
        .modal-fix-input.error {
            border-color: #ff3860;
            animation: winix-shake 0.5s;
        }
        
        .modal-fix-buttons {
            display: flex;
            justify-content: space-between;
            gap: 15px;
        }
        
        .modal-fix-button {
            flex: 1;
            height: 45px;
            border-radius: 12px;
            font-size: 16px;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.3s ease;
            border: none;
        }
        
        .modal-fix-button.cancel {
            background: rgba(30, 39, 70, 0.6);
            color: #fff;
            border: 1px solid rgba(255, 255, 255, 0.2);
        }
        
        .modal-fix-button.confirm {
            background: linear-gradient(90deg, #2D6EB6, #52C0BD);
            color: #fff;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
        }
        
        .modal-fix-button:active {
            transform: scale(0.97);
        }
        
        /* –ê–Ω—ñ–º–∞—Ü—ñ—ó */
        @keyframes winix-fade-in {
            from { opacity: 0; }
            to { opacity: 1; }
        }
        
        @keyframes winix-slide-up {
            from { transform: translateY(30px); opacity: 0; }
            to { transform: translateY(0); opacity: 1; }
        }
        
        @keyframes winix-shake {
            0%, 100% { transform: translateX(0); }
            10%, 30%, 50%, 70%, 90% { transform: translateX(-5px); }
            20%, 40%, 60%, 80% { transform: translateX(5px); }
        }
        
        /* –°—Ç–∏–ª—ñ –¥–ª—è —Å–ø–æ–≤—ñ—â–µ–Ω—å */
        .winix-notification {
            position: fixed;
            top: 20px;
            left: 50%;
            transform: translateX(-50%);
            padding: 15px 25px;
            background: linear-gradient(90deg, rgba(10, 20, 40, 0.95), rgba(20, 40, 80, 0.95));
            border-radius: 15px;
            color: white;
            font-size: 16px;
            min-width: 250px;
            text-align: center;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.4);
            z-index: 9999;
            animation: winix-notification-in 0.5s forwards;
            border: 1px solid rgba(0, 201, 167, 0.3);
        }
        
        .winix-notification.success {
            background: linear-gradient(90deg, rgba(10, 40, 20, 0.95), rgba(0, 60, 40, 0.95));
            border: 1px solid rgba(0, 201, 167, 0.5);
        }
        
        .winix-notification.error {
            background: linear-gradient(90deg, rgba(40, 10, 10, 0.95), rgba(60, 0, 0, 0.95));
            border: 1px solid rgba(201, 0, 0, 0.5);
        }
        
        @keyframes winix-notification-in {
            0% { opacity: 0; transform: translate(-50%, -20px); }
            10% { opacity: 1; transform: translate(-50%, 0); }
            90% { opacity: 1; transform: translate(-50%, 0); }
            100% { opacity: 0; transform: translate(-50%, -20px); }
        }
    `;
    document.head.appendChild(styles);

    // –ó–∞–º—ñ–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—ó —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞
    window.createInputModal = function(title, onConfirm) {
        console.log("üîí –í–∏–∫–ª–∏–∫ createInputModal:", title);

        // –ó–∞–ø–æ–±—ñ–≥–∞—î–º–æ –ø–æ–¥–≤—ñ–π–Ω–æ–º—É –≤—ñ–¥–∫—Ä–∏—Ç—Ç—é
        if (WinixModalSystem.state.isModalOpen ||
           (Date.now() - WinixModalSystem.state.lastOpenTime < 500)) {
            console.log("üö´ –ó–∞–ø–æ–±—ñ–≥–∞—î–º–æ –ø–æ–¥–≤—ñ–π–Ω–æ–º—É –≤—ñ–¥–∫—Ä–∏—Ç—Ç—é –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞");
            return null;
        }

        // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω
        WinixModalSystem.state.isModalOpen = true;
        WinixModalSystem.state.lastOpenTime = Date.now();

        // –í–∏–¥–∞–ª—è—î–º–æ –≤—Å—ñ —ñ—Å–Ω—É—é—á—ñ –º–æ–¥–∞–ª—å–Ω—ñ –≤—ñ–∫–Ω–∞
        WinixModalSystem.removeAllModals();

        // –°—Ç–≤–æ—Ä—é—î–º–æ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
        const overlay = document.createElement('div');
        overlay.className = 'modal-fix-overlay';

        const container = document.createElement('div');
        container.className = 'modal-fix-container';

        const modalTitle = document.createElement('div');
        modalTitle.className = 'modal-fix-title';
        modalTitle.textContent = title || '–í–≤–µ–¥—ñ—Ç—å —Å—É–º—É:';

        const input = document.createElement('input');
        input.className = 'modal-fix-input';
        input.type = 'number';
        input.min = '0';
        input.step = 'any';
        input.placeholder = '–í–≤–µ–¥—ñ—Ç—å —Å—É–º—É';

        // –°–ø—Ä–æ–±—É—î–º–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–æ—Å—Ç—É–ø–Ω–∏–π –±–∞–ª–∞–Ω—Å
        try {
            let balance = 0;
            if (window.WinixCore && window.WinixCore.Balance) {
                balance = window.WinixCore.Balance.getTokens();
            } else if (window.balanceSystem) {
                balance = window.balanceSystem.getTokens();
            } else {
                balance = parseFloat(localStorage.getItem('userTokens') || '0');
            }
            input.placeholder = `–í–≤–µ–¥—ñ—Ç—å —Å—É–º—É (–º–∞–∫—Å: ${balance.toFixed(2)})`;
        } catch (e) {
            console.error("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –±–∞–ª–∞–Ω—Å—É:", e);
        }

        const buttonContainer = document.createElement('div');
        buttonContainer.className = 'modal-fix-buttons';

        const cancelButton = document.createElement('button');
        cancelButton.className = 'modal-fix-button cancel';
        cancelButton.textContent = '–°–∫–∞—Å—É–≤–∞—Ç–∏';

        const confirmButton = document.createElement('button');
        confirmButton.className = 'modal-fix-button confirm';
        confirmButton.textContent = 'OK';

        // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏
        cancelButton.onclick = function() {
            overlay.remove();
            WinixModalSystem.state.isModalOpen = false;
        };

        confirmButton.onclick = function() {
            const amount = parseFloat(input.value);
            if (isNaN(amount) || amount <= 0) {
                input.classList.add('error');
                setTimeout(() => input.classList.remove('error'), 500);
                return;
            }
            overlay.remove();
            WinixModalSystem.state.isModalOpen = false;
            if (typeof onConfirm === 'function') {
                onConfirm(amount);
            }
        };

        // –û–±—Ä–æ–±–Ω–∏–∫ –∫–ª–∞–≤—ñ—à—ñ Enter
        input.addEventListener('keyup', function(event) {
            if (event.key === 'Enter') {
                confirmButton.click();
            }
        });

        // –ó–±–∏—Ä–∞—î–º–æ –≤—ñ–∫–Ω–æ
        buttonContainer.appendChild(cancelButton);
        buttonContainer.appendChild(confirmButton);
        container.appendChild(modalTitle);
        container.appendChild(input);
        container.appendChild(buttonContainer);
        overlay.appendChild(container);
        document.body.appendChild(overlay);

        // –§–æ–∫—É—Å –Ω–∞ –ø–æ–ª—ñ
        setTimeout(() => input.focus(), 100);

        return overlay;
    };

    // –ó–∞–º—ñ–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—ó –¥–ª—è –ø–æ–∫–∞–∑—É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
    window.simpleAlert = function(message, isError = false, callback) {
        console.log("üîí –í–∏–∫–ª–∏–∫ simpleAlert:", message, isError ? "(–ø–æ–º–∏–ª–∫–∞)" : "");

        return new Promise((resolve) => {
            // –í–∏–¥–∞–ª—è—î–º–æ –≤—Å—ñ —ñ—Å–Ω—É—é—á—ñ –º–æ–¥–∞–ª—å–Ω—ñ –≤—ñ–∫–Ω–∞
            WinixModalSystem.removeAllModals();

            // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω
            WinixModalSystem.state.isAlertOpen = true;

            // –°—Ç–≤–æ—Ä—é—î–º–æ –µ–ª–µ–º–µ–Ω—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
            const overlay = document.createElement('div');
            overlay.className = 'modal-fix-overlay';

            const container = document.createElement('div');
            container.className = 'modal-fix-container' + (isError ? ' error' : '');

            const messageElement = document.createElement('div');
            messageElement.className = 'modal-fix-message';
            messageElement.textContent = message;

            const buttonContainer = document.createElement('div');
            buttonContainer.className = 'modal-fix-buttons';

            const confirmButton = document.createElement('button');
            confirmButton.className = 'modal-fix-button confirm';
            confirmButton.textContent = 'OK';
            confirmButton.style.width = '100%';

            // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏
            confirmButton.onclick = function() {
                overlay.remove();
                WinixModalSystem.state.isAlertOpen = false;
                if (typeof callback === 'function') {
                    callback();
                }
                resolve();
            };

            // –ó–±–∏—Ä–∞—î–º–æ –µ–ª–µ–º–µ–Ω—Ç–∏
            buttonContainer.appendChild(confirmButton);
            container.appendChild(messageElement);
            container.appendChild(buttonContainer);
            overlay.appendChild(container);
            document.body.appendChild(overlay);
        });
    };

    // –ó–∞–º—ñ–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—ó –¥–ª—è –ø–æ–∫–∞–∑—É —Å–ø–æ–≤—ñ—â–µ–Ω—å
    window.showNotification = function(message, type = 'info', duration = 3000) {
        console.log("üîí –í–∏–∫–ª–∏–∫ showNotification:", message, type);

        // –í–∏–¥–∞–ª—è—î–º–æ –≤—Å—ñ —ñ—Å–Ω—É—é—á—ñ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è
        WinixModalSystem.removeAllNotifications();

        // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω
        WinixModalSystem.state.isNotificationOpen = true;

        // –°—Ç–≤–æ—Ä—é—î–º–æ –µ–ª–µ–º–µ–Ω—Ç —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è
        const notification = document.createElement('div');
        notification.className = 'winix-notification';
        notification.textContent = message;

        // –î–æ–¥–∞—î–º–æ –∫–ª–∞—Å –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ —Ç–∏–ø—É
        if (type === 'success' || type === 'SUCCESS') {
            notification.classList.add('success');
        } else if (type === 'error' || type === 'ERROR') {
            notification.classList.add('error');
        }

        // –î–æ–¥–∞—î–º–æ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –¥–æ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
        document.body.appendChild(notification);

        // –í–∏–¥–∞–ª—è—î–º–æ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –ø—ñ—Å–ª—è –ø–µ–≤–Ω–æ–≥–æ —á–∞—Å—É
        setTimeout(() => {
            try {
                notification.remove();
                WinixModalSystem.state.isNotificationOpen = false;
            } catch (e) {
                console.error("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏–¥–∞–ª–µ–Ω–Ω—ñ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è:", e);
            }
        }, duration);

        return notification;
    };

    // –î–æ–¥–∞—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é showToast —è–∫ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—É showNotification
    window.showToast = function(message, duration = 3000) {
        return window.showNotification(message, 'info', duration);
    };

    // –ï–∫—Å–ø–æ—Ä—Ç—É—î–º–æ –¥–ª—è –º–æ–∂–ª–∏–≤–æ–≥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –≤ —ñ–Ω—à–∏—Ö –º—ñ—Å—Ü—è—Ö
    window.winixUI = window.winixUI || {};
    window.winixUI.simpleAlert = window.simpleAlert;
    window.winixUI.showNotification = window.showNotification;
    window.winixUI.showToast = window.showToast;

    console.log("‚úÖ –Ñ–¥–∏–Ω—É —Å–∏—Å—Ç–µ–º—É –º–æ–¥–∞–ª—å–Ω–∏—Ö –≤—ñ–∫–æ–Ω WINIX —É—Å–ø—ñ—à–Ω–æ –∞–∫—Ç–∏–≤–æ–≤–∞–Ω–æ");
})();