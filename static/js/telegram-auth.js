/**
 * –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞ —Å–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó Telegram
 */

(function() {
    window.TelegramAuth = {
        // –ó–±–µ—Ä—ñ–≥–∞—Ç–∏ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        userData: null,

        // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è
        init: function() {
            console.log("üîÑ –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è Telegram Auth");

            // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –¥–∞–Ω—ñ –¥–ª—è –¥–µ–±–∞–≥—É
            this.sendDebugData({
                type: "telegram_data",
                data: window.Telegram?.WebApp?.initDataUnsafe || "not available",
                user: window.Telegram?.WebApp?.initDataUnsafe?.user || "not available",
                location: window.location.href,
                timestamp: new Date().toISOString()
            });

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –¥–æ—Å—Ç—É–ø–Ω–∏–π Telegram WebApp
            if (window.Telegram && window.Telegram.WebApp) {
                // –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
                const tg = window.Telegram.WebApp;
                tg.ready();

                const user = tg.initDataUnsafe?.user;
                if (user && user.id) {
                    this.userData = user;
                    console.log("‚úÖ –û—Ç—Ä–∏–º–∞–Ω–æ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:", user);

                    // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ ID –≤ —Å—Ö–æ–≤–∏—â—ñ, —â–æ–± –Ω–µ –≤—Ç—Ä–∞—Ç–∏—Ç–∏ –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥—ñ –º—ñ–∂ —Å—Ç–æ—Ä—ñ–Ω–∫–∞–º–∏
                    localStorage.setItem('telegram_user_id', user.id);

                    // –û–Ω–æ–≤–ª—é—î–º–æ –µ–ª–µ–º–µ–Ω—Ç –∑ ID –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ
                    this.updateUserIdElement(user.id);

                    // –ê–≤—Ç–æ—Ä–∏–∑—É—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ
                    this.authorizeUser(user);

                    return user;
                } else {
                    console.error("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ Telegram WebApp");

                    // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –¥–µ—Ç–∞–ª—ñ –ø–æ–º–∏–ª–∫–∏
                    this.sendDebugData({
                        type: "error",
                        error: "No user data in WebApp",
                        webAppData: tg.initDataUnsafe,
                        timestamp: new Date().toISOString()
                    });

                    // –°–ø—Ä–æ–±–∞ –≤—ñ–¥–Ω–æ–≤–∏—Ç–∏ ID –∑ localStorage
                    const savedId = localStorage.getItem('telegram_user_id');
                    if (savedId) {
                        console.log("‚ÑπÔ∏è –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∑–±–µ—Ä–µ–∂–µ–Ω–∏–π ID:", savedId);
                        this.updateUserIdElement(savedId);
                        return { id: savedId };
                    }
                }
            } else {
                console.error("‚ùå Telegram WebApp –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∏–π");

                // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –¥–µ—Ç–∞–ª—ñ –ø–æ–º–∏–ª–∫–∏
                this.sendDebugData({
                    type: "error",
                    error: "Telegram WebApp not available",
                    navigator: navigator.userAgent,
                    timestamp: new Date().toISOString()
                });
            }

            return null;
        },

        // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –¥–ª—è –¥–µ–±–∞–≥—É
        sendDebugData: function(data) {
            console.log("üì§ –í—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –¥–µ–±–∞–≥-–¥–∞–Ω–∏—Ö:", data);

            fetch('/api/debug', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(data)
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error(`HTTP –ø–æ–º–∏–ª–∫–∞! –°—Ç–∞—Ç—É—Å: ${response.status}`);
                }
                console.log("‚úÖ –î–µ–±–∞–≥-–¥–∞–Ω—ñ —É—Å–ø—ñ—à–Ω–æ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ");
                return response.json();
            })
            .catch(error => console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –¥–µ–±–∞–≥-–¥–∞–Ω–∏—Ö:", error));
        },

        // –û—Ç—Ä–∏–º–∞–Ω–Ω—è ID –ø–æ—Ç–æ—á–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        getCurrentUserId: function() {
            // –°–ø–æ—á–∞—Ç–∫—É –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∑–±–µ—Ä–µ–∂–µ–Ω—ñ –¥–∞–Ω—ñ
            if (this.userData && this.userData.id) {
                return this.userData.id;
            }

            // –ü–æ—Ç—ñ–º –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ localStorage
            const savedId = localStorage.getItem('telegram_user_id');
            if (savedId) {
                return savedId;
            }

            // –ü–æ—Ç—ñ–º –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –µ–ª–µ–º–µ–Ω—Ç –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ
            const userIdElement = document.getElementById('user-id');
            if (userIdElement && userIdElement.textContent) {
                const id = userIdElement.textContent.trim();
                if (id && id !== '12345678') {
                    return id;
                }
            }

            // –ù–∞—Ä–µ—à—Ç—ñ, –Ω–∞–º–∞–≥–∞—î–º–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –∑ Telegram WebApp –Ω–∞–ø—Ä—è–º—É
            if (window.Telegram && window.Telegram.WebApp) {
                const user = window.Telegram.WebApp.initDataUnsafe?.user;
                if (user && user.id) {
                    return user.id;
                }
            }

            console.error("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∂–æ–¥–Ω–∏–º —Å–ø–æ—Å–æ–±–æ–º");

            // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –¥–µ—Ç–∞–ª—ñ –ø–æ–º–∏–ª–∫–∏
            this.sendDebugData({
                type: "error",
                error: "Failed to get user ID",
                element_id: document.getElementById('user-id')?.textContent || "not found",
                localStorage: localStorage.getItem('telegram_user_id') || "not found",
                timestamp: new Date().toISOString()
            });

            return null;
        },

        // –û–Ω–æ–≤–ª–µ–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç–∞ –∑ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        updateUserIdElement: function(userId) {
            const userIdElement = document.getElementById('user-id');
            if (userIdElement) {
                userIdElement.textContent = userId;
                console.log("‚úÖ –û–Ω–æ–≤–ª–µ–Ω–æ –µ–ª–µ–º–µ–Ω—Ç –∑ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:", userId);
            } else {
                console.error("‚ùå –ï–ª–µ–º–µ–Ω—Ç –∑ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ");

                // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –¥–µ—Ç–∞–ª—ñ –ø–æ–º–∏–ª–∫–∏
                this.sendDebugData({
                    type: "error",
                    error: "User ID element not found",
                    userId: userId,
                    timestamp: new Date().toISOString()
                });
            }
        },

        // –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ
        authorizeUser: function(userData) {
            console.log("üîÑ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ:", userData);

            fetch('/api/auth', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(userData)
            })
            .then(response => response.json())
            .then(data => {
                if (data.status === 'success') {
                    console.log("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è —É—Å–ø—ñ—à–Ω–∞:", data);

                    // –í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –ø–æ–¥—ñ—é –ø—Ä–æ —É—Å–ø—ñ—à–Ω—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—é
                    document.dispatchEvent(new CustomEvent('telegram-auth-success', {
                        detail: data.data
                    }));
                } else {
                    console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó:", data);

                    // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –¥–µ—Ç–∞–ª—ñ –ø–æ–º–∏–ª–∫–∏
                    this.sendDebugData({
                        type: "error",
                        error: "Auth request failed",
                        response: data,
                        userData: userData,
                        timestamp: new Date().toISOString()
                    });
                }
            })
            .catch(error => {
                console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø–∏—Ç—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó:", error);

                // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –¥–µ—Ç–∞–ª—ñ –ø–æ–º–∏–ª–∫–∏
                this.sendDebugData({
                    type: "error",
                    error: "Auth request exception",
                    message: error.message,
                    userData: userData,
                    timestamp: new Date().toISOString()
                });
            });
        }
    };

    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è
    document.addEventListener('DOMContentLoaded', function() {
        window.TelegramAuth.init();
    });

    // –Ø–∫—â–æ DOM –≤–∂–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ, —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ –∑–∞—Ä–∞–∑
    if (document.readyState === 'interactive' || document.readyState === 'complete') {
        window.TelegramAuth.init();
    }
})();