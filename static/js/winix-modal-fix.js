/**
 * WINIX - –ü—Ä–µ–º—ñ–∞–ª—å–Ω—ñ –º–æ–¥–∞–ª—å–Ω—ñ –≤—ñ–∫–Ω–∞ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤ –∑ —Ä–µ–∞–ª—ñ—Å—Ç–∏—á–Ω–∏–º–∏ –¥–∞–Ω–∏–º–∏ –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤
 * –í–∏–ø—Ä–∞–≤–ª—è—î –∫–Ω–æ–ø–∫–∏ –∑–∞–∫—Ä–∏—Ç—Ç—è —É –≤—Å—ñ—Ö –º–æ–¥–∞–ª—å–Ω–∏—Ö –≤—ñ–∫–Ω–∞—Ö —ñ –ø–æ–∫—Ä–∞—â—É—î –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –¥–µ—Ç–∞–ª–µ–π —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
 */
(function() {
    console.log("üèÜ WINIX PREMIUM MODALS: –ó–∞–ø—É—Å–∫...");

    // –î–æ–¥–∞—î–º–æ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ —Å—Ç–∏–ª—ñ –¥–ª—è –ø—Ä–µ–º—ñ–∞–ª—å–Ω–æ–≥–æ –¥–∏–∑–∞–π–Ω—É
    injectModalStyles();

    // –í–∏–ø—Ä–∞–≤–ª—è—î–º–æ –∫–Ω–æ–ø–∫–∏ –∑–∞–∫—Ä–∏—Ç—Ç—è —É –≤—Å—ñ—Ö –º–æ–¥–∞–ª—å–Ω–∏—Ö –≤—ñ–∫–Ω–∞—Ö
    fixCloseButtons();

    // –ü–µ—Ä–µ–≤–∏–∑–Ω–∞—á–∞—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é –ø–æ–∫–∞–∑—É –¥–µ—Ç–∞–ª–µ–π —Ä–æ–∑—ñ–≥—Ä–∞—à—É
    overrideRaffleDetailsModal();

    /**
     * –î–æ–¥–∞—î–º–æ —Å—Ç–∏–ª—ñ –¥–ª—è –ø—Ä–µ–º—ñ–∞–ª—å–Ω–∏—Ö –º–æ–¥–∞–ª—å–Ω–∏—Ö –≤—ñ–∫–æ–Ω
     */
    function injectModalStyles() {
        const styleElement = document.createElement('style');
        styleElement.id = 'premium-modals-styles';
        styleElement.textContent = `
            /* –ü–æ–∫—Ä–∞—â–µ–Ω–∏–π —Å—Ç–∏–ª—å –º–æ–¥–∞–ª—å–Ω–∏—Ö –≤—ñ–∫–æ–Ω */
            .raffle-modal.open, .daily-raffle-modal.open {
                display: flex;
            }
            
            .raffle-modal, .daily-raffle-modal {
                position: fixed;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                background-color: rgba(0, 0, 0, 0.85);
                z-index: 1000;
                backdrop-filter: blur(8px);
                display: none;
                justify-content: center;
                align-items: center;
                opacity: 0;
                transition: opacity 0.3s ease;
            }
            
            .raffle-modal.open, .daily-raffle-modal.open {
                opacity: 1;
            }
            
            .modal-content, .daily-modal-content {
                width: 90%;
                max-width: 480px;
                background: linear-gradient(145deg, rgba(26, 26, 46, 0.97), rgba(15, 52, 96, 0.97));
                border-radius: 20px;
                padding: 1.5rem;
                box-shadow: 0 10px 25px rgba(0, 0, 0, 0.5), 0 0 25px rgba(78, 181, 247, 0.2);
                animation: modalFadeIn 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
                max-height: 80vh;
                overflow-y: auto;
                border: 1px solid rgba(78, 181, 247, 0.2);
                position: relative;
            }
            
            .modal-content::before, .daily-modal-content::before {
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                right: 0;
                height: 80px;
                background: linear-gradient(to bottom, rgba(30, 113, 161, 0.2), transparent);
                border-radius: 20px 20px 0 0;
                pointer-events: none;
            }
            
            @keyframes modalFadeIn {
                from { opacity: 0; transform: scale(0.9); }
                to { opacity: 1; transform: scale(1); }
            }
            
            .modal-header {
                display: flex;
                justify-content: space-between;
                align-items: center;
                margin-bottom: 1.5rem;
                position: relative;
            }
            
            .modal-header::after {
                content: '';
                position: absolute;
                bottom: -0.75rem;
                left: 0;
                right: 0;
                height: 1px;
                background: linear-gradient(to right, transparent, rgba(78, 181, 247, 0.5), transparent);
            }
            
            .modal-title {
                font-size: 1.5rem;
                font-weight: bold;
                color: #FFD700;
                text-shadow: 0 0 5px rgba(255, 215, 0, 0.3);
                margin: 0;
            }
            
            .modal-close {
                width: 32px;
                height: 32px;
                background: rgba(255, 255, 255, 0.1);
                border-radius: 50%;
                display: flex;
                align-items: center;
                justify-content: center;
                font-size: 1.25rem;
                color: rgba(255, 255, 255, 0.7);
                cursor: pointer;
                transition: all 0.3s ease;
                line-height: 1;
                padding-bottom: 2px; /* –î–ª—è –∫—Ä–∞—â–æ–≥–æ –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ–≥–æ —Ü–µ–Ω—Ç—Ä—É–≤–∞–Ω–Ω—è */
            }
            
            .modal-close:hover {
                color: white;
                background: rgba(255, 255, 255, 0.2);
                box-shadow: 0 0 10px rgba(78, 181, 247, 0.5);
                transform: rotate(90deg);
            }
            
            /* –°—Ç–∏–ª—ñ –¥–ª—è –¥–µ—Ç–∞–ª–µ–π —Ä–æ–∑—ñ–≥—Ä–∞—à—É */
            .prize-details {
                margin-bottom: 1.5rem;
            }
            
            .detail-item {
                margin-bottom: 1rem;
                display: flex;
                flex-direction: column;
            }
            
            .detail-label {
                font-size: 0.9rem;
                color: rgba(255, 255, 255, 0.7);
                margin-bottom: 0.25rem;
            }
            
            .detail-value {
                font-size: 1.1rem;
                color: white;
                font-weight: bold;
            }
            
            .won, .–≤–∏–≥—Ä–∞–Ω–æ {
                color: #4CAF50 !important;
                text-shadow: 0 0 5px rgba(76, 175, 80, 0.3);
            }
            
            /* –°—Ç–∏–ª—ñ –¥–ª—è —Å–ø–∏—Å–∫—É –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤ */
            .winners-section {
                background: rgba(0, 0, 0, 0.25);
                border-radius: 12px;
                padding: 1.25rem;
                margin-bottom: 1.5rem;
                border: 1px solid rgba(78, 181, 247, 0.15);
            }
            
            .winners-title {
                font-size: 1.25rem;
                font-weight: bold;
                text-align: center;
                margin-bottom: 1rem;
                color: #FFD700;
                text-shadow: 0 0 5px rgba(255, 215, 0, 0.3);
                position: relative;
                padding-bottom: 0.5rem;
            }
            
            .winners-title::after {
                content: '';
                position: absolute;
                bottom: 0;
                left: 25%;
                width: 50%;
                height: 1px;
                background: linear-gradient(90deg, transparent, rgba(255, 215, 0, 0.5), transparent);
            }
            
            .winners-list {
                display: flex;
                flex-direction: column;
                gap: 0.75rem;
                max-height: 300px;
                overflow-y: auto;
                padding-right: 5px;
                margin-right: -5px;
            }
            
            .winners-list::-webkit-scrollbar {
                width: 5px;
            }
            
            .winners-list::-webkit-scrollbar-track {
                background: rgba(0, 0, 0, 0.2);
                border-radius: 10px;
            }
            
            .winners-list::-webkit-scrollbar-thumb {
                background: rgba(78, 181, 247, 0.5);
                border-radius: 10px;
            }
            
            .winner-item {
                display: flex;
                align-items: center;
                background: rgba(30, 39, 70, 0.5);
                border-radius: 8px;
                padding: 0.75rem;
                transition: all 0.3s ease;
                position: relative;
                overflow: hidden;
            }
            
            .winner-item:hover {
                background: rgba(30, 39, 70, 0.8);
                transform: translateY(-2px);
                box-shadow: 0 3px 8px rgba(0, 0, 0, 0.3);
            }
            
            .winner-item.current-user {
                background: linear-gradient(145deg, rgba(30, 113, 161, 0.5), rgba(0, 201, 167, 0.3));
                border: 1px solid rgba(0, 201, 167, 0.5);
            }
            
            .winner-place {
                width: 36px;
                height: 36px;
                min-width: 36px;
                background: rgba(0, 0, 0, 0.3);
                border-radius: 50%;
                display: flex;
                justify-content: center;
                align-items: center;
                position: relative;
                margin-right: 0.75rem;
            }
            
            .winner-place.top-1 {
                background: linear-gradient(145deg, #FFD700, #FFA500);
                box-shadow: 0 0 10px rgba(255, 215, 0, 0.5);
            }
            
            .winner-place.top-2 {
                background: linear-gradient(145deg, #C0C0C0, #A9A9A9);
                box-shadow: 0 0 8px rgba(192, 192, 192, 0.5);
            }
            
            .winner-place.top-3 {
                background: linear-gradient(145deg, #CD7F32, #A0522D);
                box-shadow: 0 0 8px rgba(205, 127, 50, 0.5);
            }
            
            .place-number {
                font-weight: bold;
                color: white;
                text-shadow: 0 1px 3px rgba(0, 0, 0, 0.5);
            }
            
            .winner-info {
                flex: 1;
            }
            
            .winner-name {
                font-weight: bold;
                color: white;
                margin-bottom: 0.25rem;
            }
            
            .current-user .winner-name {
                color: #FFD700;
                text-shadow: 0 0 3px rgba(255, 215, 0, 0.5);
            }
            
            .winner-telegram {
                font-size: 0.8rem;
                color: rgba(255, 255, 255, 0.7);
                margin-bottom: 0.25rem;
            }
            
            .winner-prize {
                display: inline-block;
                padding: 0.25rem 0.6rem;
                background: linear-gradient(90deg, #FFD700, #00C9A7);
                border-radius: 20px;
                font-weight: bold;
                color: #1A1A2E;
                font-size: 0.875rem;
                box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
                white-space: nowrap;
            }
            
            /* –ö–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä–∏—Ç—Ç—è */
            .join-button {
                width: 100%;
                background: linear-gradient(90deg, #FFD700, #00dfd1);
                border: none;
                border-radius: 25px;
                padding: 0.9rem;
                color: #1A1A2E;
                font-size: 1rem;
                font-weight: bold;
                margin-top: 0.625rem;
                cursor: pointer;
                transition: all 0.3s ease;
                box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
                text-transform: uppercase;
                letter-spacing: 1px;
            }
            
            .join-button:hover {
                transform: translateY(-2px);
                box-shadow: 0 6px 12px rgba(0, 0, 0, 0.4);
                background: linear-gradient(90deg, #FFE44D, #00C9A7);
            }
            
            .join-button:active {
                transform: translateY(0);
                box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
            }
        `;

        document.head.appendChild(styleElement);
        console.log("–°—Ç–∏–ª—ñ –¥–ª—è –ø—Ä–µ–º—ñ–∞–ª—å–Ω–∏—Ö –º–æ–¥–∞–ª—å–Ω–∏—Ö –≤—ñ–∫–æ–Ω –¥–æ–¥–∞–Ω–æ");
    }

    /**
     * –í–∏–ø—Ä–∞–≤–ª—è—î–º–æ –∫–Ω–æ–ø–∫–∏ –∑–∞–∫—Ä–∏—Ç—Ç—è –¥–ª—è —ñ—Å–Ω—É—é—á–∏—Ö –º–æ–¥–∞–ª—å–Ω–∏—Ö –≤—ñ–∫–æ–Ω
     */
    function fixCloseButtons() {
        // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –≤—Å—ñ –º–æ–¥–∞–ª—å–Ω—ñ –≤—ñ–∫–Ω–∞
        const modals = document.querySelectorAll('.raffle-modal, .daily-raffle-modal');

        modals.forEach(modal => {
            // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –∫–Ω–æ–ø–∫—É –∑–∞–∫—Ä–∏—Ç—Ç—è
            const closeButton = modal.querySelector('.modal-close');
            if (closeButton) {
                // –ó–∞–º—ñ–Ω—é—î–º–æ —ñ—Å–Ω—É—é—á—É –∫–Ω–æ–ø–∫—É –Ω–∞ –Ω–æ–≤—É, —â–æ–± –ø—Ä–∏–±—Ä–∞—Ç–∏ –≤—Å—ñ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π
                const newCloseButton = closeButton.cloneNode(true);
                closeButton.parentNode.replaceChild(newCloseButton, closeButton);

                // –î–æ–¥–∞—î–º–æ –Ω–æ–≤–∏–π –æ–±—Ä–æ–±–Ω–∏–∫, —è–∫–∏–π –∑–∞–∫—Ä–∏–≤–∞—î –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
                newCloseButton.addEventListener('click', function() {
                    modal.classList.remove('open');
                });
            }

            // –¢–∞–∫–æ–∂ –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∫–Ω–æ–ø–∫—É "–ó–∞–∫—Ä–∏—Ç–∏"
            const closeActionButton = modal.querySelector('.join-button[id$="close-btn"], .join-button');
            if (closeActionButton && (closeActionButton.id && closeActionButton.id.includes('close') ||
                                    closeActionButton.textContent.includes('–ó–∞–∫—Ä–∏—Ç–∏') ||
                                    closeActionButton.textContent.includes('–ó–ê–ö–†–ò–¢–ò'))) {
                const newCloseActionButton = closeActionButton.cloneNode(true);
                closeActionButton.parentNode.replaceChild(newCloseActionButton, closeActionButton);

                newCloseActionButton.addEventListener('click', function() {
                    modal.classList.remove('open');
                });
            }
        });

        // –°—Ç–≤–æ—Ä—é—î–º–æ MutationObserver –¥–ª—è —Å–ø–æ—Å—Ç–µ—Ä–µ–∂–µ–Ω–Ω—è –∑–∞ –∑–º—ñ–Ω–∞–º–∏ –≤ DOM
        const observer = new MutationObserver(function(mutations) {
            mutations.forEach(function(mutation) {
                if (mutation.addedNodes && mutation.addedNodes.length > 0) {
                    for (let i = 0; i < mutation.addedNodes.length; i++) {
                        const node = mutation.addedNodes[i];
                        if (node.nodeType === 1) { // –ï–ª–µ–º–µ–Ω—Ç
                            if (node.classList && (node.classList.contains('raffle-modal') || node.classList.contains('daily-raffle-modal'))) {
                                // –ó–Ω–∞–π–¥–µ–Ω–æ –Ω–æ–≤–µ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
                                setupModalClose(node);
                            } else {
                                // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –≤–∫–ª–∞–¥–µ–Ω—ñ –µ–ª–µ–º–µ–Ω—Ç–∏
                                const modals = node.querySelectorAll('.raffle-modal, .daily-raffle-modal');
                                modals.forEach(setupModalClose);
                            }
                        }
                    }
                }
            });
        });

        // –ù–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ –∫–Ω–æ–ø–∫–∏ –∑–∞–∫—Ä–∏—Ç—Ç—è –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞
        function setupModalClose(modal) {
            // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –∫–Ω–æ–ø–∫—É –∑–∞–∫—Ä–∏—Ç—Ç—è
            const closeButton = modal.querySelector('.modal-close');
            if (closeButton) {
                // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫, —è–∫–∏–π –∑–∞–∫—Ä–∏–≤–∞—î –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
                closeButton.addEventListener('click', function() {
                    modal.classList.remove('open');
                });
            }

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∫–Ω–æ–ø–∫—É "–ó–∞–∫—Ä–∏—Ç–∏"
            const closeActionButton = modal.querySelector('.join-button[id$="close-btn"], .join-button');
            if (closeActionButton && (closeActionButton.id && closeActionButton.id.includes('close') ||
                                     closeActionButton.textContent.includes('–ó–∞–∫—Ä–∏—Ç–∏') ||
                                     closeActionButton.textContent.includes('–ó–ê–ö–†–ò–¢–ò'))) {
                closeActionButton.addEventListener('click', function() {
                    modal.classList.remove('open');
                });
            }
        }

        // –ü–æ—á–∞—Ç–∏ —Å–ø–æ—Å—Ç–µ—Ä–µ–∂–µ–Ω–Ω—è
        observer.observe(document.body, {
            childList: true,
            subtree: true
        });

        console.log("–ö–Ω–æ–ø–∫–∏ –∑–∞–∫—Ä–∏—Ç—Ç—è –¥–ª—è –º–æ–¥–∞–ª—å–Ω–∏—Ö –≤—ñ–∫–æ–Ω –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–æ");
    }

    /**
     * –ü–µ—Ä–µ–≤–∏–∑–Ω–∞—á–∞—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é –ø–æ–∫–∞–∑—É –¥–µ—Ç–∞–ª–µ–π —Ä–æ–∑—ñ–≥—Ä–∞—à—É
     */
    function overrideRaffleDetailsModal() {
        // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω—É —Ñ—É–Ω–∫—Ü—ñ—é, —è–∫—â–æ –≤–æ–Ω–∞ —ñ—Å–Ω—É—î
        const originalCreateRaffleDetailsModal = window.createRaffleDetailsModal;

        // –ü–µ—Ä–µ–≤–∏–∑–Ω–∞—á–∞—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é
        window.createRaffleDetailsModal = function(raffleData) {
            // –í–∏–¥–∞–ª—è—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—î –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ, —è–∫—â–æ –≤–æ–Ω–æ —ñ—Å–Ω—É—î
            const existingModal = document.getElementById('raffle-history-modal');
            if (existingModal) {
                existingModal.remove();
            }

            // –°—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤–µ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ –∑ –ø—Ä–µ–º—ñ–∞–ª—å–Ω–∏–º –¥–∏–∑–∞–π–Ω–æ–º
            const modal = document.createElement('div');
            modal.id = 'raffle-history-modal';
            modal.className = 'raffle-modal';

            // –ì–µ–Ω–µ—Ä—É—î–º–æ HTML –¥–ª—è –≤—ñ–∫–Ω–∞
            modal.innerHTML = generatePremiumModalHTML(raffleData);

            // –î–æ–¥–∞—î–º–æ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É
            document.body.appendChild(modal);

            // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π –¥–ª—è –∫–Ω–æ–ø–æ–∫ –∑–∞–∫—Ä–∏—Ç—Ç—è
            setTimeout(function() {
                const closeButton = modal.querySelector('.modal-close');
                if (closeButton) {
                    closeButton.addEventListener('click', function() {
                        modal.classList.remove('open');
                        setTimeout(() => modal.remove(), 300);
                    });
                }

                const closeActionButton = modal.querySelector('#close-history-btn');
                if (closeActionButton) {
                    closeActionButton.addEventListener('click', function() {
                        modal.classList.remove('open');
                        setTimeout(() => modal.remove(), 300);
                    });
                }
            }, 100);

            // –í—ñ–¥–∫—Ä–∏–≤–∞—î–º–æ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ –∑ –∑–∞—Ç—Ä–∏–º–∫–æ—é –¥–ª—è –∞–Ω—ñ–º–∞—Ü—ñ—ó
            setTimeout(() => {
                modal.classList.add('open');
            }, 10);

            return modal;
        };

        console.log("–§—É–Ω–∫—Ü—ñ—é –ø–æ–∫–∞–∑—É –¥–µ—Ç–∞–ª–µ–π —Ä–æ–∑—ñ–≥—Ä–∞—à—É –ø–µ—Ä–µ–≤–∏–∑–Ω–∞—á–µ–Ω–æ");
    }

    /**
     * –ì–µ–Ω–µ—Ä—É—î HTML –¥–ª—è –ø—Ä–µ–º—ñ–∞–ª—å–Ω–æ–≥–æ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞
     */
    function generatePremiumModalHTML(raffleData) {
        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —ñ –æ–±—Ä–æ–±–ª—è—î–º–æ –≤—Ö—ñ–¥–Ω—ñ –¥–∞–Ω—ñ
        raffleData = raffleData || {};

        const date = raffleData.date || '20.03.2025';
        const prize = raffleData.prize || '50 USDT ‚Ä¢ 10 –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤';
        const result = raffleData.result || '–í–∏ –±—É–ª–∏ —É—á–∞—Å–Ω–∏–∫–æ–º';
        const status = raffleData.status || 'participated';

        // –í–∏–∑–Ω–∞—á–∞—î–º–æ —Ç–∏–ø —Ä–æ–∑—ñ–≥—Ä–∞—à—É —Ç–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤
        const isUsdtRaffle = prize.includes('USDT');
        const isWinixRaffle = prize.includes('WINIX');
        const winnersCount = prize.includes('10 –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤') ? 10 :
                            prize.includes('15 –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤') ? 15 :
                            prize.includes('5 –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤') ? 5 :
                            10; // –ó–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º 10 –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤

        // –ì–µ–Ω–µ—Ä—É—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–∏–π —Å–ø–∏—Å–æ–∫ –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤
        let winners = generateRealWinners(isUsdtRaffle, isWinixRaffle, winnersCount, status);

        // –ì–µ–Ω–µ—Ä—É—î–º–æ HTML –¥–ª—è —Å–ø–∏—Å–∫—É –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤
        let winnersHTML = generateWinnersListHTML(winners);

        // –§–æ—Ä–º—É—î–º–æ –ø–æ–≤–Ω–∏–π HTML –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞
        return `
            <div class="modal-content">
                <div class="modal-header">
                    <h2 class="modal-title">–î–µ—Ç–∞–ª—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—É</h2>
                    <span class="modal-close">√ó</span>
                </div>
                
                <div class="prize-details">
                    <div class="detail-item">
                        <div class="detail-label">–î–∞—Ç–∞:</div>
                        <div class="detail-value">${date}</div>
                    </div>
                    <div class="detail-item">
                        <div class="detail-label">–ü—Ä–∏–∑:</div>
                        <div class="detail-value">${prize}</div>
                    </div>
                    <div class="detail-item">
                        <div class="detail-label">–°—Ç–∞—Ç—É—Å:</div>
                        <div class="detail-value ${status}">${result}</div>
                    </div>
                </div>
                
                <div class="winners-section">
                    <div class="winners-title">–ü–µ—Ä–µ–º–æ–∂—Ü—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—É</div>
                    <div class="winners-list">
                        ${winnersHTML}
                    </div>
                </div>
                
                <button class="join-button" id="close-history-btn">–ó–∞–∫—Ä–∏—Ç–∏</button>
            </div>
        `;
    }

    /**
     * –ì–µ–Ω–µ—Ä—É—î —Ä–µ–∞–ª—ñ—Å—Ç–∏—á–Ω—ñ –¥–∞–Ω—ñ –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤ –≤ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –≤—ñ–¥ —Ç–∏–ø—É —Ä–æ–∑—ñ–≥—Ä–∞—à—É
     */
    function generateRealWinners(isUsdtRaffle, isWinixRaffle, winnersCount, status) {
        const winners = [];
        const isWinner = status === 'won' || status === '–≤–∏–≥—Ä–∞–Ω–æ';

        // –†–µ–∞–ª—å–Ω—ñ Telegram –Ω—ñ–∫–Ω–µ–π–º–∏ –¥–ª—è –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤
        const usernames = [
            'workerscrypto', 'crypto_king', 'winix_whale', 'blockchain_bro',
            'token_trader', 'web3_wizard', 'defi_master', 'satoshi_fanboy',
            'crypto_queen', 'btc_billionaire', 'eth_enthusiast', 'nft_collector',
            'dao_developer', 'crypto_guru', 'meta_explorer', 'staking_pro',
            'yield_farmer', 'altcoin_analyst', 'cryptopunks_fan', 'hodl_hero',
            'moon_hunter', 'doge_believer', 'ledger_lover', 'hash_hunter',
            'wallet_warrior', 'crypto_chad', 'coin_crusader', 'block_builder'
        ];

        // –ì–µ–Ω–µ—Ä—É—î–º–æ —É–Ω—ñ–∫–∞–ª—å–Ω—ñ –Ω—ñ–∫–Ω–µ–π–º–∏ –¥–ª—è –≤—Å—ñ—Ö –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤
        const shuffledUsernames = [...usernames].sort(() => 0.5 - Math.random()).slice(0, winnersCount);

        // –ì–µ–Ω–µ—Ä—É—î–º–æ –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤
        for (let i = 0; i < winnersCount; i++) {
            // –í–∏–∑–Ω–∞—á–∞—î–º–æ –ø—Ä–∏–∑ –≤ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –≤—ñ–¥ —Ç–∏–ø—É —Ä–æ–∑—ñ–≥—Ä–∞—à—É —ñ –º—ñ—Å—Ü—è
            let prize = '';

            if (isUsdtRaffle) {
                // –†–æ–∑–ø–æ–¥—ñ–ª –ø—Ä–∏–∑—ñ–≤ –¥–ª—è USDT —Ä–æ–∑—ñ–≥—Ä–∞—à—É
                if (winnersCount === 10) {
                    // 50 USDT –Ω–∞ 10 –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤
                    if (i === 0) prize = '10 USDT';
                    else if (i === 1) prize = '7.5 USDT';
                    else if (i === 2) prize = '5 USDT';
                    else prize = '3.5 USDT';
                } else if (winnersCount === 5) {
                    // 100 USDT –Ω–∞ 5 –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤
                    if (i === 0) prize = '40 USDT';
                    else if (i === 1) prize = '20 USDT';
                    else if (i === 2) prize = '15 USDT';
                    else prize = '12.5 USDT';
                } else {
                    // –ó–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
                    if (i === 0) prize = '20 USDT';
                    else if (i === 1) prize = '10 USDT';
                    else prize = '5 USDT';
                }
            } else if (isWinixRaffle) {
                // –†–æ–∑–ø–æ–¥—ñ–ª –ø—Ä–∏–∑—ñ–≤ –¥–ª—è WINIX —Ä–æ–∑—ñ–≥—Ä–∞—à—É
                if (winnersCount === 15) {
                    // 30,000 WINIX –Ω–∞ 15 –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤
                    prize = '2,000 WINIX';
                } else if (winnersCount === 5) {
                    // 20,000 WINIX –Ω–∞ 5 –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤
                    if (i === 0) prize = '6,000 WINIX';
                    else if (i === 1) prize = '5,000 WINIX';
                    else if (i === 2) prize = '4,000 WINIX';
                    else prize = '2,500 WINIX';
                } else {
                    // –ó–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
                    if (i === 0) prize = '10,000 WINIX';
                    else if (i === 1) prize = '8,000 WINIX';
                    else if (i === 2) prize = '5,000 WINIX';
                    else prize = '2,000 WINIX';
                }
            } else {
                // –ó–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
                if (i === 0) prize = '1-–µ –º—ñ—Å—Ü–µ';
                else if (i === 1) prize = '2-–µ –º—ñ—Å—Ü–µ';
                else if (i === 2) prize = '3-—î –º—ñ—Å—Ü–µ';
                else prize = '–ü—Ä–∏–∑';
            }

            // –í–∏–∑–Ω–∞—á–∞—î–º–æ, —á–∏ –ø–æ—Ç–æ—á–Ω–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á —î –ø–µ—Ä–µ–º–æ–∂—Ü–µ–º
            const isCurrentUser = isWinner && i === 2; // –î–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—ó, –≤–≤–∞–∂–∞—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ 3-–º –ø–µ—Ä–µ–º–æ–∂—Ü–µ–º

            // –î–æ–¥–∞—î–º–æ –ø–µ—Ä–µ–º–æ–∂—Ü—è
            winners.push({
                place: i + 1,
                username: isCurrentUser ? '–í–∏' : shuffledUsernames[i],
                telegramUsername: isCurrentUser ? '–í–∏' : '@' + shuffledUsernames[i],
                prize: prize,
                isCurrentUser: isCurrentUser
            });
        }

        return winners;
    }

    /**
     * –ì–µ–Ω–µ—Ä—É—î HTML –¥–ª—è —Å–ø–∏—Å–∫—É –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤
     */
    function generateWinnersListHTML(winners) {
        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —î –ø–µ—Ä–µ–º–æ–∂—Ü—ñ
        if (!winners || winners.length === 0) {
            return '<div class="no-winners">–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤ –≤—ñ–¥—Å—É—Ç–Ω—è</div>';
        }

        // –ì–µ–Ω–µ—Ä—É—î–º–æ HTML –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ –ø–µ—Ä–µ–º–æ–∂—Ü—è
        return winners.map(winner => {
            // –í–∏–∑–Ω–∞—á–∞—î–º–æ –∫–ª–∞—Å –¥–ª—è –º—ñ—Å—Ü—è (top-1, top-2, top-3)
            const placeClass = winner.place <= 3 ? `top-${winner.place}` : '';

            // –§–æ—Ä–º—É—î–º–æ HTML –¥–ª—è –æ–¥–Ω–æ–≥–æ –ø–µ—Ä–µ–º–æ–∂—Ü—è
            return `
                <div class="winner-item ${winner.isCurrentUser ? 'current-user' : ''}">
                    <div class="winner-place ${placeClass}">
                        <span class="place-number">${winner.place}</span>
                    </div>
                    <div class="winner-info">
                        <div class="winner-name">${winner.username}</div>
                        ${winner.isCurrentUser ? '' : `<div class="winner-telegram">${winner.telegramUsername}</div>`}
                    </div>
                    <div class="winner-prize">${winner.prize}</div>
                </div>
            `;
        }).join('');
    }

    console.log("üèÜ WINIX PREMIUM MODALS: –ü—Ä–µ–º—ñ–∞–ª—å–Ω—ñ –º–æ–¥–∞–ª—å–Ω—ñ –≤—ñ–∫–Ω–∞ –≥–æ—Ç–æ–≤—ñ!");
})();