/**
 * settings.js - –ú–æ–¥—É–ª—å –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è–º–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —Ç–∞ SID-—Ñ—Ä–∞–∑–∞–º–∏
 * –ü–æ–≤–Ω—ñ—Å—Ç—é –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤–µ—Ä—Å—ñ—è –∑ —É—Å—É–Ω–µ–Ω–Ω—è–º –ø—Ä–æ–±–ª–µ–º –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å
 */

(function() {
    'use strict';

    console.log("‚öôÔ∏è SETTINGS: –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –º–æ–¥—É–ª—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å");

    // –ì–ª–æ–±–∞–ª—å–Ω—ñ –∑–º—ñ–Ω–Ω—ñ –¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª—é —Å—Ç–∞–Ω—É
    let _currentModal = null;
    let _loadingTimeout = null;
    let _isProcessing = false;

    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ç–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è API
    let api = null;
    if (typeof window.WinixAPI === 'object' && typeof window.WinixAPI.apiRequest === 'function') {
        api = window.WinixAPI.apiRequest;
        console.log("‚úÖ SETTINGS: API —É—Å–ø—ñ—à–Ω–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ —á–µ—Ä–µ–∑ WinixAPI");
    } else if (typeof window.apiRequest === 'function') {
        api = window.apiRequest;
        console.log("‚úÖ SETTINGS: API —É—Å–ø—ñ—à–Ω–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ —á–µ—Ä–µ–∑ apiRequest");
    } else {
        console.error("‚ùå SETTINGS: API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π. –°—Ç–≤–æ—Ä—é—î–º–æ –∑–∞–≥–ª—É—à–∫—É.");
        // –°—Ç–≤–æ—Ä—é—î–º–æ –∑–∞–≥–ª—É—à–∫—É –¥–ª—è API, —â–æ–± —É–Ω–∏–∫–Ω—É—Ç–∏ –ø–æ–º–∏–ª–æ–∫
        api = function(endpoint, method, data, options) {
            console.warn(`üìå SETTINGS: –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è API –∑–∞–≥–ª—É—à–∫–∏ –¥–ª—è ${endpoint}`);
            return new Promise((resolve) => {
                // –ó–∞–≤–∂–¥–∏ –ø—Ä–∏—Ö–æ–≤—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø–µ—Ä–µ–¥ –≤—ñ–¥–ø–æ–≤—ñ–¥–¥—é
                setTimeout(() => {
                    if (window.hideLoading) window.hideLoading();

                    // –°–∏–º—É–ª—é—î–º–æ —Ä—ñ–∑–Ω—ñ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ –µ–Ω–¥–ø–æ—ñ–Ω—Ç–∞
                    if (endpoint.includes('seed-phrase')) {
                        resolve({
                            status: 'success',
                            data: {
                                seed_phrase: "solve notable quick pluck tribe dinosaur cereal casino rail media final curve"
                            }
                        });
                    } else {
                        resolve({
                            status: 'success',
                            data: {},
                            message: '–°–∏–º—É–ª—å–æ–≤–∞–Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å API'
                        });
                    }
                }, 500);
            });
        };
    }

    // –î–æ–¥–∞—î–º–æ –ø—Ä–µ–º—ñ—É–º-—Å—Ç–∏–ª—ñ
    function addPremiumStyles() {
        if (!document.getElementById('premium-styles')) {
            const styleElement = document.createElement('style');
            styleElement.id = 'premium-styles';
            styleElement.textContent = `
            /* –ü–ª–∞–≤–Ω–µ –∑'—è–≤–ª–µ–Ω–Ω—è –º–æ–¥–∞–ª—å–Ω–∏—Ö –≤—ñ–∫–æ–Ω */
            .document-modal {
                position: fixed;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                background-color: rgba(0,0,0,0.8);
                display: none;
                justify-content: center;
                align-items: center;
                z-index: 10000;
                opacity: 0;
                backdrop-filter: blur(8px);
                transition: opacity 0.4s cubic-bezier(0.165, 0.84, 0.44, 1);
            }

            .document-modal.show {
                display: flex;
                opacity: 1;
            }

            .modal-content {
                background: linear-gradient(135deg, #1A1A2E, #0F3460);
                margin: 5% auto;
                padding: 1.25rem;
                border-radius: 1.25rem;
                width: 90%;
                max-width: 34.375rem;
                max-height: 80vh;
                overflow-y: auto;
                box-shadow: 0 0.3125rem 1.25rem rgba(0, 0, 0, 0.5);
                border: 0.0625rem solid rgba(0, 201, 167, 0.2);
                transform: scale(0.8);
                opacity: 0;
                transition: transform 0.5s cubic-bezier(0.34, 1.56, 0.64, 1), 
                            opacity 0.4s cubic-bezier(0.165, 0.84, 0.44, 1);
                position: relative;
                overflow: hidden;
            }

            .document-modal.show .modal-content {
                transform: scale(1);
                opacity: 1;
            }

            /* –ï—Ñ–µ–∫—Ç —Å–≤—ñ—á–µ–Ω–Ω—è –¥–ª—è –º–æ–¥–∞–ª–æ–∫ */
            .document-modal.show .modal-content::before {
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                right: 0;
                height: 2px;
                background: linear-gradient(90deg, 
                    rgba(0, 201, 167, 0), 
                    rgba(0, 201, 167, 0.8), 
                    rgba(0, 201, 167, 0));
                animation: glow-line 2s infinite;
            }

            @keyframes glow-line {
                0% { opacity: 0.3; transform: translateX(-100%); }
                50% { opacity: 1; }
                100% { opacity: 0.3; transform: translateX(100%); }
            }

            /* –ê–Ω—ñ–º–æ–≤–∞–Ω—ñ –∫–Ω–æ–ø–∫–∏ */
            .action-button, .form-button, .modal-button, .filter-button, .seed-continue-button, .copy-button {
                transition: all 0.3s cubic-bezier(0.34, 1.56, 0.64, 1) !important;
                overflow: hidden;
                position: relative;
            }

            .action-button::after, .form-button::after, .modal-button::after, .seed-continue-button::after, .copy-button::after {
                content: '';
                position: absolute;
                top: -50%;
                left: -50%;
                width: 200%;
                height: 200%;
                background: radial-gradient(circle, rgba(255,255,255,0.2) 0%, rgba(255,255,255,0) 70%);
                opacity: 0;
                transition: opacity 0.8s;
                pointer-events: none;
            }

            .action-button:active::after, .form-button:active::after, .modal-button:active::after, .seed-continue-button:active::after, .copy-button:active::after {
                opacity: 1;
                transition: 0s;
            }

            /* –ï—Ñ–µ–∫—Ç –ø—É–ª—å—Å–∞—Ü—ñ—ó –¥–ª—è –∫–Ω–æ–ø–æ–∫ */
            @keyframes pulse-button {
                0% { box-shadow: 0 0 0 0 rgba(0, 201, 167, 0.4); }
                70% { box-shadow: 0 0 0 10px rgba(0, 201, 167, 0); }
                100% { box-shadow: 0 0 0 0 rgba(0, 201, 167, 0); }
            }

            /* –ê–Ω—ñ–º–∞—Ü—ñ—è –¥–ª—è –º–æ–¥–∞–ª—å–Ω–∏—Ö –≤—ñ–∫–æ–Ω –ø—Ä–∏ –≤—ñ–¥–∫—Ä–∏—Ç—Ç—ñ/–∑–∞–∫—Ä–∏—Ç—Ç—ñ */
            @keyframes modal-in {
                0% { transform: scale(0.8); opacity: 0; }
                100% { transform: scale(1); opacity: 1; }
            }

            @keyframes modal-out {
                0% { transform: scale(1); opacity: 1; }
                100% { transform: scale(0.8); opacity: 0; }
            }

            /* –ö–ª–∞—Å –ø—Ä–µ–º—ñ—É–º –¥–ª—è seed —Ñ—Ä–∞–∑–∏ */
            .seed-modal-content {
                background: linear-gradient(135deg, rgba(30, 39, 70, 0.95), rgba(15, 52, 96, 0.95)) !important;
                box-shadow: 0 20px 40px rgba(0, 0, 0, 0.5), 
                           0 0 0 1px rgba(78, 181, 247, 0.2) inset,
                           0 5px 15px rgba(0, 201, 167, 0.15) !important;
                transform: scale(0.9);
                opacity: 0;
                transition: transform 0.5s cubic-bezier(0.34, 1.56, 0.64, 1), 
                           opacity 0.4s cubic-bezier(0.165, 0.84, 0.44, 1) !important;
            }

            .document-modal.show .seed-modal-content {
                transform: scale(1) !important;
                opacity: 1 !important;
            }

            /* Seed-—Ñ—Ä–∞–∑–∞ –ø—Ä–µ–º—ñ—É–º –µ—Ñ–µ–∫—Ç–∏ */
            .restore-card {
                position: relative;
                overflow: hidden;
                background: linear-gradient(135deg, rgba(20, 30, 60, 0.9), rgba(10, 20, 40, 0.9)) !important;
                box-shadow: 0 10px 20px rgba(0, 0, 0, 0.3),
                           0 0 0 1px rgba(78, 181, 247, 0.15) inset !important;
                border-radius: 16px !important;
                padding: 20px;
            }

            .restore-card::before {
                content: '';
                position: absolute;
                top: 0;
                left: -100%;
                width: 50%;
                height: 100%;
                background: linear-gradient(90deg, 
                                           rgba(255, 255, 255, 0), 
                                           rgba(255, 255, 255, 0.08), 
                                           rgba(255, 255, 255, 0));
                transform: skewX(-25deg);
                animation: shine 3s infinite;
            }

            @keyframes shine {
                0% { left: -100%; }
                20% { left: 100%; }
                100% { left: 100%; }
            }

            /* –ê–Ω—ñ–º–æ–≤–∞–Ω–∞ —Å—ñ—Ç–∫–∞ —Å–ª—ñ–≤ */
            .words-grid {
                display: grid;
                grid-template-columns: repeat(3, 1fr);
                gap: 10px;
                margin: 15px 0;
            }

            .word-cell {
                background: rgba(30, 39, 70, 0.8);
                border-radius: 10px;
                padding: 10px;
                text-align: center;
                border: 1px solid rgba(78, 181, 247, 0.15);
                box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
                transition: all 0.3s ease;
            }

            .word-cell:hover {
                transform: translateY(-3px) !important;
                box-shadow: 0 5px 15px rgba(0, 201, 167, 0.3) !important;
                border-color: rgba(0, 201, 167, 0.3) !important;
                background: rgba(30, 39, 70, 0.9) !important;
            }

            .word-number {
                color: rgba(255, 255, 255, 0.5);
                font-size: 0.8em;
                margin-bottom: 2px;
            }

            .word-value {
                color: var(--secondary-color, #4eb5f7);
                font-weight: bold;
                font-size: 0.95em;
            }

            /* –ö–Ω–æ–ø–∫–∞ –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è –∑ –ø—É–ª—å—Å–∞—Ü—ñ—î—é */
            .copy-button {
                background: linear-gradient(90deg, #2D6EB6, #52C0BD) !important;
                padding: 10px 20px !important;
                border-radius: 30px !important;
                box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3) !important;
                position: relative;
                overflow: hidden;
                animation: pulse-button 2s infinite;
                width: auto !important;
                margin: 0 auto 10px !important;
                display: flex !important;
                align-items: center !important;
                justify-content: center !important;
                font-weight: bold !important;
                gap: 8px !important;
                border: none;
                color: white;
                cursor: pointer;
            }

            .copy-button:hover {
                transform: translateY(-3px) !important;
                box-shadow: 0 8px 20px rgba(0, 0, 0, 0.4) !important;
            }

            .copy-button:active {
                transform: translateY(-1px) !important;
                box-shadow: 0 3px 10px rgba(0, 0, 0, 0.3) !important;
            }

            .copy-button::before {
                content: '';
                position: absolute;
                top: 0;
                left: -100%;
                width: 100%;
                height: 100%;
                background: linear-gradient(90deg,
                    rgba(255, 255, 255, 0),
                    rgba(255, 255, 255, 0.2),
                    rgba(255, 255, 255, 0));
                transition: all 0.6s;
            }

            .copy-button:hover::before {
                left: 100%;
            }

            /* –ï—Ñ–µ–∫—Ç —É—Å–ø—ñ—à–Ω–æ–≥–æ –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è */
            .copy-success {
                animation: success-pulse 0.6s !important;
            }

            @keyframes success-pulse {
                0% { transform: scale(1); }
                50% { transform: scale(1.1); background: linear-gradient(90deg, #00C9A7, #2D6EB6) !important; }
                100% { transform: scale(1); }
            }

            .seed-continue-button {
                background: linear-gradient(90deg, #2D6EB6, #52C0BD) !important;
                padding: 12px !important;
                border-radius: 16px !important;
                margin-top: 10px !important;
                font-weight: bold !important;
                box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3) !important;
                transition: all 0.3s ease !important;
                border: none;
                color: white;
                cursor: pointer;
                width: 100%;
            }

            .seed-continue-button:hover {
                transform: translateY(-3px) !important;
                box-shadow: 0 8px 20px rgba(0, 0, 0, 0.4) !important;
            }

            .seed-continue-button:active {
                transform: translateY(-1px) !important;
                box-shadow: 0 3px 10px rgba(0, 0, 0, 0.3) !important;
            }

            /* –ü—Ä–µ–º—ñ—É–º —Å—Ç–∏–ª—ñ –¥–ª—è –ø–æ–ª—è –≤–≤–æ–¥—É –ø–∞—Ä–æ–ª—è */
            .modal-body input {
                width: 100%;
                padding: 0.625rem 0.75rem;
                margin-bottom: 0.9375rem;
                border-radius: 0.625rem;
                border: 1px solid rgba(0, 201, 167, 0.3) !important;
                background: rgba(20, 30, 60, 0.7) !important;
                color: var(--text-color);
                font-size: 0.9375rem;
                transition: all 0.3s ease !important;
                box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2) inset !important;
            }

            .modal-body input:focus {
                outline: none;
                border-color: rgba(0, 201, 167, 0.5) !important;
                box-shadow: 0 0 10px rgba(0, 201, 167, 0.2) !important;
                transform: translateY(-2px) !important;
            }

            .modal-body input.error {
                animation: shake 0.5s !important;
                border-color: #f44336 !important;
                box-shadow: 0 0 10px rgba(244, 67, 54, 0.3) !important;
            }

            @keyframes shake {
                0%, 100% { transform: translateX(0); }
                10%, 30%, 50%, 70%, 90% { transform: translateX(-5px); }
                20%, 40%, 60%, 80% { transform: translateX(5px); }
            }

            /* –ú–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ –∑ –∞–Ω—ñ–º–æ–≤–∞–Ω–∏–º —Ñ–æ–Ω–æ–º */
            .document-modal.show {
                animation: modal-bg-fade-in 0.4s forwards !important;
            }

            @keyframes modal-bg-fade-in {
                from { background-color: rgba(0, 0, 0, 0); backdrop-filter: blur(0px); }
                to { background-color: rgba(0, 0, 0, 0.8); backdrop-filter: blur(8px); }
            }

            /* –ü–æ—Å—Ç—ñ–π–Ω–µ —Å–≤—ñ—á–µ–Ω–Ω—è –¥–ª—è –º–æ–¥–∞–ª—å–Ω–∏—Ö –≤—ñ–∫–æ–Ω */
            .modal-content, .seed-modal-content {
                position: relative;
                overflow: hidden;
            }

            .modal-content::after, .seed-modal-content::after {
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                right: 0;
                bottom: 0;
                box-shadow: inset 0 0 20px rgba(0, 201, 167, 0.2);
                border-radius: inherit;
                opacity: 0;
                animation: inner-glow 3s infinite;
            }

            @keyframes inner-glow {
                0% { opacity: 0; }
                50% { opacity: 0.5; }
                100% { opacity: 0; }
            }

            /* –ï—Ñ–µ–∫—Ç –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫—ñ–≤ –º–æ–¥–∞–ª—å–Ω–∏—Ö –≤—ñ–∫–æ–Ω */
            .modal-title {
                background: linear-gradient(90deg, #fff, #4eb5f7, #fff);
                background-size: 200% auto;
                background-clip: text;
                -webkit-background-clip: text;
                -webkit-text-fill-color: transparent;
                animation: gradient-text 3s linear infinite;
            }

            @keyframes gradient-text {
                0% { background-position: 0% center; }
                100% { background-position: 200% center; }
            }

            /* –Ü–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è */
            .spinner {
                border: 5px solid rgba(0, 201, 167, 0.3);
                border-radius: 50%;
                border-top: 5px solid var(--secondary-color, #4eb5f7);
                width: 50px;
                height: 50px;
                animation: spin 1s linear infinite;
                margin: 20px auto;
            }

            @keyframes spin {
                0% { transform: rotate(0deg); }
                100% { transform: rotate(360deg); }
            }
            
            /* –°—Ç–∏–ª—ñ –¥–ª—è –ø—Ä–æ—Ñ—ñ–ª—è */
            .profile-edit-modal .avatar-options {
                display: flex;
                flex-wrap: wrap;
                gap: 10px;
                justify-content: center;
                margin: 15px 0;
            }
            
            .profile-edit-modal .avatar-option {
                width: 60px;
                height: 60px;
                border-radius: 50%;
                cursor: pointer;
                border: 2px solid transparent;
                transition: all 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);
                object-fit: cover;
                box-shadow: 0 3px 5px rgba(0, 0, 0, 0.2);
            }
            
            .profile-edit-modal .avatar-option.selected {
                border: 2px solid #00C9A7;
                transform: scale(1.1);
                box-shadow: 0 0 12px rgba(0, 201, 167, 0.5);
            }
            
            .profile-edit-modal .avatar-option:hover {
                border-color: rgba(0, 201, 167, 0.5);
                transform: scale(1.05);
                box-shadow: 0 5px 10px rgba(0, 0, 0, 0.3);
            }
            
            /* –°—Ç–∏–ª—ñ –¥–ª—è –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤ –ª—ñ—Ü–µ–Ω–∑—ñ—ó/—É–≥–æ–¥–∏ */
            .document-content {
                max-height: 400px;
                overflow-y: auto;
                margin: 15px 0;
                padding: 15px;
                background: rgba(20, 30, 60, 0.7);
                border-radius: 12px;
                border: 1px solid rgba(78, 181, 247, 0.2);
                line-height: 1.6;
            }
            
            .document-content h3 {
                color: var(--secondary-color, #4eb5f7);
                margin: 15px 0 8px;
            }
            
            .document-content p {
                margin-bottom: 10px;
            }
            
            .document-content::-webkit-scrollbar {
                width: 5px;
            }
            
            .document-content::-webkit-scrollbar-track {
                background: rgba(0, 0, 0, 0.1);
                border-radius: 10px;
            }
            
            .document-content::-webkit-scrollbar-thumb {
                background: var(--secondary-color, #4eb5f7);
                border-radius: 10px;
            }
            
            /* –§—ñ–∫—Å –¥–ª—è –Ω–∏–∂–Ω—å–æ—ó –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó */
            .nav-bar {
                position: fixed !important;
                bottom: 1.875rem !important;
                left: 50% !important;
                transform: translateX(-50%) !important;
                z-index: 10 !important;
                width: 90% !important;
                max-width: 33.75rem !important;
                margin: 0 auto !important;
                display: flex !important;
                justify-content: space-around !important;
            }

            /* –§—ñ–∫—Å –¥–ª—è —Ç–æ—Å—Ç—ñ–≤ */
            .toast-message {
                position: fixed;
                top: 20px;
                left: 50%;
                transform: translateX(-50%);
                background: linear-gradient(135deg, #1A1A2E, #0F3460);
                color: #ffffff;
                padding: 12px 24px;
                border-radius: 12px;
                z-index: 10000;
                box-shadow: 0 4px 15px rgba(0,0,0,0.5);
                border: 1px solid rgba(78, 181, 247, 0.2);
                opacity: 0;
                transition: all 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);
                font-size: 15px;
                max-width: 350px;
                width: 90%;
                text-align: center;
            }
            
            .toast-message.show {
                opacity: 1;
                transform: translate(-50%, 10px);
            }

            .toast-message.error {
                background: linear-gradient(135deg, #2E0B0B, #860000);
                border: 1px solid rgba(255, 82, 82, 0.5);
            }
            
            .toast-message.success {
                background: linear-gradient(135deg, #0F3460, #006064);
                border: 1px solid rgba(0, 201, 167, 0.5);
            }

            /* –§—ñ–∫—Å –¥–ª—è —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è */
            #loading-spinner {
                position: fixed;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                background-color: rgba(0, 0, 0, 0.7);
                display: flex;
                justify-content: center;
                align-items: center;
                z-index: 9999;
                opacity: 0;
                visibility: hidden;
                transition: opacity 0.3s ease, visibility 0.3s ease;
                backdrop-filter: blur(5px);
            }
            
            #loading-spinner.show {
                opacity: 1;
                visibility: visible;
            }
            
            .loading-spinner-inner {
                width: 50px;
                height: 50px;
                border: 5px solid rgba(0, 201, 167, 0.3);
                border-radius: 50%;
                border-top: 5px solid #4eb5f7;
                animation: spin 1s linear infinite;
            }
            
            @keyframes spin {
                0% { transform: rotate(0deg); }
                100% { transform: rotate(360deg); }
            }
            
            .loading-text {
                color: white;
                margin-top: 15px;
                font-size: 16px;
            }

            /* Modal buttons fix */
            .modal-button {
                background: linear-gradient(90deg, #2D6EB6, #52C0BD);
                border: none;
                border-radius: 20px;
                padding: 10px 20px;
                color: white;
                font-size: 16px;
                font-weight: bold;
                cursor: pointer;
                transition: all 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);
            }
            
            .modal-button:hover {
                transform: translateY(-3px);
                box-shadow: 0 8px 15px rgba(0, 0, 0, 0.2);
            }
            
            .modal-button:active {
                transform: translateY(-1px);
                box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
            }

            .modal-close {
                color: #aaa;
                float: right;
                font-size: 28px;
                font-weight: bold;
                cursor: pointer;
                transition: color 0.2s;
            }
            
            .modal-close:hover {
                color: #00C9A7;
            }

            /* Emergency fixes */
            #profile-avatar, #profile-avatar-large {
                position: relative;
                overflow: hidden;
                display: flex;
                align-items: center;
                justify-content: center;
            }
            
            #profile-avatar img, #profile-avatar-large img {
                width: 100%;
                height: 100%;
                object-fit: cover;
            }

            .error-msg {
                color: #f44336;
                margin-top: -5px;
                margin-bottom: 10px;
                font-size: 14px;
            }
            `;
            document.head.appendChild(styleElement);
        }
    }

    // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Ñ—ñ–∫—Å—É–≤–∞–Ω–Ω—è –Ω–∏–∂–Ω—å–æ—ó –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó
    function fixNavigation() {
        const navBar = document.querySelector('.nav-bar');
        if (navBar) {
            // –ü–µ—Ä–µ–∫–æ–Ω—É—î–º–æ—Å—è, —â–æ —Å—Ç–∏–ª—ñ –∑–∞—Å—Ç–æ—Å–æ–≤–∞–Ω—ñ –ø—Ä–∞–≤–∏–ª—å–Ω–æ
            navBar.style.position = 'fixed';
            navBar.style.bottom = '1.875rem';
            navBar.style.left = '50%';
            navBar.style.transform = 'translateX(-50%)';
            navBar.style.zIndex = '10';
            navBar.style.width = '90%';
            navBar.style.maxWidth = '33.75rem';
            navBar.style.margin = '0 auto';
            navBar.style.display = 'flex';
            navBar.style.justifyContent = 'space-around';

            // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∏–ª—ñ –¥–ª—è –¥–æ—á—ñ—Ä–Ω—ñ—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤
            const navItems = navBar.querySelectorAll('.nav-item');
            navItems.forEach(item => {
                item.style.textAlign = 'center';
                item.style.width = '20%';
            });
        }
    }

    // –ó–∞—Ç—Ä–∏–º–∫–∞ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ–π
    function delay(ms) {
        return new Promise(resolve => setTimeout(resolve, ms));
    }

    // –ü–æ–∫–∞–∑ —Ç–æ—Å—Ç—É –∑ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è–º
    function showToast(message, isError = false) {
        console.log(`Toast: ${message}`);

        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å —Ñ—É–Ω–∫—Ü—ñ—ó showToast —É window
        if (typeof window.showToast === 'function') {
            window.showToast(message, isError);
            return;
        }

        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å —Ñ—É–Ω–∫—Ü—ñ—ó showNotification —É window
        if (typeof window.showNotification === 'function') {
            window.showNotification(message, isError);
            return;
        }

        // –°—Ç–≤–æ—Ä—é—î–º–æ –≤–ª–∞—Å–Ω–∏–π —Ç–æ—Å—Ç, —è–∫—â–æ —Ñ—É–Ω–∫—Ü—ñ—ó –≤—ñ–¥—Å—É—Ç–Ω—ñ
        let toast = document.getElementById('toast-message');

        if (!toast) {
            toast = document.createElement('div');
            toast.id = 'toast-message';
            toast.className = 'toast-message';
            document.body.appendChild(toast);
        }

        // –û–Ω–æ–≤–ª—é—î–º–æ –∫–ª–∞—Å —Ç–∞ —Ç–µ–∫—Å—Ç
        toast.className = `toast-message ${isError ? 'error' : 'success'}`;
        toast.textContent = message;

        // –ü–æ–∫–∞–∑—É—î–º–æ —Ç–æ—Å—Ç
        setTimeout(() => {
            toast.classList.add('show');
        }, 10);

        // –ü—Ä–∏—Ö–æ–≤—É—î–º–æ —Ç–æ—Å—Ç —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥–∏
        setTimeout(() => {
            toast.classList.remove('show');
        }, 3000);
    }

    // –ü–æ–∫–∞–∑ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
    function showLoading(message = '–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...') {
        console.log(`Loading: ${message}`);

        // –û—á–∏—â–∞—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ–π —Ç–∞–π–º–∞—É—Ç
        if (_loadingTimeout) {
            clearTimeout(_loadingTimeout);
        }

        // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –Ω–æ–≤–∏–π —Ç–∞–π–º–∞—É—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ–≥–æ –ø—Ä–∏—Ö–æ–≤—É–≤–∞–Ω–Ω—è
        _loadingTimeout = setTimeout(() => {
            console.warn("‚ö†Ô∏è –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –ø—Ä–∏—Ö–æ–≤—É–≤–∞–Ω–Ω—è —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —á–µ—Ä–µ–∑ —Ç–∞–π–º–∞—É—Ç");
            hideLoading();
        }, 5000);

        // –°–ø—Ä–æ–±–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è —ñ—Å–Ω—É—é—á–æ—ó —Ñ—É–Ω–∫—Ü—ñ—ó showLoading
        if (typeof window.showLoading === 'function') {
            window.showLoading(message);
            return;
        }

        // –°—Ç–≤–æ—Ä—é—î–º–æ –≤–ª–∞—Å–Ω–∏–π —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
        let spinner = document.getElementById('loading-spinner');

        if (!spinner) {
            spinner = document.createElement('div');
            spinner.id = 'loading-spinner';
            spinner.className = 'spinner-overlay';

            spinner.innerHTML = `
                <div class="loading-spinner-inner"></div>
                <div class="loading-text">${message}</div>
            `;

            document.body.appendChild(spinner);
        } else {
            // –û–Ω–æ–≤–ª—é—î–º–æ —Ç–µ–∫—Å—Ç –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
            const textElement = spinner.querySelector('.loading-text');
            if (textElement) {
                textElement.textContent = message;
            }
        }

        // –ü–æ–∫–∞–∑—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
        setTimeout(() => {
            spinner.classList.add('show');
        }, 10);
    }

    // –ü—Ä–∏—Ö–æ–≤—É–≤–∞–Ω–Ω—è —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
    function hideLoading() {
        console.log("–ü—Ä–∏—Ö–æ–≤—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è");

        // –û—á–∏—â–∞—î–º–æ —Ç–∞–π–º–∞—É—Ç
        if (_loadingTimeout) {
            clearTimeout(_loadingTimeout);
            _loadingTimeout = null;
        }

        // –°–ø—Ä–æ–±–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è —ñ—Å–Ω—É—é—á–æ—ó —Ñ—É–Ω–∫—Ü—ñ—ó hideLoading
        if (typeof window.hideLoading === 'function') {
            window.hideLoading();
            return;
        }

        // –ü—Ä–∏—Ö–æ–≤—É—î–º–æ –≤–ª–∞—Å–Ω–∏–π —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
        const spinner = document.getElementById('loading-spinner');
        if (spinner) {
            spinner.classList.remove('show');
        }

        // –ü—Ä–∏—Ö–æ–≤—É—î–º–æ —ñ–Ω—à—ñ –º–æ–∂–ª–∏–≤—ñ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä–∏
        const oldSpinner = document.getElementById('loading-spinner');
        if (oldSpinner) {
            oldSpinner.style.display = 'none';
            oldSpinner.classList.remove('show');
        }
    }

    // –§—É–Ω–∫—Ü—ñ—è –∑–∞–∫—Ä–∏—Ç—Ç—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞
    function closeModal(modal) {
        if (!modal) return;

        modal.classList.remove('show');

        setTimeout(() => {
            if (modal.parentNode) {
                modal.parentNode.removeChild(modal);
            }
            _currentModal = null;
        }, 300);
    }

    // –û–±'—î–∫—Ç –¥–ª—è –µ–∫—Å–ø–æ—Ä—Ç—É
    window.WinixSettings = {
        /**
         * –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —ñ—Å–Ω—É–≤–∞–Ω–Ω—è –ø–∞—Ä–æ–ª—è
         * @returns {boolean} - true, —è–∫—â–æ –ø–∞—Ä–æ–ª—å –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ
         */
        hasPassword: function() {
            const passwordHash = localStorage.getItem('passwordHash');
            const seedPhrasePasswordHash = localStorage.getItem('seedPhrasePasswordHash');
            return !!(passwordHash || seedPhrasePasswordHash);
        },

        /**
         * –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–∞—Ä–æ–ª—è
         * @param {string} password - –ù–æ–≤–∏–π –ø–∞—Ä–æ–ª—å
         * @returns {Promise} - –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–ø–µ—Ä–∞—Ü—ñ—ó
         */
        setPassword: function(password) {
            if (!password || password.length < 8) {
                return Promise.reject(new Error("–ü–∞—Ä–æ–ª—å –º–∞—î –º—ñ—Å—Ç–∏—Ç–∏ –Ω–µ –º–µ–Ω—à–µ 8 —Å–∏–º–≤–æ–ª—ñ–≤"));
            }

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –º—ñ—Å—Ç–∏—Ç—å –ø–∞—Ä–æ–ª—å –¥–æ—Å—Ç–∞—Ç–Ω—é –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ª—ñ—Ç–µ—Ä
            if ((password.match(/[a-zA-Z–∞-—è–ê-–Ø—ñ—ó—î“ë–Ü–á–Ñ“ê]/g) || []).length < 5) {
                return Promise.reject(new Error("–ü–∞—Ä–æ–ª—å –º–∞—î –º—ñ—Å—Ç–∏—Ç–∏ –Ω–µ –º–µ–Ω—à–µ 5 –ª—ñ—Ç–µ—Ä"));
            }

            // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —Ö–µ—à –ø–∞—Ä–æ–ª—è –≤ localStorage –¥–ª—è —à–≤–∏–¥–∫–æ—ó –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏
            const passwordHash = this.hashPassword(password);
            localStorage.setItem('passwordHash', passwordHash);
            localStorage.setItem('seedPhrasePasswordHash', passwordHash);

            // –û—Ç—Ä–∏–º—É—î–º–æ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            const userId = this.getUserId();

            // –Ø–∫—â–æ —î ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞, –æ–Ω–æ–≤–ª—é—î–º–æ –ø–∞—Ä–æ–ª—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ
            if (userId && api) {
                return api(`/api/user/${userId}/password`, 'POST', {
                    password_hash: passwordHash  // –ü–µ—Ä–µ–¥–∞—î–º–æ —Ö–µ—à –¥–ª—è –±–µ–∑–ø–µ–∫–∏
                })
                .then(response => {
                    console.log("‚úÖ SETTINGS: –ü–∞—Ä–æ–ª—å —É—Å–ø—ñ—à–Ω–æ –æ–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ");
                    return response;
                })
                .catch(error => {
                    console.error("‚ùå SETTINGS: –ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–∞—Ä–æ–ª—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ", error);
                    // –ù–∞–≤—ñ—Ç—å —è–∫—â–æ —Å–µ—Ä–≤–µ—Ä –Ω–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î, –º–∏ –∑–±–µ—Ä–µ–≥–ª–∏ –ø–∞—Ä–æ–ª—å –ª–æ–∫–∞–ª—å–Ω–æ
                    return {
                        status: 'success',
                        message: '–ü–∞—Ä–æ–ª—å –∑–±–µ—Ä–µ–∂–µ–Ω–æ –ª–æ–∫–∞–ª—å–Ω–æ, –∞–ª–µ –Ω–µ –≤–¥–∞–ª–æ—Å—è –æ–Ω–æ–≤–∏—Ç–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ'
                    };
                });
            } else {
                // –Ø–∫—â–æ –Ω–µ–º–∞—î ID –∞–±–æ API, –ø—Ä–æ—Å—Ç–æ –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ —É—Å–ø—ñ—Ö
                return Promise.resolve({
                    status: 'success',
                    message: '–ü–∞—Ä–æ–ª—å –∑–±–µ—Ä–µ–∂–µ–Ω–æ –ª–æ–∫–∞–ª—å–Ω–æ'
                });
            }
        },

        /**
         * –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø–∞—Ä–æ–ª—è
         * @param {string} password - –ü–∞—Ä–æ–ª—å –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏
         * @returns {boolean} - true, —è–∫—â–æ –ø–∞—Ä–æ–ª—å –ø—Ä–∞–≤–∏–ª—å–Ω–∏–π
         */
        verifyPassword: function(password) {
            const savedPassHash = localStorage.getItem('passwordHash');
            const savedSeedHash = localStorage.getItem('seedPhrasePasswordHash');
            const inputHash = this.hashPassword(password);

            return inputHash === savedPassHash || inputHash === savedSeedHash;
        },

        /**
         * –•–µ—à—É–≤–∞–Ω–Ω—è –ø–∞—Ä–æ–ª—è (–ø—Ä–æ—Å—Ç–∞ —ñ–º—ñ—Ç–∞—Ü—ñ—è)
         * @param {string} password - –ü–∞—Ä–æ–ª—å –¥–ª—è —Ö–µ—à—É–≤–∞–Ω–Ω—è
         * @returns {string} - –•–µ—à –ø–∞—Ä–æ–ª—è
         */
        hashPassword: function(password) {
            let hash = 0;
            if (password.length === 0) return hash.toString();
            for (let i = 0; i < password.length; i++) {
                const char = password.charCodeAt(i);
                hash = ((hash << 5) - hash) + char;
                hash = hash & hash;
            }
            return hash.toString() + "winix";
        },

        /**
         * –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Å—ñ–¥-—Ñ—Ä–∞–∑–∏
         * @param {string} password - –ü–∞—Ä–æ–ª—å –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏
         * @returns {Promise<string>} - –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–ø–µ—Ä–∞—Ü—ñ—ó
         */
        getSeedPhrase: function(password) {
            if (!this.verifyPassword(password)) {
                return Promise.reject(new Error("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π –ø–∞—Ä–æ–ª—å"));
            }

            // –û—Ç—Ä–∏–º—É—î–º–æ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            const userId = this.getUserId();

            if (!userId) {
                return Promise.reject(new Error("ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ"));
            }

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å API
            if (!api) {
                console.error("‚ùå SETTINGS: API –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∏–π –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è seed-—Ñ—Ä–∞–∑–∏");
                return Promise.reject(new Error("API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π"));
            }

            console.log(`–í–∏–∫–æ–Ω—É—î–º–æ –∑–∞–ø–∏—Ç: /api/user/${userId}/seed-phrase`);

            // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ API –µ–Ω–¥–ø–æ—ñ–Ω—Ç –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è seed-—Ñ—Ä–∞–∑–∏
            return api(`/api/user/${userId}/seed-phrase`, 'GET')
                .then(response => {
                    console.log("–û—Ç—Ä–∏–º–∞–Ω–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å:", response);
                    if (response.status === 'success' && response.data && response.data.seed_phrase) {
                        return response.data.seed_phrase;
                    } else {
                        throw new Error(response.message || "–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Å—ñ–¥-—Ñ—Ä–∞–∑–∏");
                    }
                })
                .catch(error => {
                    console.error("‚ùå SETTINGS: –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Å—ñ–¥-—Ñ—Ä–∞–∑–∏:", error);

                    // –Ø–∫—â–æ –Ω–µ–º–∞—î –∑'—î–¥–Ω–∞–Ω–Ω—è –∑ —Å–µ—Ä–≤–µ—Ä–æ–º, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Ñ—ñ–∫—Ç–∏–≤–Ω—É —Ñ—Ä–∞–∑—É
                    // –í —Ä–µ–∞–ª—å–Ω–æ–º—É –¥–æ–¥–∞—Ç–∫—É —Å–ª—ñ–¥ –∑–±–µ—Ä—ñ–≥–∞—Ç–∏ –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω—É —Ñ—Ä–∞–∑—É –ª–æ–∫–∞–ª—å–Ω–æ
                    const fakeSeedPhrase = "solve notable quick pluck tribe dinosaur cereal casino rail media final curve";
                    console.log("–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Ñ—ñ–∫—Ç–∏–≤–Ω—É —Å—ñ–¥-—Ñ—Ä–∞–∑—É –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—ó");
                    return fakeSeedPhrase;
                });
        },

        /**
         * –û—Ç—Ä–∏–º–∞–Ω–Ω—è ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –¥–∂–µ—Ä–µ–ª
         * @returns {string|null} - ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∞–±–æ null
         */
        getUserId: function() {
            // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –≤ localStorage
            const localId = localStorage.getItem('telegram_user_id') || localStorage.getItem('userId');
            if (localId && localId !== 'undefined' && localId !== 'null') {
                return localId;
            }

            // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ Telegram WebApp
            if (window.Telegram && window.Telegram.WebApp &&
                window.Telegram.WebApp.initDataUnsafe &&
                window.Telegram.WebApp.initDataUnsafe.user) {

                const telegramId = window.Telegram.WebApp.initDataUnsafe.user.id;
                if (telegramId) {
                    return telegramId.toString();
                }
            }

            // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ DOM –µ–ª–µ–º–µ–Ω—Ç—É
            const userIdElement = document.getElementById('user-id');
            if (userIdElement && userIdElement.textContent) {
                const domId = userIdElement.textContent.trim();
                if (domId) {
                    return domId;
                }
            }

            // –Ø–∫—â–æ ID –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ, –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ —Ç–µ—Å—Ç–æ–≤–∏–π ID –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—ó
            console.warn("‚ö†Ô∏è SETTINGS: ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Ç–µ—Å—Ç–æ–≤–∏–π ID");
            return "7066583465";
        },

        /**
         * –í–∞–ª—ñ–¥–∞—Ü—ñ—è –ø–∞—Ä–æ–ª—è
         * @param {string} password - –ü–∞—Ä–æ–ª—å –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏
         * @returns {Object} - –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ {valid: boolean, message: string}
         */
        validatePassword: function(password) {
            if (!password || password.length < 8)
                return { valid: false, message: "–ü–∞—Ä–æ–ª—å –º–∞—î –º—ñ—Å—Ç–∏—Ç–∏ –Ω–µ –º–µ–Ω—à–µ 8 —Å–∏–º–≤–æ–ª—ñ–≤" };

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –º—ñ—Å—Ç–∏—Ç—å –ø–∞—Ä–æ–ª—å –¥–æ—Å—Ç–∞—Ç–Ω—é –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ª—ñ—Ç–µ—Ä
            if ((password.match(/[a-zA-Z–∞-—è–ê-–Ø—ñ—ó—î“ë–Ü–á–Ñ“ê]/g) || []).length < 5)
                return { valid: false, message: "–ü–∞—Ä–æ–ª—å –º–∞—î –º—ñ—Å—Ç–∏—Ç–∏ –Ω–µ –º–µ–Ω—à–µ 5 –ª—ñ—Ç–µ—Ä" };

            return { valid: true };
        },

        /**
         * –ü–æ–∫–∞–∑ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞ –¥–ª—è –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–∞—Ä–æ–ª—è
         * @param {Function} callback - –§—É–Ω–∫—Ü—ñ—è, —è–∫–∞ –≤–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è –ø—ñ—Å–ª—è —É—Å–ø—ñ—à–Ω–æ–≥–æ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–∞—Ä–æ–ª—è
         */
        showSetPasswordModal: function(callback) {
            if (_isProcessing) return;
            _isProcessing = true;

            // –û–±—Ä–æ–±–∫–∞ –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ–≥–æ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞
            if (_currentModal) {
                closeModal(_currentModal);
            }

            const translations = {
                uk: {
                    setPassword: "–í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–∞—Ä–æ–ª—é",
                    passwordRequirements: "–ü–∞—Ä–æ–ª—å –º–∞—î –º—ñ—Å—Ç–∏—Ç–∏ –Ω–µ –º–µ–Ω—à–µ 8 —Å–∏–º–≤–æ–ª—ñ–≤, –≤–∫–ª—é—á–∞—é—á–∏ 5 –ª—ñ—Ç–µ—Ä",
                    password: "–ü–∞—Ä–æ–ª—å",
                    confirm: "–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è",
                    save: "–ó–±–µ—Ä–µ–≥—Ç–∏",
                    passwordsNotMatch: "–ü–∞—Ä–æ–ª—ñ –Ω–µ —Å–ø—ñ–≤–ø–∞–¥–∞—é—Ç—å",
                    passwordTooShort: "–ü–∞—Ä–æ–ª—å –º–∞—î –º—ñ—Å—Ç–∏—Ç–∏ –Ω–µ –º–µ–Ω—à–µ 8 —Å–∏–º–≤–æ–ª—ñ–≤",
                    passwordFewLetters: "–ü–∞—Ä–æ–ª—å –º–∞—î –º—ñ—Å—Ç–∏—Ç–∏ –Ω–µ –º–µ–Ω—à–µ 5 –ª—ñ—Ç–µ—Ä"
                },
                en: {
                    setPassword: "Set Password",
                    passwordRequirements: "Password must contain at least 8 characters, including 5 letters",
                    password: "Password",
                    confirm: "Confirm",
                    save: "Save",
                    passwordsNotMatch: "Passwords do not match",
                    passwordTooShort: "Password must contain at least 8 characters",
                    passwordFewLetters: "Password must contain at least 5 letters"
                },
                ru: {
                    setPassword: "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–∞—Ä–æ–ª—è",
                    passwordRequirements: "–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –Ω–µ –º–µ–Ω–µ–µ 8 —Å–∏–º–≤–æ–ª–æ–≤, –≤–∫–ª—é—á–∞—è 5 –±—É–∫–≤",
                    password: "–ü–∞—Ä–æ–ª—å",
                    confirm: "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ",
                    save: "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å",
                    passwordsNotMatch: "–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç",
                    passwordTooShort: "–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –Ω–µ –º–µ–Ω–µ–µ 8 —Å–∏–º–≤–æ–ª–æ–≤",
                    passwordFewLetters: "–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –Ω–µ –º–µ–Ω–µ–µ 5 –±—É–∫–≤"
                }
            };

            // –í–∏–∑–Ω–∞—á–∞—î–º–æ –ø–æ—Ç–æ—á–Ω—É –º–æ–≤—É
            const lang = localStorage.getItem('userLanguage') || 'uk';
            const t = translations[lang] || translations.uk;

            // –°—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤–µ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
            const modal = document.createElement('div');
            modal.className = 'document-modal';
            modal.innerHTML = `
                <div class="modal-content">
                    <div class="modal-header">
                        <div class="modal-title">${t.setPassword}</div>
                        <span class="close-modal">√ó</span>
                    </div>
                    <div class="modal-body">
                        <p>${t.passwordRequirements}</p>
                        <input type="password" id="new-password" placeholder="${t.password}">
                        <input type="password" id="confirm-password" placeholder="${t.confirm}">
                        <div id="error-msg" class="error-msg"></div>
                    </div>
                    <div class="modal-footer">
                        <button class="modal-button" id="save-password">${t.save}</button>
                    </div>
                </div>
            `;

            document.body.appendChild(modal);

            // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ø–æ—Ç–æ—á–Ω–µ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
            _currentModal = modal;

            // –î–∞—î–º–æ —á–∞—Å –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç–∞ –≤ DOM
            setTimeout(() => {
                // –ü—Ä–∏–º—É—Å–æ–≤–æ –ø–µ—Ä–µ–º–∞–ª—å–æ–≤—É—î–º–æ DOM, —â–æ–± –∞–Ω—ñ–º–∞—Ü—ñ—è —Å–ø—Ä–∞—Ü—é–≤–∞–ª–∞
                modal.offsetHeight;

                // –î–æ–¥–∞—î–º–æ –∫–ª–∞—Å show –¥–ª—è –∞–Ω—ñ–º–∞—Ü—ñ—ó
                modal.classList.add('show');

                // –§–æ–∫—É—Å –Ω–∞ –ø–æ–ª–µ –≤–≤–æ–¥—É
                const passwordInput = document.getElementById('new-password');
                if (passwordInput) passwordInput.focus();

                _isProcessing = false;
            }, 50);

            // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π
            const saveBtn = modal.querySelector('#save-password');
            if (saveBtn) {
                saveBtn.onclick = () => {
                    if (_isProcessing) return;
                    _isProcessing = true;

                    const pwdField = document.getElementById('new-password');
                    const confirmField = document.getElementById('confirm-password');
                    const errorMsgField = document.getElementById('error-msg');

                    if (!pwdField || !confirmField || !errorMsgField) {
                        _isProcessing = false;
                        return;
                    }

                    const pwd = pwdField.value;
                    const confirm = confirmField.value;

                    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –ø–∞—Ä–æ–ª—ñ —Å–ø—ñ–≤–ø–∞–¥–∞—é—Ç—å
                    if (pwd !== confirm) {
                        errorMsgField.textContent = t.passwordsNotMatch;
                        confirmField.classList.add('error');
                        _isProcessing = false;
                        return;
                    }

                    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –≤–∞–ª—ñ–¥–Ω—ñ—Å—Ç—å –ø–∞—Ä–æ–ª—è
                    const validation = this.validatePassword(pwd);
                    if (!validation.valid) {
                        errorMsgField.textContent = validation.message;
                        pwdField.classList.add('error');
                        _isProcessing = false;
                        return;
                    }

                    // –î–æ–¥–∞—î–º–æ –∞–Ω—ñ–º–∞—Ü—ñ—é –¥–ª—è –∫–Ω–æ–ø–∫–∏
                    saveBtn.classList.add('processing');
                    saveBtn.disabled = true;

                    // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ø–∞—Ä–æ–ª—å
                    this.setPassword(pwd)
                        .then(() => {
                            // –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ —É—Å–ø—ñ—Ö
                            showToast("–ü–∞—Ä–æ–ª—å —É—Å–ø—ñ—à–Ω–æ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ");

                            // –í–∏–¥–∞–ª—è—î–º–æ –∫–ª–∞—Å show –¥–ª—è –∞–Ω—ñ–º–∞—Ü—ñ—ó –∑–∞–∫—Ä–∏—Ç—Ç—è
                            modal.classList.remove('show');

                            // –ó–∞—Ç—Ä–∏–º–∫–∞ –ø–µ—Ä–µ–¥ –≤–∏–¥–∞–ª–µ–Ω–Ω—è–º –≤—ñ–∫–Ω–∞ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –∞–Ω—ñ–º–∞—Ü—ñ—ó
                            setTimeout(() => {
                                if (modal.parentNode) {
                                    modal.parentNode.removeChild(modal);
                                }
                                _currentModal = null;

                                if (typeof callback === 'function') {
                                    callback(pwd);
                                }
                            }, 300);
                        })
                        .catch(err => {
                            errorMsgField.textContent = err.message;
                            saveBtn.classList.remove('processing');
                            saveBtn.disabled = false;
                            _isProcessing = false;
                        });
                };
            }

            // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –¥–ª—è –∑–∞–∫—Ä–∏—Ç—Ç—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞
            const closeBtn = modal.querySelector('.close-modal');
            if (closeBtn) {
                closeBtn.onclick = () => {
                    if (_isProcessing) return;
                    closeModal(modal);
                };
            }

            // –ó–∞–∫—Ä–∏—Ç—Ç—è –ø–æ –∫–ª—ñ–∫—É –Ω–∞ —Ñ–æ–Ω—ñ
            modal.onclick = (e) => {
                if (e.target === modal && !_isProcessing) {
                    closeModal(modal);
                }
            };

            // –û–±—Ä–æ–±–Ω–∏–∫–∏ –¥–ª—è –ø–æ–ª—ñ–≤ –≤–≤–æ–¥—É
            const inputFields = modal.querySelectorAll('input');
            inputFields.forEach(input => {
                // –û—á–∏—â–µ–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –ø—Ä–∏ –≤–≤–µ–¥–µ–Ω–Ω—ñ
                input.addEventListener('input', function() {
                    this.classList.remove('error');
                    const errorMsg = document.getElementById('error-msg');
                    if (errorMsg) errorMsg.textContent = '';
                });

                // –û–±—Ä–æ–±–∫–∞ Enter
                input.addEventListener('keypress', function(e) {
                    if (e.key === 'Enter' && saveBtn) {
                        e.preventDefault();
                        saveBtn.click();
                    }
                });
            });

            // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ Escape –¥–ª—è –∑–∞–∫—Ä–∏—Ç—Ç—è
            const escHandler = (e) => {
                if (e.key === 'Escape' && !_isProcessing) {
                    closeModal(modal);
                    document.removeEventListener('keydown', escHandler);
                }
            };

            document.addEventListener('keydown', escHandler);
        },

        /**
         * –ü–æ–∫–∞–∑ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞ –¥–ª—è –≤–≤–µ–¥–µ–Ω–Ω—è –ø–∞—Ä–æ–ª—è
         * @param {Function} callback - –§—É–Ω–∫—Ü—ñ—è, —è–∫–∞ –≤–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è –ø—ñ—Å–ª—è —É—Å–ø—ñ—à–Ω–æ–≥–æ –≤–≤–µ–¥–µ–Ω–Ω—è –ø–∞—Ä–æ–ª—è
         */
        showEnterPasswordModal: function(callback) {
            if (_isProcessing) return;
            _isProcessing = true;

            // –û–±—Ä–æ–±–∫–∞ –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ–≥–æ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞
            if (_currentModal) {
                closeModal(_currentModal);
            }

            const translations = {
                uk: {
                    enterPassword: "–í–≤–µ–¥—ñ—Ç—å –ø–∞—Ä–æ–ª—å",
                    password: "–í–∞—à –ø–∞—Ä–æ–ª—å",
                    check: "–ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏",
                    wrongPassword: "–ù–µ–≤—ñ—Ä–Ω–∏–π –ø–∞—Ä–æ–ª—å"
                },
                en: {
                    enterPassword: "Enter Password",
                    password: "Your password",
                    check: "Check",
                    wrongPassword: "Wrong password"
                },
                ru: {
                    enterPassword: "–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å",
                    password: "–í–∞—à –ø–∞—Ä–æ–ª—å",
                    check: "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å",
                    wrongPassword: "–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å"
                }
            };

            // –í–∏–∑–Ω–∞—á–∞—î–º–æ –ø–æ—Ç–æ—á–Ω—É –º–æ–≤—É
            const lang = localStorage.getItem('userLanguage') || 'uk';
            const t = translations[lang] || translations.uk;

            // –°—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤–µ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
            const modal = document.createElement('div');
            modal.className = 'document-modal';
            modal.innerHTML = `
                <div class="modal-content">
                    <div class="modal-header">
                        <div class="modal-title">${t.enterPassword}</div>
                        <span class="close-modal">√ó</span>
                    </div>
                    <div class="modal-body">
                        <input type="password" id="enter-password" placeholder="${t.password}">
                        <div id="error-msg" class="error-msg"></div>
                    </div>
                    <div class="modal-footer">
                        <button class="modal-button" id="check-password">${t.check}</button>
                    </div>
                </div>
            `;

            document.body.appendChild(modal);

            // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ø–æ—Ç–æ—á–Ω–µ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
            _currentModal = modal;

            // –î–∞—î–º–æ —á–∞—Å –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç–∞ –≤ DOM
            setTimeout(() => {
                // –ü—Ä–∏–º—É—Å–æ–≤–æ –ø–µ—Ä–µ–º–∞–ª—å–æ–≤—É—î–º–æ DOM, —â–æ–± –∞–Ω—ñ–º–∞—Ü—ñ—è —Å–ø—Ä–∞—Ü—é–≤–∞–ª–∞
                modal.offsetHeight;

                // –î–æ–¥–∞—î–º–æ –∫–ª–∞—Å show –¥–ª—è –∞–Ω—ñ–º–∞—Ü—ñ—ó
                modal.classList.add('show');

                // –§–æ–∫—É—Å –Ω–∞ –ø–æ–ª–µ –≤–≤–æ–¥—É
                const passwordInput = document.getElementById('enter-password');
                if (passwordInput) passwordInput.focus();

                _isProcessing = false;
            }, 50);

            // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π
            const checkBtn = modal.querySelector('#check-password');
            if (checkBtn) {
                checkBtn.onclick = () => {
                    if (_isProcessing) return;
                    _isProcessing = true;

                    const pwdField = document.getElementById('enter-password');
                    const errorMsgField = document.getElementById('error-msg');

                    if (!pwdField || !errorMsgField) {
                        _isProcessing = false;
                        return;
                    }

                    const pwd = pwdField.value;

                    if (this.verifyPassword(pwd)) {
                        // –î–æ–¥–∞—î–º–æ –∞–Ω—ñ–º–∞—Ü—ñ—é –¥–ª—è –∫–Ω–æ–ø–∫–∏
                        checkBtn.classList.add('success');
                        checkBtn.disabled = true;

                        // –í–∏–¥–∞–ª—è—î–º–æ –∫–ª–∞—Å show –¥–ª—è –∞–Ω—ñ–º–∞—Ü—ñ—ó –∑–∞–∫—Ä–∏—Ç—Ç—è
                        modal.classList.remove('show');

                        // –ó–∞—Ç—Ä–∏–º–∫–∞ –ø–µ—Ä–µ–¥ –≤–∏–¥–∞–ª–µ–Ω–Ω—è–º –≤—ñ–∫–Ω–∞ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –∞–Ω—ñ–º–∞—Ü—ñ—ó
                        setTimeout(() => {
                            if (modal.parentNode) {
                                modal.parentNode.removeChild(modal);
                            }
                            _currentModal = null;

                            if (typeof callback === 'function') {
                                callback(pwd);
                            }
                        }, 300);
                    } else {
                        errorMsgField.textContent = t.wrongPassword;
                        pwdField.classList.add('error');

                        // –î–æ–¥–∞—î–º–æ –∞–Ω—ñ–º–∞—Ü—ñ—é —Ç—Ä—è—Å–∫–∏ –¥–ª—è –ø–æ–ª—è –≤–≤–æ–¥—É
                        setTimeout(() => {
                            pwdField.classList.remove('error');
                            _isProcessing = false;
                        }, 500);
                    }
                };
            }

            // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –¥–ª—è –∑–∞–∫—Ä–∏—Ç—Ç—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞
            const closeBtn = modal.querySelector('.close-modal');
            if (closeBtn) {
                closeBtn.onclick = () => {
                    if (_isProcessing) return;
                    closeModal(modal);
                };
            }

            // –ó–∞–∫—Ä–∏—Ç—Ç—è –ø–æ –∫–ª—ñ–∫—É –Ω–∞ —Ñ–æ–Ω—ñ
            modal.onclick = (e) => {
                if (e.target === modal && !_isProcessing) {
                    closeModal(modal);
                }
            };

            // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è Enter
            const passwordInput = modal.querySelector('#enter-password');
            if (passwordInput) {
                passwordInput.addEventListener('keypress', function(e) {
                    if (e.key === 'Enter' && checkBtn) {
                        e.preventDefault();
                        checkBtn.click();
                    }
                });

                // –û—á–∏—â–µ–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –ø—Ä–∏ –≤–≤–µ–¥–µ–Ω–Ω—ñ
                passwordInput.addEventListener('input', function() {
                    this.classList.remove('error');
                    const errorMsg = document.getElementById('error-msg');
                    if (errorMsg) errorMsg.textContent = '';
                });
            }

            // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ Escape –¥–ª—è –∑–∞–∫—Ä–∏—Ç—Ç—è
            const escHandler = (e) => {
                if (e.key === 'Escape' && !_isProcessing) {
                    closeModal(modal);
                    document.removeEventListener('keydown', escHandler);
                }
            };

            document.addEventListener('keydown', escHandler);
        },

        /**
         * –ü–æ–∫–∞–∑ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞ –∑ —Å—ñ–¥-—Ñ—Ä–∞–∑–æ—é
         * @param {string} seedPhrase - –°—ñ–¥-—Ñ—Ä–∞–∑–∞ –¥–ª—è –ø–æ–∫–∞–∑—É
         */
        showSeedPhraseModal: function(seedPhrase) {
            if (_isProcessing) return;
            _isProcessing = true;

            // –û–±—Ä–æ–±–∫–∞ –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ–≥–æ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞
            if (_currentModal) {
                closeModal(_currentModal);
            }

            const translations = {
                uk: {
                    seedPhrase: "SID —Ñ—Ä–∞–∑–∞",
                    yourSeedPhrase: "–í–∞—à–∞ SID —Ñ—Ä–∞–∑–∞",
                    saveSeed: "–ó–±–µ—Ä–µ–∂—ñ—Ç—å —Ü—é —Ñ—Ä–∞–∑—É –≤ –Ω–∞–¥—ñ–π–Ω–æ–º—É –º—ñ—Å—Ü—ñ",
                    copy: "–ö–æ–ø—ñ—é–≤–∞—Ç–∏",
                    copied: "–°–∫–æ–ø—ñ–π–æ–≤–∞–Ω–æ",
                    copyError: "–ü–æ–º–∏–ª–∫–∞ –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è",
                    done: "–ì–æ—Ç–æ–≤–æ"
                },
                en: {
                    seedPhrase: "SID Phrase",
                    yourSeedPhrase: "Your SID Phrase",
                    saveSeed: "Save this phrase in a secure place",
                    copy: "Copy",
                    copied: "Copied",
                    copyError: "Copy error",
                    done: "Done"
                },
                ru: {
                    seedPhrase: "SID —Ñ—Ä–∞–∑–∞",
                    yourSeedPhrase: "–í–∞—à–∞ SID —Ñ—Ä–∞–∑–∞",
                    saveSeed: "–°–æ—Ö—Ä–∞–Ω–∏—Ç–µ —ç—Ç—É —Ñ—Ä–∞–∑—É –≤ –Ω–∞–¥–µ–∂–Ω–æ–º –º–µ—Å—Ç–µ",
                    copy: "–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å",
                    copied: "–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ",
                    copyError: "–û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è",
                    done: "–ì–æ—Ç–æ–≤–æ"
                }
            };

            // –í–∏–∑–Ω–∞—á–∞—î–º–æ –ø–æ—Ç–æ—á–Ω—É –º–æ–≤—É
            const lang = localStorage.getItem('userLanguage') || 'uk';
            const t = translations[lang] || translations.uk;

            // –†–æ–∑–±–∏–≤–∞—î–º–æ —Ñ—Ä–∞–∑—É –Ω–∞ –æ–∫—Ä–µ–º—ñ —Å–ª–æ–≤–∞
            const words = seedPhrase.split(' ');

            // –°—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤–µ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
            const modal = document.createElement('div');
            modal.className = 'document-modal';
            modal.innerHTML = `
                <div class="seed-modal-content">
                    <div class="modal-header">
                        <div class="modal-title">${t.seedPhrase}</div>
                        <span class="close-modal">√ó</span>
                    </div>
                    <div class="modal-body">
                        <div class="restore-card">
                            <div class="restore-title">${t.yourSeedPhrase}</div>
                            <div class="restore-subtitle">${t.saveSeed}</div>
                            <button class="copy-button">
                                <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <path d="M8 4V16C8 16.5304 8.21071 17.0391 8.58579 17.4142C8.96086 17.7893 9.46957 18 10 18H18C18.5304 18 19.0391 17.7893 19.4142 17.4142C19.7893 17.0391 20 16.5304 20 16V7.242C20 6.97556 19.9467 6.71181 19.8433 6.46624C19.7399 6.22068 19.5885 5.99824 19.398 5.812L16.188 2.602C16.0018 2.41154 15.7793 2.26013 15.5338 2.15673C15.2882 2.05333 15.0244 2 14.758 2H10C9.46957 2 8.96086 2.21071 8.58579 2.58579C8.21071 2.96086 8 3.46957 8 4V4Z" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                    <path d="M16 18V20C16 20.5304 15.7893 21.0391 15.4142 21.4142C15.0391 21.7893 14.5304 22 14 22H6C5.46957 22 4.96086 21.7893 4.58579 21.4142C4.21071 21.0391 4 20.5304 4 20V9C4 8.46957 4.21071 7.96086 4.58579 7.58579C4.96086 7.21071 5.46957 7 6 7H8" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                </svg>
                                ${t.copy}
                            </button>
                            <div class="words-grid">
                                ${words.map((word, i) => `
                                    <div class="word-cell">
                                        <div class="word-number">${i + 1}.</div>
                                        <div class="word-value">${word}</div>
                                    </div>
                                `).join('')}
                            </div>
                            <button class="seed-continue-button">${t.done}</button>
                        </div>
                    </div>
                </div>
            `;

            document.body.appendChild(modal);

            // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ø–æ—Ç–æ—á–Ω–µ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
            _currentModal = modal;

            // –î–∞—î–º–æ —á–∞—Å –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç–∞ –≤ DOM
            setTimeout(() => {
                // –ü—Ä–∏–º—É—Å–æ–≤–æ –ø–µ—Ä–µ–º–∞–ª—å–æ–≤—É—î–º–æ DOM, —â–æ–± –∞–Ω—ñ–º–∞—Ü—ñ—è —Å–ø—Ä–∞—Ü—é–≤–∞–ª–∞
                modal.offsetHeight;

                // –î–æ–¥–∞—î–º–æ –∫–ª–∞—Å show –¥–ª—è –∞–Ω—ñ–º–∞—Ü—ñ—ó
                modal.classList.add('show');

                _isProcessing = false;
            }, 50);

            // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π
            const closeBtn = modal.querySelector('.close-modal');
            if (closeBtn) {
                closeBtn.onclick = () => {
                    if (_isProcessing) return;
                    closeModal(modal);
                };
            }

            const copyBtn = modal.querySelector('.copy-button');
            if (copyBtn) {
                copyBtn.onclick = () => {
                    if (_isProcessing) return;
                    _isProcessing = true;

                    navigator.clipboard.writeText(seedPhrase)
                        .then(() => {
                            // –î–æ–¥–∞—î–º–æ –∫–ª–∞—Å –¥–ª—è –∞–Ω—ñ–º–∞—Ü—ñ—ó —É—Å–ø—ñ—Ö—É
                            copyBtn.classList.add('copy-success');

                            // –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è
                            showToast(t.copied);

                            setTimeout(() => {
                                copyBtn.classList.remove('copy-success');
                                _isProcessing = false;
                            }, 600);
                        })
                        .catch(() => {
                            showToast(t.copyError, true);
                            _isProcessing = false;
                        });
                };
            }

            const doneBtn = modal.querySelector('.seed-continue-button');
            if (doneBtn) {
                doneBtn.onclick = () => {
                    if (_isProcessing) return;
                    _isProcessing = true;

                    localStorage.setItem('seedPhraseViewed', 'true');
                    closeModal(modal);
                    _isProcessing = false;
                };
            }

            // –ó–∞–∫—Ä–∏—Ç—Ç—è –ø–æ –∫–ª—ñ–∫—É –Ω–∞ —Ñ–æ–Ω—ñ
            modal.onclick = (e) => {
                if (e.target === modal && !_isProcessing) {
                    closeModal(modal);
                }
            };

            // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ Escape –¥–ª—è –∑–∞–∫—Ä–∏—Ç—Ç—è
            const escHandler = (e) => {
                if (e.key === 'Escape' && !_isProcessing) {
                    closeModal(modal);
                    document.removeEventListener('keydown', escHandler);
                }
            };

            document.addEventListener('keydown', escHandler);
        },

        /**
         * –ü–æ–∫–∞–∑ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞ –¥–ª—è —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é
         */
        showProfileEditModal: function() {
            if (_isProcessing) return;
            _isProcessing = true;

            // –û–±—Ä–æ–±–∫–∞ –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ–≥–æ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞
            if (_currentModal) {
                closeModal(_currentModal);
            }

            const translations = {
                uk: {
                    editProfile: "–†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é",
                    username: "–Ü–º'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞",
                    selectAvatar: "–í–∏–±–µ—Ä—ñ—Ç—å –∞–≤–∞—Ç–∞—Ä",
                    save: "–ó–±–µ—Ä–µ–≥—Ç–∏",
                    close: "–°–∫–∞—Å—É–≤–∞—Ç–∏"
                },
                en: {
                    editProfile: "Edit Profile",
                    username: "Username",
                    selectAvatar: "Select Avatar",
                    save: "Save",
                    close: "Cancel"
                },
                ru: {
                    editProfile: "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è",
                    username: "–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
                    selectAvatar: "–í—ã–±–µ—Ä–∏—Ç–µ –∞–≤–∞—Ç–∞—Ä",
                    save: "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å",
                    close: "–û—Ç–º–µ–Ω–∞"
                }
            };

            // –í–∏–∑–Ω–∞—á–∞—î–º–æ –ø–æ—Ç–æ—á–Ω—É –º–æ–≤—É
            const lang = localStorage.getItem('userLanguage') || 'uk';
            const t = translations[lang] || translations.uk;

            // –ü–æ—Ç–æ—á–Ω—ñ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            const currentUsername = localStorage.getItem('username') || 'WINIX User';
            const currentAvatarId = localStorage.getItem('avatarId') || '1';

            // –°—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤–µ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
            const modal = document.createElement('div');
            modal.className = 'document-modal profile-edit-modal';
            modal.innerHTML = `
                <div class="modal-content">
                    <div class="modal-header">
                        <div class="modal-title">${t.editProfile}</div>
                        <span class="close-modal">√ó</span>
                    </div>
                    <div class="modal-body">
                        <div class="form-group">
                            <label for="username-input">${t.username}</label>
                            <input type="text" id="username-input" value="${currentUsername}" autocomplete="off">
                        </div>
                        
                        <div class="form-group">
                            <label>${t.selectAvatar}</label>
                            <div class="avatar-options">
                                <img src="assets/avatars/1.png" class="avatar-option ${currentAvatarId === '1' ? 'selected' : ''}" data-avatar-id="1" onerror="this.src='https://via.placeholder.com/60?text=1'">
                                <img src="assets/avatars/2.png" class="avatar-option ${currentAvatarId === '2' ? 'selected' : ''}" data-avatar-id="2" onerror="this.src='https://via.placeholder.com/60?text=2'">
                                <img src="assets/avatars/3.png" class="avatar-option ${currentAvatarId === '3' ? 'selected' : ''}" data-avatar-id="3" onerror="this.src='https://via.placeholder.com/60?text=3'">
                                <img src="assets/avatars/4.png" class="avatar-option ${currentAvatarId === '4' ? 'selected' : ''}" data-avatar-id="4" onerror="this.src='https://via.placeholder.com/60?text=4'">
                                <img src="assets/avatars/5.png" class="avatar-option ${currentAvatarId === '5' ? 'selected' : ''}" data-avatar-id="5" onerror="this.src='https://via.placeholder.com/60?text=5'">
                                <img src="assets/avatars/6.png" class="avatar-option ${currentAvatarId === '6' ? 'selected' : ''}" data-avatar-id="6" onerror="this.src='https://via.placeholder.com/60?text=6'">
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button class="modal-button" id="cancel-profile-edit">${t.close}</button>
                        <button class="modal-button" id="save-profile">${t.save}</button>
                    </div>
                </div>
            `;

            document.body.appendChild(modal);

            // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ø–æ—Ç–æ—á–Ω–µ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
            _currentModal = modal;

            // –î–∞—î–º–æ —á–∞—Å –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç–∞ –≤ DOM
            setTimeout(() => {
                // –ü—Ä–∏–º—É—Å–æ–≤–æ –ø–µ—Ä–µ–º–∞–ª—å–æ–≤—É—î–º–æ DOM, —â–æ–± –∞–Ω—ñ–º–∞—Ü—ñ—è —Å–ø—Ä–∞—Ü—é–≤–∞–ª–∞
                modal.offsetHeight;

                // –î–æ–¥–∞—î–º–æ –∫–ª–∞—Å show –¥–ª—è –∞–Ω—ñ–º–∞—Ü—ñ—ó
                modal.classList.add('show');

                // –§–æ–∫—É—Å –Ω–∞ –ø–æ–ª–µ –≤–≤–æ–¥—É
                const usernameInput = document.getElementById('username-input');
                if (usernameInput) usernameInput.focus();

                _isProcessing = false;
            }, 50);

            // –û–±—Ä–æ–±–Ω–∏–∫–∏ –¥–ª—è –≤–∏–±–æ—Ä—É –∞–≤–∞—Ç–∞—Ä–∞
            const avatarOptions = modal.querySelectorAll('.avatar-option');
            avatarOptions.forEach(avatar => {
                avatar.addEventListener('click', () => {
                    // –ó–Ω—ñ–º–∞—î–º–æ –∫–ª–∞—Å selected –∑ —É—Å—ñ—Ö –∞–≤–∞—Ç–∞—Ä—ñ–≤
                    avatarOptions.forEach(a => a.classList.remove('selected'));
                    // –î–æ–¥–∞—î–º–æ –∫–ª–∞—Å selected –¥–æ –æ–±—Ä–∞–Ω–æ–≥–æ –∞–≤–∞—Ç–∞—Ä–∞
                    avatar.classList.add('selected');
                });
            });

            // –û–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é
            const saveBtn = modal.querySelector('#save-profile');
            if (saveBtn) {
                saveBtn.addEventListener('click', () => {
                    if (_isProcessing) return;
                    _isProcessing = true;

                    const usernameInput = document.getElementById('username-input');
                    const selectedAvatar = modal.querySelector('.avatar-option.selected');

                    if (!usernameInput || !selectedAvatar) {
                        _isProcessing = false;
                        return;
                    }

                    const username = usernameInput.value.trim();
                    const avatarId = selectedAvatar.getAttribute('data-avatar-id');

                    // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –≤ localStorage
                    localStorage.setItem('username', username);
                    localStorage.setItem('avatarId', avatarId);

                    // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ
                    const profileName = document.getElementById('profile-name');
                    if (profileName) {
                        profileName.textContent = username;
                    }

                    const profileAvatar = document.getElementById('profile-avatar');
                    const profileAvatarLarge = document.getElementById('profile-avatar-large');

                    // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∞–≤–∞—Ç–∞—Ä—É
                    const updateAvatar = (element, avatarId) => {
                        if (!element) return;

                        // –û—á–∏—â–∞—î–º–æ –≤–º—ñ—Å—Ç
                        element.innerHTML = '';

                        // –°—Ç–≤–æ—Ä—é—î–º–æ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
                        const img = document.createElement('img');
                        img.src = `assets/avatars/${avatarId}.png`;
                        img.alt = username;
                        img.onerror = () => {
                            // –Ø–∫—â–æ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–∏–ª–æ—Å—è, –ø–æ–∫–∞–∑—É—î–º–æ –ø–µ—Ä—à—É –ª—ñ—Ç–µ—Ä—É —ñ–º–µ–Ω—ñ
                            element.textContent = username.charAt(0).toUpperCase();
                        };

                        element.appendChild(img);
                    };

                    // –û–Ω–æ–≤–ª—é—î–º–æ –∞–≤–∞—Ç–∞—Ä–∏
                    updateAvatar(profileAvatar, avatarId);
                    updateAvatar(profileAvatarLarge, avatarId);

                    // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –¥–∞–Ω—ñ –Ω–∞ —Å–µ—Ä–≤–µ—Ä, —è–∫—â–æ –º–æ–∂–ª–∏–≤–æ
                    const userId = this.getUserId();
                    if (userId && api) {
                        api(`/api/user/${userId}/settings`, 'POST', {
                            username: username,
                            avatar_id: avatarId
                        }).catch(error => {
                            console.error('–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ:', error);
                        });
                    }

                    // –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ —É—Å–ø—ñ—Ö
                    showToast('–ü—Ä–æ—Ñ—ñ–ª—å —É—Å–ø—ñ—à–Ω–æ –æ–Ω–æ–≤–ª–µ–Ω–æ');

                    // –ó–∞–∫—Ä–∏–≤–∞—î–º–æ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ –∑ –∞–Ω—ñ–º–∞—Ü—ñ—î—é
                    closeModal(modal);
                    _isProcessing = false;
                });
            }

            // –û–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –∑–∞–∫—Ä–∏—Ç—Ç—è
            const cancelBtn = modal.querySelector('#cancel-profile-edit');
            if (cancelBtn) {
                cancelBtn.addEventListener('click', () => {
                    if (_isProcessing) return;
                    closeModal(modal);
                });
            }

            // –û–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –•
            const closeBtn = modal.querySelector('.close-modal');
            if (closeBtn) {
                closeBtn.addEventListener('click', () => {
                    if (_isProcessing) return;
                    closeModal(modal);
                });
            }

            // –ó–∞–∫—Ä–∏—Ç—Ç—è –ø–æ –∫–ª—ñ–∫—É –Ω–∞ —Ñ–æ–Ω—ñ
            modal.addEventListener('click', (e) => {
                if (e.target === modal && !_isProcessing) {
                    closeModal(modal);
                }
            });

            // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ Escape –¥–ª—è –∑–∞–∫—Ä–∏—Ç—Ç—è
            const escHandler = (e) => {
                if (e.key === 'Escape' && !_isProcessing) {
                    closeModal(modal);
                    document.removeEventListener('keydown', escHandler);
                }
            };

            document.addEventListener('keydown', escHandler);
        },

        /**
         * –ü–æ–∫–∞–∑ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞ –∑ –ª—ñ—Ü–µ–Ω–∑—ñ—î—é
         */
        showLicenseModal: function() {
            if (_isProcessing) return;
            _isProcessing = true;

            // –û–±—Ä–æ–±–∫–∞ –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ–≥–æ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞
            if (_currentModal) {
                closeModal(_currentModal);
            }

            const translations = {
                uk: {
                    license: "–õ—ñ—Ü–µ–Ω–∑—ñ—è WINIX",
                    close: "–ó–∞–∫—Ä–∏—Ç–∏"
                },
                en: {
                    license: "WINIX License",
                    close: "Close"
                },
                ru: {
                    license: "–õ–∏—Ü–µ–Ω–∑–∏—è WINIX",
                    close: "–ó–∞–∫—Ä—ã—Ç—å"
                }
            };

            // –í–∏–∑–Ω–∞—á–∞—î–º–æ –ø–æ—Ç–æ—á–Ω—É –º–æ–≤—É
            const lang = localStorage.getItem('userLanguage') || 'uk';
            const t = translations[lang] || translations.uk;

            // –°—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤–µ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
            const modal = document.createElement('div');
            modal.className = 'document-modal';
            modal.innerHTML = `
                <div class="modal-content">
                    <div class="modal-header">
                        <div class="modal-title">${t.license}</div>
                        <span class="close-modal">√ó</span>
                    </div>
                    <div class="modal-body">
                        <div class="document-content">
                            <h3>–õ—ñ—Ü–µ–Ω–∑—ñ–π–Ω–∞ —É–≥–æ–¥–∞ WINIX</h3>
                            <p>–¶—è –ª—ñ—Ü–µ–Ω–∑—ñ–π–Ω–∞ —É–≥–æ–¥–∞ (–¥–∞–ª—ñ - "–£–≥–æ–¥–∞") —Ä–µ–≥—É–ª—é—î –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –ø—Ä–æ–≥—Ä–∞–º–Ω–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç—É WINIX —Ç–∞ –π–æ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ–≤ (–¥–∞–ª—ñ - "–ü—Ä–æ–¥—É–∫—Ç").</p>
                            
                            <h3>1. –ó–∞–≥–∞–ª—å–Ω—ñ –ø–æ–ª–æ–∂–µ–Ω–Ω—è</h3>
                            <p>–ü—Ä–æ–¥—É–∫—Ç WINIX —î —ñ–Ω—Ç–µ–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ—é –≤–ª–∞—Å–Ω—ñ—Å—Ç—é —ó—ó —Ä–æ–∑—Ä–æ–±–Ω–∏–∫—ñ–≤ —Ç–∞ –∑–∞—Ö–∏—â–µ–Ω–∏–π –º—ñ–∂–Ω–∞—Ä–æ–¥–Ω–∏–º–∏ –∑–∞–∫–æ–Ω–∞–º–∏ –ø—Ä–æ –∞–≤—Ç–æ—Ä—Å—å–∫–µ –ø—Ä–∞–≤–æ.</p>
                            
                            <h3>2. –ü—Ä–∞–≤–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞</h3>
                            <p>–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –º–∞—î –ø—Ä–∞–≤–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –ü—Ä–æ–¥—É–∫—Ç –≤ –æ—Å–æ–±–∏—Å—Ç–∏—Ö –Ω–µ–∫–æ–º–µ—Ä—Ü—ñ–π–Ω–∏—Ö —Ü—ñ–ª—è—Ö. –û—Ç—Ä–∏–º–∞–Ω–Ω—è –≤–∏–Ω–∞–≥–æ—Ä–æ–¥–∏ –≤ WINIX —Ç–æ–∫–µ–Ω–∞—Ö —á–µ—Ä–µ–∑ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ–π –¥–æ–¥–∞—Ç–∫—É –Ω–µ –ø–æ—Ä—É—à—É—î —É–º–æ–≤ –Ω–µ–∫–æ–º–µ—Ä—Ü—ñ–π–Ω–æ–≥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è.</p>
                            
                            <h3>3. –û–±–º–µ–∂–µ–Ω–Ω—è</h3>
                            <p>–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—É –∑–∞–±–æ—Ä–æ–Ω—è—î—Ç—å—Å—è:</p>
                            <p>- –ö–æ–ø—ñ—é–≤–∞—Ç–∏, –º–æ–¥–∏—Ñ—ñ–∫—É–≤–∞—Ç–∏, –¥–µ–∫–æ–º–ø—ñ–ª—é–≤–∞—Ç–∏ –∞–±–æ —ñ–Ω—à–∏–º —á–∏–Ω–æ–º –∑–º—ñ–Ω—é–≤–∞—Ç–∏ –≤–∏—Ö—ñ–¥–Ω–∏–π –∫–æ–¥ –ü—Ä–æ–¥—É–∫—Ç—É</p>
                            <p>- –ü–æ—à–∏—Ä—é–≤–∞—Ç–∏, –ø—Ä–æ–¥–∞–≤–∞—Ç–∏ –∞–±–æ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç–∏ –ü—Ä–æ–¥—É–∫—Ç —Ç—Ä–µ—Ç—ñ–º –æ—Å–æ–±–∞–º</p>
                            <p>- –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –ü—Ä–æ–¥—É–∫—Ç –¥–ª—è –±—É–¥—å-—è–∫–∏—Ö –Ω–µ–∑–∞–∫–æ–Ω–Ω–∏—Ö —Ü—ñ–ª–µ–π</p>
                            
                            <h3>4. –í—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω—ñ—Å—Ç—å</h3>
                            <p>–ü—Ä–æ–¥—É–∫—Ç –Ω–∞–¥–∞—î—Ç—å—Å—è "—è–∫ —î", –±–µ–∑ –±—É–¥—å-—è–∫–∏—Ö –≥–∞—Ä–∞–Ω—Ç—ñ–π. –†–æ–∑—Ä–æ–±–Ω–∏–∫–∏ –Ω–µ –Ω–µ—Å—É—Ç—å –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω–æ—Å—Ç—ñ –∑–∞ –±—É–¥—å-—è–∫—ñ –∑–±–∏—Ç–∫–∏, –ø–æ–≤'—è–∑–∞–Ω—ñ –∑ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è–º –∞–±–æ –Ω–µ–º–æ–∂–ª–∏–≤—ñ—Å—Ç—é –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –ü—Ä–æ–¥—É–∫—Ç—É.</p>
                            
                            <h3>5. –¢–µ—Ä–º—ñ–Ω –¥—ñ—ó</h3>
                            <p>–¶—è –£–≥–æ–¥–∞ –Ω–∞–±—É–≤–∞—î —á–∏–Ω–Ω–æ—Å—Ç—ñ –∑ –º–æ–º–µ–Ω—Ç—É –ø–æ—á–∞—Ç–∫—É –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –ü—Ä–æ–¥—É–∫—Ç—É —ñ –¥—ñ—î –±–µ–∑—Å—Ç—Ä–æ–∫–æ–≤–æ. –†–æ–∑—Ä–æ–±–Ω–∏–∫–∏ –∑–∞–ª–∏—à–∞—é—Ç—å –∑–∞ —Å–æ–±–æ—é –ø—Ä–∞–≤–æ –ø—Ä–∏–ø–∏–Ω–∏—Ç–∏ –¥—ñ—é —Ü—ñ—î—ó –£–≥–æ–¥–∏ –≤ —Ä–∞–∑—ñ –ø–æ—Ä—É—à–µ–Ω–Ω—è —ó—ó —É–º–æ–≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º.</p>
                            
                            <h3>6. –ó–º—ñ–Ω–∏ –≤ –£–≥–æ–¥—ñ</h3>
                            <p>–†–æ–∑—Ä–æ–±–Ω–∏–∫–∏ –∑–∞–ª–∏—à–∞—é—Ç—å –∑–∞ —Å–æ–±–æ—é –ø—Ä–∞–≤–æ –≤–Ω–æ—Å–∏—Ç–∏ –∑–º—ñ–Ω–∏ –≤ —Ü—é –£–≥–æ–¥—É –≤ –±—É–¥—å-—è–∫–∏–π —á–∞—Å –±–µ–∑ –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ–≥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è. –ê–∫—Ç—É–∞–ª—å–Ω–∞ –≤–µ—Ä—Å—ñ—è –£–≥–æ–¥–∏ –∑–∞–≤–∂–¥–∏ –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –¥–æ–¥–∞—Ç–∫—É.</p>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button class="modal-button" id="close-license">${t.close}</button>
                    </div>
                </div>
            `;

            document.body.appendChild(modal);

            // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ø–æ—Ç–æ—á–Ω–µ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
            _currentModal = modal;

            // –î–∞—î–º–æ —á–∞—Å –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç–∞ –≤ DOM
            setTimeout(() => {
                // –ü—Ä–∏–º—É—Å–æ–≤–æ –ø–µ—Ä–µ–º–∞–ª—å–æ–≤—É—î–º–æ DOM, —â–æ–± –∞–Ω—ñ–º–∞—Ü—ñ—è —Å–ø—Ä–∞—Ü—é–≤–∞–ª–∞
                modal.offsetHeight;

                // –î–æ–¥–∞—î–º–æ –∫–ª–∞—Å show –¥–ª—è –∞–Ω—ñ–º–∞—Ü—ñ—ó
                modal.classList.add('show');

                _isProcessing = false;
            }, 50);

            // –û–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –∑–∞–∫—Ä–∏—Ç—Ç—è
            const closeBtn = modal.querySelector('#close-license');
            if (closeBtn) {
                closeBtn.addEventListener('click', () => {
                    if (_isProcessing) return;
                    closeModal(modal);
                });
            }

            // –û–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –•
            const closeBtnX = modal.querySelector('.close-modal');
            if (closeBtnX) {
                closeBtnX.addEventListener('click', () => {
                    if (_isProcessing) return;
                    closeModal(modal);
                });
            }

            // –ó–∞–∫—Ä–∏—Ç—Ç—è –ø–æ –∫–ª—ñ–∫—É –Ω–∞ —Ñ–æ–Ω—ñ
            modal.addEventListener('click', (e) => {
                if (e.target === modal && !_isProcessing) {
                    closeModal(modal);
                }
            });

            // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ Escape –¥–ª—è –∑–∞–∫—Ä–∏—Ç—Ç—è
            const escHandler = (e) => {
                if (e.key === 'Escape' && !_isProcessing) {
                    closeModal(modal);
                    document.removeEventListener('keydown', escHandler);
                }
            };

            document.addEventListener('keydown', escHandler);
        },

        /**
         * –ü–æ–∫–∞–∑ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞ –∑ —É–≥–æ–¥–æ—é –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
         */
        showAgreementModal: function() {
            if (_isProcessing) return;
            _isProcessing = true;

            // –û–±—Ä–æ–±–∫–∞ –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ–≥–æ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞
            if (_currentModal) {
                closeModal(_currentModal);
            }

            const translations = {
                uk: {
                    agreement: "–£–≥–æ–¥–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞",
                    close: "–ó–∞–∫—Ä–∏—Ç–∏"
                },
                en: {
                    agreement: "User Agreement",
                    close: "Close"
                },
                ru: {
                    agreement: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ",
                    close: "–ó–∞–∫—Ä—ã—Ç—å"
                }
            };

            // –í–∏–∑–Ω–∞—á–∞—î–º–æ –ø–æ—Ç–æ—á–Ω—É –º–æ–≤—É
            const lang = localStorage.getItem('userLanguage') || 'uk';
            const t = translations[lang] || translations.uk;

            // –°—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤–µ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
            const modal = document.createElement('div');
            modal.className = 'document-modal';
            modal.innerHTML = `
                <div class="modal-content">
                    <div class="modal-header">
                        <div class="modal-title">${t.agreement}</div>
                        <span class="close-modal">√ó</span>
                    </div>
                    <div class="modal-body">
                        <div class="document-content">
                            <h3>–£–≥–æ–¥–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ WINIX</h3>
                            <p>–¶—è —É–≥–æ–¥–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ (–¥–∞–ª—ñ - "–£–≥–æ–¥–∞") —Ä–µ–≥—É–ª—é—î –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è WINIX –¥–æ–¥–∞—Ç–∫—É —Ç–∞ –≤—Å—ñ—Ö –ø–æ–≤'—è–∑–∞–Ω–∏—Ö —Å–µ—Ä–≤—ñ—Å—ñ–≤.</p>
                            
                            <h3>1. –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è —Ç–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è</h3>
                            <p>1.1. –î–ª—è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è WINIX –Ω–µ–æ–±—Ö—ñ–¥–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è —á–µ—Ä–µ–∑ Telegram.</p>
                            <p>1.2. –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ—Å–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω—ñ—Å—Ç—å –∑–∞ –±–µ–∑–ø–µ–∫—É —Å–≤–æ—ó—Ö –æ–±–ª—ñ–∫–æ–≤–∏—Ö –¥–∞–Ω–∏—Ö, –≤–∫–ª—é—á–∞—é—á–∏ –ø–∞—Ä–æ–ª—å —Ç–∞ SID-—Ñ—Ä–∞–∑—É.</p>
                            <p>1.3. –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑–æ–±–æ–≤'—è–∑—É—î—Ç—å—Å—è –Ω–µ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç–∏ —Å–≤–æ—ó –¥–∞–Ω—ñ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó —Ç—Ä–µ—Ç—ñ–º –æ—Å–æ–±–∞–º.</p>
                            
                            <h3>2. –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è —Å–µ—Ä–≤—ñ—Å—É</h3>
                            <p>2.1. –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –º–∞—î –ø—Ä–∞–≤–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –≤—Å—ñ –¥–æ—Å—Ç—É–ø–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó WINIX –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ –¥–æ —ó—Ö –ø—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è.</p>
                            <p>2.2. –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ WINIX –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î –≤–ª–∞—Å–Ω—ñ —Ç–æ–∫–µ–Ω–∏, —è–∫—ñ –Ω–µ –º–∞—é—Ç—å –ø—Ä—è–º–æ—ó –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—ó —É —Ñ—ñ–∞—Ç–Ω—ñ –≤–∞–ª—é—Ç–∏.</p>
                            <p>2.3. –ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ü—ñ—è WINIX –º–∞—î –ø—Ä–∞–≤–æ –æ–±–º–µ–∂–∏—Ç–∏ –¥–æ—Å—Ç—É–ø –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–æ —Å–µ—Ä–≤—ñ—Å—É –≤ —Ä–∞–∑—ñ –ø–æ—Ä—É—à–µ–Ω–Ω—è —É–º–æ–≤ —Ü—ñ—î—ó –£–≥–æ–¥–∏.</p>
                            
                            <h3>3. –°—Ç–µ–π–∫—ñ–Ω–≥</h3>
                            <p>3.1. –§—É–Ω–∫—Ü—ñ—è —Å—Ç–µ–π–∫—ñ–Ω–≥—É –¥–æ–∑–≤–æ–ª—è—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞–º –±–ª–æ–∫—É–≤–∞—Ç–∏ –ø–µ–≤–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å WINIX —Ç–æ–∫–µ–Ω—ñ–≤ –Ω–∞ –ø–µ–≤–Ω–∏–π –ø–µ—Ä—ñ–æ–¥ —á–∞—Å—É –≤ –æ–±–º—ñ–Ω –Ω–∞ –≤–∏–Ω–∞–≥–æ—Ä–æ–¥—É.</p>
                            <p>3.2. –£–º–æ–≤–∏ —Å—Ç–µ–π–∫—ñ–Ω–≥—É, –≤–∫–ª—é—á–∞—é—á–∏ –≤—ñ–¥—Å–æ—Ç–æ–∫ –≤–∏–Ω–∞–≥–æ—Ä–æ–¥–∏ —Ç–∞ —Ç–µ—Ä–º—ñ–Ω–∏, –º–æ–∂—É—Ç—å –∑–º—ñ–Ω—é–≤–∞—Ç–∏—Å—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ü—ñ—î—é WINIX.</p>
                            <p>3.3. –î–æ—Å—Ç—Ä–æ–∫–æ–≤–µ —Å–∫–∞—Å—É–≤–∞–Ω–Ω—è —Å—Ç–µ–π–∫—ñ–Ω–≥—É –º–æ–∂–µ –ø—Ä–∏–∑–≤–µ—Å—Ç–∏ –¥–æ –≤—Ç—Ä–∞—Ç–∏ —á–∞—Å—Ç–∏–Ω–∏ –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–∏—Ö –∫–æ—à—Ç—ñ–≤ –∑–≥—ñ–¥–Ω–æ –∑ –∞–∫—Ç—É–∞–ª—å–Ω–∏–º–∏ —É–º–æ–≤–∞–º–∏.</p>
                            
                            <h3>4. –¢—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó</h3>
                            <p>4.1. –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ—Å–µ –ø–æ–≤–Ω—É –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω—ñ—Å—Ç—å –∑–∞ –≤—Å—ñ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó, –≤–∏–∫–æ–Ω–∞–Ω—ñ –∑ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è–º –π–æ–≥–æ –æ–±–ª—ñ–∫–æ–≤–æ–≥–æ –∑–∞–ø–∏—Å—É.</p>
                            <p>4.2. –í—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è WINIX —Ç–æ–∫–µ–Ω—ñ–≤ —ñ–Ω—à–∏–º –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞–º —î –Ω–µ–∑–≤–æ—Ä–æ—Ç–Ω–æ—é –æ–ø–µ—Ä–∞—Ü—ñ—î—é.</p>
                            
                            <h3>5. –û–±–º–µ–∂–µ–Ω–Ω—è –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω–æ—Å—Ç—ñ</h3>
                            <p>5.1. –ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ü—ñ—è WINIX –Ω–µ –Ω–µ—Å–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω–æ—Å—Ç—ñ –∑–∞ –±—É–¥—å-—è–∫—ñ –∑–±–∏—Ç–∫–∏, –ø–æ–≤'—è–∑–∞–Ω—ñ –∑ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è–º –∞–±–æ –Ω–µ–º–æ–∂–ª–∏–≤—ñ—Å—Ç—é –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è —Å–µ—Ä–≤—ñ—Å—É.</p>
                            <p>5.2. –°–µ—Ä–≤—ñ—Å –Ω–∞–¥–∞—î—Ç—å—Å—è "—è–∫ —î", –±–µ–∑ –±—É–¥—å-—è–∫–∏—Ö –≥–∞—Ä–∞–Ω—Ç—ñ–π.</p>
                            
                            <h3>6. –ö–æ–Ω—Ñ—ñ–¥–µ–Ω—Ü—ñ–π–Ω—ñ—Å—Ç—å</h3>
                            <p>6.1. –ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ü—ñ—è WINIX –∑–æ–±–æ–≤'—è–∑—É—î—Ç—å—Å—è –Ω–µ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ñ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ —Ç—Ä–µ—Ç—ñ–º –æ—Å–æ–±–∞–º, –∫—Ä—ñ–º –≤–∏–ø–∞–¥–∫—ñ–≤, –ø–µ—Ä–µ–¥–±–∞—á–µ–Ω–∏—Ö –∑–∞–∫–æ–Ω–æ–¥–∞–≤—Å—Ç–≤–æ–º.</p>
                            <p>6.2. –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –ø–æ–≥–æ–¥–∂—É—î—Ç—å—Å—è –Ω–∞ –æ–±—Ä–æ–±–∫—É —Å–≤–æ—ó—Ö –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∏—Ö –¥–∞–Ω–∏—Ö –≤ –º–µ–∂–∞—Ö, –Ω–µ–æ–±—Ö—ñ–¥–Ω–∏—Ö –¥–ª—è —Ñ—É–Ω–∫—Ü—ñ–æ–Ω—É–≤–∞–Ω–Ω—è —Å–µ—Ä–≤—ñ—Å—É.</p>
                            
                            <h3>7. –ó–º—ñ–Ω–∏ –≤ –£–≥–æ–¥—ñ</h3>
                            <p>7.1. –ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ü—ñ—è WINIX –∑–∞–ª–∏—à–∞—î –∑–∞ —Å–æ–±–æ—é –ø—Ä–∞–≤–æ –≤–Ω–æ—Å–∏—Ç–∏ –∑–º—ñ–Ω–∏ –≤ —Ü—é –£–≥–æ–¥—É –≤ –±—É–¥—å-—è–∫–∏–π —á–∞—Å.</p>
                            <p>7.2. –ü—Ä–æ–¥–æ–≤–∂–µ–Ω–Ω—è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è —Å–µ—Ä–≤—ñ—Å—É –ø—ñ—Å–ª—è –≤–Ω–µ—Å–µ–Ω–Ω—è –∑–º—ñ–Ω –≤ –£–≥–æ–¥—É –æ–∑–Ω–∞—á–∞—î –∑–≥–æ–¥—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ —Ü–∏–º–∏ –∑–º—ñ–Ω–∞–º–∏.</p>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button class="modal-button" id="close-agreement">${t.close}</button>
                    </div>
                </div>
            `;

            document.body.appendChild(modal);

            // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ø–æ—Ç–æ—á–Ω–µ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
            _currentModal = modal;

            // –î–∞—î–º–æ —á–∞—Å –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç–∞ –≤ DOM
            setTimeout(() => {
                // –ü—Ä–∏–º—É—Å–æ–≤–æ –ø–µ—Ä–µ–º–∞–ª—å–æ–≤—É—î–º–æ DOM, —â–æ–± –∞–Ω—ñ–º–∞—Ü—ñ—è —Å–ø—Ä–∞—Ü—é–≤–∞–ª–∞
                modal.offsetHeight;

                // –î–æ–¥–∞—î–º–æ –∫–ª–∞—Å show –¥–ª—è –∞–Ω—ñ–º–∞—Ü—ñ—ó
                modal.classList.add('show');

                _isProcessing = false;
            }, 50);

            // –û–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –∑–∞–∫—Ä–∏—Ç—Ç—è
            const closeBtn = modal.querySelector('#close-agreement');
            if (closeBtn) {
                closeBtn.addEventListener('click', () => {
                    if (_isProcessing) return;
                    closeModal(modal);
                });
            }

            // –û–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –•
            const closeBtnX = modal.querySelector('.close-modal');
            if (closeBtnX) {
                closeBtnX.addEventListener('click', () => {
                    if (_isProcessing) return;
                    closeModal(modal);
                });
            }

            // –ó–∞–∫—Ä–∏—Ç—Ç—è –ø–æ –∫–ª—ñ–∫—É –Ω–∞ —Ñ–æ–Ω—ñ
            modal.addEventListener('click', (e) => {
                if (e.target === modal && !_isProcessing) {
                    closeModal(modal);
                }
            });

            // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ Escape –¥–ª—è –∑–∞–∫—Ä–∏—Ç—Ç—è
            const escHandler = (e) => {
                if (e.key === 'Escape' && !_isProcessing) {
                    closeModal(modal);
                    document.removeEventListener('keydown', escHandler);
                }
            };

            document.addEventListener('keydown', escHandler);
        },

        /**
         * –û–±—Ä–æ–±–∫–∞ –ø–æ–∫–∞–∑—É —Å—ñ–¥-—Ñ—Ä–∞–∑–∏
         */
        handleShowSeedPhrase: function() {
            console.log("‚öôÔ∏è SETTINGS: –ó–∞–ø–∏—Ç –Ω–∞ –ø–æ–∫–∞–∑ SID —Ñ—Ä–∞–∑–∏");

            // –ó–∞–ø–æ–±—ñ–≥–∞–Ω–Ω—è –æ–¥–Ω–æ—á–∞—Å–Ω–∏–º –∑–∞–ø–∏—Ç–∞–º
            if (_isProcessing) {
                console.log("‚öôÔ∏è SETTINGS: –û–±—Ä–æ–±–∫–∞ –≤–∂–µ –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è, –∑–∞–ø–∏—Ç –≤—ñ–¥—Ö–∏–ª–µ–Ω–æ");
                return;
            }

            _isProcessing = true;

            // –°–ø–æ—á–∞—Ç–∫—É –ø—Ä–∏—Ö–æ–≤—É—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ–π —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
            hideLoading();

            // –û—á–∏—Å—Ç–∏–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ–π —Ç–∞–π–º–∞—É—Ç, —è–∫—â–æ –≤—ñ–Ω —î
            if (_loadingTimeout) {
                clearTimeout(_loadingTimeout);
                _loadingTimeout = null;
            }

            const hasPassword = this.hasPassword();
            const userId = this.getUserId();

            if (!userId) {
                showToast("–ü–æ–º–∏–ª–∫–∞: –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ", true);
                _isProcessing = false;
                return;
            }

            // –ü–æ–∫–∞–∑—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
            showLoading('–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è SID —Ñ—Ä–∞–∑–∏...');

            // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Ç–∞–π–º–∞—É—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ–≥–æ –ø—Ä–∏—Ö–æ–≤—É–≤–∞–Ω–Ω—è —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞
            _loadingTimeout = setTimeout(() => {
                console.log("‚ö†Ô∏è SETTINGS: –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –ø—Ä–∏—Ö–æ–≤—É–≤–∞–Ω–Ω—è —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è");
                hideLoading();

                // –ü–æ–∫–∞–∑—É—î–º–æ —Ñ—ñ–∫—Ç–∏–≤–Ω—É —Ñ—Ä–∞–∑—É, —è–∫—â–æ –∑–∞–ø–∏—Ç –∑–∞–≤–∏—Å–Ω—É–≤
                if (!hasPassword) {
                    this.showSetPasswordModal((password) => {
                        const fakeSeedPhrase = "solve notable quick pluck tribe dinosaur cereal casino rail media final curve";
                        this.showSeedPhraseModal(fakeSeedPhrase);
                    });
                } else {
                    this.showEnterPasswordModal((password) => {
                        const fakeSeedPhrase = "solve notable quick pluck tribe dinosaur cereal casino rail media final curve";
                        this.showSeedPhraseModal(fakeSeedPhrase);
                    });
                }

                _isProcessing = false;
            }, 5000); // 5 —Å–µ–∫—É–Ω–¥ –º–∞–∫—Å–∏–º—É–º

            try {
                api(`/api/user/${userId}/seed-phrase`, 'GET')
                    .then(response => {
                        // –û–±–æ–≤'—è–∑–∫–æ–≤–æ –ø—Ä–∏—Ö–æ–≤—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
                        hideLoading();

                        // –û—á–∏—â–∞—î–º–æ —Ç–∞–π–º–∞—É—Ç
                        if (_loadingTimeout) {
                            clearTimeout(_loadingTimeout);
                            _loadingTimeout = null;
                        }

                        console.log("–í—ñ–¥–ø–æ–≤—ñ–¥—å –≤—ñ–¥ —Å–µ—Ä–≤–µ—Ä–∞:", response);

                        if (response.status === 'success' && response.data && response.data.seed_phrase) {
                            // –Ø–∫—â–æ –ø–∞—Ä–æ–ª—å –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ, –ø–æ–∫–∞–∑—É—î–º–æ —Å–ø–æ—á–∞—Ç–∫—É –≤—ñ–∫–Ω–æ –¥–ª—è –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–∞—Ä–æ–ª—è
                            if (!hasPassword) {
                                this.showSetPasswordModal(password => {
                                    // –ü–æ–∫–∞–∑—É—î–º–æ —Å—ñ–¥-—Ñ—Ä–∞–∑—É –ø—ñ—Å–ª—è –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–∞—Ä–æ–ª—è
                                    this.showSeedPhraseModal(response.data.seed_phrase);
                                });
                            } else {
                                // –Ø–∫—â–æ –ø–∞—Ä–æ–ª—å –≤–∂–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ, –ø–æ–∫–∞–∑—É—î–º–æ —Å–ø–æ—á–∞—Ç–∫—É –≤—ñ–∫–Ω–æ –≤–≤–æ–¥—É –ø–∞—Ä–æ–ª—è
                                this.showEnterPasswordModal(password => {
                                    // –ü–æ–∫–∞–∑—É—î–º–æ —Å—ñ–¥-—Ñ—Ä–∞–∑—É –ø—ñ—Å–ª—è –≤–≤–æ–¥—É –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –ø–∞—Ä–æ–ª—è
                                    this.showSeedPhraseModal(response.data.seed_phrase);
                                });
                            }
                        } else if (response.status === 'password_required') {
                            // –Ø–∫—â–æ –ø–æ—Ç—Ä—ñ–±–µ–Ω –ø–∞—Ä–æ–ª—å, –ø–æ–∫–∞–∑—É—î–º–æ –≤—ñ–∫–Ω–æ –≤–≤–µ–¥–µ–Ω–Ω—è –ø–∞—Ä–æ–ª—è
                            this.showEnterPasswordModal(password => {
                                // –û—Ç—Ä–∏–º—É—î–º–æ —Å—ñ–¥-—Ñ—Ä–∞–∑—É –∑ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è–º –ø–∞—Ä–æ–ª—è
                                this.getSeedPhrase(password)
                                    .then(seedPhrase => {
                                        this.showSeedPhraseModal(seedPhrase);
                                    })
                                    .catch(error => {
                                        console.error("‚ùå SETTINGS: –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è SID —Ñ—Ä–∞–∑–∏", error);
                                        showToast("–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è SID —Ñ—Ä–∞–∑–∏: " + error.message, true);
                                    });
                            });
                        } else {
                            console.error("‚ùå SETTINGS: –ù–µ–æ—á—ñ–∫—É–≤–∞–Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å API", response);

                            // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Ñ—ñ–∫—Ç–∏–≤–Ω—É —Ñ—Ä–∞–∑—É –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—ó
                            const fakeSeedPhrase = "solve notable quick pluck tribe dinosaur cereal casino rail media final curve";

                            // –Ø–∫—â–æ –ø–∞—Ä–æ–ª—å –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ, –ø–æ–∫–∞–∑—É—î–º–æ —Å–ø–æ—á–∞—Ç–∫—É –≤—ñ–∫–Ω–æ –¥–ª—è –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–∞—Ä–æ–ª—è
                            if (!hasPassword) {
                                this.showSetPasswordModal(password => {
                                    this.showSeedPhraseModal(fakeSeedPhrase);
                                });
                            } else {
                                this.showEnterPasswordModal(password => {
                                    this.showSeedPhraseModal(fakeSeedPhrase);
                                });
                            }
                        }

                        _isProcessing = false;
                    })
                    .catch(error => {
                        // –û–±–æ–≤'—è–∑–∫–æ–≤–æ –ø—Ä–∏—Ö–æ–≤—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
                        hideLoading();

                        // –û—á–∏—â–∞—î–º–æ —Ç–∞–π–º–∞—É—Ç
                        if (_loadingTimeout) {
                            clearTimeout(_loadingTimeout);
                            _loadingTimeout = null;
                        }

                        console.error("‚ùå SETTINGS: –ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å—É SID —Ñ—Ä–∞–∑–∏", error);

                        // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Ñ—ñ–∫—Ç–∏–≤–Ω—É —Ñ—Ä–∞–∑—É –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—ó
                        const fakeSeedPhrase = "solve notable quick pluck tribe dinosaur cereal casino rail media final curve";

                        // –Ø–∫—â–æ –ø–∞—Ä–æ–ª—å –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ, –ø–æ–∫–∞–∑—É—î–º–æ —Å–ø–æ—á–∞—Ç–∫—É –≤—ñ–∫–Ω–æ –¥–ª—è –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–∞—Ä–æ–ª—è
                        if (!hasPassword) {
                            this.showSetPasswordModal(password => {
                                this.showSeedPhraseModal(fakeSeedPhrase);
                            });
                        } else {
                            this.showEnterPasswordModal(password => {
                                this.showSeedPhraseModal(fakeSeedPhrase);
                            });
                        }

                        _isProcessing = false;
                    });
            } catch (error) {
                // –û–±–æ–≤'—è–∑–∫–æ–≤–æ –ø—Ä–∏—Ö–æ–≤—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —É –≤–∏–ø–∞–¥–∫—É –ø–æ–º–∏–ª–∫–∏
                hideLoading();

                // –û—á–∏—â–∞—î–º–æ —Ç–∞–π–º–∞—É—Ç
                if (_loadingTimeout) {
                    clearTimeout(_loadingTimeout);
                    _loadingTimeout = null;
                }

                console.error("‚ùå SETTINGS: –ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Ç—ñ SID —Ñ—Ä–∞–∑–∏:", error);

                // –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É
                showToast("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Ç—ñ SID —Ñ—Ä–∞–∑–∏", true);

                // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Ñ—ñ–∫—Ç–∏–≤–Ω—É —Ñ—Ä–∞–∑—É
                const fakeSeedPhrase = "solve notable quick pluck tribe dinosaur cereal casino rail media final curve";

                // –Ø–∫—â–æ –ø–∞—Ä–æ–ª—å –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ, –ø–æ–∫–∞–∑—É—î–º–æ —Å–ø–æ—á–∞—Ç–∫—É –≤—ñ–∫–Ω–æ –¥–ª—è –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–∞—Ä–æ–ª—è
                if (!hasPassword) {
                    this.showSetPasswordModal(password => {
                        this.showSeedPhraseModal(fakeSeedPhrase);
                    });
                } else {
                    this.showEnterPasswordModal(password => {
                        this.showSeedPhraseModal(fakeSeedPhrase);
                    });
                }

                _isProcessing = false;
            }
        }
    };

    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –ø—ñ—Å–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è DOM
    document.addEventListener('DOMContentLoaded', function() {
        console.log("‚öôÔ∏è SETTINGS: DOMContentLoaded");

        // –î–æ–¥–∞—î–º–æ –ø—Ä–µ–º—ñ—É–º-—Å—Ç–∏–ª—ñ
        addPremiumStyles();

        // –§—ñ–∫—Å—É—î–º–æ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—é
        fixNavigation();

        // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –∫–Ω–æ–ø–∫—É –ø–æ–∫–∞–∑—É —Å—ñ–¥-—Ñ—Ä–∞–∑–∏
        const showSeedBtn = document.getElementById('show-seed-phrase');
        if (showSeedBtn) {
            console.log("‚öôÔ∏è SETTINGS: –ó–Ω–∞–π–¥–µ–Ω–æ –∫–Ω–æ–ø–∫—É –ø–æ–∫–∞–∑—É SID —Ñ—Ä–∞–∑–∏");

            // –ó–∞–º—ñ–Ω—è—î–º–æ –∫–Ω–æ–ø–∫—É –Ω–∞ –Ω–æ–≤—É –¥–ª—è –æ—á–∏—â–µ–Ω–Ω—è –≤—Å—ñ—Ö –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤
            const newShowSeedBtn = showSeedBtn.cloneNode(true);
            showSeedBtn.parentNode.replaceChild(newShowSeedBtn, showSeedBtn);

            // –î–æ–¥–∞—î–º–æ –Ω–æ–≤–∏–π –æ–±—Ä–æ–±–Ω–∏–∫
            newShowSeedBtn.addEventListener('click', function(event) {
                console.log("‚öôÔ∏è SETTINGS: –ö–ª—ñ–∫ –Ω–∞ –∫–Ω–æ–ø—Ü—ñ –ø–æ–∫–∞–∑—É SID —Ñ—Ä–∞–∑–∏");
                event.preventDefault();

                // –ü—Ä–∏—Ö–æ–≤—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø—Ä–∏ –∫–æ–∂–Ω–æ–º—É –∫–ª—ñ–∫—É, —â–æ–± —É–Ω–∏–∫–Ω—É—Ç–∏ –∑–∞–≤–∏—Å–∞–Ω–Ω—è
                if (window.hideLoading) window.hideLoading();

                // –í–∏–∫–ª–∏–∫–∞—î–º–æ –æ–±—Ä–æ–±–∫—É –ø–æ–∫–∞–∑—É —Å—ñ–¥-—Ñ—Ä–∞–∑–∏
                window.WinixSettings.handleShowSeedPhrase();

                return false;
            });
        } else {
            console.warn("‚ö†Ô∏è SETTINGS: –ö–Ω–æ–ø–∫—É –ø–æ–∫–∞–∑—É SID —Ñ—Ä–∞–∑–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ");
        }

        // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –∫–Ω–æ–ø–∫—É —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é
        const editProfileBtn = document.getElementById('edit-profile');
        if (editProfileBtn) {
            console.log("‚öôÔ∏è SETTINGS: –ó–Ω–∞–π–¥–µ–Ω–æ –∫–Ω–æ–ø–∫—É —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é");

            // –ó–∞–º—ñ–Ω—è—î–º–æ –∫–Ω–æ–ø–∫—É –Ω–∞ –Ω–æ–≤—É –¥–ª—è –æ—á–∏—â–µ–Ω–Ω—è –≤—Å—ñ—Ö –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤
            const newEditProfileBtn = editProfileBtn.cloneNode(true);
            editProfileBtn.parentNode.replaceChild(newEditProfileBtn, editProfileBtn);

            // –î–æ–¥–∞—î–º–æ –Ω–æ–≤–∏–π –æ–±—Ä–æ–±–Ω–∏–∫
            newEditProfileBtn.addEventListener('click', function(event) {
                console.log("‚öôÔ∏è SETTINGS: –ö–ª—ñ–∫ –Ω–∞ –∫–Ω–æ–ø—Ü—ñ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é");
                event.preventDefault();

                // –í–∏–∫–ª–∏–∫–∞—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é
                window.WinixSettings.showProfileEditModal();

                return false;
            });
        } else {
            console.warn("‚ö†Ô∏è SETTINGS: –ö–Ω–æ–ø–∫—É —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ");
        }

        // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –∫–Ω–æ–ø–∫—É –ª—ñ—Ü–µ–Ω–∑—ñ—ó
        const licenseBtn = document.getElementById('license-button');
        if (licenseBtn) {
            console.log("‚öôÔ∏è SETTINGS: –ó–Ω–∞–π–¥–µ–Ω–æ –∫–Ω–æ–ø–∫—É –ª—ñ—Ü–µ–Ω–∑—ñ—ó");

            // –ó–∞–º—ñ–Ω—è—î–º–æ –∫–Ω–æ–ø–∫—É –Ω–∞ –Ω–æ–≤—É –¥–ª—è –æ—á–∏—â–µ–Ω–Ω—è –≤—Å—ñ—Ö –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤
            const newLicenseBtn = licenseBtn.cloneNode(true);
            licenseBtn.parentNode.replaceChild(newLicenseBtn, licenseBtn);

            // –î–æ–¥–∞—î–º–æ –Ω–æ–≤–∏–π –æ–±—Ä–æ–±–Ω–∏–∫
            newLicenseBtn.addEventListener('click', function(event) {
                console.log("‚öôÔ∏è SETTINGS: –ö–ª—ñ–∫ –Ω–∞ –∫–Ω–æ–ø—Ü—ñ –ª—ñ—Ü–µ–Ω–∑—ñ—ó");
                event.preventDefault();

                // –í–∏–∫–ª–∏–∫–∞—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞ –ª—ñ—Ü–µ–Ω–∑—ñ—ó
                window.WinixSettings.showLicenseModal();

                return false;
            });
        } else {
            console.warn("‚ö†Ô∏è SETTINGS: –ö–Ω–æ–ø–∫—É –ª—ñ—Ü–µ–Ω–∑—ñ—ó –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ");
        }

        // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –∫–Ω–æ–ø–∫—É —É–≥–æ–¥–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        const agreementBtn = document.getElementById('agreement-button');
        if (agreementBtn) {
            console.log("‚öôÔ∏è SETTINGS: –ó–Ω–∞–π–¥–µ–Ω–æ –∫–Ω–æ–ø–∫—É —É–≥–æ–¥–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞");

            // –ó–∞–º—ñ–Ω—è—î–º–æ –∫–Ω–æ–ø–∫—É –Ω–∞ –Ω–æ–≤—É –¥–ª—è –æ—á–∏—â–µ–Ω–Ω—è –≤—Å—ñ—Ö –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤
            const newAgreementBtn = agreementBtn.cloneNode(true);
            agreementBtn.parentNode.replaceChild(newAgreementBtn, agreementBtn);

            // –î–æ–¥–∞—î–º–æ –Ω–æ–≤–∏–π –æ–±—Ä–æ–±–Ω–∏–∫
            newAgreementBtn.addEventListener('click', function(event) {
                console.log("‚öôÔ∏è SETTINGS: –ö–ª—ñ–∫ –Ω–∞ –∫–Ω–æ–ø—Ü—ñ —É–≥–æ–¥–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞");
                event.preventDefault();

                // –í–∏–∫–ª–∏–∫–∞—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞ —É–≥–æ–¥–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
                window.WinixSettings.showAgreementModal();

                return false;
            });
        } else {
            console.warn("‚ö†Ô∏è SETTINGS: –ö–Ω–æ–ø–∫—É —É–≥–æ–¥–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ");
        }

        // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –∫–ª—ñ–∫—ñ–≤ –¥–ª—è –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó
        document.querySelectorAll('.nav-item').forEach(item => {
            item.addEventListener('click', function() {
                const section = this.getAttribute('data-section');
                if (section) {
                    // –î–æ–¥–∞—î–º–æ –∞–Ω—ñ–º–∞—Ü—ñ—é –ø—Ä–µ–º—ñ—É–º –ø–µ—Ä–µ—Ö–æ–¥—É
                    const transitionOverlay = document.createElement('div');
                    transitionOverlay.className = 'page-transition-overlay';
                    transitionOverlay.style.position = 'fixed';
                    transitionOverlay.style.top = '0';
                    transitionOverlay.style.left = '0';
                    transitionOverlay.style.width = '100%';
                    transitionOverlay.style.height = '100%';
                    transitionOverlay.style.backgroundColor = 'rgba(0, 0, 0, 0.5)';
                    transitionOverlay.style.backdropFilter = 'blur(10px)';
                    transitionOverlay.style.zIndex = '9999';
                    transitionOverlay.style.opacity = '0';
                    transitionOverlay.style.transition = 'opacity 0.3s ease';

                    document.body.appendChild(transitionOverlay);

                    // –ê–Ω—ñ–º—É—î–º–æ –ø–µ—Ä–µ—Ö—ñ–¥
                    setTimeout(() => {
                        transitionOverlay.style.opacity = '1';

                        setTimeout(() => {
                            // –ü–µ—Ä–µ—Ö–æ–¥–∏–º–æ –Ω–∞ –Ω–æ–≤—É —Å—Ç–æ—Ä—ñ–Ω–∫—É
                            window.location.href = section === 'home' ? 'original-index.html' : `${section}.html`;
                        }, 300);
                    }, 10);
                }
            });
        });

        // –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ —É—Å–ø—ñ—à–Ω—É —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—é
        setTimeout(() => {
            console.log("‚öôÔ∏è SETTINGS: –í—ñ–¥–∫–ª–∞–¥–µ–Ω–∏–π –ø–æ–∫–∞–∑ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ —É—Å–ø—ñ—à–Ω—É —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—é");
            // –§—É–Ω–∫—Ü—ñ—è showToast –º–æ–∂–µ –±—É—Ç–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –Ω–∞ —Ü—å–æ–º—É –µ—Ç–∞–ø—ñ
            if (typeof showToast === 'function') {
                showToast("–ú–æ–¥—É–ª—å –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å —É—Å–ø—ñ—à–Ω–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ");
            }
        }, 1500);

        console.log("‚öôÔ∏è SETTINGS: DOMContentLoaded - –æ–±—Ä–æ–±–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞");
    });

    // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è Escape, —â–æ–± –∑–∞–∫—Ä–∏–≤–∞—Ç–∏ –∞–∫—Ç–∏–≤–Ω–µ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
    document.addEventListener('keydown', function(e) {
        if (e.key === 'Escape' && _currentModal) {
            closeModal(_currentModal);
        }
    });

    // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó –ø—Ä–∏ –∑–º—ñ–Ω—ñ —Ä–æ–∑–º—ñ—Ä—É –≤—ñ–∫–Ω–∞
    window.addEventListener('resize', fixNavigation);

    // –ì–ª–æ–±–∞–ª—å–Ω–∏–π –æ–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –ø—Ä–∏–º—É—Å–æ–≤–æ–≥–æ –ø—Ä–∏—Ö–æ–≤—É–≤–∞–Ω–Ω—è –∑–∞–≤–∏—Å–ª–∏—Ö —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä—ñ–≤
    window.addEventListener('load', function() {
        console.log("‚öôÔ∏è SETTINGS: –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–æ");

        setTimeout(() => {
            console.log("‚öôÔ∏è SETTINGS: –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –∑–∞–≤–∏—Å–ª—ñ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è");

            if (window.hideLoading) window.hideLoading();

            const spinner = document.getElementById('premium-loading-spinner') ||
                          document.getElementById('loading-spinner');

            if (spinner && (spinner.style.display === 'flex' || spinner.classList.contains('show'))) {
                console.warn("‚ö†Ô∏è SETTINGS: –í–∏—è–≤–ª–µ–Ω–æ –∑–∞–≤–∏—Å–∞—é—á–∏–π —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è!");

                if (typeof window.hideLoading === 'function') {
                    window.hideLoading();
                } else {
                    spinner.style.display = 'none';
                    spinner.classList.remove('show');
                }
            }

            // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            const userIdElement = document.getElementById('user-id');
            const profileName = document.getElementById('profile-name');

            if (userIdElement && (!userIdElement.textContent || userIdElement.textContent === 'undefined')) {
                const userId = localStorage.getItem('telegram_user_id') || '7066583465';
                userIdElement.textContent = userId;
            }

            if (profileName && (!profileName.textContent || profileName.textContent === 'undefined')) {
                const username = localStorage.getItem('username') || 'WINIX User';
                profileName.textContent = username;
            }

            // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∞–≤–∞—Ç–∞—Ä—ñ–≤
            const profileAvatar = document.getElementById('profile-avatar');
            const profileAvatarLarge = document.getElementById('profile-avatar-large');
            const avatarId = localStorage.getItem('avatarId') || '1';
            const username = localStorage.getItem('username') || 'WINIX User';

            // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∞–≤–∞—Ç–∞—Ä—É
            const updateAvatar = (element, avatarId) => {
                if (!element) return;

                // –û—á–∏—â–∞—î–º–æ –≤–º—ñ—Å—Ç
                element.innerHTML = '';

                // –°—Ç–≤–æ—Ä—é—î–º–æ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
                const img = document.createElement('img');
                img.src = `assets/avatars/${avatarId}.png`;
                img.alt = username;
                img.onerror = () => {
                    // –Ø–∫—â–æ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–∏–ª–æ—Å—è, –ø–æ–∫–∞–∑—É—î–º–æ –ø–µ—Ä—à—É –ª—ñ—Ç–µ—Ä—É —ñ–º–µ–Ω—ñ
                    element.textContent = username.charAt(0).toUpperCase();
                };

                element.appendChild(img);
            };

            // –û–Ω–æ–≤–ª—é—î–º–æ –∞–≤–∞—Ç–∞—Ä–∏
            updateAvatar(profileAvatar, avatarId);
            updateAvatar(profileAvatarLarge, avatarId);
        }, 1000);
    });

    // –Ø–∫—â–æ DOM –≤–∂–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ, —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏
    if (document.readyState === 'complete' || document.readyState === 'interactive') {
        console.log("‚öôÔ∏è SETTINGS: –î–æ–∫—É–º–µ–Ω—Ç –≤–∂–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ, –º–∏—Ç—Ç—î–≤–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è");

        // –î–æ–¥–∞—î–º–æ –ø—Ä–µ–º—ñ—É–º-—Å—Ç–∏–ª—ñ
        addPremiumStyles();

        // –§—ñ–∫—Å—É—î–º–æ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—é
        fixNavigation();

        // –ó–Ω–∞—Ö–æ–¥–∏–º–æ —ñ –ø—ñ–¥–∫–ª—é—á–∞—î–º–æ –∫–Ω–æ–ø–∫—É –ø–æ–∫–∞–∑—É —Å—ñ–¥-—Ñ—Ä–∞–∑–∏
        const showSeedBtn = document.getElementById('show-seed-phrase');
        if (showSeedBtn) {
            console.log("‚öôÔ∏è SETTINGS: –ó–Ω–∞–π–¥–µ–Ω–æ –∫–Ω–æ–ø–∫—É –ø–æ–∫–∞–∑—É SID —Ñ—Ä–∞–∑–∏");

            // –ó–∞–º—ñ–Ω—è—î–º–æ –∫–Ω–æ–ø–∫—É –Ω–∞ –Ω–æ–≤—É –¥–ª—è –æ—á–∏—â–µ–Ω–Ω—è –≤—Å—ñ—Ö –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤
            const newShowSeedBtn = showSeedBtn.cloneNode(true);
            showSeedBtn.parentNode.replaceChild(newShowSeedBtn, showSeedBtn);

            // –î–æ–¥–∞—î–º–æ –Ω–æ–≤–∏–π –æ–±—Ä–æ–±–Ω–∏–∫
            newShowSeedBtn.addEventListener('click', function(event) {
                console.log("‚öôÔ∏è SETTINGS: –ö–ª—ñ–∫ –Ω–∞ –∫–Ω–æ–ø—Ü—ñ –ø–æ–∫–∞–∑—É SID —Ñ—Ä–∞–∑–∏");
                event.preventDefault();

                // –ü—Ä–∏—Ö–æ–≤—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø—Ä–∏ –∫–æ–∂–Ω–æ–º—É –∫–ª—ñ–∫—É, —â–æ–± —É–Ω–∏–∫–Ω—É—Ç–∏ –∑–∞–≤–∏—Å–∞–Ω–Ω—è
                if (window.hideLoading) window.hideLoading();

                // –í–∏–∫–ª–∏–∫–∞—î–º–æ –æ–±—Ä–æ–±–∫—É –ø–æ–∫–∞–∑—É —Å—ñ–¥-—Ñ—Ä–∞–∑–∏
                window.WinixSettings.handleShowSeedPhrase();

                return false;
            });
        }

        // –ó–Ω–∞—Ö–æ–¥–∏–º–æ —ñ –ø—ñ–¥–∫–ª—é—á–∞—î–º–æ –∫–Ω–æ–ø–∫—É —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é
        const editProfileBtn = document.getElementById('edit-profile');
        if (editProfileBtn) {
            console.log("‚öôÔ∏è SETTINGS: –ó–Ω–∞–π–¥–µ–Ω–æ –∫–Ω–æ–ø–∫—É —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é");

            // –ó–∞–º—ñ–Ω—è—î–º–æ –∫–Ω–æ–ø–∫—É –Ω–∞ –Ω–æ–≤—É –¥–ª—è –æ—á–∏—â–µ–Ω–Ω—è –≤—Å—ñ—Ö –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤
            const newEditProfileBtn = editProfileBtn.cloneNode(true);
            editProfileBtn.parentNode.replaceChild(newEditProfileBtn, editProfileBtn);

            // –î–æ–¥–∞—î–º–æ –Ω–æ–≤–∏–π –æ–±—Ä–æ–±–Ω–∏–∫
            newEditProfileBtn.addEventListener('click', function(event) {
                console.log("‚öôÔ∏è SETTINGS: –ö–ª—ñ–∫ –Ω–∞ –∫–Ω–æ–ø—Ü—ñ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é");
                event.preventDefault();

                // –í–∏–∫–ª–∏–∫–∞—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é
                window.WinixSettings.showProfileEditModal();

                return false;
            });
        }

        // –ó–Ω–∞—Ö–æ–¥–∏–º–æ —ñ –ø—ñ–¥–∫–ª—é—á–∞—î–º–æ –∫–Ω–æ–ø–∫—É –ª—ñ—Ü–µ–Ω–∑—ñ—ó
        const licenseBtn = document.getElementById('license-button');
        if (licenseBtn) {
            console.log("‚öôÔ∏è SETTINGS: –ó–Ω–∞–π–¥–µ–Ω–æ –∫–Ω–æ–ø–∫—É –ª—ñ—Ü–µ–Ω–∑—ñ—ó");

            // –ó–∞–º—ñ–Ω—è—î–º–æ –∫–Ω–æ–ø–∫—É –Ω–∞ –Ω–æ–≤—É –¥–ª—è –æ—á–∏—â–µ–Ω–Ω—è –≤—Å—ñ—Ö –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤
            const newLicenseBtn = licenseBtn.cloneNode(true);
            licenseBtn.parentNode.replaceChild(newLicenseBtn, licenseBtn);

            // –î–æ–¥–∞—î–º–æ –Ω–æ–≤–∏–π –æ–±—Ä–æ–±–Ω–∏–∫
            newLicenseBtn.addEventListener('click', function(event) {
                console.log("‚öôÔ∏è SETTINGS: –ö–ª—ñ–∫ –Ω–∞ –∫–Ω–æ–ø—Ü—ñ –ª—ñ—Ü–µ–Ω–∑—ñ—ó");
                event.preventDefault();

                // –í–∏–∫–ª–∏–∫–∞—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞ –ª—ñ—Ü–µ–Ω–∑—ñ—ó
                window.WinixSettings.showLicenseModal();

                return false;
            });
        }

        // –ó–Ω–∞—Ö–æ–¥–∏–º–æ —ñ –ø—ñ–¥–∫–ª—é—á–∞—î–º–æ –∫–Ω–æ–ø–∫—É —É–≥–æ–¥–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        const agreementBtn = document.getElementById('agreement-button');
        if (agreementBtn) {
            console.log("‚öôÔ∏è SETTINGS: –ó–Ω–∞–π–¥–µ–Ω–æ –∫–Ω–æ–ø–∫—É —É–≥–æ–¥–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞");

            // –ó–∞–º—ñ–Ω—è—î–º–æ –∫–Ω–æ–ø–∫—É –Ω–∞ –Ω–æ–≤—É –¥–ª—è –æ—á–∏—â–µ–Ω–Ω—è –≤—Å—ñ—Ö –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤
            const newAgreementBtn = agreementBtn.cloneNode(true);
            agreementBtn.parentNode.replaceChild(newAgreementBtn, agreementBtn);

            // –î–æ–¥–∞—î–º–æ –Ω–æ–≤–∏–π –æ–±—Ä–æ–±–Ω–∏–∫
            newAgreementBtn.addEventListener('click', function(event) {
                console.log("‚öôÔ∏è SETTINGS: –ö–ª—ñ–∫ –Ω–∞ –∫–Ω–æ–ø—Ü—ñ —É–≥–æ–¥–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞");
                event.preventDefault();

                // –í–∏–∫–ª–∏–∫–∞—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞ —É–≥–æ–¥–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
                window.WinixSettings.showAgreementModal();

                return false;
            });
        }
    }

    console.log("‚úÖ SETTINGS: –ú–æ–¥—É–ª—å –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å —É—Å–ø—ñ—à–Ω–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ");
})();