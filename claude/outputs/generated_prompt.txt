### PROMPT: Improve UI and Backend Integration

You are working on a project with two parts:
1. **General HTML page (old version)**: This page has the basic structure with embedded JS code. However, it is not integrated with the backend.
2. **Settings JS code**: The new JS code is designed to handle communication with the backend.

**General HTML & JS Code:**
\`\`\`html

<html lang="uk">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <title>WINIX - –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è</title>

    <script src="js/telegram-web-app.js"></script>
    <script src="js/telegram-web-app.js"></script>
<script>
// –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Ç–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ Telegram WebApp
(function() {
  console.log("üîÑ –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è Telegram WebApp...");

  // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —Å–∫—Ä–∏–ø—Ç –∑–∞–≤–∞–Ω—Ç–∞–∂–∏–≤—Å—è
  if (!window.Telegram || !window.Telegram.WebApp) {
    console.error("‚ùå Telegram WebApp API –Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ —à–ª—è—Ö –¥–æ —Ñ–∞–π–ª—É.");
    return;
  }

  try {
    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ Telegram WebApp
    window.Telegram.WebApp.ready();
    window.Telegram.WebApp.expand();
    console.log("‚úÖ Telegram WebApp —É—Å–ø—ñ—à–Ω–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ");

    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    if (window.Telegram.WebApp.initDataUnsafe && window.Telegram.WebApp.initDataUnsafe.user) {
      const userId = window.Telegram.WebApp.initDataUnsafe.user.id.toString();
      localStorage.setItem('telegram_user_id', userId);
      console.log("‚úÖ –û—Ç—Ä–∏–º–∞–Ω–æ Telegram ID:", userId);
    } else {
      console.warn("‚ö†Ô∏è –î–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤—ñ–¥—Å—É—Ç–Ω—ñ –≤ Telegram WebApp");
    }
  } catch (e) {
    console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó Telegram WebApp:", e);
  }
})();
</script>
<!-- –ü–æ—Ç—ñ–º —É—Å—ñ —ñ–Ω—à—ñ —Å–∫—Ä–∏–ø—Ç–∏ -->
    <script src="js/api.js"></script>
    <script src="js/auth.js"></script>
    <script src="js/language.js"></script>
    <script src="js/core.js"></script>

    <style>
        :root {
            /* –û—Å–Ω–æ–≤–Ω—ñ –∫–æ–ª—å–æ—Ä–∏ –¥–ª—è —Ç–µ–º–∏ */
            --primary-gradient: linear-gradient(90deg, #1A1A2E, #0F3460, #00C9A7);
            --secondary-color: #4eb5f7;
            --bg-card: rgba(30, 39, 70, 0.8);
            --bg-item: rgba(20, 30, 60, 0.7);
            --bg-active: rgba(0, 201, 167, 0.3);
            --text-color: #fff;
            --text-secondary: rgba(255, 255, 255, 0.7);
            --shadow-color: rgba(0, 0, 0, 0.5);
            --glow-color: rgba(0, 201, 167, 0.5);
            --border-color: rgba(78, 181, 247, 0.2);
            --positive-color: #4caf50;
            --negative-color: #f44336;
            --neutral-color: #9e9e9e;
            --accent-color: #ff9800;
            --premium-color: #ffedb2;

            /* –û—Å–Ω–æ–≤–Ω—ñ —Ä–æ–∑–º—ñ—Ä–∏ */
            --container-max-width: 37.5rem; /* 600px */
            --header-height: 3.5rem; /* 56px */
            --nav-height: 4.5rem; /* 72px */
            --bottom-padding: 6rem; /* 96px */
            --card-border-radius: 1.5rem; /* 24px */
            --item-border-radius: 0.75rem; /* 12px */
        }

        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
        }

        body {
            margin: 0;
            padding: 0;
            font-family: -apple-system, BlinkMacSystemFont, Arial, sans-serif;
            color: var(--text-color);
            background: none;
            display: flex;
            justify-content: center;
            width: 100%;
            overflow-x: hidden;
        }

        .container {
            width: 100%;
            height: 100vh;
            max-width: var(--container-max-width);
            margin: 0 auto;
            box-sizing: border-box;
            padding: 0.625rem; /* 10px */
            position: relative;
            z-index: 1;
            background: url('assets/Fon.png') no-repeat center center;
            background-size: cover;
            animation: backgroundShift 15s infinite linear;
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 0.9375rem; /* 15px */
            overflow-y: auto;
            padding-bottom: var(--bottom-padding);
            -webkit-overflow-scrolling: touch;
            scrollbar-width: thin;
            scrollbar-color: var(--secondary-color) transparent;
        }

        .container::-webkit-scrollbar {
            width: 0.375rem; /* 6px */
        }

        .container::-webkit-scrollbar-track {
            background: transparent;
        }

        .container::-webkit-scrollbar-thumb {
            background-color: var(--secondary-color);
            border-radius: 1.25rem; /* 20px */
        }

        @keyframes backgroundShift {
            0% { background-position: 0% 0%; }
            50% { background-position: 10% 10%; }
            100% { background-position: 0% 0%; }
        }

        .header {
            background: var(--primary-gradient);
            border-radius: 1.5625rem; /* 25px */
            padding: 0.5rem 1rem; /* 8px 16px */
            display: flex;
            justify-content: space-between;
            align-items: center;
            box-shadow: 0 0.125rem 0.625rem var(--shadow-color);
            width: 100%;
            height: var(--header-height);
            margin-bottom: 0.9375rem; /* 15px */
            position: sticky;
            top: 0.3125rem; /* 5px */
            z-index: 10;
        }

        .header .profile-avatar {
            width: 2.5rem; /* 40px */
            height: 2.5rem;
            border-radius: 50%;
            background: linear-gradient(135deg, #2D6EB6, #52C0BD);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.25rem; /* 20px */
            font-weight: bold;
            color: white;
            box-shadow: 0 0 0.3125rem rgba(0, 201, 167, 0.5); /* 0 0 5px */
            cursor: pointer;
            transition: transform 0.2s ease;
        }

        .header .profile-avatar:hover {
            transform: scale(1.1);
        }

        .header .profile-avatar img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            border-radius: 50%;
        }

        .header .user-profile {
            display: flex;
            align-items: center;
            gap: 0.5rem; /* 8px */
            cursor: pointer;
        }

        .header .user-id-container {
            display: flex;
            flex-direction: column;
            align-items: flex-start;
            font-size: 0.75rem; /* 12px */
        }

        .header .user-id-label {
            color: var(--text-secondary);
        }

        .header .user-id-value {
            font-weight: bold;
        }

        .header .winix-title {
            font-family: 'SF Pro Display', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
            font-size: 1.5rem; /* 24px */
            font-weight: bold;
            letter-spacing: 0.125rem; /* 2px */
            color: var(--text-color);
            text-shadow: 0 0 0.3125rem rgba(0, 201, 167, 0.3);
            animation: glow 11s infinite ease-in-out;
            text-align: center;
            flex-grow: 1;
        }

        @keyframes glow {
            0% { text-shadow: 0 0 0.3125rem rgba(0, 201, 167, 0.3); }
            72% { text-shadow: 0 0 0.9375rem rgba(0, 201, 167, 0.8), 0 0 1.875rem rgba(0, 201, 167, 0.5); }
            100% { text-shadow: 0 0 0.3125rem rgba(0, 201, 167, 0.3); }
        }

        .header .balance-container {
            display: flex;
            gap: 0.875rem; /* 14px */
            align-items: center;
        }

        .header .jeton-balance, .header .winix-balance {
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        .header .jeton-balance .balance-value, .header .winix-balance .balance-value {
            font-size: 0.875rem; /* 14px */
            font-weight: bold;
        }

        .header .jeton-balance .balance-label, .header .winix-balance .balance-label {
            font-size: 0.75rem; /* 12px */
            font-weight: normal;
        }

        .header .jeton-icon {
            display: none;
        }

        .general-container {
            width: 100%;
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 0.9375rem; /* 15px */
        }

        .general-title {
            font-size: 1.625rem; /* 26px */
            font-weight: bold;
            margin-bottom: 1.25rem; /* 20px */
            text-align: center;
            color: var(--text-color);
            text-shadow: 0 0 0.625rem rgba(0, 201, 167, 0.7); /* 0 0 10px */
            letter-spacing: 0.0625rem; /* 1px */
        }

        .general-card {
            width: 100%;
            background: var(--bg-card);
            border-radius: var(--card-border-radius);
            padding: 0.9375rem; /* 15px */
            margin-bottom: 0.9375rem; /* 15px */
            box-shadow: 0 0.25rem 0.625rem rgba(0, 0, 0, 0.3); /* 0 4px 10px */
        }

        .language-section {
            display: flex;
            flex-direction: column;
            gap: 0.625rem; /* 10px */
        }

        .language-title {
            font-size: 1.125rem; /* 18px */
            font-weight: bold;
            color: var(--text-color);
            margin-bottom: 0.625rem; /* 10px */
        }

        .language-options {
            display: flex;
            justify-content: space-between;
            gap: 0.625rem; /* 10px */
        }

        .language-option {
            flex: 1;
            text-align: center;
            padding: 0.75rem; /* 12px */
            background: var(--bg-item);
            border-radius: 0.9375rem; /* 15px */
            cursor: pointer;
            transition: all 0.3s ease;
            border: 0.0625rem solid transparent; /* 1px */
        }

        .language-option.active {
            background: linear-gradient(90deg, #2D6EB6, #52C0BD);
            box-shadow: 0 0 0.9375rem rgba(78, 181, 247, 0.5); /* 0 0 15px */
            border: 0.0625rem solid rgba(255, 255, 255, 0.2); /* 1px */
        }

        .language-option:hover:not(.active) {
            background: rgba(45, 110, 182, 0.3);
            border: 0.0625rem solid rgba(78, 181, 247, 0.3); /* 1px */
        }

        .language-icon {
            width: 1.875rem; /* 30px */
            height: 1.875rem;
            margin: 0 auto 0.3125rem; /* 0 auto 5px */
            border-radius: 50%;
            object-fit: cover;
            border: 0.0625rem solid rgba(255, 255, 255, 0.2); /* 1px */
        }

        .language-name {
            font-size: 0.875rem; /* 14px */
            font-weight: bold;
        }

        .profile-section {
            display: flex;
            flex-direction: column;
            gap: 0.9375rem; /* 15px */
        }

        .profile-header {
            display: flex;
            align-items: center;
            gap: 0.9375rem; /* 15px */
            margin-bottom: 0.9375rem; /* 15px */
        }

        .profile-avatar {
            width: 4.375rem; /* 70px */
            height: 4.375rem;
            border-radius: 50%;
            background: linear-gradient(135deg, #2D6EB6, #52C0BD);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.75rem; /* 28px */
            font-weight: bold;
            color: white;
            box-shadow: 0 0 0.625rem rgba(0, 0, 0, 0.5); /* 0 0 10px */
            overflow: hidden;
        }

        .profile-avatar img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        .profile-info {
            flex: 1;
        }

        .profile-name {
            font-size: 1.125rem; /* 18px */
            font-weight: bold;
            margin-bottom: 0.3125rem; /* 5px */
        }

        .profile-id {
            font-size: 0.875rem; /* 14px */
            color: var(--text-secondary);
        }

        .settings-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 0.75rem 0.9375rem; /* 12px 15px */
            background: var(--bg-item);
            border-radius: 0.9375rem; /* 15px */
            margin-bottom: 0.625rem; /* 10px */
        }

        .settings-title {
            font-size: 1rem; /* 16px */
            font-weight: 500;
        }

        .toggle-switch {
            position: relative;
            display: inline-block;
            width: 3.125rem; /* 50px */
            height: 1.625rem; /* 26px */
        }

        .toggle-switch input {
            opacity: 0;
            width: 0;
            height: 0;
        }

        .toggle-slider {
            position: absolute;
            cursor: pointer;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: rgba(120, 120, 120, 0.4);
            transition: .4s;
            border-radius: 2.125rem; /* 34px */
        }

        .toggle-slider:before {
            position: absolute;
            content: "";
            height: 1.25rem; /* 20px */
            width: 1.25rem;
            left: 0.1875rem; /* 3px */
            bottom: 0.1875rem;
            background-color: white;
            transition: .4s;
            border-radius: 50%;
        }

        input:checked + .toggle-slider {
            background-color: #00C9A7;
        }

        input:checked + .toggle-slider:before {
            transform: translateX(1.5rem); /* 24px */
        }

        .action-button {
            width: 100%;
            background: linear-gradient(90deg, #2D6EB6, #52C0BD);
            border: none;
            border-radius: 1.5625rem; /* 25px */
            padding: 0.75rem; /* 12px */
            color: white;
            font-size: 1rem; /* 16px */
            font-weight: bold;
            margin-top: 0.9375rem; /* 15px */
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 0.125rem 0.3125rem rgba(0, 0, 0, 0.3); /* 0 2px 5px */
        }

        .action-button:hover {
            transform: translateY(-0.125rem); /* -2px */
            box-shadow: 0 0.25rem 0.5rem rgba(0, 0, 0, 0.4); /* 0 4px 8px */
            background: linear-gradient(90deg, #3D7EC6, #62D0CD);
        }

        .document-modal {
            display: none;
            position: fixed;
            z-index: 100;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgba(0,0,0,0.8);
            animation: fadeIn 0.3s;
            backdrop-filter: blur(3px);
        }

        .document-modal.show {
            display: flex;
            justify-content: center;
            align-items: center;
        }

        @keyframes fadeIn {
            from {opacity: 0}
            to {opacity: 1}
        }

        .modal-content {
            background: linear-gradient(135deg, #1A1A2E, #0F3460);
            margin: 5% auto;
            padding: 1.25rem; /* 20px */
            border-radius: 1.25rem; /* 20px */
            width: 90%;
            max-width: 34.375rem; /* 550px */
            max-height: 80vh;
            overflow-y: auto;
            box-shadow: 0 0.3125rem 1.25rem rgba(0, 0, 0, 0.5); /* 0 5px 20px */
            border: 0.0625rem solid rgba(0, 201, 167, 0.2); /* 1px */
            animation: bounceIn 0.4s;
        }

        @keyframes bounceIn {
            0% { transform: scale(0.8); opacity: 0; }
            70% { transform: scale(1.05); }
            100% { transform: scale(1); opacity: 1; }
        }

        .modal-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 0.9375rem; /* 15px */
            padding-bottom: 0.625rem; /* 10px */
            border-bottom: 0.0625rem solid rgba(255, 255, 255, 0.1); /* 1px */
        }

        .modal-title {
            font-size: 1.25rem; /* 20px */
            font-weight: bold;
            color: var(--text-color);
            text-shadow: 0 0 0.3125rem rgba(0, 201, 167, 0.3);
        }

        .close-modal {
            color: #aaa;
            float: right;
            font-size: 1.75rem; /* 28px */
            font-weight: bold;
            cursor: pointer;
            transition: color 0.2s ease;
        }

        .close-modal:hover {
            color: #00C9A7;
        }

        .modal-body {
            font-size: 0.875rem; /* 14px */
            line-height: 1.6;
            color: #ddd;
        }

        .modal-body input {
            width: 100%;
            padding: 0.625rem 0.75rem; /* 10px 12px */
            margin-bottom: 0.9375rem; /* 15px */
            border-radius: 0.625rem; /* 10px */
            border: 0.0625rem solid rgba(0, 201, 167, 0.3); /* 1px */
            background: rgba(20, 30, 60, 0.6);
            color: var(--text-color);
            font-size: 0.9375rem; /* 15px */
            transition: all 0.3s ease;
        }

        .modal-body input:focus {
            outline: none;
            border-color: rgba(0, 201, 167, 0.8);
            box-shadow: 0 0 0.625rem rgba(0, 201, 167, 0.4);
        }

        .modal-body input.error {
            border-color: #f44336;
            animation: shake 0.5s;
        }

        @keyframes shake {
            0%, 100% { transform: translateX(0); }
            10%, 30%, 50%, 70%, 90% { transform: translateX(-5px); }
            20%, 40%, 60%, 80% { transform: translateX(5px); }
        }

        .modal-body label {
            display: block;
            margin-bottom: 0.3125rem; /* 5px */
            font-weight: bold;
            color: #f0f0f0;
        }

        .modal-footer {
            margin-top: 1.25rem; /* 20px */
            text-align: right;
        }

        .modal-button {
            background: linear-gradient(90deg, #2D6EB6, #52C0BD);
            border: none;
            border-radius: 1.25rem; /* 20px */
            padding: 0.625rem 1.25rem; /* 10px 20px */
            color: white;
            font-size: 1rem; /* 16px */
            font-weight: bold;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 0.1875rem 0.5rem rgba(0, 0, 0, 0.4);
        }

        .modal-button:hover {
            background: linear-gradient(90deg, #3D7EC6, #62D0CD);
            transform: translateY(-0.125rem); /* -2px */
            box-shadow: 0 0.25rem 0.75rem rgba(0, 0, 0, 0.5);
        }

        .modal-button:active {
            transform: scale(0.98);
        }

        .avatar-options {
            display: flex;
            flex-wrap: wrap;
            gap: 0.625rem; /* 10px */
            margin-top: 0.625rem; /* 10px */
            justify-content: center;
        }

        .avatar-option {
            width: 3.125rem; /* 50px */
            height: 3.125rem;
            border-radius: 50%;
            cursor: pointer;
            border: 0.125rem solid transparent; /* 2px */
            transition: all 0.3s ease;
            object-fit: cover;
        }

        .avatar-option.selected {
            border: 0.125rem solid #00C9A7; /* 2px */
            transform: scale(1.1);
        }

        .avatar-option:hover {
            border: 0.125rem solid rgba(0, 201, 167, 0.5); /* 2px */
            transform: scale(1.05);
        }

        .seed-modal-content {
            background: linear-gradient(135deg, #1A1A2E, #0F3460);
            margin: 5% auto;
            padding: 1.5625rem; /* 25px */
            border-radius: 1.25rem; /* 20px */
            width: 90%;
            max-width: 31.25rem; /* 500px */
            box-shadow: 0 0.3125rem 1.25rem rgba(0, 0, 0, 0.5); /* 0 5px 20px */
            position: relative;
            border: 0.0625rem solid rgba(0, 201, 167, 0.1); /* 1px */
        }

        .restore-card {
            width: 100%;
            background: var(--bg-card);
            border-radius: var(--card-border-radius);
            padding: 0.9375rem; /* 15px */
            box-shadow: 0 0.25rem 0.625rem rgba(0, 0, 0, 0.3); /* 0 4px 10px */
        }

        .restore-title {
            font-size: 1.5rem; /* 24px */
            font-weight: bold;
            margin-bottom: 0.9375rem; /* 15px */
            text-align: center;
            color: var(--text-color);
        }

        .restore-subtitle {
            font-size: 0.875rem; /* 14px */
            color: #ffc107;
            margin-bottom: 0.9375rem; /* 15px */
            text-align: center;
        }

        .words-grid {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: 0.625rem; /* 10px */
            margin-bottom: 1.25rem; /* 20px */
        }

        .word-cell {
            background: var(--bg-item);
            border-radius: 0.625rem; /* 10px */
            padding: 0.625rem; /* 10px */
            text-align: center;
        }

        .word-number {
            color: #6c757d;
            font-size: 0.75rem; /* 12px */
        }

        .word-value {
            color: var(--text-color);
            font-size: 0.875rem; /* 14px */
            font-weight: bold;
        }

        .copy-button {
            width: 100%;
            background: linear-gradient(90deg, #2D6EB6, #52C0BD);
            border: none;
            border-radius: 0.9375rem; /* 15px */
            padding: 0.625rem; /* 10px */
            color: white;
            font-size: 1rem; /* 16px */
            cursor: pointer;
            margin-bottom: 0.9375rem; /* 15px */
        }

        .copy-button:hover {
            background: linear-gradient(90deg, #3D7EC6, #62D0CD);
        }

        .seed-continue-button {
            width: 100%;
            background: linear-gradient(90deg, #2D6EB6, #52C0BD);
            border: none;
            border-radius: 0.75rem; /* 12px */
            padding: 0.9375rem; /* 15px */
            color: white;
            font-size: 1rem; /* 16px */
            font-weight: bold;
            cursor: pointer;
        }

        .seed-continue-button:hover {
            background: linear-gradient(90deg, #3D7EC6, #62D0CD);
        }

        .nav-bar {
            background: var(--primary-gradient);
            border-radius: 1.5625rem; /* 25px */
            padding: 0.5rem; /* 8px */
            display: flex;
            justify-content: space-around;
            width: 90%;
            max-width: 33.75rem; /* 540px */
            height: var(--nav-height);
            box-shadow: 0 0.25rem 0.75rem var(--shadow-color); /* 0 4px 12px */
            position: fixed;
            bottom: 1.875rem; /* 30px - –ø—ñ–¥–Ω—è–ª–∏ –≤–≥–æ—Ä—É –Ω–∞ 20px –∑ –ø–æ—á–∞—Ç–∫–æ–≤–∏—Ö 10px */
            left: 50%;
            transform: translateX(-50%);
            z-index: 10;
        }

        .nav-item {
            text-align: center;
            color: var(--text-color);
            font-size: 0.875rem; /* 14px */
            cursor: pointer;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            width: 20%;
            position: relative;
        }

        .nav-item .icon-wrapper {
            width: 3.75rem; /* 60px */
            height: 3.75rem;
            background: rgba(255, 255, 255, 0.2);
            border-radius: 0.75rem; /* 12px */
            display: flex;
            align-items: center;
            justify-content: center;
            margin-bottom: 0.3125rem; /* 5px */
            box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.2);
            transition: transform 0.3s ease;
        }

        .nav-item.active .icon-wrapper {
            background: var(--bg-active);
            box-shadow: 0 0 0.9375rem var(--glow-color);
        }

        .nav-item img {
            width: 2.1875rem; /* 35px */
            height: 2.1875rem;
            display: block;
            filter: brightness(0) invert(1);
        }

        .nav-item.active img {
            filter: brightness(1.2) invert(1);
        }

        .nav-item:hover .icon-wrapper {
            transform: scale(1.1);
        }

        .bottom-buttons-container {
    display: flex;
    flex-direction: row;
    justify-content: space-around; /* –†–æ–∑–ø–æ–¥—ñ–ª –∫–Ω–æ–ø–æ–∫ */
    gap: 1rem; /* –ú–µ–Ω—à–∏–π –ø—Ä–æ–º—ñ–∂–æ–∫ */
    align-items: flex-end;
    padding: 0.1rem;
    width: 100%;
    box-sizing: border-box;
    margin-top: 0.1rem;
    margin-bottom: 3rem; /* –í—ñ–¥—Å—Ç—É–ø –∑–Ω–∏–∑—É */
}

        .bottom-button {
            width: 3.125rem; /* 50px */
            height: 3.125rem; /* 50px */
            background: linear-gradient(135deg, #2D6EB6, #52C0BD);
            border-radius: 90%;
            display: flex;
            align-items: center;
            justify-content: center;
            box-shadow: 0 0.25rem 0.625rem rgba(0, 0, 0, 0.3); /* 0 4px 10px */
            cursor: pointer;
            transition: all 0.3s ease;
        }
        @media (max-width: 450px) {
            :root {
                --header-height: 3rem;
                --nav-height: 4rem;
        }

        }
        .bottom-button:hover {
            transform: scale(1.1);
            box-shadow: 0 0.375rem 0.9375rem rgba(0, 0, 0, 0.4); /* 0 6px 15px */
        }

        .bottom-button img {
            width: 3.5rem; /* 24px */
            height: 3.5rem;
            filter: brightness(0) invert(1);
        }

        .button-icon {
            width: 1.5rem; /* 24px */
            height: 1.5rem;
            filter: brightness(0) invert(1);
        }

        .modal-scrollable-content {
            max-height: 60vh;
            overflow-y: auto;
            margin-bottom: 1rem;
            padding-right: 0.5rem;
        }

        .modal-scrollable-content::-webkit-scrollbar {
            width: 0.375rem; /* 6px */
        }

        .modal-scrollable-content::-webkit-scrollbar-track {
            background: rgba(0, 0, 0, 0.1);
            border-radius: 0.625rem; /* 10px */
        }

        .modal-scrollable-content::-webkit-scrollbar-thumb {
            background-color: var(--secondary-color);
            border-radius: 0.625rem; /* 10px */
        }

        .modal-back-button {
            background: linear-gradient(90deg, #3D7EC6, #62D0CD);
            border: none;
            border-radius: 1.25rem; /* 20px */
            padding: 0.625rem 1.25rem; /* 10px 20px */
            color: white;
            font-size: 1rem; /* 16px */
            font-weight: bold;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 0.1875rem 0.5rem rgba(0, 0, 0, 0.4);
            margin-top: 1rem;
        }

        .modal-back-button:hover {
            transform: translateY(-0.125rem); /* -2px */
            box-shadow: 0 0.25rem 0.75rem rgba(0, 0, 0, 0.5);
        }

        #error-msg {
            color: #f44336;
            background-color: rgba(244, 67, 54, 0.1);
            border-left: 3px solid #f44336;
            padding: 8px 12px;
            margin: 10px 0;
            border-radius: 4px;
            font-size: 14px;
            transition: all 0.3s ease;
        }

        .spinner {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.7);
            z-index: 1000;
            justify-content: center;
            align-items: center;
            backdrop-filter: blur(3px);
        }

        .spinner-inner {
            width: 3.125rem; /* 50px */
            height: 3.125rem;
            border: 0.3125rem solid rgba(0, 201, 167, 0.3); /* 5px */
            border-radius: 50%;
            border-top: 0.3125rem solid #00C9A7; /* 5px */
            animation: spin 0.8s linear infinite;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        .toast-message {
            position: fixed;
            top: 1.25rem; /* 20px */
            left: 50%;
            transform: translateX(-50%);
            background: linear-gradient(135deg, #1A1A2E, #0F3460);
            color: #ffffff;
            padding: 0.75rem 1.5rem; /* 12px 24px */
            border-radius: 12px;
            z-index: 1000;
            box-shadow: 0 4px 15px rgba(0,0,0,0.5);
            border: 1px solid rgba(78, 181, 247, 0.2);
            opacity: 0;
            transition: all 0.3s ease;
            font-size: 0.9375rem; /* 15px */
            display: flex;
            align-items: center;
            max-width: 350px;
            width: 90%;
        }

        .toast-message.success {
            background: linear-gradient(135deg, #0F3460, #006064);
            border: 1px solid rgba(0, 201, 167, 0.5);
        }

        .toast-message.error {
            background: linear-gradient(135deg, #2E0B0B, #860000);
            border: 1px solid rgba(255, 82, 82, 0.5);
        }

        .toast-message::after {
            content: '√ó';
            color: #4eb5f7;
            margin-left: 10px;
            cursor: pointer;
            font-size: 20px;
        }

        .toast-message.show {
            opacity: 1;
            transform: translate(-50%, 0.625rem); /* -50%, 10px */
        }

        @media (max-width: 450px) {
            :root {
                --header-height: 3rem; /* 48px */
                --nav-height: 4rem; /* 64px */
            }

            .header .profile-avatar {
                width: 2.1875rem; /* 35px */
                height: 2.1875rem;
                font-size: 1.125rem; /* 18px */
            }

            .header .user-id-container {
                font-size: 0.6875rem; /* 11px */
            }

            .header .winix-title {
                font-size: 1.25rem; /* 20px */
            }

            .language-options {
                flex-wrap: wrap;
            }

            .language-option {
                padding: 0.5rem; /* 8px */
            }

            .profile-avatar {
                width: 3.75rem; /* 60px */
                height: 3.75rem;
            }

            .nav-item .icon-wrapper {
                width: 3.125rem; /* 50px */
                height: 3.125rem;
            }

            .nav-item img {
                width: 1.875rem; /* 30px */
                height: 1.875rem;
            }
        }

        @media (max-width: 350px) {
            .header .user-id-container {
                display: none;
            }

            .header .jeton-balance {
                margin-left: 0;
            }

            .header .balance-label {
                font-size: 0.6875rem; /* 11px */
            }

            .profile-header {
                flex-direction: column;
                align-items: center;
                text-align: center;
            }

            .profile-info {
                text-align: center;
            }

            .words-grid {
                grid-template-columns: repeat(2, 1fr);
            }
        }

        @media (min-width: 768px) {
            body {
                background: linear-gradient(135deg, #141e30, #243b55);
            }

            .container {
                box-shadow: 0 0.625rem 1.875rem rgba(0, 0, 0, 0.3); /* 0 10px 30px */
                margin: 1.25rem auto; /* 20px */
                height: calc(100vh - 2.5rem); /* calc(100vh - 40px) */
                border-radius: 1.25rem; /* 20px */
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <div class="user-profile" id="profile-link">
                <div class="profile-avatar" id="profile-avatar">W</div>
                <div class="user-id-container">
                    <span class="user-id-label">ID:</span>
                    <span class="user-id-value" id="user-id"></span>
                </div>
            </div>
            <div class="winix-title">WINIX</div>
            <div class="balance-container">
                <div class="jeton-balance">
                    <div id="user-coins" class="balance-value">250</div>
                    <div class="balance-label" data-lang-key="coins">–ñ–µ—Ç–æ–Ω–∏</div>
                </div>
                <div class="winix-balance">
                    <div id="user-tokens" class="balance-value">294562.16</div>
                    <div class="balance-label">$WINIX</div>
                </div>
            </div>
        </div>

        <div class="general-container">
            <div class="general-title" data-lang-key="settings">–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è</div>

            <div class="general-card">
                <div class="profile-section">
                    <div class="profile-header">
                        <div class="profile-avatar" id="profile-avatar-large">W</div>
                        <div class="profile-info">
                            <div class="profile-name" id="profile-name">WINIX User</div>
                            <div class="profile-id"><span data-lang-key="user_id">ID:</span> <span id="user-id-profile">12345678</span></div>
                        </div>
                    </div>
                    <button class="action-button" id="edit-profile" data-lang-key="edit_profile">–†–µ–¥–∞–≥—É–≤–∞—Ç–∏ –ø—Ä–æ—Ñ—ñ–ª—å</button>
                </div>
            </div>

            <div class="general-card">
                <div class="language-section">
                    <div class="language-title" data-lang-key="language_selection">–í–∏–±—ñ—Ä –º–æ–≤–∏</div>
                    <div class="language-options">
                        <div class="language-option active" data-lang="uk">
                            <img src="assets/ua_flag.jpg" alt="–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞" class="language-icon" onerror="this.src='https://via.placeholder.com/30?text=UA'">
                            <div class="language-name" data-lang-key="language_uk">–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞</div>
                        </div>
                        <div class="language-option" data-lang="en">
                            <img src="assets/en_flag.jpg" alt="English" class="language-icon" onerror="this.src='https://via.placeholder.com/30?text=EN'">
                            <div class="language-name" data-lang-key="language_en">English</div>
                        </div>
                        <div class="language-option" data-lang="ru">
                            <img src="assets/ru_flag.jpg" alt="–†—É—Å—Å–∫–∏–π" class="language-icon" onerror="this.src='https://via.placeholder.com/30?text=RU'">
                            <div class="language-name" data-lang-key="language_ru">–†—É—Å—Å–∫–∏–π</div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="general-card">
                <div class="language-title" data-lang-key="app_settings">–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –¥–æ–¥–∞—Ç–∫—É</div>
                <div class="settings-item">
                    <div class="settings-title" data-lang-key="notifications">–°–ø–æ–≤—ñ—â–µ–Ω–Ω—è</div>
                    <label class="toggle-switch">
                        <input type="checkbox" id="notifications-toggle" checked>
                        <span class="toggle-slider"></span>
                    </label>
                </div>
            </div>

            <div class="general-card">
                <div class="language-title" data-lang-key="security">–ë–µ–∑–ø–µ–∫–∞</div>
                <button class="action-button" id="show-seed-phrase" data-lang-key="show_seed">–ü–æ–∫–∞–∑–∞—Ç–∏ SID —Ñ—Ä–∞–∑—É</button>
            </div>

            <div class="bottom-buttons-container">
                <a href="https://t.me/Winix_Support" target="_blank" class="bottom-button" id="help-button" title="–ü—ñ–¥—Ç—Ä–∏–º–∫–∞">
                    <img src="assets/support-icon.png" alt="–ü—ñ–¥—Ç—Ä–∏–º–∫–∞" class="button-icon">
                </a>
                <div class="bottom-button" id="license-button" title="–õ—ñ—Ü–µ–Ω–∑—ñ—è">
                    <img src="assets/license-icon.png" alt="–õ—ñ—Ü–µ–Ω–∑—ñ—è" class="button-icon" onerror="this.src='https://via.placeholder.com/24?text=L'">
                </div>
                <div class="bottom-button" id="agreement-button" title="–£–≥–æ–¥–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞">
                    <img src="assets/agreement-icon.png" alt="–£–≥–æ–¥–∞" class="button-icon" onerror="this.src='https://via.placeholder.com/24?text=A'">
                </div>
            </div>
        </div>

        <div class="nav-bar">
            <div class="nav-item" data-section="home"><div class="icon-wrapper"><img src="assets/home-icon.png" alt="–ì–æ–ª–æ–≤–Ω–∞"></div><span data-lang-key="home">–ì–æ–ª–æ–≤–Ω–∞</span></div>
            <div class="nav-item" data-section="earn"><div class="icon-wrapper"><img src="assets/earn-icon.png" alt="–ó–∞—Ä–æ–±—ñ—Ç–æ–∫"></div><span data-lang-key="earn">–ó–∞—Ä–æ–±—ñ—Ç–æ–∫</span></div>
            <div class="nav-item" data-section="referrals"><div class="icon-wrapper"><img src="assets/referrals-icon.png" alt="–†–µ—Ñ–µ—Ä–∞–ª–∏"></div><span data-lang-key="referrals">–†–µ—Ñ–µ—Ä–∞–ª–∏</span></div>
            <div class="nav-item" data-section="wallet"><div class="icon-wrapper"><img src="assets/wallet-icon.png" alt="–ì–∞–º–∞–Ω–µ—Ü—å"></div><span data-lang-key="wallet">–ì–∞–º–∞–Ω–µ—Ü—å</span></div>
            <div class="nav-item active" data-section="general"><div class="icon-wrapper"><img src="assets/general-icon.png" alt="–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è"></div><span data-lang-key="General">–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è</span></div>
        </div>
    </div>

    <script>
        // –°–ª–æ–≤–Ω–∏–∫ –¥–ª—è –ø–µ—Ä–µ–∫–ª–∞–¥—ñ–≤
        const translations = {
            "WINIX": "WINIX",
            "$WINIX": "$WINIX",
            "home": "–ì–æ–ª–æ–≤–Ω–∞",
            "earn": "–ó–∞—Ä–æ–±—ñ—Ç–æ–∫",
            "referrals": "–†–µ—Ñ–µ—Ä–∞–ª–∏",
            "wallet": "–ì–∞–º–∞–Ω–µ—Ü—å",
            "profile": "–ü—Ä–æ—Ñ—ñ–ª—å",
            "settings": "–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è",
            "coins": "–ñ–µ—Ç–æ–Ω–∏",
            "days": "–¥–Ω—ñ–≤",
            "hours": "–≥–æ–¥–∏–Ω",
            "minutes": "—Ö–≤–∏–ª–∏–Ω",
            "edit_profile": "–†–µ–¥–∞–≥—É–≤–∞—Ç–∏ –ø—Ä–æ—Ñ—ñ–ª—å",
            "edit_profile_title": "–†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é",
            "username": "–Ü–º'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞",
            "new_password": "–ù–æ–≤–∏–π –ø–∞—Ä–æ–ª—å",
            "password_placeholder": "–ó–∞–ª–∏—à—Ç–µ –ø–æ—Ä–æ–∂–Ω—ñ–º, —â–æ–± –Ω–µ –∑–º—ñ–Ω—é–≤–∞—Ç–∏",
            "confirm_password": "–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –ø–∞—Ä–æ–ª—é",
            "confirm_password_placeholder": "–ü–æ–≤—Ç–æ—Ä—ñ—Ç—å –Ω–æ–≤–∏–π –ø–∞—Ä–æ–ª—å",
            "upload_avatar": "–ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∞–≤–∞—Ç–∞—Ä",
            "select_avatar": "–û–±—Ä–∞—Ç–∏ –∞–≤–∞—Ç–∞—Ä",
            "btn_save": "–ó–±–µ—Ä–µ–≥—Ç–∏",
            "profile_updated": "–ü—Ä–æ—Ñ—ñ–ª—å —É—Å–ø—ñ—à–Ω–æ –æ–Ω–æ–≤–ª–µ–Ω–æ",
            "enter_username": "–í–≤–µ–¥—ñ—Ç—å —ñ–º'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞",
            "passwords_dont_match": "–ü–∞—Ä–æ–ª—ñ –Ω–µ —Å–ø—ñ–≤–ø–∞–¥–∞—é—Ç—å",
            "min_8_chars": "–ü–∞—Ä–æ–ª—å –º–∞—î –º—ñ—Å—Ç–∏—Ç–∏ –Ω–µ –º–µ–Ω—à–µ 8 —Å–∏–º–≤–æ–ª—ñ–≤",
            "min_5_letters": "–ü–∞—Ä–æ–ª—å –º–∞—î –º—ñ—Å—Ç–∏—Ç–∏ –Ω–µ –º–µ–Ω—à–µ 5 –ª—ñ—Ç–µ—Ä",
            "current_password": "–ü–æ—Ç–æ—á–Ω–∏–π –ø–∞—Ä–æ–ª—å",
            "current_password_placeholder": "–í–≤–µ–¥—ñ—Ç—å –ø–æ—Ç–æ—á–Ω–∏–π –ø–∞—Ä–æ–ª—å –¥–ª—è –∑–º—ñ–Ω–∏",
            "enter_current_password": "–í–≤–µ–¥—ñ—Ç—å –ø–æ—Ç–æ—á–Ω–∏–π –ø–∞—Ä–æ–ª—å –¥–ª—è –∑–º—ñ–Ω–∏",
            "wrong_current_password": "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π –ø–æ—Ç–æ—á–Ω–∏–π –ø–∞—Ä–æ–ª—å",
            "set_new_password": "–í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ –ø–∞—Ä–æ–ª—å",
            "set_password_placeholder": "–ü–∞—Ä–æ–ª—å –¥–ª—è –∑–∞—Ö–∏—Å—Ç—É –∞–∫–∞—É–Ω—Ç—É",
            "language_selection": "–í–∏–±—ñ—Ä –º–æ–≤–∏",
            "language_uk": "–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞",
            "language_en": "English",
            "language_ru": "–†—É—Å—Å–∫–∏–π",
            "app_settings": "–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –¥–æ–¥–∞—Ç–∫—É",
            "notifications": "–°–ø–æ–≤—ñ—â–µ–Ω–Ω—è",
            "security": "–ë–µ–∑–ø–µ–∫–∞",
            "settings_saved": "–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑–±–µ—Ä–µ–∂–µ–Ω–æ",
            "settings_error": "–ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è",
            "show_seed": "–ü–æ–∫–∞–∑–∞—Ç–∏ SID —Ñ—Ä–∞–∑—É",
            "set_password": "–í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–∞—Ä–æ–ª—é",
            "password_requirements": "–ü–∞—Ä–æ–ª—å –º–∞—î –º—ñ—Å—Ç–∏—Ç–∏ –Ω–µ –º–µ–Ω—à–µ 8 —Å–∏–º–≤–æ–ª—ñ–≤, –≤–∫–ª—é—á–∞—é—á–∏ 5 –ª—ñ—Ç–µ—Ä",
            "password": "–ü–∞—Ä–æ–ª—å",
            "confirm": "–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è",
            "enter_password": "–í–≤–µ–¥—ñ—Ç—å –ø–∞—Ä–æ–ª—å",
            "your_password": "–í–∞—à –ø–∞—Ä–æ–ª—å",
            "check": "–ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏",
            "wrong_password": "–ù–µ–≤—ñ—Ä–Ω–∏–π –ø–∞—Ä–æ–ª—å",
            "seed_phrase": "SID —Ñ—Ä–∞–∑–∞",
            "your_seed_phrase": "–í–∞—à–∞ SID —Ñ—Ä–∞–∑–∞",
            "save_seed": "–ó–±–µ—Ä–µ–∂—ñ—Ç—å —Ü—é —Ñ—Ä–∞–∑—É –≤ –Ω–∞–¥—ñ–π–Ω–æ–º—É –º—ñ—Å—Ü—ñ",
            "copy": "–ö–æ–ø—ñ—é–≤–∞—Ç–∏",
            "copied": "–°–∫–æ–ø—ñ–π–æ–≤–∞–Ω–æ",
            "copy_error": "–ü–æ–º–∏–ª–∫–∞ –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è",
            "done": "–ì–æ—Ç–æ–≤–æ",
            "license_agreement": "–õ—ñ—Ü–µ–Ω–∑—ñ–π–Ω–∞ —É–≥–æ–¥–∞",
            "user_agreement": "–£–≥–æ–¥–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞",
            "back": "–ù–∞–∑–∞–¥",
            "contact_support": "–ó–≤'—è–∑–æ–∫ –∑ –ø—ñ–¥—Ç—Ä–∏–º–∫–æ—é",
            "navigation_error": "–ü–æ–º–∏–ª–∫–∞ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó",
            "user_id": "ID:",
            "password_required": "–ü–æ—Ç—Ä—ñ–±–Ω–æ –≤–≤–µ—Å—Ç–∏ –ø–∞—Ä–æ–ª—å",
            "password_invalid": "–ù–µ–≤—ñ—Ä–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç –ø–∞—Ä–æ–ª—è",
            "avatar_load_error": "–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∞–≤–∞—Ç–∞—Ä–∞"
        };

        function getText(key, defaultText = key) {
            return translations[key] || defaultText;
        }

        let tg;
        try {
            tg = window.Telegram ? window.Telegram.WebApp : null;
            if (tg) {
                console.log("Telegram WebApp API —É—Å–ø—ñ—à–Ω–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ");
                tg.ready();
                tg.expand();
                tg.onEvent('themeChanged', updateThemeColors);
                tg.onEvent('viewportChanged', adjustLayout);
            } else {
                console.error("Telegram WebApp API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π");
            }
        } catch (error) {
            console.error("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó Telegram WebApp API:", error.message);
            tg = null;
        }

        function updateThemeColors() {
            if (tg && tg.colorScheme) {
                document.body.setAttribute('data-theme', tg.colorScheme);
            }
        }

        function adjustLayout() {
            const isSmallScreen = window.innerWidth <= 450;
            const container = document.querySelector('.container');
            if (isSmallScreen) {
                container.classList.add('small-screen');
            } else {
                container.classList.remove('small-screen');
            }
        }

        function getTranslation(key, defaultText) {
            if (window.WinixLanguage && typeof window.WinixLanguage.getText === 'function') {
                try {
                    return window.WinixLanguage.getText(key) || defaultText || key;
                } catch (error) {
                    console.error(`–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–µ—Ä–µ–∫–ª–∞–¥—É –¥–ª—è –∫–ª—é—á–∞ ${key}:`, error);
                    return defaultText || key;
                }
            }
            return getText(key, defaultText || key);
        }

        function navigateToPage(page) {
            try {
                if (window._isNavigating) {
                    console.log('–ù–∞–≤—ñ–≥–∞—Ü—ñ—è –≤–∂–µ –≤ –ø—Ä–æ—Ü–µ—Å—ñ');
                    return;
                }

                window._isNavigating = true;

                const spinner = document.getElementById('loading-spinner');
                if (spinner) {
                    spinner.style.display = 'flex';
                }

                let tokens = 0;
                let coins = 0;

                if (window.WinixCore && window.WinixCore.Balance) {
                    tokens = window.WinixCore.Balance.getTokens();
                    coins = window.WinixCore.Balance.getCoins();
                } else if (window.rewardSystem) {
                    if (typeof window.rewardSystem.getTokens === 'function') {
                        tokens = window.rewardSystem.getTokens();
                    }
                    if (typeof window.rewardSystem.getCoins === 'function') {
                        coins = window.rewardSystem.getCoins();
                    }
                } else if (window.balanceSystem) {
                    if (typeof window.balanceSystem.getTokens === 'function') {
                        tokens = window.balanceSystem.getTokens();
                    }
                    if (typeof window.balanceSystem.getCoins === 'function') {
                        coins = window.balanceSystem.getCoins();
                    }
                } else {
                    tokens = parseFloat(localStorage.getItem('userTokens') || '0');
                    coins = parseFloat(localStorage.getItem('userCoins') || '0');
                }

                sessionStorage.setItem('lastBalance', tokens.toString());
                sessionStorage.setItem('lastCoins', coins.toString());
                sessionStorage.setItem('navigationTime', Date.now().toString());

                const currentPage = window.location.pathname.split('/').pop();
                if (currentPage === page) {
                    console.log('–í–∂–µ –Ω–∞ —Ü—ñ–π —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ');
                    if (spinner) {
                        spinner.style.display = 'none';
                    }
                    window._isNavigating = false;
                    return;
                }

                setTimeout(() => {
                    window.location.href = page;
                }, 100);
            } catch (error) {
                console.error('–ü–æ–º–∏–ª–∫–∞ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó:', error);
                window._isNavigating = false;

                const spinner = document.getElementById('loading-spinner');
                if (spinner) {
                    spinner.style.display = 'none';
                }

                showToast(getTranslation('navigation_error', '–ü–æ–º–∏–ª–∫–∞ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó'), true);
            }
        }
/**
 * –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó –º—ñ–∂ —Å—Ç–æ—Ä—ñ–Ω–∫–∞–º–∏
 * @param {string} page - URL —Å—Ç–æ—Ä—ñ–Ω–∫–∏, –Ω–∞ —è–∫—É –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø–µ—Ä–µ–π—Ç–∏
 */
function navigateTo(page) {
    try {
        if (window._isNavigating) {
            console.log('–ù–∞–≤—ñ–≥–∞—Ü—ñ—è –≤–∂–µ –≤ –ø—Ä–æ—Ü–µ—Å—ñ');
            return;
        }

        window._isNavigating = true;

        // –ü–æ–∫–∞–∑—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
        const spinner = document.getElementById('loading-spinner');
        if (spinner) spinner.style.display = 'flex';

        // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ø–æ—Ç–æ—á–Ω–∏–π –±–∞–ª–∞–Ω—Å –¥–ª—è –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è –ø—ñ—Å–ª—è –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó
        const currentTokens = parseFloat(document.getElementById('user-tokens').textContent || '0');
        const currentCoins = parseFloat(document.getElementById('user-coins').textContent || '0');
        sessionStorage.setItem('lastBalance', currentTokens.toString());
        sessionStorage.setItem('lastCoins', currentCoins.toString());
        sessionStorage.setItem('navigationTime', Date.now().toString());

        // –ó–∞–ø–∏—Ç—É—î–º–æ –ø–æ—Ç–æ—á–Ω—É —Å—Ç–æ—Ä—ñ–Ω–∫—É
        const currentPage = window.location.pathname.split('/').pop();
        if (currentPage === page) {
            console.log('–í–∂–µ –Ω–∞ —Ü—ñ–π —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ');
            if (spinner) spinner.style.display = 'none';
            window._isNavigating = false;
            return;
        }

        // –ü–µ—Ä–µ—Ö–æ–¥–∏–º–æ –Ω–∞ –Ω–æ–≤—É —Å—Ç–æ—Ä—ñ–Ω–∫—É
        setTimeout(() => {
            window.location.href = page;
        }, 100);
    } catch (error) {
        console.error('–ü–æ–º–∏–ª–∫–∞ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó:', error);
        window._isNavigating = false;

        const spinner = document.getElementById('loading-spinner');
        if (spinner) spinner.style.display = 'none';

        showToast("–ü–æ–º–∏–ª–∫–∞ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó", true);
    }
}
        function loadUserAvatar() {
            const headerAvatar = document.getElementById('profile-avatar');
            const profileAvatar = document.getElementById('profile-avatar-large');
            const headerUserId = document.getElementById('user-id');
            const profileUserId = document.getElementById('user-id-profile');

            const username = localStorage.getItem('username') || 'WINIX User';
            const userId = localStorage.getItem('userId') || '12345678';
            const avatarSrc = localStorage.getItem('userAvatarSrc');
            const avatarId = localStorage.getItem('selectedAvatarId');

            document.getElementById('profile-name').textContent = username;

            if (headerUserId) headerUserId.textContent = userId;
            if (profileUserId) profileUserId.textContent = userId;

            function setAvatar(element) {
                if (!element) return;
                element.innerHTML = '';
                if (avatarSrc) {
                    const img = new Image();
                    img.src = avatarSrc;
                    img.alt = username;
                    img.onerror = () => {
                        console.log('–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∞–≤–∞—Ç–∞—Ä–∞, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Ç–µ–∫—Å—Ç');
                        element.textContent = username[0].toUpperCase();
                    };
                    element.appendChild(img);
                } else if (avatarId) {
                    const src = localStorage.getItem(`${avatarId}Src`) || `assets/avatar${avatarId}.png` || `https://via.placeholder.com/50?text=${avatarId}`;
                    const img = new Image();
                    img.src = src;
                    img.alt = username;
                    img.onerror = () => {
                        console.log('–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∞–≤–∞—Ç–∞—Ä–∞, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∑–∞–ø–∞—Å–Ω–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç');
                        element.textContent = username[0].toUpperCase();
                    };
                    element.appendChild(img);
                } else {
                    element.textContent = username[0].toUpperCase();
                }
            }

            setAvatar(headerAvatar);
            setAvatar(profileAvatar);
        }

        function updateBalanceDisplay() {
            try {
                let tokens = parseFloat(localStorage.getItem('userTokens') || '294562.16');
                let coins = parseFloat(localStorage.getItem('userCoins') || '250');
                document.getElementById('user-tokens').textContent = tokens.toFixed(2);
                document.getElementById('user-coins').textContent = coins.toFixed(0);
            } catch (error) {
                console.error('Error updating balance:', error);
            }
        }

        function hashPassword(password) {
            let hash = 0;
            if (password.length === 0) return hash.toString();
            for (let i = 0; i < password.length; i++) {
                const char = password.charCodeAt(i);
                hash = ((hash << 5) - hash) + char;
                hash = hash & hash;
            }
            return hash.toString() + "winix";
        }

        function validatePassword(password) {
            if (!password || password.length < 8)
                return { valid: false, message: getTranslation('min_8_chars', '–ü–∞—Ä–æ–ª—å –º–∞—î –º—ñ—Å—Ç–∏—Ç–∏ –Ω–µ –º–µ–Ω—à–µ 8 —Å–∏–º–≤–æ–ª—ñ–≤') };
            if ((password.match(/[a-zA-Z–∞-—è–ê-–Ø—ñ—ó—î“ë–Ü–á–Ñ“ê]/g) || []).length < 5)
                return { valid: false, message: getTranslation('min_5_letters', '–ü–∞—Ä–æ–ª—å –º–∞—î –º—ñ—Å—Ç–∏—Ç–∏ –Ω–µ –º–µ–Ω—à–µ 5 –ª—ñ—Ç–µ—Ä') };
            return { valid: true };
        }

        /**
 * –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–æ–∫–∞–∑—É –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é
 */
function showEditProfileModal() {
    const currentUsername = localStorage.getItem('username') || 'WINIX User';
    const savedPasswordHash = localStorage.getItem('passwordHash');
    const savedSeedHash = localStorage.getItem('seedPhrasePasswordHash');
    const hasPassword = savedPasswordHash || savedSeedHash;

    const passwordFieldLabel = hasPassword ? getTranslation('current_password', '–ü–æ—Ç–æ—á–Ω–∏–π –ø–∞—Ä–æ–ª—å') : getTranslation('set_new_password', '–í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ –ø–∞—Ä–æ–ª—å');
    const passwordFieldPlaceholder = hasPassword ? getTranslation('current_password_placeholder', '–í–≤–µ–¥—ñ—Ç—å –ø–æ—Ç–æ—á–Ω–∏–π –ø–∞—Ä–æ–ª—å –¥–ª—è –∑–º—ñ–Ω–∏') : getTranslation('set_password_placeholder', '–ü–∞—Ä–æ–ª—å –¥–ª—è –∑–∞—Ö–∏—Å—Ç—É –∞–∫–∞—É–Ω—Ç—É');

    // –í–∏–¥–∞–ª—è—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ –º–æ–¥–∞–ª—å–Ω—ñ –≤—ñ–∫–Ω–∞, —è–∫—â–æ –≤–æ–Ω–∏ —î
    document.querySelectorAll('.document-modal').forEach(modal => modal.remove());

    // –°—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤–µ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
    const modal = document.createElement('div');
    modal.className = 'document-modal show';
    modal.innerHTML = `
        <div class="modal-content">
            <div class="modal-header">
                <div class="modal-title">${getTranslation('edit_profile_title', '–†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é')}</div>
                <span class="close-modal">√ó</span>
            </div>
            <div class="modal-body">
                <div class="settings-item">
                    <label>${getTranslation('username', "–Ü–º'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞")}</label>
                    <input type="text" id="edit-username" value="${currentUsername}">
                </div>
                <div class="settings-item">
                    <label>${passwordFieldLabel}</label>
                    <input type="password" id="edit-current-password" placeholder="${passwordFieldPlaceholder}">
                </div>
                <div class="settings-item">
                    <label>${getTranslation('new_password', '–ù–æ–≤–∏–π –ø–∞—Ä–æ–ª—å')}</label>
                    <input type="password" id="edit-password" placeholder="${getTranslation('password_placeholder', '–ó–∞–ª–∏—à—Ç–µ –ø–æ—Ä–æ–∂–Ω—ñ–º, —â–æ–± –Ω–µ –∑–º—ñ–Ω—é–≤–∞—Ç–∏')}">
                </div>
                <div class="settings-item">
                    <label>${getTranslation('confirm_password', '–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –ø–∞—Ä–æ–ª—é')}</label>
                    <input type="password" id="edit-password-confirm" placeholder="${getTranslation('confirm_password_placeholder', '–ü–æ–≤—Ç–æ—Ä—ñ—Ç—å –Ω–æ–≤–∏–π –ø–∞—Ä–æ–ª—å')}">
                </div>
                <div class="settings-item">
                    <label>${getTranslation('upload_avatar', '–ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∞–≤–∞—Ç–∞—Ä')}</label>
                    <input type="file" id="avatar-upload" accept="image/*">
                </div>
                <div class="settings-item">
                    <label>${getTranslation('select_avatar', '–û–±—Ä–∞—Ç–∏ –∞–≤–∞—Ç–∞—Ä')}</label>
                    <div class="avatar-options">
                        <img src="assets/avatar1.png" class="avatar-option" data-id="1" onerror="this.src='https://via.placeholder.com/50?text=1'">
                        <img src="assets/avatar2.png" class="avatar-option" data-id="2" onerror="this.src='https://via.placeholder.com/50?text=2'">
                        <img src="assets/avatar3.png" class="avatar-option" data-id="3" onerror="this.src='https://via.placeholder.com/50?text=3'">
                        <img src="assets/avatar4.png" class="avatar-option" data-id="4" onerror="this.src='https://via.placeholder.com/50?text=4'">
                        <img src="assets/avatar5.png" class="avatar-option" data-id="5" onerror="this.src='https://via.placeholder.com/50?text=5'">
                        <img src="assets/avatar6.png" class="avatar-option" data-id="6" onerror="this.src='https://via.placeholder.com/50?text=6'">
                        <img src="assets/avatar7.png" class="avatar-option" data-id="7" onerror="this.src='https://via.placeholder.com/50?text=7'">
                        <img src="assets/avatar8.png" class="avatar-option" data-id="8" onerror="this.src='https://via.placeholder.com/50?text=8'">
                        <img src="assets/avatar9.png" class="avatar-option" data-id="9" onerror="this.src='https://via.placeholder.com/50?text=9'">
                        <img src="assets/avatar10.png" class="avatar-option" data-id="10" onerror="this.src='https://via.placeholder.com/50?text=10'">
                        <img src="assets/avatar11.png" class="avatar-option" data-id="11" onerror="this.src='https://via.placeholder.com/50?text=11'">
                        <img src="assets/avatar12.png" class="avatar-option" data-id="12" onerror="this.src='https://via.placeholder.com/50?text=12'">
                        <img src="assets/avatar13.png" class="avatar-option" data-id="13" onerror="this.src='https://via.placeholder.com/50?text=13'">
                    </div>
                </div>
                <div id="error-msg"></div>
            </div>
            <div class="modal-footer">
                <button class="modal-button" id="save-profile">${getTranslation('btn_save', '–ó–±–µ—Ä–µ–≥—Ç–∏')}</button>
            </div>
        </div>
    `;
    document.body.appendChild(modal);

    // –ü–æ–∑–Ω–∞—á–∞—î–º–æ –∞–∫—Ç–∏–≤–Ω–∏–π –∞–≤–∞—Ç–∞—Ä
    const avatarOptions = modal.querySelectorAll('.avatar-option');
    const selectedAvatarId = localStorage.getItem('selectedAvatarId');
    avatarOptions.forEach(opt => {
        if (opt.dataset.id === selectedAvatarId) opt.classList.add('selected');
        opt.onclick = () => {
            avatarOptions.forEach(o => o.classList.remove('selected'));
            opt.classList.add('selected');
        };
    });

    // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è
    const saveBtn = modal.querySelector('#save-profile');
    saveBtn.onclick = () => {
        const username = modal.querySelector('#edit-username').value.trim();
        const password = modal.querySelector('#edit-password').value;
        const confirm = modal.querySelector('#edit-password-confirm').value;
        const currentPassword = modal.querySelector('#edit-current-password').value;
        const uploadedAvatar = modal.querySelector('#avatar-upload').files[0];
        const selectedAvatar = modal.querySelector('.avatar-option.selected');
        const error = modal.querySelector('#error-msg');

        error.textContent = '';

        // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —ñ–º–µ–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        if (!username) {
            error.textContent = getTranslation('enter_username', "–í–≤–µ–¥—ñ—Ç—å —ñ–º'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞");
            modal.querySelector('#edit-username').classList.add('error');
            return;
        }

        // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø–∞—Ä–æ–ª—ñ–≤
        if (password) {
            if (hasPassword) {
                if (!currentPassword) {
                    error.textContent = getTranslation('enter_current_password', '–í–≤–µ–¥—ñ—Ç—å –ø–æ—Ç–æ—á–Ω–∏–π –ø–∞—Ä–æ–ª—å –¥–ª—è –∑–º—ñ–Ω–∏');
                    modal.querySelector('#edit-current-password').classList.add('error');
                    return;
                }

                const currentPasswordHash = hashPassword(currentPassword);
                if ((savedPasswordHash && currentPasswordHash !== savedPasswordHash) &&
                    (savedSeedHash && currentPasswordHash !== savedSeedHash)) {
                    error.textContent = getTranslation('wrong_current_password', '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π –ø–æ—Ç–æ—á–Ω–∏–π –ø–∞—Ä–æ–ª—å');
                    modal.querySelector('#edit-current-password').classList.add('error');
                    return;
                }
            }

            if (password !== confirm) {
                error.textContent = getTranslation('passwords_dont_match', '–ü–∞—Ä–æ–ª—ñ –Ω–µ —Å–ø—ñ–≤–ø–∞–¥–∞—é—Ç—å');
                modal.querySelector('#edit-password-confirm').classList.add('error');
                return;
            }

            const validation = validatePassword(password);
            if (!validation.valid) {
                error.textContent = validation.message;
                modal.querySelector('#edit-password').classList.add('error');
                return;
            }
        } else if (currentPassword && !hasPassword) {
            const validation = validatePassword(currentPassword);
            if (!validation.valid) {
                error.textContent = validation.message;
                modal.querySelector('#edit-current-password').classList.add('error');
                return;
            }
        }

        // –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö
        const settings = {
            username: username
        };

        // –Ø–∫—â–æ –≤–∏–±—Ä–∞–Ω–æ –Ω–æ–≤–∏–π –∞–≤–∞—Ç–∞—Ä –∑ –≥–∞–ª–µ—Ä–µ—ó
        if (selectedAvatar) {
            settings.avatar_id = selectedAvatar.dataset.id;
        }

        // –ü–æ–∫–∞–∑—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
        const spinner = document.getElementById('loading-spinner');
        if (spinner) spinner.style.display = 'flex';

        // –û–Ω–æ–≤–ª—é—î–º–æ –ø—Ä–æ—Ñ—ñ–ª—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ
        saveUserSettings(settings);

        // –Ø–∫—â–æ —î –Ω–æ–≤–∏–π –ø–∞—Ä–æ–ª—å, –æ–Ω–æ–≤–ª—é—î–º–æ –π–æ–≥–æ –æ–∫—Ä–µ–º–∏–º –∑–∞–ø–∏—Ç–æ–º
        if (password) {
            updateUserPassword(password, hasPassword ? currentPassword : null);
        } else if (currentPassword && !hasPassword) {
            updateUserPassword(currentPassword);
        }

        // –Ø–∫—â–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ –Ω–æ–≤–∏–π –∞–≤–∞—Ç–∞—Ä, –æ–±—Ä–æ–±–ª—è—î–º–æ –π–æ–≥–æ
        if (uploadedAvatar) {
            const reader = new FileReader();
            reader.onload = () => {
                const avatarSrc = reader.result;
                localStorage.setItem('userAvatarSrc', avatarSrc);
                localStorage.removeItem('selectedAvatarId');
                loadUserAvatar();

                // –ù–∞–¥—Å–∏–ª–∞—î–º–æ –∑–∞–ø–∏—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –∞–≤–∞—Ç–∞—Ä–∞
                // –¢—É—Ç –º–æ–∂–µ –±—É—Ç–∏ –ø–æ—Ç—Ä—ñ–±–µ–Ω —Å–ø–µ—Ü—ñ–∞–ª—å–Ω–∏–π –µ–Ω–¥–ø–æ—ñ–Ω—Ç –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ñ–∞–π–ª—ñ–≤
                // –ù–∞—Ä–∞–∑—ñ –ø—Ä–æ—Å—Ç–æ –∑–±–µ—Ä—ñ–≥–∞—î–º–æ –≤ localStorage
            };
            reader.readAsDataURL(uploadedAvatar);
        } else if (selectedAvatar) {
            const avatarId = selectedAvatar.dataset.id;
            localStorage.setItem('selectedAvatarId', avatarId);
            localStorage.setItem(`${avatarId}Src`, selectedAvatar.src);
            localStorage.removeItem('userAvatarSrc');

            // –û–Ω–æ–≤–ª—é—î–º–æ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑ –∞–≤–∞—Ç–∞—Ä–æ–º
            saveUserSettings({
                avatar_id: avatarId
            });

            loadUserAvatar();
        }

        // –ó–∞–∫—Ä–∏–≤–∞—î–º–æ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
        modal.remove();
        showToast(getTranslation('profile_updated', '–ü—Ä–æ—Ñ—ñ–ª—å —É—Å–ø—ñ—à–Ω–æ –æ–Ω–æ–≤–ª–µ–Ω–æ'), false);

        // –•–æ–≤–∞—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
        if (spinner) spinner.style.display = 'none';
    };

    // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π –¥–ª—è –ø–æ–ª—ñ–≤ –≤–≤–æ–¥—É
    modal.querySelectorAll('input').forEach(input => {
        input.addEventListener('input', function() {
            this.classList.remove('error');
        });
    });

    // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –¥–ª—è –∑–∞–∫—Ä–∏—Ç—Ç—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞
    modal.querySelector('.close-modal').onclick = () => modal.remove();
    modal.onclick = (e) => { if (e.target === modal) modal.remove(); };
}

/**
 * –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–æ–∫–∞–∑—É –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞ SID —Ñ—Ä–∞–∑–∏
 */
function showSeedPhrase() {
    console.log("–í–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó showSeedPhrase");

    // –û—Ç—Ä–∏–º—É—î–º–æ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    const userId = localStorage.getItem('userId') || '12345678';

    // –ü–æ–∫–∞–∑—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
    const spinner = document.getElementById('loading-spinner');
    if (spinner) spinner.style.display = 'flex';

    // –†–æ–±–∏–º–æ –∑–∞–ø–∏—Ç –¥–æ —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è seed-—Ñ—Ä–∞–∑–∏
    fetch(`/api/user/${userId}/seed-phrase`)
        .then(response => {
            if (!response.ok) throw new Error(`–ü–æ–º–∏–ª–∫–∞ HTTP: ${response.status}`);
            return response.json();
        })
        .then(data => {
            if (data.status === 'success' && data.data && data.data.seed_phrase) {
                // –†–æ–∑–±–∏–≤–∞—î–º–æ —Ñ—Ä–∞–∑—É –Ω–∞ –æ–∫—Ä–µ–º—ñ —Å–ª–æ–≤–∞
                const phrase = data.data.seed_phrase.split(' ');

                // –°—Ç–≤–æ—Ä—é—î–º–æ —Ç–∞ –ø–æ–∫–∞–∑—É—î–º–æ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
                showSeedPhraseModal(phrase);
            } else {
                console.warn("–û—Ç—Ä–∏–º–∞–Ω–æ –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω—ñ –¥–∞–Ω—ñ SID-—Ñ—Ä–∞–∑–∏:", data);
                showToast("–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è SID-—Ñ—Ä–∞–∑–∏. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.", true);
            }
        })
        .catch(error => {
            console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è SID-—Ñ—Ä–∞–∑–∏:", error);
            showToast("–ü–æ–º–∏–ª–∫–∞ –∑'—î–¥–Ω–∞–Ω–Ω—è –∑ —Å–µ—Ä–≤–µ—Ä–æ–º", true);
        })
        .finally(() => {
            // –•–æ–≤–∞—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
            if (spinner) spinner.style.display = 'none';
        });
}

/**
 * –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–æ–∫–∞–∑—É –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞ –∑ SID —Ñ—Ä–∞–∑–æ—é
 * @param {Array} phrase - –ú–∞—Å–∏–≤ —Å–ª—ñ–≤ SID —Ñ—Ä–∞–∑–∏
 */
function showSeedPhraseModal(phrase) {
    // –í–∏–¥–∞–ª—è—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ –º–æ–¥–∞–ª—å–Ω—ñ –≤—ñ–∫–Ω–∞, —è–∫—â–æ –≤–æ–Ω–∏ —î
    document.querySelectorAll('.document-modal').forEach(modal => modal.remove());

    // –°—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤–µ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
    const modal = document.createElement('div');
    modal.className = 'document-modal show';
    modal.innerHTML = `
        <div class="seed-modal-content">
            <div class="modal-header">
                <div class="modal-title">${getTranslation('seed_phrase', 'SID —Ñ—Ä–∞–∑–∞')}</div>
                <span class="close-modal">√ó</span>
            </div>
            <div class="modal-body">
                <div class="restore-card">
                    <div class="restore-title">${getTranslation('your_seed_phrase', '–í–∞—à–∞ SID —Ñ—Ä–∞–∑–∞')}</div>
                    <div class="restore-subtitle">${getTranslation('save_seed', '–ó–±–µ—Ä–µ–∂—ñ—Ç—å —Ü—é —Ñ—Ä–∞–∑—É –≤ –Ω–∞–¥—ñ–π–Ω–æ–º—É –º—ñ—Å—Ü—ñ')}</div>
                    <button class="copy-button">${getTranslation('copy', '–ö–æ–ø—ñ—é–≤–∞—Ç–∏')}</button>
                    <div class="words-grid">
                        ${phrase.map((word, i) => `
                            <div class="word-cell">
                                <div class="word-number">${i + 1}.</div>
                                <div class="word-value">${word}</div>
                            </div>
                        `).join('')}
                    </div>
                    <button class="seed-continue-button">${getTranslation('done', '–ì–æ—Ç–æ–≤–æ')}</button>
                </div>
            </div>
        </div>
    `;
    document.body.appendChild(modal);

    // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π
    modal.querySelector('.close-modal').onclick = () => modal.remove();
    modal.querySelector('.copy-button').onclick = () => {
        navigator.clipboard.writeText(phrase.join(' '))
            .then(() => showToast(getTranslation('copied', '–°–∫–æ–ø—ñ–π–æ–≤–∞–Ω–æ')))
            .catch(() => showToast(getTranslation('copy_error', '–ü–æ–º–∏–ª–∫–∞ –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è'), true));
    };
    modal.querySelector('.seed-continue-button').onclick = () => {
        localStorage.setItem('seedPhraseViewed', 'true');
        modal.remove();
    };
    modal.onclick = (e) => { if (e.target === modal) modal.remove(); };
}

/**
 * –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–æ–∫–∞–∑—É –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞ –≤–≤–µ–¥–µ–Ω–Ω—è –ø–∞—Ä–æ–ª—è
 * @param {Function} callback - –§—É–Ω–∫—Ü—ñ—è, —è–∫–∞ –±—É–¥–µ –≤–∏–∫–ª–∏–∫–∞–Ω–∞ –ø—ñ—Å–ª—è —É—Å–ø—ñ—à–Ω–æ–≥–æ –≤–≤–µ–¥–µ–Ω–Ω—è –ø–∞—Ä–æ–ª—è
 */
function showEnterPasswordModal(callback) {
    // –í–∏–¥–∞–ª—è—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ –º–æ–¥–∞–ª—å–Ω—ñ –≤—ñ–∫–Ω–∞, —è–∫—â–æ –≤–æ–Ω–∏ —î
    document.querySelectorAll('.document-modal').forEach(modal => modal.remove());

    // –°—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤–µ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
    const modal = document.createElement('div');
    modal.className = 'document-modal show';
    modal.innerHTML = `
        <div class="modal-content">
            <div class="modal-header">
                <div class="modal-title">${getTranslation('enter_password', '–í–≤–µ–¥—ñ—Ç—å –ø–∞—Ä–æ–ª—å')}</div>
                <span class="close-modal">√ó</span>
            </div>
            <div class="modal-body">
                <input type="password" id="enter-password" placeholder="${getTranslation('your_password', '–í–∞—à –ø–∞—Ä–æ–ª—å')}">
                <div id="error-msg"></div>
            </div>
            <div class="modal-footer">
                <button class="modal-button" id="check-password">${getTranslation('check', '–ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏')}</button>
            </div>
        </div>
    `;
    document.body.appendChild(modal);

    // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π
    const checkBtn = modal.querySelector('#check-password');
    checkBtn.onclick = () => {
        const pwd = modal.querySelector('#enter-password').value;
        const error = modal.querySelector('#error-msg');

        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –ø–∞—Ä–æ–ª—å
        const savedPassHash = localStorage.getItem('passwordHash');
        const savedSeedHash = localStorage.getItem('seedPhrasePasswordHash');
        const inputHash = hashPassword(pwd);

        if (inputHash === savedPassHash || inputHash === savedSeedHash) {
            modal.remove();
            if (typeof callback === 'function') {
                callback(pwd);
            }
        } else {
            error.textContent = getTranslation('wrong_password', '–ù–µ–≤—ñ—Ä–Ω–∏–π –ø–∞—Ä–æ–ª—å');
        }
    };

    // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –¥–ª—è –∑–∞–∫—Ä–∏—Ç—Ç—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞
    modal.querySelector('.close-modal').onclick = () => modal.remove();
    modal.onclick = (e) => { if (e.target === modal) modal.remove(); };

    // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è Enter
    modal.querySelector('#enter-password').addEventListener('keypress', function(e) {
        if (e.key === 'Enter') {
            checkBtn.click();
        }
    });
}

/**
 * –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–æ–∫–∞–∑—É –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–∞—Ä–æ–ª—è
 * @param {Function} callback - –§—É–Ω–∫—Ü—ñ—è, —è–∫–∞ –±—É–¥–µ –≤–∏–∫–ª–∏–∫–∞–Ω–∞ –ø—ñ—Å–ª—è —É—Å–ø—ñ—à–Ω–æ–≥–æ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–∞—Ä–æ–ª—è
 */
function showSetPasswordModal(callback) {
    // –í–∏–¥–∞–ª—è—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ –º–æ–¥–∞–ª—å–Ω—ñ –≤—ñ–∫–Ω–∞, —è–∫—â–æ –≤–æ–Ω–∏ —î
    document.querySelectorAll('.document-modal').forEach(modal => modal.remove());

    // –°—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤–µ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
    const modal = document.createElement('div');
    modal.className = 'document-modal show';
    modal.innerHTML = `
        <div class="modal-content">
            <div class="modal-header">
                <div class="modal-title">${getTranslation('set_password', '–í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–∞—Ä–æ–ª—é')}</div>
                <span class="close-modal">√ó</span>
            </div>
            <div class="modal-body">
                <p>${getTranslation('password_requirements', '–ü–∞—Ä–æ–ª—å –º–∞—î –º—ñ—Å—Ç–∏—Ç–∏ –Ω–µ –º–µ–Ω—à–µ 8 —Å–∏–º–≤–æ–ª—ñ–≤, –≤–∫–ª—é—á–∞—é—á–∏ 5 –ª—ñ—Ç–µ—Ä')}</p>
                <input type="password" id="new-password" placeholder="${getTranslation('password', '–ü–∞—Ä–æ–ª—å')}">
                <input type="password" id="confirm-password" placeholder="${getTranslation('confirm', '–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è')}">
                <div id="error-msg"></div>
            </div>
            <div class="modal-footer">
                <button class="modal-button" id="save-password">${getTranslation('btn_save', '–ó–±–µ—Ä–µ–≥—Ç–∏')}</button>
            </div>
        </div>
    `;
    document.body.appendChild(modal);

    // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π
    const saveBtn = modal.querySelector('#save-password');
    saveBtn.onclick = () => {
        const pwd = modal.querySelector('#new-password').value;
        const confirm = modal.querySelector('#confirm-password').value;
        const error = modal.querySelector('#error-msg');

        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –ø–∞—Ä–æ–ª—ñ —Å–ø—ñ–≤–ø–∞–¥–∞—é—Ç—å
        if (pwd !== confirm) {
            error.textContent = getTranslation('passwords_dont_match', '–ü–∞—Ä–æ–ª—ñ –Ω–µ —Å–ø—ñ–≤–ø–∞–¥–∞—é—Ç—å');
            return;
        }

        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –≤–∞–ª—ñ–¥–Ω—ñ—Å—Ç—å –ø–∞—Ä–æ–ª—è
        const validation = validatePassword(pwd);
        if (!validation.valid) {
            error.textContent = validation.message;
            return;
        }

        // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ø–∞—Ä–æ–ª—å
        updateUserPassword(pwd);

        // –ó–∞–∫—Ä–∏–≤–∞—î–º–æ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
        modal.remove();

        // –í–∏–∫–ª–∏–∫–∞—î–º–æ –∫–æ–ª–±–µ–∫, —è–∫—â–æ –≤—ñ–Ω —î
        if (typeof callback === 'function') {
            callback(pwd);
        }
    };

    // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –¥–ª—è –∑–∞–∫—Ä–∏—Ç—Ç—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞
    modal.querySelector('.close-modal').onclick = () => modal.remove();
    modal.onclick = (e) => { if (e.target === modal) modal.remove(); };
}

/**
 * –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –ø–æ–∫–∞–∑—É SID —Ñ—Ä–∞–∑–∏
 */
function handleShowSeedPhrase() {
    console.log("–í–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó handleShowSeedPhrase");
    try {
        const savedPassHash = localStorage.getItem('passwordHash');
        const savedSeedHash = localStorage.getItem('seedPhrasePasswordHash');
        const hasPassword = savedPassHash || savedSeedHash;

        console.log("–ù–∞—è–≤–Ω—ñ—Å—Ç—å –ø–∞—Ä–æ–ª—é:", !!hasPassword);

        if (!hasPassword) {
            console.log("–ü–∞—Ä–æ–ª—å –≤—ñ–¥—Å—É—Ç–Ω—ñ–π, –ø–æ–∫–∞–∑—É—î–º–æ –º–æ–¥–∞–ª–∫—É –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–∞—Ä–æ–ª—é");
            showSetPasswordModal(function(password) {
                console.log("–ü–∞—Ä–æ–ª—å –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ, –ø–æ–∫–∞–∑—É—î–º–æ SID —Ñ—Ä–∞–∑—É");
                showSeedPhrase();
            });
        } else {
            console.log("–ü–∞—Ä–æ–ª—å –Ω–∞—è–≤–Ω–∏–π, –ø–æ–∫–∞–∑—É—î–º–æ –º–æ–¥–∞–ª–∫—É –≤–≤–µ–¥–µ–Ω–Ω—è –ø–∞—Ä–æ–ª—é");
            showEnterPasswordModal(function(password) {
                console.log("–ü–∞—Ä–æ–ª—å –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ, –ø–æ–∫–∞–∑—É—î–º–æ SID —Ñ—Ä–∞–∑—É");
                showSeedPhrase();
            });
        }
    } catch (error) {
        console.error("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–±—Ä–æ–±—Ü—ñ –ø–æ–∫–∞–∑—É SID —Ñ—Ä–∞–∑–∏:", error);
        showToast("–í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Å–ø—Ä–æ–±—ñ –ø–æ–∫–∞–∑–∞—Ç–∏ SID —Ñ—Ä–∞–∑—É", true);
    }
}

/**
 * –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–æ–∫–∞–∑—É –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞ –∑ –ª—ñ—Ü–µ–Ω–∑—ñ–π–Ω–æ—é —É–≥–æ–¥–æ—é
 */
function showLicenseModal() {
    // –í–∏–¥–∞–ª—è—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ –º–æ–¥–∞–ª—å–Ω—ñ –≤—ñ–∫–Ω–∞, —è–∫—â–æ –≤–æ–Ω–∏ —î
    document.querySelectorAll('.document-modal').forEach(modal => modal.remove());

    // –°—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤–µ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
    const modal = document.createElement('div');
    modal.className = 'document-modal show';
    modal.innerHTML = `
        <div class="modal-content">
            <div class="modal-header">
                <div class="modal-title">–õ—ñ—Ü–µ–Ω–∑—ñ–π–Ω–∞ —É–≥–æ–¥–∞ WINIX</div>
                <span class="close-modal">√ó</span>
            </div>
            <div class="modal-scrollable-content">
                <p>–í–µ—Ä—Å—ñ—è 1.0, –ë–µ—Ä–µ–∑–µ–Ω—å 2025</p>
                <br>
                <p>–¶—è –ª—ñ—Ü–µ–Ω–∑—ñ–π–Ω–∞ —É–≥–æ–¥–∞ ("–£–≥–æ–¥–∞") —É–∫–ª–∞–¥–µ–Ω–∞ –º—ñ–∂ WINIX ("–õ—ñ—Ü–µ–Ω–∑—ñ–∞—Ä") —Ç–∞ –í–∞–º–∏ ("–õ—ñ—Ü–µ–Ω–∑—ñ–∞—Ç").</p>
                <br>
                <p>1. –ù–ê–î–ê–ù–ù–Ø –õ–Ü–¶–ï–ù–ó–Ü–á</p>
                <p>–õ—ñ—Ü–µ–Ω–∑—ñ–∞—Ä –Ω–∞–¥–∞—î –õ—ñ—Ü–µ–Ω–∑—ñ–∞—Ç—É –Ω–µ–≤–∏–∫–ª—é—á–Ω—É –ª—ñ—Ü–µ–Ω–∑—ñ—é –Ω–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –ø—Ä–æ–≥—Ä–∞–º–Ω–æ–≥–æ –∑–∞–±–µ–∑–ø–µ—á–µ–Ω–Ω—è WINIX ("–ü—Ä–æ–≥—Ä–∞–º–Ω–µ –∑–∞–±–µ–∑–ø–µ—á–µ–Ω–Ω—è") –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ –¥–æ —É–º–æ–≤ —Ü—ñ—î—ó –£–≥–æ–¥–∏.</p>
                <br>
                <p>2. –û–ë–ú–ï–ñ–ï–ù–ù–Ø</p>
                <p>–õ—ñ—Ü–µ–Ω–∑—ñ–∞—Ç –Ω–µ –º–∞—î –ø—Ä–∞–≤–∞:</p>
                <p>- –ö–æ–ø—ñ—é–≤–∞—Ç–∏ –∞–±–æ —Ä–æ–∑–ø–æ–≤—Å—é–¥–∂—É–≤–∞—Ç–∏ –ü—Ä–æ–≥—Ä–∞–º–Ω–µ –∑–∞–±–µ–∑–ø–µ—á–µ–Ω–Ω—è</p>
                <p>- –ú–æ–¥–∏—Ñ—ñ–∫—É–≤–∞—Ç–∏, –¥–µ–∫–æ–º–ø—ñ–ª—é–≤–∞—Ç–∏ –∞–±–æ –¥–∏–∑–∞—Å–µ–º–±–ª—é–≤–∞—Ç–∏ –ü—Ä–æ–≥—Ä–∞–º–Ω–µ –∑–∞–±–µ–∑–ø–µ—á–µ–Ω–Ω—è</p>
                <p>- –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –ü—Ä–æ–≥—Ä–∞–º–Ω–µ –∑–∞–±–µ–∑–ø–µ—á–µ–Ω–Ω—è –¥–ª—è –Ω–µ–∑–∞–∫–æ–Ω–Ω–∏—Ö —Ü—ñ–ª–µ–π</p>
                <br>
                <p>3. –ü–†–ê–í–ê –í–õ–ê–°–ù–û–°–¢–Ü</p>
                <p>–ü—Ä–æ–≥—Ä–∞–º–Ω–µ –∑–∞–±–µ–∑–ø–µ—á–µ–Ω–Ω—è —î –≤–ª–∞—Å–Ω—ñ—Å—Ç—é –õ—ñ—Ü–µ–Ω–∑—ñ–∞—Ä–∞ —Ç–∞ –∑–∞—Ö–∏—â–µ–Ω–æ –∑–∞–∫–æ–Ω–∞–º–∏ –ø—Ä–æ —ñ–Ω—Ç–µ–ª–µ–∫—Ç—É–∞–ª—å–Ω—É –≤–ª–∞—Å–Ω—ñ—Å—Ç—å.</p>
                <br>
                <p>4. –ì–ê–†–ê–ù–¢–Ü–á –¢–ê –í–Ü–î–ú–û–í–ê –í–Ü–î –í–Ü–î–ü–û–í–Ü–î–ê–õ–¨–ù–û–°–¢–Ü</p>
                <p>–ü—Ä–æ–≥—Ä–∞–º–Ω–µ –∑–∞–±–µ–∑–ø–µ—á–µ–Ω–Ω—è –Ω–∞–¥–∞—î—Ç—å—Å—è "—è–∫ —î" –±–µ–∑ –±—É–¥—å-—è–∫–∏—Ö –≥–∞—Ä–∞–Ω—Ç—ñ–π.</p>
                <br>
                <p>5. –í–Ü–î–®–ö–û–î–£–í–ê–ù–ù–Ø –ó–ë–ò–¢–ö–Ü–í</p>
                <p>–õ—ñ—Ü–µ–Ω–∑—ñ–∞—Ç –ø–æ–≥–æ–¥–∂—É—î—Ç—å—Å—è –≤—ñ–¥—à–∫–æ–¥—É–≤–∞—Ç–∏ –õ—ñ—Ü–µ–Ω–∑—ñ–∞—Ä—É –±—É–¥—å-—è–∫—ñ –∑–±–∏—Ç–∫–∏, —â–æ –≤–∏–Ω–∏–∫–ª–∏ –≤–Ω–∞—Å–ª—ñ–¥–æ–∫ –ø–æ—Ä—É—à–µ–Ω–Ω—è —Ü—ñ—î—ó –£–≥–æ–¥–∏.</p>
                <br>
                <p>6. –ü–†–ò–ü–ò–ù–ï–ù–ù–Ø</p>
                <p>–¶—è –£–≥–æ–¥–∞ –¥—ñ—î –¥–æ —ó—ó –ø—Ä–∏–ø–∏–Ω–µ–Ω–Ω—è. –õ—ñ—Ü–µ–Ω–∑—ñ–∞—Ä –º–∞—î –ø—Ä–∞–≤–æ –ø—Ä–∏–ø–∏–Ω–∏—Ç–∏ –¥—ñ—é —Ü—ñ—î—ó –£–≥–æ–¥–∏ –≤ —Ä–∞–∑—ñ –ø–æ—Ä—É—à–µ–Ω–Ω—è —ó—ó —É–º–æ–≤ –õ—ñ—Ü–µ–Ω–∑—ñ–∞—Ç–æ–º.</p>
                <br>
                <p>7. –ó–ê–ì–ê–õ–¨–ù–Ü –ü–û–õ–û–ñ–ï–ù–ù–Ø</p>
                <p>–¶—è –£–≥–æ–¥–∞ —Ä–µ–≥—É–ª—é—î—Ç—å—Å—è –∑–∞–∫–æ–Ω–æ–¥–∞–≤—Å—Ç–≤–æ–º –£–∫—Ä–∞—ó–Ω–∏. –í—Å—ñ —Å–ø–æ—Ä–∏, —â–æ –≤–∏–Ω–∏–∫–∞—é—Ç—å –≤ –∑–≤'—è–∑–∫—É –∑ —Ü—ñ—î—é –£–≥–æ–¥–æ—é, –ø—ñ–¥–ª—è–≥–∞—é—Ç—å –≤–∏—Ä—ñ—à–µ–Ω–Ω—é –≤ —Å—É–¥–∞—Ö –£–∫—Ä–∞—ó–Ω–∏.</p>
            </div>
            <button class="modal-back-button">${getTranslation('back', '–ù–∞–∑–∞–¥')}</button>
        </div>
    `;
    document.body.appendChild(modal);

    // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π
    modal.querySelector('.close-modal').onclick = () => modal.remove();
    modal.querySelector('.modal-back-button').onclick = () => modal.remove();
    modal.onclick = (e) => { if (e.target === modal) modal.remove(); };
}

/**
 * –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–æ–∫–∞–∑—É –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞ –∑ —É–≥–æ–¥–æ—é –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
 */
function showAgreementModal() {
    // –í–∏–¥–∞–ª—è—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ –º–æ–¥–∞–ª—å–Ω—ñ –≤—ñ–∫–Ω–∞, —è–∫—â–æ –≤–æ–Ω–∏ —î
    document.querySelectorAll('.document-modal').forEach(modal => modal.remove());

    // –°—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤–µ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
    const modal = document.createElement('div');
    modal.className = 'document-modal show';
    modal.innerHTML = `
        <div class="modal-content">
            <div class="modal-header">
                <div class="modal-title">–£–≥–æ–¥–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ WINIX</div>
                <span class="close-modal">√ó</span>
            </div>
            <div class="modal-scrollable-content">
                <p>–í–µ—Ä—Å—ñ—è 1.0, –ë–µ—Ä–µ–∑–µ–Ω—å 2025</p>
                <br>
                <p>–õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ –¥–æ WINIX!</p>
                <br>
                <p>–¶—è –£–≥–æ–¥–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ ("–£–≥–æ–¥–∞") —Ä–µ–≥—É–ª—é—î –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –í–∞–º–∏ –º–æ–±—ñ–ª—å–Ω–æ–≥–æ –¥–æ–¥–∞—Ç–∫—É WINIX —Ç–∞ –≤—Å—ñ—Ö –ø–æ–≤'—è–∑–∞–Ω–∏—Ö –ø–æ—Å–ª—É–≥.</p>
                <br>
                <p>1. –ü–†–ò–ô–ù–Ø–¢–¢–Ø –£–ú–û–í</p>
                <p>–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ WINIX, –í–∏ –ø–æ–≥–æ–¥–∂—É—î—Ç–µ—Å—å –∑ —É–º–æ–≤–∞–º–∏ —Ü—ñ—î—ó –£–≥–æ–¥–∏. –Ø–∫—â–æ –í–∏ –Ω–µ –ø–æ–≥–æ–¥–∂—É—î—Ç–µ—Å—å –∑ —É–º–æ–≤–∞–º–∏, –í–∏ –Ω–µ –º–∞—î—Ç–µ –ø—Ä–∞–≤–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ WINIX.</p>
                <br>
                <p>2. –†–ï–Ñ–°–¢–†–ê–¶–Ü–Ø –¢–ê –ë–ï–ó–ü–ï–ö–ê</p>
                <p>–î–ª—è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è WINIX –í–∞–º –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ —Å—Ç–≤–æ—Ä–∏—Ç–∏ –æ–±–ª—ñ–∫–æ–≤–∏–π –∑–∞–ø–∏—Å. –í–∏ –∑–æ–±–æ–≤'—è–∑–∞–Ω—ñ –Ω–∞–¥–∞—Ç–∏ –¥–æ—Å—Ç–æ–≤—ñ—Ä–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é —Ç–∞ –∑–∞–±–µ–∑–ø–µ—á–∏—Ç–∏ –±–µ–∑–ø–µ–∫—É —Å–≤–æ–≥–æ –æ–±–ª—ñ–∫–æ–≤–æ–≥–æ –∑–∞–ø–∏—Å—É.</p>
                <br>
                <p>3. –ö–û–ù–§–Ü–î–ï–ù–¶–Ü–ô–ù–Ü–°–¢–¨</p>
                <p>–í–∞—à–∞ –∫–æ–Ω—Ñ—ñ–¥–µ–Ω—Ü—ñ–π–Ω—ñ—Å—Ç—å —î –≤–∞–∂–ª–∏–≤–æ—é –¥–ª—è –Ω–∞—Å. –ó–±—ñ—Ä —Ç–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –í–∞—à–∏—Ö –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∏—Ö –¥–∞–Ω–∏—Ö —Ä–µ–≥—É–ª—é—î—Ç—å—Å—è –Ω–∞—à–æ—é –ü–æ–ª—ñ—Ç–∏–∫–æ—é –∫–æ–Ω—Ñ—ñ–¥–µ–Ω—Ü—ñ–π–Ω–æ—Å—Ç—ñ.</p>
                <br>
                <p>4. –í–ò–ö–û–†–ò–°–¢–ê–ù–ù–Ø –¢–û–ö–ï–ù–Ü–í WINIX</p>
                <p>–¢–æ–∫–µ–Ω–∏ WINIX —î –≤–Ω—É—Ç—Ä—ñ—à–Ω—å–æ—é –≤–∞–ª—é—Ç–æ—é –¥–æ–¥–∞—Ç–∫—É —Ç–∞ –Ω–µ –º–∞—é—Ç—å —Ä–µ–∞–ª—å–Ω–æ—ó –≤–∞—Ä—Ç–æ—Å—Ç—ñ. –í–∏ –Ω–µ –º–∞—î—Ç–µ –ø—Ä–∞–≤–∞ –ø—Ä–æ–¥–∞–≤–∞—Ç–∏ –∞–±–æ –æ–±–º—ñ–Ω—é–≤–∞—Ç–∏ —Ç–æ–∫–µ–Ω–∏ WINIX –∑–∞ –º–µ–∂–∞–º–∏ –¥–æ–¥–∞—Ç–∫—É.</p>
                <br>
                <p>5. –ü–†–ê–í–ò–õ–ê –ü–û–í–ï–î–Ü–ù–ö–ò</p>
                <p>–í–∏ –∑–æ–±–æ–≤'—è–∑—É—î—Ç–µ—Å—å –Ω–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ WINIX –¥–ª—è –Ω–µ–∑–∞–∫–æ–Ω–Ω–∏—Ö –∞–±–æ —à–∞—Ö—Ä–∞–π—Å—å–∫–∏—Ö —Ü—ñ–ª–µ–π.</p>
                <br>
                <p>6. –ó–ú–Ü–ù–ò –í –£–ì–û–î–Ü</p>
                <p>–ú–∏ –∑–∞–ª–∏—à–∞—î–º–æ –∑–∞ —Å–æ–±–æ—é –ø—Ä–∞–≤–æ –∑–º—ñ–Ω—é–≤–∞—Ç–∏ —Ü—é –£–≥–æ–¥—É –≤ –±—É–¥—å-—è–∫–∏–π —á–∞—Å. –ó–º—ñ–Ω–∏ –≤—Å—Ç—É–ø–∞—é—Ç—å –≤ —Å–∏–ª—É –ø—ñ—Å–ª—è —ó—Ö –ø—É–±–ª—ñ–∫–∞—Ü—ñ—ó –≤ –¥–æ–¥–∞—Ç–∫—É.</p>
                <br>
                <p>7. –ü–†–ò–ü–ò–ù–ï–ù–ù–Ø</p>
                <p>–ú–∏ –∑–∞–ª–∏—à–∞—î–º–æ –∑–∞ —Å–æ–±–æ—é –ø—Ä–∞–≤–æ –ø—Ä–∏–ø–∏–Ω–∏—Ç–∏ –∞–±–æ –æ–±–º–µ–∂–∏—Ç–∏ –í–∞—à –¥–æ—Å—Ç—É–ø –¥–æ WINIX –≤ —Ä–∞–∑—ñ –ø–æ—Ä—É—à–µ–Ω–Ω—è —Ü—ñ—î—ó –£–≥–æ–¥–∏.</p>
            </div>
            <button class="modal-back-button">${getTranslation('back', '–ù–∞–∑–∞–¥')}</button>
        </div>
    `;
    document.body.appendChild(modal);

    // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π
    modal.querySelector('.close-modal').onclick = () => modal.remove();
    modal.querySelector('.modal-back-button').onclick = () => modal.remove();
    modal.onclick = (e) => { if (e.target === modal) modal.remove(); };
}

        /**
 * –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
 */
function loadUserSettings() {
    console.log("–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞...");

    // –û—Ç—Ä–∏–º—É—î–º–æ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    const userId = localStorage.getItem('userId') || '12345678';

    // –ó–∞–ø–∏—Ç –¥–æ —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å
    fetch(`/api/user/${userId}/settings`)
        .then(response => {
            if (!response.ok) throw new Error(`–ü–æ–º–∏–ª–∫–∞ HTTP: ${response.status}`);
            return response.json();
        })
        .then(data => {
            if (data.status === 'success' && data.data) {
                const settings = data.data;
                console.log("–û—Ç—Ä–∏–º–∞–Ω–æ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:", settings);

                // –û–Ω–æ–≤–ª—é—î–º–æ —ñ–º'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
                if (settings.username) {
                    document.getElementById('profile-name').textContent = settings.username;
                    localStorage.setItem('username', settings.username);
                }

                // –û–Ω–æ–≤–ª—é—î–º–æ –º–æ–≤—É —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É
                const lang = settings.language || 'uk';
                document.querySelectorAll('.language-option').forEach(opt => {
                    opt.classList.toggle('active', opt.getAttribute('data-lang') === lang);
                });
                localStorage.setItem('userLanguage', lang);

                // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞—Ç—É—Å —Å–ø–æ–≤—ñ—â–µ–Ω—å
                const notificationsEnabled = settings.notifications_enabled !== false;
                document.getElementById('notifications-toggle').checked = notificationsEnabled;
                localStorage.setItem('notificationsEnabled', notificationsEnabled.toString());

                // –û–Ω–æ–≤–ª—é—î–º–æ –∞–≤–∞—Ç–∞—Ä, —è–∫—â–æ —î URL
                if (settings.avatar_url) {
                    localStorage.setItem('userAvatarSrc', settings.avatar_url);
                    loadUserAvatar();
                } else if (settings.avatar_id) {
                    localStorage.setItem('selectedAvatarId', settings.avatar_id);
                    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —î –≤ localStorage –∑–±–µ—Ä–µ–∂–µ–Ω–∏–π URL –¥–ª—è —Ü—å–æ–≥–æ –∞–≤–∞—Ç–∞—Ä—É
                    if (!localStorage.getItem(`${settings.avatar_id}Src`)) {
                        // –Ø–∫—â–æ –Ω–µ–º–∞—î, –∑–±–µ—Ä—ñ–≥–∞—î–º–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏–π —à–ª—è—Ö
                        localStorage.setItem(`${settings.avatar_id}Src`, `assets/avatar${settings.avatar_id}.png`);
                    }
                    loadUserAvatar();
                }

                // –û–Ω–æ–≤–ª—é—î–º–æ —Ç–µ–∫—Å—Ç–æ–≤—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ –¥–æ –æ–±—Ä–∞–Ω–æ—ó –º–æ–≤–∏
                updatePageTexts();
            } else {
                console.warn("–û—Ç—Ä–∏–º–∞–Ω–æ –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω—ñ –¥–∞–Ω—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å:", data);
            }
        })
        .catch(error => {
            console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å:", error);
        });
}

/**
 * –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
 * @param {Object} settings - –û–±'—î–∫—Ç –∑ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è–º–∏ –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è
 */
function saveUserSettings(settings) {
    console.log("–ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:", settings);

    // –û—Ç—Ä–∏–º—É—î–º–æ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    const userId = localStorage.getItem('userId') || '12345678';

    // –ü–æ–∫–∞–∑—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
    const spinner = document.getElementById('loading-spinner');
    if (spinner) spinner.style.display = 'flex';

    // –ó–∞–ø–∏—Ç –¥–æ —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å
    fetch(`/api/user/${userId}/settings`, {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify(settings)
    })
    .then(response => {
        if (!response.ok) throw new Error(`–ü–æ–º–∏–ª–∫–∞ HTTP: ${response.status}`);
        return response.json();
    })
    .then(data => {
        if (data.status === 'success') {
            console.log("–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —É—Å–ø—ñ—à–Ω–æ –∑–±–µ—Ä–µ–∂–µ–Ω–æ");
            showToast(getTranslation('settings_saved', '–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑–±–µ—Ä–µ–∂–µ–Ω–æ'));

            // –û–Ω–æ–≤–ª—é—î–º–æ –ª–æ–∫–∞–ª—å–Ω—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
            if (settings.language) {
                localStorage.setItem('userLanguage', settings.language);
                // –û–Ω–æ–≤–ª—é—î–º–æ –º–æ–≤—É —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É
                if (window.WinixLanguage && typeof window.WinixLanguage.changeLang === 'function') {
                    window.WinixLanguage.changeLang(settings.language);
                }
                updatePageTexts();
            }

            if (settings.notifications_enabled !== undefined) {
                localStorage.setItem('notificationsEnabled', settings.notifications_enabled.toString());
            }

            if (settings.username) {
                localStorage.setItem('username', settings.username);
                document.getElementById('profile-name').textContent = settings.username;
            }

            // –û–Ω–æ–≤–ª—é—î–º–æ –∞–≤–∞—Ç–∞—Ä, —è–∫—â–æ –≤—ñ–Ω –±—É–≤ –æ–Ω–æ–≤–ª–µ–Ω–∏–π
            if (settings.avatar_url || settings.avatar_id) {
                loadUserAvatar();
            }
        } else {
            console.warn("–ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å:", data);
            showToast(data.message || getTranslation('settings_error', '–ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å'), true);
        }
    })
    .catch(error => {
        console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å:", error);
        showToast("–ü–æ–º–∏–ª–∫–∞ –∑'—î–¥–Ω–∞–Ω–Ω—è –∑ —Å–µ—Ä–≤–µ—Ä–æ–º", true);
    })
    .finally(() => {
        // –•–æ–≤–∞—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
        if (spinner) spinner.style.display = 'none';
    });
}

/**
 * –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–∞—Ä–æ–ª—é –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
 * @param {string} password - –ù–æ–≤–∏–π –ø–∞—Ä–æ–ª—å
 * @param {string} currentPassword - –ü–æ—Ç–æ—á–Ω–∏–π –ø–∞—Ä–æ–ª—å (—è–∫—â–æ —î)
 */
function updateUserPassword(password, currentPassword = null) {
    console.log("–û–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–∞—Ä–æ–ª—é –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞");

    // –Ø–∫—â–æ –ø–∞—Ä–æ–ª—å –ø–æ—Ä–æ–∂–Ω—ñ–π, –≤–∏—Ö–æ–¥–∏–º–æ
    if (!password) {
        showToast(getTranslation('password_required', '–ü–æ—Ç—Ä—ñ–±–Ω–æ –≤–≤–µ—Å—Ç–∏ –ø–∞—Ä–æ–ª—å'), true);
        return;
    }

    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –≤–∞–ª—ñ–¥–Ω—ñ—Å—Ç—å –ø–∞—Ä–æ–ª—è
    const validation = validatePassword(password);
    if (!validation.valid) {
        showToast(validation.message, true);
        return;
    }

    // –û—Ç—Ä–∏–º—É—î–º–æ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    const userId = localStorage.getItem('userId') || '12345678';

    // –ü–æ–∫–∞–∑—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
    const spinner = document.getElementById('loading-spinner');
    if (spinner) spinner.style.display = 'flex';

    // –°—Ç–≤–æ—Ä—é—î–º–æ —Ö–µ—à –ø–∞—Ä–æ–ª—è (–ø—Ä–æ—Å—Ç–∞ —ñ–º—ñ—Ç–∞—Ü—ñ—è)
    const passwordHash = hashPassword(password);

    // –ü—ñ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–∏—Ö –¥–ª—è –∑–∞–ø–∏—Ç—É
    const requestData = {
        password_hash: passwordHash
    };

    // –Ø–∫—â–æ —î –ø–æ—Ç–æ—á–Ω–∏–π –ø–∞—Ä–æ–ª—å, –¥–æ–¥–∞—î–º–æ –π–æ–≥–æ –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏
    if (currentPassword) {
        requestData.current_password_hash = hashPassword(currentPassword);
    }

    // –ó–∞–ø–∏—Ç –¥–æ —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–∞—Ä–æ–ª—è
    fetch(`/api/user/${userId}/password`, {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify(requestData)
    })
    .then(response => {
        if (!response.ok) throw new Error(`–ü–æ–º–∏–ª–∫–∞ HTTP: ${response.status}`);
        return response.json();
    })
    .then(data => {
        if (data.status === 'success') {
            console.log("–ü–∞—Ä–æ–ª—å —É—Å–ø—ñ—à–Ω–æ –æ–Ω–æ–≤–ª–µ–Ω–æ");
            showToast("–ü–∞—Ä–æ–ª—å —É—Å–ø—ñ—à–Ω–æ –æ–Ω–æ–≤–ª–µ–Ω–æ");

            // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —Ö–µ—à –ø–∞—Ä–æ–ª—è –≤ localStorage
            localStorage.setItem('passwordHash', passwordHash);
            localStorage.setItem('seedPhrasePasswordHash', passwordHash);
        } else {
            console.warn("–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–∞—Ä–æ–ª—è:", data);
            showToast(data.message || "–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–∞—Ä–æ–ª—è", true);
        }
    })
    .catch(error => {
        console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–∞—Ä–æ–ª—è:", error);
        showToast("–ü–æ–º–∏–ª–∫–∞ –∑'—î–¥–Ω–∞–Ω–Ω—è –∑ —Å–µ—Ä–≤–µ—Ä–æ–º", true);
    })
    .finally(() => {
        // –•–æ–≤–∞—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
        if (spinner) spinner.style.display = 'none';
    });
}

/**
 * –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó –ø–∞—Ä–æ–ª—è
 * @param {string} password - –ü–∞—Ä–æ–ª—å –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏
 * @returns {Object} - –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ {valid: boolean, message: string}
 */
function validatePassword(password) {
    if (!password || password.length < 8)
        return { valid: false, message: getTranslation('min_8_chars', '–ü–∞—Ä–æ–ª—å –º–∞—î –º—ñ—Å—Ç–∏—Ç–∏ –Ω–µ –º–µ–Ω—à–µ 8 —Å–∏–º–≤–æ–ª—ñ–≤') };

    if ((password.match(/[a-zA-Z–∞-—è–ê-–Ø—ñ—ó—î“ë–Ü–á–Ñ“ê]/g) || []).length < 5)
        return { valid: false, message: getTranslation('min_5_letters', '–ü–∞—Ä–æ–ª—å –º–∞—î –º—ñ—Å—Ç–∏—Ç–∏ –Ω–µ –º–µ–Ω—à–µ 5 –ª—ñ—Ç–µ—Ä') };

    return { valid: true };
}

/**
 * –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Ö–µ—à—É–≤–∞–Ω–Ω—è –ø–∞—Ä–æ–ª—è (–ø—Ä–æ—Å—Ç–∞ —ñ–º—ñ—Ç–∞—Ü—ñ—è)
 * @param {string} password - –ü–∞—Ä–æ–ª—å –¥–ª—è —Ö–µ—à—É–≤–∞–Ω–Ω—è
 * @returns {string} - –•–µ—à –ø–∞—Ä–æ–ª—è
 */
function hashPassword(password) {
    let hash = 0;
    if (password.length === 0) return hash.toString();
    for (let i = 0; i < password.length; i++) {
        const char = password.charCodeAt(i);
        hash = ((hash << 5) - hash) + char;
        hash = hash & hash;
    }
    return hash.toString() + "winix";
}

/**
 * –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∞–≤–∞—Ç–∞—Ä–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
 */
function loadUserAvatar() {
    const headerAvatar = document.getElementById('profile-avatar');
    const profileAvatar = document.getElementById('profile-avatar-large');

    const username = localStorage.getItem('username') || 'WINIX User';
    const avatarSrc = localStorage.getItem('userAvatarSrc');
    const avatarId = localStorage.getItem('selectedAvatarId');

    function setAvatar(element) {
        if (!element) return;
        element.innerHTML = '';

        if (avatarSrc) {
            const img = new Image();
            img.src = avatarSrc;
            img.alt = username;
            img.onerror = () => {
                console.log('–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∞–≤–∞—Ç–∞—Ä–∞, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Ç–µ–∫—Å—Ç');
                element.textContent = username[0].toUpperCase();
            };
            element.appendChild(img);
        } else if (avatarId) {
            const src = localStorage.getItem(`${avatarId}Src`) || `assets/avatar${avatarId}.png`;
            const img = new Image();
            img.src = src;
            img.alt = username;
            img.onerror = () => {
                console.log('–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∞–≤–∞—Ç–∞—Ä–∞, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∑–∞–ø–∞—Å–Ω–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç');
                element.textContent = username[0].toUpperCase();
            };
            element.appendChild(img);
        } else {
            element.textContent = username[0].toUpperCase();
        }
    }

    setAvatar(headerAvatar);
    setAvatar(profileAvatar);
}

/**
 * –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–µ—Ä–µ–∫–ª–∞–¥—É
 * @param {string} key - –ö–ª—é—á –ø–µ—Ä–µ–∫–ª–∞–¥—É
 * @param {string} defaultText - –¢–µ–∫—Å—Ç –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
 * @returns {string} - –ü–µ—Ä–µ–∫–ª–∞–¥–µ–Ω–∏–π —Ç–µ–∫—Å—Ç
 */
function getTranslation(key, defaultText = key) {
    if (window.WinixLanguage && typeof window.WinixLanguage.getText === 'function') {
        try {
            return window.WinixLanguage.getText(key) || defaultText;
        } catch (error) {
            console.error(`–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–µ—Ä–µ–∫–ª–∞–¥—É –¥–ª—è –∫–ª—é—á–∞ ${key}:`, error);
            return defaultText;
        }
    }

    // –Ø–∫—â–æ –Ω–µ–º–∞—î –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –æ–±'—î–∫—Ç—É –∑ –ø–µ—Ä–µ–∫–ª–∞–¥–∞–º–∏, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –ª–æ–∫–∞–ª—å–Ω—ñ –ø–µ—Ä–µ–∫–ª–∞–¥–∏
    const translations = {
        "settings": "–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è",
        "edit_profile": "–†–µ–¥–∞–≥—É–≤–∞—Ç–∏ –ø—Ä–æ—Ñ—ñ–ª—å",
        "language_selection": "–í–∏–±—ñ—Ä –º–æ–≤–∏",
        "language_uk": "–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞",
        "language_en": "English",
        "language_ru": "–†—É—Å—Å–∫–∏–π",
        "app_settings": "–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –¥–æ–¥–∞—Ç–∫—É",
        "notifications": "–°–ø–æ–≤—ñ—â–µ–Ω–Ω—è",
        "security": "–ë–µ–∑–ø–µ–∫–∞",
        "show_seed": "–ü–æ–∫–∞–∑–∞—Ç–∏ SID —Ñ—Ä–∞–∑—É",
        "back": "–ù–∞–∑–∞–¥",
        "coins": "–ñ–µ—Ç–æ–Ω–∏",
        "user_id": "ID:",
        "settings_saved": "–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑–±–µ—Ä–µ–∂–µ–Ω–æ",
        "settings_error": "–ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è"
    };

    return translations[key] || defaultText;
}

/**
 * –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–µ–∫—Å—Ç—ñ–≤ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ –¥–æ –æ–±—Ä–∞–Ω–æ—ó –º–æ–≤–∏
 */
function updatePageTexts() {
    document.querySelectorAll('[data-lang-key]').forEach(element => {
        const key = element.getAttribute('data-lang-key');
        if (key) {
            element.textContent = getTranslation(key, key);
        }
    });
}

        function updatePageTexts() {
            document.querySelectorAll('[data-lang-key]').forEach(element => {
                const key = element.getAttribute('data-lang-key');
                if (key) {
                    element.textContent = getTranslation(key, key);
                }
            });
        }
        function showSeedPhrase() {
            console.log("–í–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó showSeedPhrase");
            const userId = localStorage.getItem('userId') || '12345678';
            const phrase = generateSeedPhrase(userId);

            document.querySelectorAll('.document-modal').forEach(modal => modal.remove());

            const modal = document.createElement('div');
            modal.className = 'document-modal show';
            modal.innerHTML = `
                <div class="seed-modal-content">
                    <div class="modal-header">
                        <div class="modal-title">${getTranslation('seed_phrase', 'SID —Ñ—Ä–∞–∑–∞')}</div>
                        <span class="close-modal">√ó</span>
                    </div>
                    <div class="modal-body">
                        <div class="restore-card">
                            <div class="restore-title">${getTranslation('your_seed_phrase', '–í–∞—à–∞ SID —Ñ—Ä–∞–∑–∞')}</div>
                            <div class="restore-subtitle">${getTranslation('save_seed', '–ó–±–µ—Ä–µ–∂—ñ—Ç—å —Ü—é —Ñ—Ä–∞–∑—É –≤ –Ω–∞–¥—ñ–π–Ω–æ–º—É –º—ñ—Å—Ü—ñ')}</div>
                            <button class="copy-button">${getTranslation('copy', '–ö–æ–ø—ñ—é–≤–∞—Ç–∏')}</button>
                            <div class="words-grid">
                                ${phrase.map((word, i) => `
                                    <div class="word-cell">
                                        <div class="word-number">${i + 1}.</div>
                                        <div class="word-value">${word}</div>
                                    </div>
                                `).join('')}
                            </div>
                            <button class="seed-continue-button">${getTranslation('done', '–ì–æ—Ç–æ–≤–æ')}</button>
                        </div>
                    </div>
                </div>
            `;
            document.body.appendChild(modal);

            modal.querySelector('.close-modal').onclick = () => modal.remove();
            modal.querySelector('.copy-button').onclick = () => {
                navigator.clipboard.writeText(phrase.join(' '))
                    .then(() => showToast(getTranslation('copied', '–°–∫–æ–ø—ñ–π–æ–≤–∞–Ω–æ')))
                    .catch(() => showToast(getTranslation('copy_error', '–ü–æ–º–∏–ª–∫–∞ –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è'), true));
            };
            modal.querySelector('.seed-continue-button').onclick = () => {
                localStorage.setItem('seedPhraseViewed', 'true');
                modal.remove();
            };
            modal.onclick = (e) => { if (e.target === modal) modal.remove(); };
        }

        function showSetPasswordModal(callback) {
            document.querySelectorAll('.document-modal').forEach(modal => modal.remove());

            const modal = document.createElement('div');
            modal.className = 'document-modal show';
            modal.innerHTML = `
                <div class="modal-content">
                    <div class="modal-header">
                        <div class="modal-title">${getTranslation('set_password', '–í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–∞—Ä–æ–ª—é')}</div>
                        <span class="close-modal">√ó</span>
                    </div>
                    <div class="modal-body">
                        <p>${getTranslation('password_requirements', '–ü–∞—Ä–æ–ª—å –º–∞—î –º—ñ—Å—Ç–∏—Ç–∏ –Ω–µ –º–µ–Ω—à–µ 8 —Å–∏–º–≤–æ–ª—ñ–≤, –≤–∫–ª—é—á–∞—é—á–∏ 5 –ª—ñ—Ç–µ—Ä')}</p>
                        <input type="password" id="new-password" placeholder="${getTranslation('password', '–ü–∞—Ä–æ–ª—å')}">
                        <input type="password" id="confirm-password" placeholder="${getTranslation('confirm', '–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è')}">
                        <div id="error-msg"></div>
                    </div>
                    <div class="modal-footer">
                        <button class="modal-button" id="save-password">${getTranslation('btn_save', '–ó–±–µ—Ä–µ–≥—Ç–∏')}</button>
                    </div>
                </div>
            `;
            document.body.appendChild(modal);

            const saveBtn = modal.querySelector('#save-password');
            saveBtn.onclick = () => {
                const pwd = modal.querySelector('#new-password').value;
                const confirm = modal.querySelector('#confirm-password').value;
                const error = modal.querySelector('#error-msg');

                if (pwd !== confirm) {
                    error.textContent = getTranslation('passwords_dont_match', '–ü–∞—Ä–æ–ª—ñ –Ω–µ —Å–ø—ñ–≤–ø–∞–¥–∞—é—Ç—å');
                    return;
                }
                const validation = validatePassword(pwd);
                if (!validation.valid) {
                    error.textContent = validation.message;
                    return;
                }

                const passwordHash = hashPassword(pwd);
                localStorage.setItem('passwordHash', passwordHash);
                localStorage.setItem('seedPhrasePasswordHash', passwordHash);

                modal.remove();
                if (typeof callback === 'function') {
                    callback(pwd);
                }
            };
            modal.querySelector('.close-modal').onclick = () => modal.remove();
            modal.onclick = (e) => { if (e.target === modal) modal.remove(); };
        }

        function showEnterPasswordModal(callback) {
            document.querySelectorAll('.document-modal').forEach(modal => modal.remove());

            const modal = document.createElement('div');
            modal.className = 'document-modal show';
            modal.innerHTML = `
                <div class="modal-content">
                    <div class="modal-header">
                        <div class="modal-title">${getTranslation('enter_password', '–í–≤–µ–¥—ñ—Ç—å –ø–∞—Ä–æ–ª—å')}</div>
                        <span class="close-modal">√ó</span>
                    </div>
                    <div class="modal-body">
                        <input type="password" id="enter-password" placeholder="${getTranslation('your_password', '–í–∞—à –ø–∞—Ä–æ–ª—å')}">
                        <div id="error-msg"></div>
                    </div>
                    <div class="modal-footer">
                        <button class="modal-button" id="check-password">${getTranslation('check', '–ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏')}</button>
                    </div>
                </div>
            `;
            document.body.appendChild(modal);

            const checkBtn = modal.querySelector('#check-password');
            checkBtn.onclick = () => {
                const pwd = modal.querySelector('#enter-password').value;
                const error = modal.querySelector('#error-msg');

                const savedPassHash = localStorage.getItem('passwordHash');
                const savedSeedHash = localStorage.getItem('seedPhrasePasswordHash');
                const inputHash = hashPassword(pwd);

                if (inputHash === savedPassHash || inputHash === savedSeedHash) {
                    modal.remove();
                    if (typeof callback === 'function') {
                        callback(pwd);
                    }
                } else {
                    error.textContent = getTranslation('wrong_password', '–ù–µ–≤—ñ—Ä–Ω–∏–π –ø–∞—Ä–æ–ª—å');
                }
            };
            modal.querySelector('.close-modal').onclick = () => modal.remove();
            modal.onclick = (e) => { if (e.target === modal) modal.remove(); };
        }

        function handleShowSeedPhrase() {
            console.log("–í–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó handleShowSeedPhrase");
            try {
                const savedPassHash = localStorage.getItem('passwordHash');
                const savedSeedHash = localStorage.getItem('seedPhrasePasswordHash');
                const hasPassword = savedPassHash || savedSeedHash;

                console.log("–ù–∞—è–≤–Ω—ñ—Å—Ç—å –ø–∞—Ä–æ–ª—é:", !!hasPassword);

                if (!hasPassword) {
                    console.log("–ü–∞—Ä–æ–ª—å –≤—ñ–¥—Å—É—Ç–Ω—ñ–π, –ø–æ–∫–∞–∑—É—î–º–æ –º–æ–¥–∞–ª–∫—É –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–∞—Ä–æ–ª—é");
                    showSetPasswordModal(function(password) {
                        console.log("–ü–∞—Ä–æ–ª—å –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ, –ø–æ–∫–∞–∑—É—î–º–æ SID —Ñ—Ä–∞–∑—É");
                        showSeedPhrase();
                    });
                } else {
                    console.log("–ü–∞—Ä–æ–ª—å –Ω–∞—è–≤–Ω–∏–π, –ø–æ–∫–∞–∑—É—î–º–æ –º–æ–¥–∞–ª–∫—É –≤–≤–µ–¥–µ–Ω–Ω—è –ø–∞—Ä–æ–ª—é");
                    showEnterPasswordModal(function(password) {
                        console.log("–ü–∞—Ä–æ–ª—å –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ, –ø–æ–∫–∞–∑—É—î–º–æ SID —Ñ—Ä–∞–∑—É");
                        showSeedPhrase();
                    });
                }
            } catch (error) {
                console.error("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–±—Ä–æ–±—Ü—ñ –ø–æ–∫–∞–∑—É SID —Ñ—Ä–∞–∑–∏:", error);
                showToast("–í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Å–ø—Ä–æ–±—ñ –ø–æ–∫–∞–∑–∞—Ç–∏ SID —Ñ—Ä–∞–∑—É", true);
            }
        }

        function showLicenseModal() {
            document.querySelectorAll('.document-modal').forEach(modal => modal.remove());

            const modal = document.createElement('div');
            modal.className = 'document-modal show';
            modal.innerHTML = `
                <div class="modal-content">
                    <div class="modal-header">
                        <div class="modal-title">–õ—ñ—Ü–µ–Ω–∑—ñ–π–Ω–∞ —É–≥–æ–¥–∞ WINIX</div>
                        <span class="close-modal">√ó</span>
                    </div>
                    <div class="modal-scrollable-content">
                        <p>–í–µ—Ä—Å—ñ—è 1.0, –ë–µ—Ä–µ–∑–µ–Ω—å 2025</p>
                        <br>
                        <p>–¶—è –ª—ñ—Ü–µ–Ω–∑—ñ–π–Ω–∞ —É–≥–æ–¥–∞ ("–£–≥–æ–¥–∞") —É–∫–ª–∞–¥–µ–Ω–∞ –º—ñ–∂ WINIX ("–õ—ñ—Ü–µ–Ω–∑—ñ–∞—Ä") —Ç–∞ –í–∞–º–∏ ("–õ—ñ—Ü–µ–Ω–∑—ñ–∞—Ç").</p>
                        <br>
                        <p>1. –ù–ê–î–ê–ù–ù–Ø –õ–Ü–¶–ï–ù–ó–Ü–á</p>
                        <p>–õ—ñ—Ü–µ–Ω–∑—ñ–∞—Ä –Ω–∞–¥–∞—î –õ—ñ—Ü–µ–Ω–∑—ñ–∞—Ç—É –Ω–µ–≤–∏–∫–ª—é—á–Ω—É –ª—ñ—Ü–µ–Ω–∑—ñ—é –Ω–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –ø—Ä–æ–≥—Ä–∞–º–Ω–æ–≥–æ –∑–∞–±–µ–∑–ø–µ—á–µ–Ω–Ω—è WINIX ("–ü—Ä–æ–≥—Ä–∞–º–Ω–µ –∑–∞–±–µ–∑–ø–µ—á–µ–Ω–Ω—è") –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ –¥–æ —É–º–æ–≤ —Ü—ñ—î—ó –£–≥–æ–¥–∏.</p>
                        <br>
                        <p>2. –û–ë–ú–ï–ñ–ï–ù–ù–Ø</p>
                        <p>–õ—ñ—Ü–µ–Ω–∑—ñ–∞—Ç –Ω–µ –º–∞—î –ø—Ä–∞–≤–∞:</p>
                        <p>- –ö–æ–ø—ñ—é–≤–∞—Ç–∏ –∞–±–æ —Ä–æ–∑–ø–æ–≤—Å—é–¥–∂—É–≤–∞—Ç–∏ –ü—Ä–æ–≥—Ä–∞–º–Ω–µ –∑–∞–±–µ–∑–ø–µ—á–µ–Ω–Ω—è</p>
                        <p>- –ú–æ–¥–∏—Ñ—ñ–∫—É–≤–∞—Ç–∏, –¥–µ–∫–æ–º–ø—ñ–ª—é–≤–∞—Ç–∏ –∞–±–æ –¥–∏–∑–∞—Å–µ–º–±–ª—é–≤–∞—Ç–∏ –ü—Ä–æ–≥—Ä–∞–º–Ω–µ –∑–∞–±–µ–∑–ø–µ—á–µ–Ω–Ω—è</p>
                        <p>- –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –ü—Ä–æ–≥—Ä–∞–º–Ω–µ –∑–∞–±–µ–∑–ø–µ—á–µ–Ω–Ω—è –¥–ª—è –Ω–µ–∑–∞–∫–æ–Ω–Ω–∏—Ö —Ü—ñ–ª–µ–π</p>
                        <br>
                        <p>3. –ü–†–ê–í–ê –í–õ–ê–°–ù–û–°–¢–Ü</p>
                        <p>–ü—Ä–æ–≥—Ä–∞–º–Ω–µ –∑–∞–±–µ–∑–ø–µ—á–µ–Ω–Ω—è —î –≤–ª–∞—Å–Ω—ñ—Å—Ç—é –õ—ñ—Ü–µ–Ω–∑—ñ–∞—Ä–∞ —Ç–∞ –∑–∞—Ö–∏—â–µ–Ω–æ –∑–∞–∫–æ–Ω–∞–º–∏ –ø—Ä–æ —ñ–Ω—Ç–µ–ª–µ–∫—Ç—É–∞–ª—å–Ω—É –≤–ª–∞—Å–Ω—ñ—Å—Ç—å.</p>
                        <br>
                        <p>4. –ì–ê–†–ê–ù–¢–Ü–á –¢–ê –í–Ü–î–ú–û–í–ê –í–Ü–î –í–Ü–î–ü–û–í–Ü–î–ê–õ–¨–ù–û–°–¢–Ü</p>
                        <p>–ü—Ä–æ–≥—Ä–∞–º–Ω–µ –∑–∞–±–µ–∑–ø–µ—á–µ–Ω–Ω—è –Ω–∞–¥–∞—î—Ç—å—Å—è "—è–∫ —î" –±–µ–∑ –±—É–¥—å-—è–∫–∏—Ö –≥–∞—Ä–∞–Ω—Ç—ñ–π.</p>
                        <br>
                        <p>5. –í–Ü–î–®–ö–û–î–£–í–ê–ù–ù–Ø –ó–ë–ò–¢–ö–Ü–í</p>
                        <p>–õ—ñ—Ü–µ–Ω–∑—ñ–∞—Ç –ø–æ–≥–æ–¥–∂—É—î—Ç—å—Å—è –≤—ñ–¥—à–∫–æ–¥—É–≤–∞—Ç–∏ –õ—ñ—Ü–µ–Ω–∑—ñ–∞—Ä—É –±—É–¥—å-—è–∫—ñ –∑–±–∏—Ç–∫–∏, —â–æ –≤–∏–Ω–∏–∫–ª–∏ –≤–Ω–∞—Å–ª—ñ–¥–æ–∫ –ø–æ—Ä—É—à–µ–Ω–Ω—è —Ü—ñ—î—ó –£–≥–æ–¥–∏.</p>
                        <br>
                        <p>6. –ü–†–ò–ü–ò–ù–ï–ù–ù–Ø</p>
                        <p>–¶—è –£–≥–æ–¥–∞ –¥—ñ—î –¥–æ —ó—ó –ø—Ä–∏–ø–∏–Ω–µ–Ω–Ω—è. –õ—ñ—Ü–µ–Ω–∑—ñ–∞—Ä –º–∞—î –ø—Ä–∞–≤–æ –ø—Ä–∏–ø–∏–Ω–∏—Ç–∏ –¥—ñ—é —Ü—ñ—î—ó –£–≥–æ–¥–∏ –≤ —Ä–∞–∑—ñ –ø–æ—Ä—É—à–µ–Ω–Ω—è —ó—ó —É–º–æ–≤ –õ—ñ—Ü–µ–Ω–∑—ñ–∞—Ç–æ–º.</p>
                        <br>
                        <p>7. –ó–ê–ì–ê–õ–¨–ù–Ü –ü–û–õ–û–ñ–ï–ù–ù–Ø</p>
                        <p>–¶—è –£–≥–æ–¥–∞ —Ä–µ–≥—É–ª—é—î—Ç—å—Å—è –∑–∞–∫–æ–Ω–æ–¥–∞–≤—Å—Ç–≤–æ–º –£–∫—Ä–∞—ó–Ω–∏. –í—Å—ñ —Å–ø–æ—Ä–∏, —â–æ –≤–∏–Ω–∏–∫–∞—é—Ç—å –≤ –∑–≤'—è–∑–∫—É –∑ —Ü—ñ—î—é –£–≥–æ–¥–æ—é, –ø—ñ–¥–ª—è–≥–∞—é—Ç—å –≤–∏—Ä—ñ—à–µ–Ω–Ω—é –≤ —Å—É–¥–∞—Ö –£–∫—Ä–∞—ó–Ω–∏.</p>
                    </div>
                    <button class="modal-back-button">${getTranslation('back', '–ù–∞–∑–∞–¥')}</button>
                </div>
            `;
            document.body.appendChild(modal);

            modal.querySelector('.close-modal').onclick = () => modal.remove();
            modal.querySelector('.modal-back-button').onclick = () => modal.remove();
            modal.onclick = (e) => { if (e.target === modal) modal.remove(); };
        }

        function showAgreementModal() {
            document.querySelectorAll('.document-modal').forEach(modal => modal.remove());

            const modal = document.createElement('div');
            modal.className = 'document-modal show';
            modal.innerHTML = `
                <div class="modal-content">
                    <div class="modal-header">
                        <div class="modal-title">–£–≥–æ–¥–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ WINIX</div>
                        <span class="close-modal">√ó</span>
                    </div>
                    <div class="modal-scrollable-content">
                        <p>–í–µ—Ä—Å—ñ—è 1.0, –ë–µ—Ä–µ–∑–µ–Ω—å 2025</p>
                        <br>
                        <p>–õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ –¥–æ WINIX!</p>
                        <br>
                        <p>–¶—è –£–≥–æ–¥–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ ("–£–≥–æ–¥–∞") —Ä–µ–≥—É–ª—é—î –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –í–∞–º–∏ –º–æ–±—ñ–ª—å–Ω–æ–≥–æ –¥–æ–¥–∞—Ç–∫—É WINIX —Ç–∞ –≤—Å—ñ—Ö –ø–æ–≤'—è–∑–∞–Ω–∏—Ö –ø–æ—Å–ª—É–≥.</p>
                        <br>
                        <p>1. –ü–†–ò–ô–ù–Ø–¢–¢–Ø –£–ú–û–í</p>
                        <p>–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ WINIX, –í–∏ –ø–æ–≥–æ–¥–∂—É—î—Ç–µ—Å—å –∑ —É–º–æ–≤–∞–º–∏ —Ü—ñ—î—ó –£–≥–æ–¥–∏. –Ø–∫—â–æ –í–∏ –Ω–µ –ø–æ–≥–æ–¥–∂—É—î—Ç–µ—Å—å –∑ —É–º–æ–≤–∞–º–∏, –í–∏ –Ω–µ –º–∞—î—Ç–µ –ø—Ä–∞–≤–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ WINIX.</p>
                        <br>
                        <p>2. –†–ï–Ñ–°–¢–†–ê–¶–Ü–Ø –¢–ê –ë–ï–ó–ü–ï–ö–ê</p>
                        <p>–î–ª—è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è WINIX –í–∞–º –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ —Å—Ç–≤–æ—Ä–∏—Ç–∏ –æ–±–ª—ñ–∫–æ–≤–∏–π –∑–∞–ø–∏—Å. –í–∏ –∑–æ–±–æ–≤'—è–∑–∞–Ω—ñ –Ω–∞–¥–∞—Ç–∏ –¥–æ—Å—Ç–æ–≤—ñ—Ä–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é —Ç–∞ –∑–∞–±–µ–∑–ø–µ—á–∏—Ç–∏ –±–µ–∑–ø–µ–∫—É —Å–≤–æ–≥–æ –æ–±–ª—ñ–∫–æ–≤–æ–≥–æ –∑–∞–ø–∏—Å—É.</p>
                        <br>
                        <p>3. –ö–û–ù–§–Ü–î–ï–ù–¶–Ü–ô–ù–Ü–°–¢–¨</p>
                        <p>–í–∞—à–∞ –∫–æ–Ω—Ñ—ñ–¥–µ–Ω—Ü—ñ–π–Ω—ñ—Å—Ç—å —î –≤–∞–∂–ª–∏–≤–æ—é –¥–ª—è –Ω–∞—Å. –ó–±—ñ—Ä —Ç–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –í–∞—à–∏—Ö –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∏—Ö –¥–∞–Ω–∏—Ö —Ä–µ–≥—É–ª—é—î—Ç—å—Å—è –Ω–∞—à–æ—é –ü–æ–ª—ñ—Ç–∏–∫–æ—é –∫–æ–Ω—Ñ—ñ–¥–µ–Ω—Ü—ñ–π–Ω–æ—Å—Ç—ñ.</p>
                        <br>
                        <p>4. –í–ò–ö–û–†–ò–°–¢–ê–ù–ù–Ø –¢–û–ö–ï–ù–Ü–í WINIX</p>
                        <p>–¢–æ–∫–µ–Ω–∏ WINIX —î –≤–Ω—É—Ç—Ä—ñ—à–Ω—å–æ—é –≤–∞–ª—é—Ç–æ—é –¥–æ–¥–∞—Ç–∫—É —Ç–∞ –Ω–µ –º–∞—é—Ç—å —Ä–µ–∞–ª—å–Ω–æ—ó –≤–∞—Ä—Ç–æ—Å—Ç—ñ. –í–∏ –Ω–µ –º–∞—î—Ç–µ –ø—Ä–∞–≤–∞ –ø—Ä–æ–¥–∞–≤–∞—Ç–∏ –∞–±–æ –æ–±–º—ñ–Ω—é–≤–∞—Ç–∏ —Ç–æ–∫–µ–Ω–∏ WINIX –∑–∞ –º–µ–∂–∞–º–∏ –¥–æ–¥–∞—Ç–∫—É.</p>
                        <br>
                        <p>5. –ü–†–ê–í–ò–õ–ê –ü–û–í–ï–î–Ü–ù–ö–ò</p>
                        <p>–í–∏ –∑–æ–±–æ–≤'—è–∑—É—î—Ç–µ—Å—å –Ω–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ WINIX –¥–ª—è –Ω–µ–∑–∞–∫–æ–Ω–Ω–∏—Ö –∞–±–æ —à–∞—Ö—Ä–∞–π—Å—å–∫–∏—Ö —Ü—ñ–ª–µ–π.</p>
                        <br>
                        <p>6. –ó–ú–Ü–ù–ò –í –£–ì–û–î–Ü</p>
                        <p>–ú–∏ –∑–∞–ª–∏—à–∞—î–º–æ –∑–∞ —Å–æ–±–æ—é –ø—Ä–∞–≤–æ –∑–º—ñ–Ω—é–≤–∞—Ç–∏ —Ü—é –£–≥–æ–¥—É –≤ –±—É–¥—å-—è–∫–∏–π —á–∞—Å. –ó–º—ñ–Ω–∏ –≤—Å—Ç—É–ø–∞—é—Ç—å –≤ —Å–∏–ª—É –ø—ñ—Å–ª—è —ó—Ö –ø—É–±–ª—ñ–∫–∞—Ü—ñ—ó –≤ –¥–æ–¥–∞—Ç–∫—É.</p>
                        <br>
                        <p>7. –ü–†–ò–ü–ò–ù–ï–ù–ù–Ø</p>
                        <p>–ú–∏ –∑–∞–ª–∏—à–∞—î–º–æ –∑–∞ —Å–æ–±–æ—é –ø—Ä–∞–≤–æ –ø—Ä–∏–ø–∏–Ω–∏—Ç–∏ –∞–±–æ –æ–±–º–µ–∂–∏—Ç–∏ –í–∞—à –¥–æ—Å—Ç—É–ø –¥–æ WINIX –≤ —Ä–∞–∑—ñ –ø–æ—Ä—É—à–µ–Ω–Ω—è —Ü—ñ—î—ó –£–≥–æ–¥–∏.</p>
                    </div>
                    <button class="modal-back-button">${getTranslation('back', '–ù–∞–∑–∞–¥')}</button>
                </div>
            `;
            document.body.appendChild(modal);

            modal.querySelector('.close-modal').onclick = () => modal.remove();
            modal.querySelector('.modal-back-button').onclick = () => modal.remove();
            modal.onclick = (e) => { if (e.target === modal) modal.remove(); };
        }

        /**
 * –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –ø–æ–¥—ñ–π –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ
 */
function setupEventHandlers() {
    console.log("–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –ø–æ–¥—ñ–π");

    // –ö–Ω–æ–ø–∫–∞ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é
    const editProfileBtn = document.getElementById('edit-profile');
    if (editProfileBtn) {
        editProfileBtn.addEventListener('click', function() {
            showEditProfileModal();
        });
    }

    // –û–±—Ä–æ–±–∫–∞ –≤–∏–±–æ—Ä—É –º–æ–≤–∏
    const languageOptions = document.querySelectorAll('.language-option');
    languageOptions.forEach(option => {
        option.addEventListener('click', function() {
            // –ó–Ω—ñ–º–∞—î–º–æ –∞–∫—Ç–∏–≤–Ω–∏–π —Å—Ç–∞–Ω –∑ —É—Å—ñ—Ö –º–æ–≤
            languageOptions.forEach(opt => opt.classList.remove('active'));

            // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –∞–∫—Ç–∏–≤–Ω–∏–π —Å—Ç–∞–Ω –¥–ª—è –æ–±—Ä–∞–Ω–æ—ó –º–æ–≤–∏
            this.classList.add('active');

            // –û—Ç—Ä–∏–º—É—î–º–æ –∫–æ–¥ –æ–±—Ä–∞–Ω–æ—ó –º–æ–≤–∏
            const selectedLang = this.getAttribute('data-lang');

            // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –º–æ–≤–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ —Ç–∞ –≤ localStorage
            saveUserSettings({ language: selectedLang });

            // –û–Ω–æ–≤–ª—é—î–º–æ —Ç–µ–∫—Å—Ç–∏ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ, —è–∫—â–æ —î –≥–ª–æ–±–∞–ª—å–Ω–∏–π –æ–±'—î–∫—Ç –∑ –ø–µ—Ä–µ–∫–ª–∞–¥–∞–º–∏
            if (window.WinixLanguage && typeof window.WinixLanguage.changeLang === 'function') {
                window.WinixLanguage.changeLang(selectedLang);
            } else {
                // –Ü–Ω–∞–∫—à–µ –ø—Ä–æ—Å—Ç–æ –æ–Ω–æ–≤–ª—é—î–º–æ —Ç–µ–∫—Å—Ç–∏ —á–µ—Ä–µ–∑ –Ω–∞—à—É —Ñ—É–Ω–∫—Ü—ñ—é
                updatePageTexts();
            }
        });
    });

    // –ü–µ—Ä–µ–º–∏–∫–∞—á —Å–ø–æ–≤—ñ—â–µ–Ω—å
    const notificationsToggle = document.getElementById('notifications-toggle');
    if (notificationsToggle) {
        notificationsToggle.addEventListener('change', function() {
            saveUserSettings({ notifications_enabled: this.checked });
        });
    }

    // –ö–Ω–æ–ø–∫–∞ –ø–æ–∫–∞–∑—É SID —Ñ—Ä–∞–∑–∏
    const showSeedBtn = document.getElementById('show-seed-phrase');
    if (showSeedBtn) {
        showSeedBtn.addEventListener('click', function() {
            handleShowSeedPhrase();
        });
    }

    // –ù–∞–≤—ñ–≥–∞—Ü—ñ–π–Ω—ñ –µ–ª–µ–º–µ–Ω—Ç–∏
    document.querySelectorAll('.nav-item').forEach(item => {
        item.addEventListener('click', function() {
            const section = this.getAttribute('data-section');

            // –Ø–∫—â–æ –≤–∂–µ –Ω–∞ —Ü—ñ–π —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ, –Ω—ñ—á–æ–≥–æ –Ω–µ —Ä–æ–±–∏–º–æ
            if (section === 'general') {
                console.log('–í–∂–µ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å');
                return;
            }

            // –ü–µ—Ä–µ—Ö–æ–¥–∏–º–æ –Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—É —Å—Ç–æ—Ä—ñ–Ω–∫—É
            switch (section) {
                case 'home':
                    navigateTo('index.html');
                    break;
                case 'earn':
                    navigateTo('earn.html');
                    break;
                case 'referrals':
                    navigateTo('referrals.html');
                    break;
                case 'wallet':
                    navigateTo('wallet.html');
                    break;
                default:
                    navigateTo(`${section}.html`);
            }
        });
    });

    // –ö–Ω–æ–ø–∫–∏ –≤–Ω–∏–∑—É —Å—Ç–æ—Ä—ñ–Ω–∫–∏
    const helpButton = document.getElementById('help-button');
    const licenseButton = document.getElementById('license-button');
    const agreementButton = document.getElementById('agreement-button');

    if (helpButton) {
        helpButton.addEventListener('click', function(e) {
            if (!this.getAttribute('href')) {
                e.preventDefault();
                window.open('https://t.me/Winix_Support', '_blank');
            }
        });
    }

    if (licenseButton) {
        licenseButton.addEventListener('click', function() {
            showLicenseModal();
        });
    }

    if (agreementButton) {
        agreementButton.addEventListener('click', function() {
            showAgreementModal();
        });
    }

    // –û–±—Ä–æ–±–Ω–∏–∫ –∫–ª—ñ–∫—É –Ω–∞ –∞–≤–∞—Ç–∞—Ä —É —Ö–µ–¥–µ—Ä—ñ
    const profileAvatar = document.getElementById('profile-avatar');
    if (profileAvatar) {
        profileAvatar.addEventListener('click', function() {
            showEditProfileModal();
        });
    }

    console.log("–û–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π —É—Å–ø—ñ—à–Ω–æ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–æ");
}

/**
 * –î–æ–¥–∞–≤–∞–Ω–Ω—è —Å–ø—ñ–Ω–Ω–µ—Ä–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è, —è–∫—â–æ –π–æ–≥–æ –Ω–µ–º–∞—î
 */
function addLoadingSpinner() {
    if (!document.getElementById('loading-spinner')) {
        const spinner = document.createElement('div');
        spinner.id = 'loading-spinner';
        spinner.className = 'spinner';
        spinner.innerHTML = '<div class="spinner-inner"></div>';
        document.body.appendChild(spinner);

        const spinnerStyle = document.createElement('style');
        spinnerStyle.textContent = `
            .spinner {
                display: none;
                position: fixed;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                background-color: rgba(0, 0, 0, 0.5);
                z-index: 9999;
                justify-content: center;
                align-items: center;
                backdrop-filter: blur(2px);
            }
            .spinner-inner {
                width: 50px;
                height: 50px;
                border: 4px solid rgba(0, 201, 167, 0.3);
                border-radius: 50%;
                border-top: 4px solid rgba(0, 201, 167, 1);
                animation: spin 1s linear infinite;
            }
            @keyframes spin {
                0% { transform: rotate(0deg); }
                100% { transform: rotate(360deg); }
            }
        `;
        document.head.appendChild(spinnerStyle);
    }
}

/**
 * –û—Å–Ω–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏
 */
document.addEventListener('DOMContentLoaded', function() {
    console.log("DOMContentLoaded: –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å");

    // –î–æ–¥–∞—î–º–æ —Å–ø—ñ–Ω–Ω–µ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
    addLoadingSpinner();

    // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ —Å–µ—Ä–≤–µ—Ä–∞
    loadUserData();

    // –ó–∞–ø—É—Å–∫–∞—î–º–æ –ø–µ—Ä—ñ–æ–¥–∏—á–Ω–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
    startPeriodicUpdates();

    // –ù–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π
    setupEventHandlers();

    console.log("‚úÖ –°—Ç–æ—Ä—ñ–Ω–∫—É –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å —É—Å–ø—ñ—à–Ω–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ");
});

// –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –ø—Ä–∏ –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –∑ –∫–µ—à—É
window.addEventListener('pageshow', function(event) {
    if (event.persisted) {
        console.log("–°—Ç–æ—Ä—ñ–Ω–∫–∞ –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–∞ –∑ –∫–µ—à—É, –æ–Ω–æ–≤–ª—é—î–º–æ –¥–∞–Ω—ñ");
        loadUserData();
    }
});

// –û–±—Ä–æ–±–∫–∞ –≥–ª–æ–±–∞–ª—å–Ω–∏—Ö –ø–æ–º–∏–ª–æ–∫
window.onerror = function(message, source, lineno, colno, error) {
    console.error(`–ì–ª–æ–±–∞–ª—å–Ω–∞ –ø–æ–º–∏–ª–∫–∞ JavaScript: ${message} —É ${source}:${lineno}:${colno}`);
    showToast("–í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å –≤–∏–∫–æ–Ω–∞–Ω–Ω—è —Å–∫—Ä–∏–ø—Ç—É", true);
    return true; // –ó–∞–ø–æ–±—ñ–≥–∞—î–º–æ –≤–∏–≤–µ–¥–µ–Ω–Ω—é –ø–æ–º–∏–ª–∫–∏ –≤ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞
};

        if (document.readyState === 'complete' || document.readyState === 'interactive') {
            // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –¥–∞–Ω—ñ –∑ —Å–µ—Ä–≤–µ—Ä–∞
            loadUserData();

            // –ó–∞–ø—É—Å–∫–∞—î–º–æ –ø–µ—Ä—ñ–æ–¥–∏—á–Ω–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
            startPeriodicUpdates();

            loadUserSettings();
            loadUserAvatar();
            updateBalanceDisplay();
            setupEventHandlers();
        }

        console.log("‚úÖ –°—Ç–æ—Ä—ñ–Ω–∫—É –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å —É—Å–ø—ñ—à–Ω–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ");
        document.dispatchEvent(new CustomEvent('settings-initialized'));

        const errorStyles = document.createElement('style');
        errorStyles.textContent = `
            #error-msg {
                color: #f44336;
                background-color: rgba(244, 67, 54, 0.1);
                border-left: 3px solid #f44336;
                padding: 8px 12px;
                margin: 10px 0;
                border-radius: 4px;
                font-size: 14px;
                transition: all 0.3s ease;
            }
            .wrong-password-message {
                color: #f44336;
                font-weight: bold;
                padding: 10px;
                background-color: rgba(244, 67, 54, 0.1);
                border-radius: 5px;
                margin-top: 10px;
            }
        `;
        document.head.appendChild(errorStyles);

        function checkMobileVersion() {
            const isMobile = window.innerWidth < 768;
            document.body.classList.toggle('mobile-version', isMobile);
        }

        window.addEventListener('resize', checkMobileVersion);
        checkMobileVersion();

        if (window.Telegram && window.Telegram.WebApp) {
            window.Telegram.WebApp.ready();
            window.Telegram.WebApp.expand();
        }
        /**
 * –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ —Å–µ—Ä–≤–µ—Ä–∞
 */
function loadUserData() {
    console.log("–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ —Å–µ—Ä–≤–µ—Ä–∞...");

    // –ü–æ–∫–∞–∑—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è (—è–∫—â–æ —î)
    const spinner = document.getElementById('loading-spinner');
    if (spinner) spinner.style.display = 'flex';

    // –û—Ç—Ä–∏–º—É—î–º–æ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    const userId = localStorage.getItem('userId') || '12345678';

    // –†–æ–±–∏–º–æ –∑–∞–ø–∏—Ç –¥–æ API
    fetch(`/api/user/${userId}`)
        .then(response => {
            if (!response.ok) {
                throw new Error(`–ü–æ–º–∏–ª–∫–∞ HTTP: ${response.status}`);
            }
            return response.json();
        })
        .then(result => {
            if (result.status === 'success' && result.data) {
                const userData = result.data;
                console.log("–û—Ç—Ä–∏–º–∞–Ω–æ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:", userData);

                // –û–Ω–æ–≤–ª—é—î–º–æ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤ –≤—Å—ñ—Ö –µ–ª–µ–º–µ–Ω—Ç–∞—Ö
                document.getElementById('user-id').textContent = userData.id;
                document.getElementById('user-id-profile').textContent = userData.id;

                // –û–Ω–æ–≤–ª—é—î–º–æ —ñ–º'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
                const username = userData.username || 'WINIX User';
                document.getElementById('profile-name').textContent = username;
                localStorage.setItem('username', username);

                // –û–Ω–æ–≤–ª—é—î–º–æ –±–∞–ª–∞–Ω—Å —Ç–æ–∫–µ–Ω—ñ–≤
                const tokens = userData.balance || 0;
                document.getElementById('user-tokens').textContent = tokens.toFixed(2);
                localStorage.setItem('userTokens', tokens.toString());

                // –û–Ω–æ–≤–ª—é—î–º–æ –±–∞–ª–∞–Ω—Å –∂–µ—Ç–æ–Ω—ñ–≤
                const coins = userData.coins || 0;
                document.getElementById('user-coins').textContent = coins.toString();
                localStorage.setItem('userCoins', coins.toString());

                // –û–Ω–æ–≤–ª—é—î–º–æ –∞–≤–∞—Ç–∞—Ä
                loadUserAvatar();

                // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
                loadUserSettings();

                // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ ID –¥–ª—è –ø–æ–¥–∞–ª—å—à–∏—Ö –∑–∞–ø–∏—Ç—ñ–≤
                localStorage.setItem('userId', userData.id);

                console.log("‚úÖ –î–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —É—Å–ø—ñ—à–Ω–æ –æ–Ω–æ–≤–ª–µ–Ω–æ –∑ —Å–µ—Ä–≤–µ—Ä–∞");
            } else {
                console.warn("–û—Ç—Ä–∏–º–∞–Ω–æ –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω—ñ –¥–∞–Ω—ñ:", result);
                showToast("–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –∑ —Å–µ—Ä–≤–µ—Ä–∞", true);
            }
        })
        .catch(error => {
            console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –∑ —Å–µ—Ä–≤–µ—Ä–∞:', error);
            showToast("–ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ —Å–µ—Ä–≤–µ—Ä–∞. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.", true);
        })
        .finally(() => {
            // –•–æ–≤–∞—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
            if (spinner) spinner.style.display = 'none';
        });
}

/**
 * –§—É–Ω–∫—Ü—ñ—è –ø–µ—Ä—ñ–æ–¥–∏—á–Ω–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö
 */
function startPeriodicUpdates() {
    console.log("–ó–∞–ø—É—Å–∫ –ø–µ—Ä—ñ–æ–¥–∏—á–Ω–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö");

    // –û–Ω–æ–≤–ª—é—î–º–æ –¥–∞–Ω—ñ –∫–æ–∂–Ω—ñ 30 —Å–µ–∫—É–Ω–¥
    setInterval(loadUserData, 30000);
}
   </script>
</body>
</html>
\`\`\`

**New JS Backend Code:**
\`\`\`js
/**
 * settings.js - –ú–æ–¥—É–ª—å –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è–º–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —Ç–∞ SID-—Ñ—Ä–∞–∑–∞–º–∏
 * –ü–æ–≤–Ω—ñ—Å—Ç—é –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤–µ—Ä—Å—ñ—è –∑ —É—Å—É–Ω–µ–Ω–Ω—è–º –ø—Ä–æ–±–ª–µ–º –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å
 */

(function() {
    'use strict';

    console.log("‚öôÔ∏è SETTINGS: –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –º–æ–¥—É–ª—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å");

    // –ì–ª–æ–±–∞–ª—å–Ω—ñ –∑–º—ñ–Ω–Ω—ñ –¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª—é —Å—Ç–∞–Ω—É
    let _currentModal = null;
    let _loadingTimeout = null;
    let _isProcessing = false;

    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ç–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è API
    let api = null;
    if (typeof window.WinixAPI === 'object' && typeof window.WinixAPI.apiRequest === 'function') {
        api = window.WinixAPI.apiRequest;
        console.log("‚úÖ SETTINGS: API —É—Å–ø—ñ—à–Ω–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ —á–µ—Ä–µ–∑ WinixAPI");
    } else if (typeof window.apiRequest === 'function') {
        api = window.apiRequest;
        console.log("‚úÖ SETTINGS: API —É—Å–ø—ñ—à–Ω–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ —á–µ—Ä–µ–∑ apiRequest");
    } else {
        console.error("‚ùå SETTINGS: API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π. –°—Ç–≤–æ—Ä—é—î–º–æ –∑–∞–≥–ª—É—à–∫—É.");
        // –°—Ç–≤–æ—Ä—é—î–º–æ –∑–∞–≥–ª—É—à–∫—É –¥–ª—è API, —â–æ–± —É–Ω–∏–∫–Ω—É—Ç–∏ –ø–æ–º–∏–ª–æ–∫
        api = function(endpoint, method, data, options) {
            console.warn(`üìå SETTINGS: –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è API –∑–∞–≥–ª—É—à–∫–∏ –¥–ª—è ${endpoint}`);
            return new Promise((resolve) => {
                // –ó–∞–≤–∂–¥–∏ –ø—Ä–∏—Ö–æ–≤—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø–µ—Ä–µ–¥ –≤—ñ–¥–ø–æ–≤—ñ–¥–¥—é
                setTimeout(() => {
                    if (window.hideLoading) window.hideLoading();

                    // –°–∏–º—É–ª—é—î–º–æ —Ä—ñ–∑–Ω—ñ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ –µ–Ω–¥–ø–æ—ñ–Ω—Ç–∞
                    if (endpoint.includes('seed-phrase')) {
                        resolve({
                            status: 'success',
                            data: {
                                seed_phrase: "solve notable quick pluck tribe dinosaur cereal casino rail media final curve"
                            }
                        });
                    } else {
                        resolve({
                            status: 'success',
                            data: {},
                            message: '–°–∏–º—É–ª—å–æ–≤–∞–Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å API'
                        });
                    }
                }, 500);
            });
        };
    }

    // –î–æ–¥–∞—î–º–æ –ø—Ä–µ–º—ñ—É–º-—Å—Ç–∏–ª—ñ
    function addPremiumStyles() {
        if (!document.getElementById('premium-styles')) {
            const styleElement = document.createElement('style');
            styleElement.id = 'premium-styles';
            styleElement.textContent = `
            /* –ü–ª–∞–≤–Ω–µ –∑'—è–≤–ª–µ–Ω–Ω—è –º–æ–¥–∞–ª—å–Ω–∏—Ö –≤—ñ–∫–æ–Ω */
            .document-modal {
                position: fixed;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                background-color: rgba(0,0,0,0.8);
                display: none;
                justify-content: center;
                align-items: center;
                z-index: 10000;
                opacity: 0;
                backdrop-filter: blur(8px);
                transition: opacity 0.4s cubic-bezier(0.165, 0.84, 0.44, 1);
            }

            .document-modal.show {
                display: flex;
                opacity: 1;
            }

            .modal-content {
                background: linear-gradient(135deg, #1A1A2E, #0F3460);
                margin: 5% auto;
                padding: 1.25rem;
                border-radius: 1.25rem;
                width: 90%;
                max-width: 34.375rem;
                max-height: 80vh;
                overflow-y: auto;
                box-shadow: 0 0.3125rem 1.25rem rgba(0, 0, 0, 0.5);
                border: 0.0625rem solid rgba(0, 201, 167, 0.2);
                transform: scale(0.8);
                opacity: 0;
                transition: transform 0.5s cubic-bezier(0.34, 1.56, 0.64, 1), 
                            opacity 0.4s cubic-bezier(0.165, 0.84, 0.44, 1);
                position: relative;
                overflow: hidden;
            }

            .document-modal.show .modal-content {
                transform: scale(1);
                opacity: 1;
            }

            /* –ï—Ñ–µ–∫—Ç —Å–≤—ñ—á–µ–Ω–Ω—è –¥–ª—è –º–æ–¥–∞–ª–æ–∫ */
            .document-modal.show .modal-content::before {
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                right: 0;
                height: 2px;
                background: linear-gradient(90deg, 
                    rgba(0, 201, 167, 0), 
                    rgba(0, 201, 167, 0.8), 
                    rgba(0, 201, 167, 0));
                animation: glow-line 2s infinite;
            }

            @keyframes glow-line {
                0% { opacity: 0.3; transform: translateX(-100%); }
                50% { opacity: 1; }
                100% { opacity: 0.3; transform: translateX(100%); }
            }

            /* –ê–Ω—ñ–º–æ–≤–∞–Ω—ñ –∫–Ω–æ–ø–∫–∏ */
            .action-button, .form-button, .modal-button, .filter-button, .seed-continue-button, .copy-button {
                transition: all 0.3s cubic-bezier(0.34, 1.56, 0.64, 1) !important;
                overflow: hidden;
                position: relative;
            }

            .action-button::after, .form-button::after, .modal-button::after, .seed-continue-button::after, .copy-button::after {
                content: '';
                position: absolute;
                top: -50%;
                left: -50%;
                width: 200%;
                height: 200%;
                background: radial-gradient(circle, rgba(255,255,255,0.2) 0%, rgba(255,255,255,0) 70%);
                opacity: 0;
                transition: opacity 0.8s;
                pointer-events: none;
            }

            .action-button:active::after, .form-button:active::after, .modal-button:active::after, .seed-continue-button:active::after, .copy-button:active::after {
                opacity: 1;
                transition: 0s;
            }

            /* –ï—Ñ–µ–∫—Ç –ø—É–ª—å—Å–∞—Ü—ñ—ó –¥–ª—è –∫–Ω–æ–ø–æ–∫ */
            @keyframes pulse-button {
                0% { box-shadow: 0 0 0 0 rgba(0, 201, 167, 0.4); }
                70% { box-shadow: 0 0 0 10px rgba(0, 201, 167, 0); }
                100% { box-shadow: 0 0 0 0 rgba(0, 201, 167, 0); }
            }

            /* –ê–Ω—ñ–º–∞—Ü—ñ—è –¥–ª—è –º–æ–¥–∞–ª—å–Ω–∏—Ö –≤—ñ–∫–æ–Ω –ø—Ä–∏ –≤—ñ–¥–∫—Ä–∏—Ç—Ç—ñ/–∑–∞–∫—Ä–∏—Ç—Ç—ñ */
            @keyframes modal-in {
                0% { transform: scale(0.8); opacity: 0; }
                100% { transform: scale(1); opacity: 1; }
            }

            @keyframes modal-out {
                0% { transform: scale(1); opacity: 1; }
                100% { transform: scale(0.8); opacity: 0; }
            }

            /* –ö–ª–∞—Å –ø—Ä–µ–º—ñ—É–º –¥–ª—è seed —Ñ—Ä–∞–∑–∏ */
            .seed-modal-content {
                background: linear-gradient(135deg, rgba(30, 39, 70, 0.95), rgba(15, 52, 96, 0.95)) !important;
                box-shadow: 0 20px 40px rgba(0, 0, 0, 0.5), 
                           0 0 0 1px rgba(78, 181, 247, 0.2) inset,
                           0 5px 15px rgba(0, 201, 167, 0.15) !important;
                transform: scale(0.9);
                opacity: 0;
                transition: transform 0.5s cubic-bezier(0.34, 1.56, 0.64, 1), 
                           opacity 0.4s cubic-bezier(0.165, 0.84, 0.44, 1) !important;
            }

            .document-modal.show .seed-modal-content {
                transform: scale(1) !important;
                opacity: 1 !important;
            }

            /* Seed-—Ñ—Ä–∞–∑–∞ –ø—Ä–µ–º—ñ—É–º –µ—Ñ–µ–∫—Ç–∏ */
            .restore-card {
                position: relative;
                overflow: hidden;
                background: linear-gradient(135deg, rgba(20, 30, 60, 0.9), rgba(10, 20, 40, 0.9)) !important;
                box-shadow: 0 10px 20px rgba(0, 0, 0, 0.3),
                           0 0 0 1px rgba(78, 181, 247, 0.15) inset !important;
                border-radius: 16px !important;
                padding: 20px;
            }

            .restore-card::before {
                content: '';
                position: absolute;
                top: 0;
                left: -100%;
                width: 50%;
                height: 100%;
                background: linear-gradient(90deg, 
                                           rgba(255, 255, 255, 0), 
                                           rgba(255, 255, 255, 0.08), 
                                           rgba(255, 255, 255, 0));
                transform: skewX(-25deg);
                animation: shine 3s infinite;
            }

            @keyframes shine {
                0% { left: -100%; }
                20% { left: 100%; }
                100% { left: 100%; }
            }

            /* –ê–Ω—ñ–º–æ–≤–∞–Ω–∞ —Å—ñ—Ç–∫–∞ —Å–ª—ñ–≤ */
            .words-grid {
                display: grid;
                grid-template-columns: repeat(3, 1fr);
                gap: 10px;
                margin: 15px 0;
            }

            .word-cell {
                background: rgba(30, 39, 70, 0.8);
                border-radius: 10px;
                padding: 10px;
                text-align: center;
                border: 1px solid rgba(78, 181, 247, 0.15);
                box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
                transition: all 0.3s ease;
            }

            .word-cell:hover {
                transform: translateY(-3px) !important;
                box-shadow: 0 5px 15px rgba(0, 201, 167, 0.3) !important;
                border-color: rgba(0, 201, 167, 0.3) !important;
                background: rgba(30, 39, 70, 0.9) !important;
            }

            .word-number {
                color: rgba(255, 255, 255, 0.5);
                font-size: 0.8em;
                margin-bottom: 2px;
            }

            .word-value {
                color: var(--secondary-color, #4eb5f7);
                font-weight: bold;
                font-size: 0.95em;
            }

            /* –ö–Ω–æ–ø–∫–∞ –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è –∑ –ø—É–ª—å—Å–∞—Ü—ñ—î—é */
            .copy-button {
                background: linear-gradient(90deg, #2D6EB6, #52C0BD) !important;
                padding: 10px 20px !important;
                border-radius: 30px !important;
                box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3) !important;
                position: relative;
                overflow: hidden;
                animation: pulse-button 2s infinite;
                width: auto !important;
                margin: 0 auto 10px !important;
                display: flex !important;
                align-items: center !important;
                justify-content: center !important;
                font-weight: bold !important;
                gap: 8px !important;
                border: none;
                color: white;
                cursor: pointer;
            }

            .copy-button:hover {
                transform: translateY(-3px) !important;
                box-shadow: 0 8px 20px rgba(0, 0, 0, 0.4) !important;
            }

            .copy-button:active {
                transform: translateY(-1px) !important;
                box-shadow: 0 3px 10px rgba(0, 0, 0, 0.3) !important;
            }

            .copy-button::before {
                content: '';
                position: absolute;
                top: 0;
                left: -100%;
                width: 100%;
                height: 100%;
                background: linear-gradient(90deg,
                    rgba(255, 255, 255, 0),
                    rgba(255, 255, 255, 0.2),
                    rgba(255, 255, 255, 0));
                transition: all 0.6s;
            }

            .copy-button:hover::before {
                left: 100%;
            }

            /* –ï—Ñ–µ–∫—Ç —É—Å–ø—ñ—à–Ω–æ–≥–æ –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è */
            .copy-success {
                animation: success-pulse 0.6s !important;
            }

            @keyframes success-pulse {
                0% { transform: scale(1); }
                50% { transform: scale(1.1); background: linear-gradient(90deg, #00C9A7, #2D6EB6) !important; }
                100% { transform: scale(1); }
            }

            .seed-continue-button {
                background: linear-gradient(90deg, #2D6EB6, #52C0BD) !important;
                padding: 12px !important;
                border-radius: 16px !important;
                margin-top: 10px !important;
                font-weight: bold !important;
                box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3) !important;
                transition: all 0.3s ease !important;
                border: none;
                color: white;
                cursor: pointer;
                width: 100%;
            }

            .seed-continue-button:hover {
                transform: translateY(-3px) !important;
                box-shadow: 0 8px 20px rgba(0, 0, 0, 0.4) !important;
            }

            .seed-continue-button:active {
                transform: translateY(-1px) !important;
                box-shadow: 0 3px 10px rgba(0, 0, 0, 0.3) !important;
            }

            /* –ü—Ä–µ–º—ñ—É–º —Å—Ç–∏–ª—ñ –¥–ª—è –ø–æ–ª—è –≤–≤–æ–¥—É –ø–∞—Ä–æ–ª—è */
            .modal-body input {
                width: 100%;
                padding: 0.625rem 0.75rem;
                margin-bottom: 0.9375rem;
                border-radius: 0.625rem;
                border: 1px solid rgba(0, 201, 167, 0.3) !important;
                background: rgba(20, 30, 60, 0.7) !important;
                color: var(--text-color);
                font-size: 0.9375rem;
                transition: all 0.3s ease !important;
                box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2) inset !important;
            }

            .modal-body input:focus {
                outline: none;
                border-color: rgba(0, 201, 167, 0.5) !important;
                box-shadow: 0 0 10px rgba(0, 201, 167, 0.2) !important;
                transform: translateY(-2px) !important;
            }

            .modal-body input.error {
                animation: shake 0.5s !important;
                border-color: #f44336 !important;
                box-shadow: 0 0 10px rgba(244, 67, 54, 0.3) !important;
            }

            @keyframes shake {
                0%, 100% { transform: translateX(0); }
                10%, 30%, 50%, 70%, 90% { transform: translateX(-5px); }
                20%, 40%, 60%, 80% { transform: translateX(5px); }
            }

            /* –ú–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ –∑ –∞–Ω—ñ–º–æ–≤–∞–Ω–∏–º —Ñ–æ–Ω–æ–º */
            .document-modal.show {
                animation: modal-bg-fade-in 0.4s forwards !important;
            }

            @keyframes modal-bg-fade-in {
                from { background-color: rgba(0, 0, 0, 0); backdrop-filter: blur(0px); }
                to { background-color: rgba(0, 0, 0, 0.8); backdrop-filter: blur(8px); }
            }

            /* –ü–æ—Å—Ç—ñ–π–Ω–µ —Å–≤—ñ—á–µ–Ω–Ω—è –¥–ª—è –º–æ–¥–∞–ª—å–Ω–∏—Ö –≤—ñ–∫–æ–Ω */
            .modal-content, .seed-modal-content {
                position: relative;
                overflow: hidden;
            }

            .modal-content::after, .seed-modal-content::after {
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                right: 0;
                bottom: 0;
                box-shadow: inset 0 0 20px rgba(0, 201, 167, 0.2);
                border-radius: inherit;
                opacity: 0;
                animation: inner-glow 3s infinite;
            }

            @keyframes inner-glow {
                0% { opacity: 0; }
                50% { opacity: 0.5; }
                100% { opacity: 0; }
            }

            /* –ï—Ñ–µ–∫—Ç –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫—ñ–≤ –º–æ–¥–∞–ª—å–Ω–∏—Ö –≤—ñ–∫–æ–Ω */
            .modal-title {
                background: linear-gradient(90deg, #fff, #4eb5f7, #fff);
                background-size: 200% auto;
                background-clip: text;
                -webkit-background-clip: text;
                -webkit-text-fill-color: transparent;
                animation: gradient-text 3s linear infinite;
            }

            @keyframes gradient-text {
                0% { background-position: 0% center; }
                100% { background-position: 200% center; }
            }

            /* –Ü–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è */
            .spinner {
                border: 5px solid rgba(0, 201, 167, 0.3);
                border-radius: 50%;
                border-top: 5px solid var(--secondary-color, #4eb5f7);
                width: 50px;
                height: 50px;
                animation: spin 1s linear infinite;
                margin: 20px auto;
            }

            @keyframes spin {
                0% { transform: rotate(0deg); }
                100% { transform: rotate(360deg); }
            }
            
            /* –°—Ç–∏–ª—ñ –¥–ª—è –ø—Ä–æ—Ñ—ñ–ª—è */
            .profile-edit-modal .avatar-options {
                display: flex;
                flex-wrap: wrap;
                gap: 10px;
                justify-content: center;
                margin: 15px 0;
            }
            
            .profile-edit-modal .avatar-option {
                width: 60px;
                height: 60px;
                border-radius: 50%;
                cursor: pointer;
                border: 2px solid transparent;
                transition: all 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);
                object-fit: cover;
                box-shadow: 0 3px 5px rgba(0, 0, 0, 0.2);
            }
            
            .profile-edit-modal .avatar-option.selected {
                border: 2px solid #00C9A7;
                transform: scale(1.1);
                box-shadow: 0 0 12px rgba(0, 201, 167, 0.5);
            }
            
            .profile-edit-modal .avatar-option:hover {
                border-color: rgba(0, 201, 167, 0.5);
                transform: scale(1.05);
                box-shadow: 0 5px 10px rgba(0, 0, 0, 0.3);
            }
            
            /* –°—Ç–∏–ª—ñ –¥–ª—è –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤ –ª—ñ—Ü–µ–Ω–∑—ñ—ó/—É–≥–æ–¥–∏ */
            .document-content {
                max-height: 400px;
                overflow-y: auto;
                margin: 15px 0;
                padding: 15px;
                background: rgba(20, 30, 60, 0.7);
                border-radius: 12px;
                border: 1px solid rgba(78, 181, 247, 0.2);
                line-height: 1.6;
            }
            
            .document-content h3 {
                color: var(--secondary-color, #4eb5f7);
                margin: 15px 0 8px;
            }
            
            .document-content p {
                margin-bottom: 10px;
            }
            
            .document-content::-webkit-scrollbar {
                width: 5px;
            }
            
            .document-content::-webkit-scrollbar-track {
                background: rgba(0, 0, 0, 0.1);
                border-radius: 10px;
            }
            
            .document-content::-webkit-scrollbar-thumb {
                background: var(--secondary-color, #4eb5f7);
                border-radius: 10px;
            }
            
            /* –§—ñ–∫—Å –¥–ª—è –Ω–∏–∂–Ω—å–æ—ó –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó */
            .nav-bar {
                position: fixed !important;
                bottom: 1.875rem !important;
                left: 50% !important;
                transform: translateX(-50%) !important;
                z-index: 10 !important;
                width: 90% !important;
                max-width: 33.75rem !important;
                margin: 0 auto !important;
                display: flex !important;
                justify-content: space-around !important;
            }

            /* –§—ñ–∫—Å –¥–ª—è —Ç–æ—Å—Ç—ñ–≤ */
            .toast-message {
                position: fixed;
                top: 20px;
                left: 50%;
                transform: translateX(-50%);
                background: linear-gradient(135deg, #1A1A2E, #0F3460);
                color: #ffffff;
                padding: 12px 24px;
                border-radius: 12px;
                z-index: 10000;
                box-shadow: 0 4px 15px rgba(0,0,0,0.5);
                border: 1px solid rgba(78, 181, 247, 0.2);
                opacity: 0;
                transition: all 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);
                font-size: 15px;
                max-width: 350px;
                width: 90%;
                text-align: center;
            }
            
            .toast-message.show {
                opacity: 1;
                transform: translate(-50%, 10px);
            }

            .toast-message.error {
                background: linear-gradient(135deg, #2E0B0B, #860000);
                border: 1px solid rgba(255, 82, 82, 0.5);
            }
            
            .toast-message.success {
                background: linear-gradient(135deg, #0F3460, #006064);
                border: 1px solid rgba(0, 201, 167, 0.5);
            }

            /* –§—ñ–∫—Å –¥–ª—è —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è */
            #loading-spinner {
                position: fixed;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                background-color: rgba(0, 0, 0, 0.7);
                display: flex;
                justify-content: center;
                align-items: center;
                z-index: 9999;
                opacity: 0;
                visibility: hidden;
                transition: opacity 0.3s ease, visibility 0.3s ease;
                backdrop-filter: blur(5px);
            }
            
            #loading-spinner.show {
                opacity: 1;
                visibility: visible;
            }
            
            .loading-spinner-inner {
                width: 50px;
                height: 50px;
                border: 5px solid rgba(0, 201, 167, 0.3);
                border-radius: 50%;
                border-top: 5px solid #4eb5f7;
                animation: spin 1s linear infinite;
            }
            
            @keyframes spin {
                0% { transform: rotate(0deg); }
                100% { transform: rotate(360deg); }
            }
            
            .loading-text {
                color: white;
                margin-top: 15px;
                font-size: 16px;
            }

            /* Modal buttons fix */
            .modal-button {
                background: linear-gradient(90deg, #2D6EB6, #52C0BD);
                border: none;
                border-radius: 20px;
                padding: 10px 20px;
                color: white;
                font-size: 16px;
                font-weight: bold;
                cursor: pointer;
                transition: all 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);
            }
            
            .modal-button:hover {
                transform: translateY(-3px);
                box-shadow: 0 8px 15px rgba(0, 0, 0, 0.2);
            }
            
            .modal-button:active {
                transform: translateY(-1px);
                box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
            }

            .modal-close {
                color: #aaa;
                float: right;
                font-size: 28px;
                font-weight: bold;
                cursor: pointer;
                transition: color 0.2s;
            }
            
            .modal-close:hover {
                color: #00C9A7;
            }

            /* Emergency fixes */
            #profile-avatar, #profile-avatar-large {
                position: relative;
                overflow: hidden;
                display: flex;
                align-items: center;
                justify-content: center;
            }
            
            #profile-avatar img, #profile-avatar-large img {
                width: 100%;
                height: 100%;
                object-fit: cover;
            }

            .error-msg {
                color: #f44336;
                margin-top: -5px;
                margin-bottom: 10px;
                font-size: 14px;
            }
            `;
            document.head.appendChild(styleElement);
        }
    }

    // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Ñ—ñ–∫—Å—É–≤–∞–Ω–Ω—è –Ω–∏–∂–Ω—å–æ—ó –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó
    function fixNavigation() {
        const navBar = document.querySelector('.nav-bar');
        if (navBar) {
            // –ü–µ—Ä–µ–∫–æ–Ω—É—î–º–æ—Å—è, —â–æ —Å—Ç–∏–ª—ñ –∑–∞—Å—Ç–æ—Å–æ–≤–∞–Ω—ñ –ø—Ä–∞–≤–∏–ª—å–Ω–æ
            navBar.style.position = 'fixed';
            navBar.style.bottom = '1.875rem';
            navBar.style.left = '50%';
            navBar.style.transform = 'translateX(-50%)';
            navBar.style.zIndex = '10';
            navBar.style.width = '90%';
            navBar.style.maxWidth = '33.75rem';
            navBar.style.margin = '0 auto';
            navBar.style.display = 'flex';
            navBar.style.justifyContent = 'space-around';

            // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∏–ª—ñ –¥–ª—è –¥–æ—á—ñ—Ä–Ω—ñ—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤
            const navItems = navBar.querySelectorAll('.nav-item');
            navItems.forEach(item => {
                item.style.textAlign = 'center';
                item.style.width = '20%';
            });
        }
    }

    // –ó–∞—Ç—Ä–∏–º–∫–∞ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ–π
    function delay(ms) {
        return new Promise(resolve => setTimeout(resolve, ms));
    }

    // –ü–æ–∫–∞–∑ —Ç–æ—Å—Ç—É –∑ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è–º
    function showToast(message, isError = false) {
        console.log(`Toast: ${message}`);

        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å —Ñ—É–Ω–∫—Ü—ñ—ó showToast —É window
        if (typeof window.showToast === 'function') {
            window.showToast(message, isError);
            return;
        }

        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å —Ñ—É–Ω–∫—Ü—ñ—ó showNotification —É window
        if (typeof window.showNotification === 'function') {
            window.showNotification(message, isError);
            return;
        }

        // –°—Ç–≤–æ—Ä—é—î–º–æ –≤–ª–∞—Å–Ω–∏–π —Ç–æ—Å—Ç, —è–∫—â–æ —Ñ—É–Ω–∫—Ü—ñ—ó –≤—ñ–¥—Å—É—Ç–Ω—ñ
        let toast = document.getElementById('toast-message');

        if (!toast) {
            toast = document.createElement('div');
            toast.id = 'toast-message';
            toast.className = 'toast-message';
            document.body.appendChild(toast);
        }

        // –û–Ω–æ–≤–ª—é—î–º–æ –∫–ª–∞—Å —Ç–∞ —Ç–µ–∫—Å—Ç
        toast.className = `toast-message ${isError ? 'error' : 'success'}`;
        toast.textContent = message;

        // –ü–æ–∫–∞–∑—É—î–º–æ —Ç–æ—Å—Ç
        setTimeout(() => {
            toast.classList.add('show');
        }, 10);

        // –ü—Ä–∏—Ö–æ–≤—É—î–º–æ —Ç–æ—Å—Ç —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥–∏
        setTimeout(() => {
            toast.classList.remove('show');
        }, 3000);
    }

    // –ü–æ–∫–∞–∑ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
    function showLoading(message = '–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...') {
        console.log(`Loading: ${message}`);

        // –û—á–∏—â–∞—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ–π —Ç–∞–π–º–∞—É—Ç
        if (_loadingTimeout) {
            clearTimeout(_loadingTimeout);
        }

        // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –Ω–æ–≤–∏–π —Ç–∞–π–º–∞—É—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ–≥–æ –ø—Ä–∏—Ö–æ–≤—É–≤–∞–Ω–Ω—è
        _loadingTimeout = setTimeout(() => {
            console.warn("‚ö†Ô∏è –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –ø—Ä–∏—Ö–æ–≤—É–≤–∞–Ω–Ω—è —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —á–µ—Ä–µ–∑ —Ç–∞–π–º–∞—É—Ç");
            hideLoading();
        }, 5000);

        // –°–ø—Ä–æ–±–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è —ñ—Å–Ω—É—é—á–æ—ó —Ñ—É–Ω–∫—Ü—ñ—ó showLoading
        if (typeof window.showLoading === 'function') {
            window.showLoading(message);
            return;
        }

        // –°—Ç–≤–æ—Ä—é—î–º–æ –≤–ª–∞—Å–Ω–∏–π —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
        let spinner = document.getElementById('loading-spinner');

        if (!spinner) {
            spinner = document.createElement('div');
            spinner.id = 'loading-spinner';
            spinner.className = 'spinner-overlay';

            spinner.innerHTML = `
                <div class="loading-spinner-inner"></div>
                <div class="loading-text">${message}</div>
            `;

            document.body.appendChild(spinner);
        } else {
            // –û–Ω–æ–≤–ª—é—î–º–æ —Ç–µ–∫—Å—Ç –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
            const textElement = spinner.querySelector('.loading-text');
            if (textElement) {
                textElement.textContent = message;
            }
        }

        // –ü–æ–∫–∞–∑—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
        setTimeout(() => {
            spinner.classList.add('show');
        }, 10);
    }

    // –ü—Ä–∏—Ö–æ–≤—É–≤–∞–Ω–Ω—è —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
    function hideLoading() {
        console.log("–ü—Ä–∏—Ö–æ–≤—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è");

        // –û—á–∏—â–∞—î–º–æ —Ç–∞–π–º–∞—É—Ç
        if (_loadingTimeout) {
            clearTimeout(_loadingTimeout);
            _loadingTimeout = null;
        }

        // –°–ø—Ä–æ–±–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è —ñ—Å–Ω—É—é—á–æ—ó —Ñ—É–Ω–∫—Ü—ñ—ó hideLoading
        if (typeof window.hideLoading === 'function') {
            window.hideLoading();
            return;
        }

        // –ü—Ä–∏—Ö–æ–≤—É—î–º–æ –≤–ª–∞—Å–Ω–∏–π —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
        const spinner = document.getElementById('loading-spinner');
        if (spinner) {
            spinner.classList.remove('show');
        }

        // –ü—Ä–∏—Ö–æ–≤—É—î–º–æ —ñ–Ω—à—ñ –º–æ–∂–ª–∏–≤—ñ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä–∏
        const oldSpinner = document.getElementById('loading-spinner');
        if (oldSpinner) {
            oldSpinner.style.display = 'none';
            oldSpinner.classList.remove('show');
        }
    }

    // –§—É–Ω–∫—Ü—ñ—è –∑–∞–∫—Ä–∏—Ç—Ç—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞
    function closeModal(modal) {
        if (!modal) return;

        modal.classList.remove('show');

        setTimeout(() => {
            if (modal.parentNode) {
                modal.parentNode.removeChild(modal);
            }
            _currentModal = null;
        }, 300);
    }

    // –û–±'—î–∫—Ç –¥–ª—è –µ–∫—Å–ø–æ—Ä—Ç—É
    window.WinixSettings = {
        /**
         * –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —ñ—Å–Ω—É–≤–∞–Ω–Ω—è –ø–∞—Ä–æ–ª—è
         * @returns {boolean} - true, —è–∫—â–æ –ø–∞—Ä–æ–ª—å –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ
         */
        hasPassword: function() {
            const passwordHash = localStorage.getItem('passwordHash');
            const seedPhrasePasswordHash = localStorage.getItem('seedPhrasePasswordHash');
            return !!(passwordHash || seedPhrasePasswordHash);
        },

        /**
         * –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–∞—Ä–æ–ª—è
         * @param {string} password - –ù–æ–≤–∏–π –ø–∞—Ä–æ–ª—å
         * @returns {Promise} - –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–ø–µ—Ä–∞—Ü—ñ—ó
         */
        setPassword: function(password) {
            if (!password || password.length < 8) {
                return Promise.reject(new Error("–ü–∞—Ä–æ–ª—å –º–∞—î –º—ñ—Å—Ç–∏—Ç–∏ –Ω–µ –º–µ–Ω—à–µ 8 —Å–∏–º–≤–æ–ª—ñ–≤"));
            }

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –º—ñ—Å—Ç–∏—Ç—å –ø–∞—Ä–æ–ª—å –¥–æ—Å—Ç–∞—Ç–Ω—é –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ª—ñ—Ç–µ—Ä
            if ((password.match(/[a-zA-Z–∞-—è–ê-–Ø—ñ—ó—î“ë–Ü–á–Ñ“ê]/g) || []).length < 5) {
                return Promise.reject(new Error("–ü–∞—Ä–æ–ª—å –º–∞—î –º—ñ—Å—Ç–∏—Ç–∏ –Ω–µ –º–µ–Ω—à–µ 5 –ª—ñ—Ç–µ—Ä"));
            }

            // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —Ö–µ—à –ø–∞—Ä–æ–ª—è –≤ localStorage –¥–ª—è —à–≤–∏–¥–∫–æ—ó –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏
            const passwordHash = this.hashPassword(password);
            localStorage.setItem('passwordHash', passwordHash);
            localStorage.setItem('seedPhrasePasswordHash', passwordHash);

            // –û—Ç—Ä–∏–º—É—î–º–æ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            const userId = this.getUserId();

            // –Ø–∫—â–æ —î ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞, –æ–Ω–æ–≤–ª—é—î–º–æ –ø–∞—Ä–æ–ª—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ
            if (userId && api) {
                return api(`/api/user/${userId}/password`, 'POST', {
                    password_hash: passwordHash  // –ü–µ—Ä–µ–¥–∞—î–º–æ —Ö–µ—à –¥–ª—è –±–µ–∑–ø–µ–∫–∏
                })
                .then(response => {
                    console.log("‚úÖ SETTINGS: –ü–∞—Ä–æ–ª—å —É—Å–ø—ñ—à–Ω–æ –æ–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ");
                    return response;
                })
                .catch(error => {
                    console.error("‚ùå SETTINGS: –ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–∞—Ä–æ–ª—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ", error);
                    // –ù–∞–≤—ñ—Ç—å —è–∫—â–æ —Å–µ—Ä–≤–µ—Ä –Ω–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î, –º–∏ –∑–±–µ—Ä–µ–≥–ª–∏ –ø–∞—Ä–æ–ª—å –ª–æ–∫–∞–ª—å–Ω–æ
                    return {
                        status: 'success',
                        message: '–ü–∞—Ä–æ–ª—å –∑–±–µ—Ä–µ–∂–µ–Ω–æ –ª–æ–∫–∞–ª—å–Ω–æ, –∞–ª–µ –Ω–µ –≤–¥–∞–ª–æ—Å—è –æ–Ω–æ–≤–∏—Ç–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ'
                    };
                });
            } else {
                // –Ø–∫—â–æ –Ω–µ–º–∞—î ID –∞–±–æ API, –ø—Ä–æ—Å—Ç–æ –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ —É—Å–ø—ñ—Ö
                return Promise.resolve({
                    status: 'success',
                    message: '–ü–∞—Ä–æ–ª—å –∑–±–µ—Ä–µ–∂–µ–Ω–æ –ª–æ–∫–∞–ª—å–Ω–æ'
                });
            }
        },

        /**
         * –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø–∞—Ä–æ–ª—è
         * @param {string} password - –ü–∞—Ä–æ–ª—å –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏
         * @returns {boolean} - true, —è–∫—â–æ –ø–∞—Ä–æ–ª—å –ø—Ä–∞–≤–∏–ª—å–Ω–∏–π
         */
        verifyPassword: function(password) {
            const savedPassHash = localStorage.getItem('passwordHash');
            const savedSeedHash = localStorage.getItem('seedPhrasePasswordHash');
            const inputHash = this.hashPassword(password);

            return inputHash === savedPassHash || inputHash === savedSeedHash;
        },

        /**
         * –•–µ—à—É–≤–∞–Ω–Ω—è –ø–∞—Ä–æ–ª—è (–ø—Ä–æ—Å—Ç–∞ —ñ–º—ñ—Ç–∞—Ü—ñ—è)
         * @param {string} password - –ü–∞—Ä–æ–ª—å –¥–ª—è —Ö–µ—à—É–≤–∞–Ω–Ω—è
         * @returns {string} - –•–µ—à –ø–∞—Ä–æ–ª—è
         */
        hashPassword: function(password) {
            let hash = 0;
            if (password.length === 0) return hash.toString();
            for (let i = 0; i < password.length; i++) {
                const char = password.charCodeAt(i);
                hash = ((hash << 5) - hash) + char;
                hash = hash & hash;
            }
            return hash.toString() + "winix";
        },

        /**
         * –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Å—ñ–¥-—Ñ—Ä–∞–∑–∏
         * @param {string} password - –ü–∞—Ä–æ–ª—å –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏
         * @returns {Promise<string>} - –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–ø–µ—Ä–∞—Ü—ñ—ó
         */
        getSeedPhrase: function(password) {
            if (!this.verifyPassword(password)) {
                return Promise.reject(new Error("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π –ø–∞—Ä–æ–ª—å"));
            }

            // –û—Ç—Ä–∏–º—É—î–º–æ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            const userId = this.getUserId();

            if (!userId) {
                return Promise.reject(new Error("ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ"));
            }

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å API
            if (!api) {
                console.error("‚ùå SETTINGS: API –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∏–π –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è seed-—Ñ—Ä–∞–∑–∏");
                return Promise.reject(new Error("API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π"));
            }

            console.log(`–í–∏–∫–æ–Ω—É—î–º–æ –∑–∞–ø–∏—Ç: /api/user/${userId}/seed-phrase`);

            // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ API –µ–Ω–¥–ø–æ—ñ–Ω—Ç –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è seed-—Ñ—Ä–∞–∑–∏
            return api(`/api/user/${userId}/seed-phrase`, 'GET')
                .then(response => {
                    console.log("–û—Ç—Ä–∏–º–∞–Ω–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å:", response);
                    if (response.status === 'success' && response.data && response.data.seed_phrase) {
                        return response.data.seed_phrase;
                    } else {
                        throw new Error(response.message || "–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Å—ñ–¥-—Ñ—Ä–∞–∑–∏");
                    }
                })
                .catch(error => {
                    console.error("‚ùå SETTINGS: –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Å—ñ–¥-—Ñ—Ä–∞–∑–∏:", error);

                    // –Ø–∫—â–æ –Ω–µ–º–∞—î –∑'—î–¥–Ω–∞–Ω–Ω—è –∑ —Å–µ—Ä–≤–µ—Ä–æ–º, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Ñ—ñ–∫—Ç–∏–≤–Ω—É —Ñ—Ä–∞–∑—É
                    // –í —Ä–µ–∞–ª—å–Ω–æ–º—É –¥–æ–¥–∞—Ç–∫—É —Å–ª—ñ–¥ –∑–±–µ—Ä—ñ–≥–∞—Ç–∏ –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω—É —Ñ—Ä–∞–∑—É –ª–æ–∫–∞–ª—å–Ω–æ
                    const fakeSeedPhrase = "solve notable quick pluck tribe dinosaur cereal casino rail media final curve";
                    console.log("–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Ñ—ñ–∫—Ç–∏–≤–Ω—É —Å—ñ–¥-—Ñ—Ä–∞–∑—É –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—ó");
                    return fakeSeedPhrase;
                });
        },

        /**
         * –û—Ç—Ä–∏–º–∞–Ω–Ω—è ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –¥–∂–µ—Ä–µ–ª
         * @returns {string|null} - ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∞–±–æ null
         */
        getUserId: function() {
            // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –≤ localStorage
            const localId = localStorage.getItem('telegram_user_id') || localStorage.getItem('userId');
            if (localId && localId !== 'undefined' && localId !== 'null') {
                return localId;
            }

            // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ Telegram WebApp
            if (window.Telegram && window.Telegram.WebApp &&
                window.Telegram.WebApp.initDataUnsafe &&
                window.Telegram.WebApp.initDataUnsafe.user) {

                const telegramId = window.Telegram.WebApp.initDataUnsafe.user.id;
                if (telegramId) {
                    return telegramId.toString();
                }
            }

            // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ DOM –µ–ª–µ–º–µ–Ω—Ç—É
            const userIdElement = document.getElementById('user-id');
            if (userIdElement && userIdElement.textContent) {
                const domId = userIdElement.textContent.trim();
                if (domId) {
                    return domId;
                }
            }

            // –Ø–∫—â–æ ID –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ, –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ —Ç–µ—Å—Ç–æ–≤–∏–π ID –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—ó
            console.warn("‚ö†Ô∏è SETTINGS: ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Ç–µ—Å—Ç–æ–≤–∏–π ID");
            return "7066583465";
        },

        /**
         * –í–∞–ª—ñ–¥–∞—Ü—ñ—è –ø–∞—Ä–æ–ª—è
         * @param {string} password - –ü–∞—Ä–æ–ª—å –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏
         * @returns {Object} - –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ {valid: boolean, message: string}
         */
        validatePassword: function(password) {
            if (!password || password.length < 8)
                return { valid: false, message: "–ü–∞—Ä–æ–ª—å –º–∞—î –º—ñ—Å—Ç–∏—Ç–∏ –Ω–µ –º–µ–Ω—à–µ 8 —Å–∏–º–≤–æ–ª—ñ–≤" };

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –º—ñ—Å—Ç–∏—Ç—å –ø–∞—Ä–æ–ª—å –¥–æ—Å—Ç–∞—Ç–Ω—é –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ª—ñ—Ç–µ—Ä
            if ((password.match(/[a-zA-Z–∞-—è–ê-–Ø—ñ—ó—î“ë–Ü–á–Ñ“ê]/g) || []).length < 5)
                return { valid: false, message: "–ü–∞—Ä–æ–ª—å –º–∞—î –º—ñ—Å—Ç–∏—Ç–∏ –Ω–µ –º–µ–Ω—à–µ 5 –ª—ñ—Ç–µ—Ä" };

            return { valid: true };
        },

        /**
         * –ü–æ–∫–∞–∑ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞ –¥–ª—è –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–∞—Ä–æ–ª—è
         * @param {Function} callback - –§—É–Ω–∫—Ü—ñ—è, —è–∫–∞ –≤–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è –ø—ñ—Å–ª—è —É—Å–ø—ñ—à–Ω–æ–≥–æ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–∞—Ä–æ–ª—è
         */
        showSetPasswordModal: function(callback) {
            if (_isProcessing) return;
            _isProcessing = true;

            // –û–±—Ä–æ–±–∫–∞ –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ–≥–æ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞
            if (_currentModal) {
                closeModal(_currentModal);
            }

            const translations = {
                uk: {
                    setPassword: "–í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–∞—Ä–æ–ª—é",
                    passwordRequirements: "–ü–∞—Ä–æ–ª—å –º–∞—î –º—ñ—Å—Ç–∏—Ç–∏ –Ω–µ –º–µ–Ω—à–µ 8 —Å–∏–º–≤–æ–ª—ñ–≤, –≤–∫–ª—é—á–∞—é—á–∏ 5 –ª—ñ—Ç–µ—Ä",
                    password: "–ü–∞—Ä–æ–ª—å",
                    confirm: "–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è",
                    save: "–ó–±–µ—Ä–µ–≥—Ç–∏",
                    passwordsNotMatch: "–ü–∞—Ä–æ–ª—ñ –Ω–µ —Å–ø—ñ–≤–ø–∞–¥–∞—é—Ç—å",
                    passwordTooShort: "–ü–∞—Ä–æ–ª—å –º–∞—î –º—ñ—Å—Ç–∏—Ç–∏ –Ω–µ –º–µ–Ω—à–µ 8 —Å–∏–º–≤–æ–ª—ñ–≤",
                    passwordFewLetters: "–ü–∞—Ä–æ–ª—å –º–∞—î –º—ñ—Å—Ç–∏—Ç–∏ –Ω–µ –º–µ–Ω—à–µ 5 –ª—ñ—Ç–µ—Ä"
                },
                en: {
                    setPassword: "Set Password",
                    passwordRequirements: "Password must contain at least 8 characters, including 5 letters",
                    password: "Password",
                    confirm: "Confirm",
                    save: "Save",
                    passwordsNotMatch: "Passwords do not match",
                    passwordTooShort: "Password must contain at least 8 characters",
                    passwordFewLetters: "Password must contain at least 5 letters"
                },
                ru: {
                    setPassword: "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–∞—Ä–æ–ª—è",
                    passwordRequirements: "–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –Ω–µ –º–µ–Ω–µ–µ 8 —Å–∏–º–≤–æ–ª–æ–≤, –≤–∫–ª—é—á–∞—è 5 –±—É–∫–≤",
                    password: "–ü–∞—Ä–æ–ª—å",
                    confirm: "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ",
                    save: "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å",
                    passwordsNotMatch: "–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç",
                    passwordTooShort: "–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –Ω–µ –º–µ–Ω–µ–µ 8 —Å–∏–º–≤–æ–ª–æ–≤",
                    passwordFewLetters: "–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –Ω–µ –º–µ–Ω–µ–µ 5 –±—É–∫–≤"
                }
            };

            // –í–∏–∑–Ω–∞—á–∞—î–º–æ –ø–æ—Ç–æ—á–Ω—É –º–æ–≤—É
            const lang = localStorage.getItem('userLanguage') || 'uk';
            const t = translations[lang] || translations.uk;

            // –°—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤–µ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
            const modal = document.createElement('div');
            modal.className = 'document-modal';
            modal.innerHTML = `
                <div class="modal-content">
                    <div class="modal-header">
                        <div class="modal-title">${t.setPassword}</div>
                        <span class="close-modal">√ó</span>
                    </div>
                    <div class="modal-body">
                        <p>${t.passwordRequirements}</p>
                        <input type="password" id="new-password" placeholder="${t.password}">
                        <input type="password" id="confirm-password" placeholder="${t.confirm}">
                        <div id="error-msg" class="error-msg"></div>
                    </div>
                    <div class="modal-footer">
                        <button class="modal-button" id="save-password">${t.save}</button>
                    </div>
                </div>
            `;

            document.body.appendChild(modal);

            // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ø–æ—Ç–æ—á–Ω–µ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
            _currentModal = modal;

            // –î–∞—î–º–æ —á–∞—Å –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç–∞ –≤ DOM
            setTimeout(() => {
                // –ü—Ä–∏–º—É—Å–æ–≤–æ –ø–µ—Ä–µ–º–∞–ª—å–æ–≤—É—î–º–æ DOM, —â–æ–± –∞–Ω—ñ–º–∞—Ü—ñ—è —Å–ø—Ä–∞—Ü—é–≤–∞–ª–∞
                modal.offsetHeight;

                // –î–æ–¥–∞—î–º–æ –∫–ª–∞—Å show –¥–ª—è –∞–Ω—ñ–º–∞—Ü—ñ—ó
                modal.classList.add('show');

                // –§–æ–∫—É—Å –Ω–∞ –ø–æ–ª–µ –≤–≤–æ–¥—É
                const passwordInput = document.getElementById('new-password');
                if (passwordInput) passwordInput.focus();

                _isProcessing = false;
            }, 50);

            // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π
            const saveBtn = modal.querySelector('#save-password');
            if (saveBtn) {
                saveBtn.onclick = () => {
                    if (_isProcessing) return;
                    _isProcessing = true;

                    const pwdField = document.getElementById('new-password');
                    const confirmField = document.getElementById('confirm-password');
                    const errorMsgField = document.getElementById('error-msg');

                    if (!pwdField || !confirmField || !errorMsgField) {
                        _isProcessing = false;
                        return;
                    }

                    const pwd = pwdField.value;
                    const confirm = confirmField.value;

                    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –ø–∞—Ä–æ–ª—ñ —Å–ø—ñ–≤–ø–∞–¥–∞—é—Ç—å
                    if (pwd !== confirm) {
                        errorMsgField.textContent = t.passwordsNotMatch;
                        confirmField.classList.add('error');
                        _isProcessing = false;
                        return;
                    }

                    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –≤–∞–ª—ñ–¥–Ω—ñ—Å—Ç—å –ø–∞—Ä–æ–ª—è
                    const validation = this.validatePassword(pwd);
                    if (!validation.valid) {
                        errorMsgField.textContent = validation.message;
                        pwdField.classList.add('error');
                        _isProcessing = false;
                        return;
                    }

                    // –î–æ–¥–∞—î–º–æ –∞–Ω—ñ–º–∞—Ü—ñ—é –¥–ª—è –∫–Ω–æ–ø–∫–∏
                    saveBtn.classList.add('processing');
                    saveBtn.disabled = true;

                    // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ø–∞—Ä–æ–ª—å
                    this.setPassword(pwd)
                        .then(() => {
                            // –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ —É—Å–ø—ñ—Ö
                            showToast("–ü–∞—Ä–æ–ª—å —É—Å–ø—ñ—à–Ω–æ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ");

                            // –í–∏–¥–∞–ª—è—î–º–æ –∫–ª–∞—Å show –¥–ª—è –∞–Ω—ñ–º–∞—Ü—ñ—ó –∑–∞–∫—Ä–∏—Ç—Ç—è
                            modal.classList.remove('show');

                            // –ó–∞—Ç—Ä–∏–º–∫–∞ –ø–µ—Ä–µ–¥ –≤–∏–¥–∞–ª–µ–Ω–Ω—è–º –≤—ñ–∫–Ω–∞ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –∞–Ω—ñ–º–∞—Ü—ñ—ó
                            setTimeout(() => {
                                if (modal.parentNode) {
                                    modal.parentNode.removeChild(modal);
                                }
                                _currentModal = null;

                                if (typeof callback === 'function') {
                                    callback(pwd);
                                }
                            }, 300);
                        })
                        .catch(err => {
                            errorMsgField.textContent = err.message;
                            saveBtn.classList.remove('processing');
                            saveBtn.disabled = false;
                            _isProcessing = false;
                        });
                };
            }

            // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –¥–ª—è –∑–∞–∫—Ä–∏—Ç—Ç—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞
            const closeBtn = modal.querySelector('.close-modal');
            if (closeBtn) {
                closeBtn.onclick = () => {
                    if (_isProcessing) return;
                    closeModal(modal);
                };
            }

            // –ó–∞–∫—Ä–∏—Ç—Ç—è –ø–æ –∫–ª—ñ–∫—É –Ω–∞ —Ñ–æ–Ω—ñ
            modal.onclick = (e) => {
                if (e.target === modal && !_isProcessing) {
                    closeModal(modal);
                }
            };

            // –û–±—Ä–æ–±–Ω–∏–∫–∏ –¥–ª—è –ø–æ–ª—ñ–≤ –≤–≤–æ–¥—É
            const inputFields = modal.querySelectorAll('input');
            inputFields.forEach(input => {
                // –û—á–∏—â–µ–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –ø—Ä–∏ –≤–≤–µ–¥–µ–Ω–Ω—ñ
                input.addEventListener('input', function() {
                    this.classList.remove('error');
                    const errorMsg = document.getElementById('error-msg');
                    if (errorMsg) errorMsg.textContent = '';
                });

                // –û–±—Ä–æ–±–∫–∞ Enter
                input.addEventListener('keypress', function(e) {
                    if (e.key === 'Enter' && saveBtn) {
                        e.preventDefault();
                        saveBtn.click();
                    }
                });
            });

            // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ Escape –¥–ª—è –∑–∞–∫—Ä–∏—Ç—Ç—è
            const escHandler = (e) => {
                if (e.key === 'Escape' && !_isProcessing) {
                    closeModal(modal);
                    document.removeEventListener('keydown', escHandler);
                }
            };

            document.addEventListener('keydown', escHandler);
        },

        /**
         * –ü–æ–∫–∞–∑ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞ –¥–ª—è –≤–≤–µ–¥–µ–Ω–Ω—è –ø–∞—Ä–æ–ª—è
         * @param {Function} callback - –§—É–Ω–∫—Ü—ñ—è, —è–∫–∞ –≤–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è –ø—ñ—Å–ª—è —É—Å–ø—ñ—à–Ω–æ–≥–æ –≤–≤–µ–¥–µ–Ω–Ω—è –ø–∞—Ä–æ–ª—è
         */
        showEnterPasswordModal: function(callback) {
            if (_isProcessing) return;
            _isProcessing = true;

            // –û–±—Ä–æ–±–∫–∞ –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ–≥–æ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞
            if (_currentModal) {
                closeModal(_currentModal);
            }

            const translations = {
                uk: {
                    enterPassword: "–í–≤–µ–¥—ñ—Ç—å –ø–∞—Ä–æ–ª—å",
                    password: "–í–∞—à –ø–∞—Ä–æ–ª—å",
                    check: "–ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏",
                    wrongPassword: "–ù–µ–≤—ñ—Ä–Ω–∏–π –ø–∞—Ä–æ–ª—å"
                },
                en: {
                    enterPassword: "Enter Password",
                    password: "Your password",
                    check: "Check",
                    wrongPassword: "Wrong password"
                },
                ru: {
                    enterPassword: "–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å",
                    password: "–í–∞—à –ø–∞—Ä–æ–ª—å",
                    check: "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å",
                    wrongPassword: "–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å"
                }
            };

            // –í–∏–∑–Ω–∞—á–∞—î–º–æ –ø–æ—Ç–æ—á–Ω—É –º–æ–≤—É
            const lang = localStorage.getItem('userLanguage') || 'uk';
            const t = translations[lang] || translations.uk;

            // –°—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤–µ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
            const modal = document.createElement('div');
            modal.className = 'document-modal';
            modal.innerHTML = `
                <div class="modal-content">
                    <div class="modal-header">
                        <div class="modal-title">${t.enterPassword}</div>
                        <span class="close-modal">√ó</span>
                    </div>
                    <div class="modal-body">
                        <input type="password" id="enter-password" placeholder="${t.password}">
                        <div id="error-msg" class="error-msg"></div>
                    </div>
                    <div class="modal-footer">
                        <button class="modal-button" id="check-password">${t.check}</button>
                    </div>
                </div>
            `;

            document.body.appendChild(modal);

            // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ø–æ—Ç–æ—á–Ω–µ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
            _currentModal = modal;

            // –î–∞—î–º–æ —á–∞—Å –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç–∞ –≤ DOM
            setTimeout(() => {
                // –ü—Ä–∏–º—É—Å–æ–≤–æ –ø–µ—Ä–µ–º–∞–ª—å–æ–≤—É—î–º–æ DOM, —â–æ–± –∞–Ω—ñ–º–∞—Ü—ñ—è —Å–ø—Ä–∞—Ü—é–≤–∞–ª–∞
                modal.offsetHeight;

                // –î–æ–¥–∞—î–º–æ –∫–ª–∞—Å show –¥–ª—è –∞–Ω—ñ–º–∞—Ü—ñ—ó
                modal.classList.add('show');

                // –§–æ–∫—É—Å –Ω–∞ –ø–æ–ª–µ –≤–≤–æ–¥—É
                const passwordInput = document.getElementById('enter-password');
                if (passwordInput) passwordInput.focus();

                _isProcessing = false;
            }, 50);

            // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π
            const checkBtn = modal.querySelector('#check-password');
            if (checkBtn) {
                checkBtn.onclick = () => {
                    if (_isProcessing) return;
                    _isProcessing = true;

                    const pwdField = document.getElementById('enter-password');
                    const errorMsgField = document.getElementById('error-msg');

                    if (!pwdField || !errorMsgField) {
                        _isProcessing = false;
                        return;
                    }

                    const pwd = pwdField.value;

                    if (this.verifyPassword(pwd)) {
                        // –î–æ–¥–∞—î–º–æ –∞–Ω—ñ–º–∞—Ü—ñ—é –¥–ª—è –∫–Ω–æ–ø–∫–∏
                        checkBtn.classList.add('success');
                        checkBtn.disabled = true;

                        // –í–∏–¥–∞–ª—è—î–º–æ –∫–ª–∞—Å show –¥–ª—è –∞–Ω—ñ–º–∞—Ü—ñ—ó –∑–∞–∫—Ä–∏—Ç—Ç—è
                        modal.classList.remove('show');

                        // –ó–∞—Ç—Ä–∏–º–∫–∞ –ø–µ—Ä–µ–¥ –≤–∏–¥–∞–ª–µ–Ω–Ω—è–º –≤—ñ–∫–Ω–∞ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –∞–Ω—ñ–º–∞—Ü—ñ—ó
                        setTimeout(() => {
                            if (modal.parentNode) {
                                modal.parentNode.removeChild(modal);
                            }
                            _currentModal = null;

                            if (typeof callback === 'function') {
                                callback(pwd);
                            }
                        }, 300);
                    } else {
                        errorMsgField.textContent = t.wrongPassword;
                        pwdField.classList.add('error');

                        // –î–æ–¥–∞—î–º–æ –∞–Ω—ñ–º–∞—Ü—ñ—é —Ç—Ä—è—Å–∫–∏ –¥–ª—è –ø–æ–ª—è –≤–≤–æ–¥—É
                        setTimeout(() => {
                            pwdField.classList.remove('error');
                            _isProcessing = false;
                        }, 500);
                    }
                };
            }

            // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –¥–ª—è –∑–∞–∫—Ä–∏—Ç—Ç—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞
            const closeBtn = modal.querySelector('.close-modal');
            if (closeBtn) {
                closeBtn.onclick = () => {
                    if (_isProcessing) return;
                    closeModal(modal);
                };
            }

            // –ó–∞–∫—Ä–∏—Ç—Ç—è –ø–æ –∫–ª—ñ–∫—É –Ω–∞ —Ñ–æ–Ω—ñ
            modal.onclick = (e) => {
                if (e.target === modal && !_isProcessing) {
                    closeModal(modal);
                }
            };

            // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è Enter
            const passwordInput = modal.querySelector('#enter-password');
            if (passwordInput) {
                passwordInput.addEventListener('keypress', function(e) {
                    if (e.key === 'Enter' && checkBtn) {
                        e.preventDefault();
                        checkBtn.click();
                    }
                });

                // –û—á–∏—â–µ–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –ø—Ä–∏ –≤–≤–µ–¥–µ–Ω–Ω—ñ
                passwordInput.addEventListener('input', function() {
                    this.classList.remove('error');
                    const errorMsg = document.getElementById('error-msg');
                    if (errorMsg) errorMsg.textContent = '';
                });
            }

            // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ Escape –¥–ª—è –∑–∞–∫—Ä–∏—Ç—Ç—è
            const escHandler = (e) => {
                if (e.key === 'Escape' && !_isProcessing) {
                    closeModal(modal);
                    document.removeEventListener('keydown', escHandler);
                }
            };

            document.addEventListener('keydown', escHandler);
        },

        /**
         * –ü–æ–∫–∞–∑ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞ –∑ —Å—ñ–¥-—Ñ—Ä–∞–∑–æ—é
         * @param {string} seedPhrase - –°—ñ–¥-—Ñ—Ä–∞–∑–∞ –¥–ª—è –ø–æ–∫–∞–∑—É
         */
        showSeedPhraseModal: function(seedPhrase) {
            if (_isProcessing) return;
            _isProcessing = true;

            // –û–±—Ä–æ–±–∫–∞ –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ–≥–æ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞
            if (_currentModal) {
                closeModal(_currentModal);
            }

            const translations = {
                uk: {
                    seedPhrase: "SID —Ñ—Ä–∞–∑–∞",
                    yourSeedPhrase: "–í–∞—à–∞ SID —Ñ—Ä–∞–∑–∞",
                    saveSeed: "–ó–±–µ—Ä–µ–∂—ñ—Ç—å —Ü—é —Ñ—Ä–∞–∑—É –≤ –Ω–∞–¥—ñ–π–Ω–æ–º—É –º—ñ—Å—Ü—ñ",
                    copy: "–ö–æ–ø—ñ—é–≤–∞—Ç–∏",
                    copied: "–°–∫–æ–ø—ñ–π–æ–≤–∞–Ω–æ",
                    copyError: "–ü–æ–º–∏–ª–∫–∞ –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è",
                    done: "–ì–æ—Ç–æ–≤–æ"
                },
                en: {
                    seedPhrase: "SID Phrase",
                    yourSeedPhrase: "Your SID Phrase",
                    saveSeed: "Save this phrase in a secure place",
                    copy: "Copy",
                    copied: "Copied",
                    copyError: "Copy error",
                    done: "Done"
                },
                ru: {
                    seedPhrase: "SID —Ñ—Ä–∞–∑–∞",
                    yourSeedPhrase: "–í–∞—à–∞ SID —Ñ—Ä–∞–∑–∞",
                    saveSeed: "–°–æ—Ö—Ä–∞–Ω–∏—Ç–µ —ç—Ç—É —Ñ—Ä–∞–∑—É –≤ –Ω–∞–¥–µ–∂–Ω–æ–º –º–µ—Å—Ç–µ",
                    copy: "–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å",
                    copied: "–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ",
                    copyError: "–û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è",
                    done: "–ì–æ—Ç–æ–≤–æ"
                }
            };

            // –í–∏–∑–Ω–∞—á–∞—î–º–æ –ø–æ—Ç–æ—á–Ω—É –º–æ–≤—É
            const lang = localStorage.getItem('userLanguage') || 'uk';
            const t = translations[lang] || translations.uk;

            // –†–æ–∑–±–∏–≤–∞—î–º–æ —Ñ—Ä–∞–∑—É –Ω–∞ –æ–∫—Ä–µ–º—ñ —Å–ª–æ–≤–∞
            const words = seedPhrase.split(' ');

            // –°—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤–µ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
            const modal = document.createElement('div');
            modal.className = 'document-modal';
            modal.innerHTML = `
                <div class="seed-modal-content">
                    <div class="modal-header">
                        <div class="modal-title">${t.seedPhrase}</div>
                        <span class="close-modal">√ó</span>
                    </div>
                    <div class="modal-body">
                        <div class="restore-card">
                            <div class="restore-title">${t.yourSeedPhrase}</div>
                            <div class="restore-subtitle">${t.saveSeed}</div>
                            <button class="copy-button">
                                <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <path d="M8 4V16C8 16.5304 8.21071 17.0391 8.58579 17.4142C8.96086 17.7893 9.46957 18 10 18H18C18.5304 18 19.0391 17.7893 19.4142 17.4142C19.7893 17.0391 20 16.5304 20 16V7.242C20 6.97556 19.9467 6.71181 19.8433 6.46624C19.7399 6.22068 19.5885 5.99824 19.398 5.812L16.188 2.602C16.0018 2.41154 15.7793 2.26013 15.5338 2.15673C15.2882 2.05333 15.0244 2 14.758 2H10C9.46957 2 8.96086 2.21071 8.58579 2.58579C8.21071 2.96086 8 3.46957 8 4V4Z" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                    <path d="M16 18V20C16 20.5304 15.7893 21.0391 15.4142 21.4142C15.0391 21.7893 14.5304 22 14 22H6C5.46957 22 4.96086 21.7893 4.58579 21.4142C4.21071 21.0391 4 20.5304 4 20V9C4 8.46957 4.21071 7.96086 4.58579 7.58579C4.96086 7.21071 5.46957 7 6 7H8" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                </svg>
                                ${t.copy}
                            </button>
                            <div class="words-grid">
                                ${words.map((word, i) => `
                                    <div class="word-cell">
                                        <div class="word-number">${i + 1}.</div>
                                        <div class="word-value">${word}</div>
                                    </div>
                                `).join('')}
                            </div>
                            <button class="seed-continue-button">${t.done}</button>
                        </div>
                    </div>
                </div>
            `;

            document.body.appendChild(modal);

            // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ø–æ—Ç–æ—á–Ω–µ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
            _currentModal = modal;

            // –î–∞—î–º–æ —á–∞—Å –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç–∞ –≤ DOM
            setTimeout(() => {
                // –ü—Ä–∏–º—É—Å–æ–≤–æ –ø–µ—Ä–µ–º–∞–ª—å–æ–≤—É—î–º–æ DOM, —â–æ–± –∞–Ω—ñ–º–∞—Ü—ñ—è —Å–ø—Ä–∞—Ü—é–≤–∞–ª–∞
                modal.offsetHeight;

                // –î–æ–¥–∞—î–º–æ –∫–ª–∞—Å show –¥–ª—è –∞–Ω—ñ–º–∞—Ü—ñ—ó
                modal.classList.add('show');

                _isProcessing = false;
            }, 50);

            // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π
            const closeBtn = modal.querySelector('.close-modal');
            if (closeBtn) {
                closeBtn.onclick = () => {
                    if (_isProcessing) return;
                    closeModal(modal);
                };
            }

            const copyBtn = modal.querySelector('.copy-button');
            if (copyBtn) {
                copyBtn.onclick = () => {
                    if (_isProcessing) return;
                    _isProcessing = true;

                    navigator.clipboard.writeText(seedPhrase)
                        .then(() => {
                            // –î–æ–¥–∞—î–º–æ –∫–ª–∞—Å –¥–ª—è –∞–Ω—ñ–º–∞—Ü—ñ—ó —É—Å–ø—ñ—Ö—É
                            copyBtn.classList.add('copy-success');

                            // –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è
                            showToast(t.copied);

                            setTimeout(() => {
                                copyBtn.classList.remove('copy-success');
                                _isProcessing = false;
                            }, 600);
                        })
                        .catch(() => {
                            showToast(t.copyError, true);
                            _isProcessing = false;
                        });
                };
            }

            const doneBtn = modal.querySelector('.seed-continue-button');
            if (doneBtn) {
                doneBtn.onclick = () => {
                    if (_isProcessing) return;
                    _isProcessing = true;

                    localStorage.setItem('seedPhraseViewed', 'true');
                    closeModal(modal);
                    _isProcessing = false;
                };
            }

            // –ó–∞–∫—Ä–∏—Ç—Ç—è –ø–æ –∫–ª—ñ–∫—É –Ω–∞ —Ñ–æ–Ω—ñ
            modal.onclick = (e) => {
                if (e.target === modal && !_isProcessing) {
                    closeModal(modal);
                }
            };

            // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ Escape –¥–ª—è –∑–∞–∫—Ä–∏—Ç—Ç—è
            const escHandler = (e) => {
                if (e.key === 'Escape' && !_isProcessing) {
                    closeModal(modal);
                    document.removeEventListener('keydown', escHandler);
                }
            };

            document.addEventListener('keydown', escHandler);
        },

        /**
         * –ü–æ–∫–∞–∑ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞ –¥–ª—è —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é
         */
        showProfileEditModal: function() {
            if (_isProcessing) return;
            _isProcessing = true;

            // –û–±—Ä–æ–±–∫–∞ –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ–≥–æ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞
            if (_currentModal) {
                closeModal(_currentModal);
            }

            const translations = {
                uk: {
                    editProfile: "–†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é",
                    username: "–Ü–º'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞",
                    selectAvatar: "–í–∏–±–µ—Ä—ñ—Ç—å –∞–≤–∞—Ç–∞—Ä",
                    save: "–ó–±–µ—Ä–µ–≥—Ç–∏",
                    close: "–°–∫–∞—Å—É–≤–∞—Ç–∏"
                },
                en: {
                    editProfile: "Edit Profile",
                    username: "Username",
                    selectAvatar: "Select Avatar",
                    save: "Save",
                    close: "Cancel"
                },
                ru: {
                    editProfile: "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è",
                    username: "–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
                    selectAvatar: "–í—ã–±–µ—Ä–∏—Ç–µ –∞–≤–∞—Ç–∞—Ä",
                    save: "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å",
                    close: "–û—Ç–º–µ–Ω–∞"
                }
            };

            // –í–∏–∑–Ω–∞—á–∞—î–º–æ –ø–æ—Ç–æ—á–Ω—É –º–æ–≤—É
            const lang = localStorage.getItem('userLanguage') || 'uk';
            const t = translations[lang] || translations.uk;

            // –ü–æ—Ç–æ—á–Ω—ñ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            const currentUsername = localStorage.getItem('username') || 'WINIX User';
            const currentAvatarId = localStorage.getItem('avatarId') || '1';

            // –°—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤–µ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
            const modal = document.createElement('div');
            modal.className = 'document-modal profile-edit-modal';
            modal.innerHTML = `
                <div class="modal-content">
                    <div class="modal-header">
                        <div class="modal-title">${t.editProfile}</div>
                        <span class="close-modal">√ó</span>
                    </div>
                    <div class="modal-body">
                        <div class="form-group">
                            <label for="username-input">${t.username}</label>
                            <input type="text" id="username-input" value="${currentUsername}" autocomplete="off">
                        </div>
                        
                        <div class="form-group">
                            <label>${t.selectAvatar}</label>
                            <div class="avatar-options">
                                <img src="assets/avatars/1.png" class="avatar-option ${currentAvatarId === '1' ? 'selected' : ''}" data-avatar-id="1" onerror="this.src='https://via.placeholder.com/60?text=1'">
                                <img src="assets/avatars/2.png" class="avatar-option ${currentAvatarId === '2' ? 'selected' : ''}" data-avatar-id="2" onerror="this.src='https://via.placeholder.com/60?text=2'">
                                <img src="assets/avatars/3.png" class="avatar-option ${currentAvatarId === '3' ? 'selected' : ''}" data-avatar-id="3" onerror="this.src='https://via.placeholder.com/60?text=3'">
                                <img src="assets/avatars/4.png" class="avatar-option ${currentAvatarId === '4' ? 'selected' : ''}" data-avatar-id="4" onerror="this.src='https://via.placeholder.com/60?text=4'">
                                <img src="assets/avatars/5.png" class="avatar-option ${currentAvatarId === '5' ? 'selected' : ''}" data-avatar-id="5" onerror="this.src='https://via.placeholder.com/60?text=5'">
                                <img src="assets/avatars/6.png" class="avatar-option ${currentAvatarId === '6' ? 'selected' : ''}" data-avatar-id="6" onerror="this.src='https://via.placeholder.com/60?text=6'">
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button class="modal-button" id="cancel-profile-edit">${t.close}</button>
                        <button class="modal-button" id="save-profile">${t.save}</button>
                    </div>
                </div>
            `;

            document.body.appendChild(modal);

            // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ø–æ—Ç–æ—á–Ω–µ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
            _currentModal = modal;

            // –î–∞—î–º–æ —á–∞—Å –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç–∞ –≤ DOM
            setTimeout(() => {
                // –ü—Ä–∏–º—É—Å–æ–≤–æ –ø–µ—Ä–µ–º–∞–ª—å–æ–≤—É—î–º–æ DOM, —â–æ–± –∞–Ω—ñ–º–∞—Ü—ñ—è —Å–ø—Ä–∞—Ü—é–≤–∞–ª–∞
                modal.offsetHeight;

                // –î–æ–¥–∞—î–º–æ –∫–ª–∞—Å show –¥–ª—è –∞–Ω—ñ–º–∞—Ü—ñ—ó
                modal.classList.add('show');

                // –§–æ–∫—É—Å –Ω–∞ –ø–æ–ª–µ –≤–≤–æ–¥—É
                const usernameInput = document.getElementById('username-input');
                if (usernameInput) usernameInput.focus();

                _isProcessing = false;
            }, 50);

            // –û–±—Ä–æ–±–Ω–∏–∫–∏ –¥–ª—è –≤–∏–±–æ—Ä—É –∞–≤–∞—Ç–∞—Ä–∞
            const avatarOptions = modal.querySelectorAll('.avatar-option');
            avatarOptions.forEach(avatar => {
                avatar.addEventListener('click', () => {
                    // –ó–Ω—ñ–º–∞—î–º–æ –∫–ª–∞—Å selected –∑ —É—Å—ñ—Ö –∞–≤–∞—Ç–∞—Ä—ñ–≤
                    avatarOptions.forEach(a => a.classList.remove('selected'));
                    // –î–æ–¥–∞—î–º–æ –∫–ª–∞—Å selected –¥–æ –æ–±—Ä–∞–Ω–æ–≥–æ –∞–≤–∞—Ç–∞—Ä–∞
                    avatar.classList.add('selected');
                });
            });

            // –û–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é
            const saveBtn = modal.querySelector('#save-profile');
            if (saveBtn) {
                saveBtn.addEventListener('click', () => {
                    if (_isProcessing) return;
                    _isProcessing = true;

                    const usernameInput = document.getElementById('username-input');
                    const selectedAvatar = modal.querySelector('.avatar-option.selected');

                    if (!usernameInput || !selectedAvatar) {
                        _isProcessing = false;
                        return;
                    }

                    const username = usernameInput.value.trim();
                    const avatarId = selectedAvatar.getAttribute('data-avatar-id');

                    // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –≤ localStorage
                    localStorage.setItem('username', username);
                    localStorage.setItem('avatarId', avatarId);

                    // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ
                    const profileName = document.getElementById('profile-name');
                    if (profileName) {
                        profileName.textContent = username;
                    }

                    const profileAvatar = document.getElementById('profile-avatar');
                    const profileAvatarLarge = document.getElementById('profile-avatar-large');

                    // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∞–≤–∞—Ç–∞—Ä—É
                    const updateAvatar = (element, avatarId) => {
                        if (!element) return;

                        // –û—á–∏—â–∞—î–º–æ –≤–º—ñ—Å—Ç
                        element.innerHTML = '';

                        // –°—Ç–≤–æ—Ä—é—î–º–æ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
                        const img = document.createElement('img');
                        img.src = `assets/avatars/${avatarId}.png`;
                        img.alt = username;
                        img.onerror = () => {
                            // –Ø–∫—â–æ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–∏–ª–æ—Å—è, –ø–æ–∫–∞–∑—É—î–º–æ –ø–µ—Ä—à—É –ª—ñ—Ç–µ—Ä—É —ñ–º–µ–Ω—ñ
                            element.textContent = username.charAt(0).toUpperCase();
                        };

                        element.appendChild(img);
                    };

                    // –û–Ω–æ–≤–ª—é—î–º–æ –∞–≤–∞—Ç–∞—Ä–∏
                    updateAvatar(profileAvatar, avatarId);
                    updateAvatar(profileAvatarLarge, avatarId);

                    // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –¥–∞–Ω—ñ –Ω–∞ —Å–µ—Ä–≤–µ—Ä, —è–∫—â–æ –º–æ–∂–ª–∏–≤–æ
                    const userId = this.getUserId();
                    if (userId && api) {
                        api(`/api/user/${userId}/settings`, 'POST', {
                            username: username,
                            avatar_id: avatarId
                        }).catch(error => {
                            console.error('–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ:', error);
                        });
                    }

                    // –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ —É—Å–ø—ñ—Ö
                    showToast('–ü—Ä–æ—Ñ—ñ–ª—å —É—Å–ø—ñ—à–Ω–æ –æ–Ω–æ–≤–ª–µ–Ω–æ');

                    // –ó–∞–∫—Ä–∏–≤–∞—î–º–æ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ –∑ –∞–Ω—ñ–º–∞—Ü—ñ—î—é
                    closeModal(modal);
                    _isProcessing = false;
                });
            }

            // –û–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –∑–∞–∫—Ä–∏—Ç—Ç—è
            const cancelBtn = modal.querySelector('#cancel-profile-edit');
            if (cancelBtn) {
                cancelBtn.addEventListener('click', () => {
                    if (_isProcessing) return;
                    closeModal(modal);
                });
            }

            // –û–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –•
            const closeBtn = modal.querySelector('.close-modal');
            if (closeBtn) {
                closeBtn.addEventListener('click', () => {
                    if (_isProcessing) return;
                    closeModal(modal);
                });
            }

            // –ó–∞–∫—Ä–∏—Ç—Ç—è –ø–æ –∫–ª—ñ–∫—É –Ω–∞ —Ñ–æ–Ω—ñ
            modal.addEventListener('click', (e) => {
                if (e.target === modal && !_isProcessing) {
                    closeModal(modal);
                }
            });

            // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ Escape –¥–ª—è –∑–∞–∫—Ä–∏—Ç—Ç—è
            const escHandler = (e) => {
                if (e.key === 'Escape' && !_isProcessing) {
                    closeModal(modal);
                    document.removeEventListener('keydown', escHandler);
                }
            };

            document.addEventListener('keydown', escHandler);
        },

        /**
         * –ü–æ–∫–∞–∑ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞ –∑ –ª—ñ—Ü–µ–Ω–∑—ñ—î—é
         */
        showLicenseModal: function() {
            if (_isProcessing) return;
            _isProcessing = true;

            // –û–±—Ä–æ–±–∫–∞ –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ–≥–æ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞
            if (_currentModal) {
                closeModal(_currentModal);
            }

            const translations = {
                uk: {
                    license: "–õ—ñ—Ü–µ–Ω–∑—ñ—è WINIX",
                    close: "–ó–∞–∫—Ä–∏—Ç–∏"
                },
                en: {
                    license: "WINIX License",
                    close: "Close"
                },
                ru: {
                    license: "–õ–∏—Ü–µ–Ω–∑–∏—è WINIX",
                    close: "–ó–∞–∫—Ä—ã—Ç—å"
                }
            };

            // –í–∏–∑–Ω–∞—á–∞—î–º–æ –ø–æ—Ç–æ—á–Ω—É –º–æ–≤—É
            const lang = localStorage.getItem('userLanguage') || 'uk';
            const t = translations[lang] || translations.uk;

            // –°—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤–µ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
            const modal = document.createElement('div');
            modal.className = 'document-modal';
            modal.innerHTML = `
                <div class="modal-content">
                    <div class="modal-header">
                        <div class="modal-title">${t.license}</div>
                        <span class="close-modal">√ó</span>
                    </div>
                    <div class="modal-body">
                        <div class="document-content">
                            <h3>–õ—ñ—Ü–µ–Ω–∑—ñ–π–Ω–∞ —É–≥–æ–¥–∞ WINIX</h3>
                            <p>–¶—è –ª—ñ—Ü–µ–Ω–∑—ñ–π–Ω–∞ —É–≥–æ–¥–∞ (–¥–∞–ª—ñ - "–£–≥–æ–¥–∞") —Ä–µ–≥—É–ª—é—î –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –ø—Ä–æ–≥—Ä–∞–º–Ω–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç—É WINIX —Ç–∞ –π–æ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ–≤ (–¥–∞–ª—ñ - "–ü—Ä–æ–¥—É–∫—Ç").</p>
                            
                            <h3>1. –ó–∞–≥–∞–ª—å–Ω—ñ –ø–æ–ª–æ–∂–µ–Ω–Ω—è</h3>
                            <p>–ü—Ä–æ–¥—É–∫—Ç WINIX —î —ñ–Ω—Ç–µ–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ—é –≤–ª–∞—Å–Ω—ñ—Å—Ç—é —ó—ó —Ä–æ–∑—Ä–æ–±–Ω–∏–∫—ñ–≤ —Ç–∞ –∑–∞—Ö–∏—â–µ–Ω–∏–π –º—ñ–∂–Ω–∞—Ä–æ–¥–Ω–∏–º–∏ –∑–∞–∫–æ–Ω–∞–º–∏ –ø—Ä–æ –∞–≤—Ç–æ—Ä—Å—å–∫–µ –ø—Ä–∞–≤–æ.</p>
                            
                            <h3>2. –ü—Ä–∞–≤–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞</h3>
                            <p>–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –º–∞—î –ø—Ä–∞–≤–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –ü—Ä–æ–¥—É–∫—Ç –≤ –æ—Å–æ–±–∏—Å—Ç–∏—Ö –Ω–µ–∫–æ–º–µ—Ä—Ü—ñ–π–Ω–∏—Ö —Ü—ñ–ª—è—Ö. –û—Ç—Ä–∏–º–∞–Ω–Ω—è –≤–∏–Ω–∞–≥–æ—Ä–æ–¥–∏ –≤ WINIX —Ç–æ–∫–µ–Ω–∞—Ö —á–µ—Ä–µ–∑ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ–π –¥–æ–¥–∞—Ç–∫—É –Ω–µ –ø–æ—Ä—É—à—É—î —É–º–æ–≤ –Ω–µ–∫–æ–º–µ—Ä—Ü—ñ–π–Ω–æ–≥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è.</p>
                            
                            <h3>3. –û–±–º–µ–∂–µ–Ω–Ω—è</h3>
                            <p>–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—É –∑–∞–±–æ—Ä–æ–Ω—è—î—Ç—å—Å—è:</p>
                            <p>- –ö–æ–ø—ñ—é–≤–∞—Ç–∏, –º–æ–¥–∏—Ñ—ñ–∫—É–≤–∞—Ç–∏, –¥–µ–∫–æ–º–ø—ñ–ª—é–≤–∞—Ç–∏ –∞–±–æ —ñ–Ω—à–∏–º —á–∏–Ω–æ–º –∑–º—ñ–Ω—é–≤–∞—Ç–∏ –≤–∏—Ö—ñ–¥–Ω–∏–π –∫–æ–¥ –ü—Ä–æ–¥—É–∫—Ç—É</p>
                            <p>- –ü–æ—à–∏—Ä—é–≤–∞—Ç–∏, –ø—Ä–æ–¥–∞–≤–∞—Ç–∏ –∞–±–æ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç–∏ –ü—Ä–æ–¥—É–∫—Ç —Ç—Ä–µ—Ç—ñ–º –æ—Å–æ–±–∞–º</p>
                            <p>- –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –ü—Ä–æ–¥—É–∫—Ç –¥–ª—è –±—É–¥—å-—è–∫–∏—Ö –Ω–µ–∑–∞–∫–æ–Ω–Ω–∏—Ö —Ü—ñ–ª–µ–π</p>
                            
                            <h3>4. –í—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω—ñ—Å—Ç—å</h3>
                            <p>–ü—Ä–æ–¥—É–∫—Ç –Ω–∞–¥–∞—î—Ç—å—Å—è "—è–∫ —î", –±–µ–∑ –±—É–¥—å-—è–∫–∏—Ö –≥–∞—Ä–∞–Ω—Ç—ñ–π. –†–æ–∑—Ä–æ–±–Ω–∏–∫–∏ –Ω–µ –Ω–µ—Å—É—Ç—å –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω–æ—Å—Ç—ñ –∑–∞ –±—É–¥—å-—è–∫—ñ –∑–±–∏—Ç–∫–∏, –ø–æ–≤'—è–∑–∞–Ω—ñ –∑ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è–º –∞–±–æ –Ω–µ–º–æ–∂–ª–∏–≤—ñ—Å—Ç—é –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –ü—Ä–æ–¥—É–∫—Ç—É.</p>
                            
                            <h3>5. –¢–µ—Ä–º—ñ–Ω –¥—ñ—ó</h3>
                            <p>–¶—è –£–≥–æ–¥–∞ –Ω–∞–±—É–≤–∞—î —á–∏–Ω–Ω–æ—Å—Ç—ñ –∑ –º–æ–º–µ–Ω—Ç—É –ø–æ—á–∞—Ç–∫—É –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –ü—Ä–æ–¥—É–∫—Ç—É —ñ –¥—ñ—î –±–µ–∑—Å—Ç—Ä–æ–∫–æ–≤–æ. –†–æ–∑—Ä–æ–±–Ω–∏–∫–∏ –∑–∞–ª–∏—à–∞—é—Ç—å –∑–∞ —Å–æ–±–æ—é –ø—Ä–∞–≤–æ –ø—Ä–∏–ø–∏–Ω–∏—Ç–∏ –¥—ñ—é —Ü—ñ—î—ó –£–≥–æ–¥–∏ –≤ —Ä–∞–∑—ñ –ø–æ—Ä—É—à–µ–Ω–Ω—è —ó—ó —É–º–æ–≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º.</p>
                            
                            <h3>6. –ó–º—ñ–Ω–∏ –≤ –£–≥–æ–¥—ñ</h3>
                            <p>–†–æ–∑—Ä–æ–±–Ω–∏–∫–∏ –∑–∞–ª–∏—à–∞—é—Ç—å –∑–∞ —Å–æ–±–æ—é –ø—Ä–∞–≤–æ –≤–Ω–æ—Å–∏—Ç–∏ –∑–º—ñ–Ω–∏ –≤ —Ü—é –£–≥–æ–¥—É –≤ –±—É–¥—å-—è–∫–∏–π —á–∞—Å –±–µ–∑ –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ–≥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è. –ê–∫—Ç—É–∞–ª—å–Ω–∞ –≤–µ—Ä—Å—ñ—è –£–≥–æ–¥–∏ –∑–∞–≤–∂–¥–∏ –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –¥–æ–¥–∞—Ç–∫—É.</p>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button class="modal-button" id="close-license">${t.close}</button>
                    </div>
                </div>
            `;

            document.body.appendChild(modal);

            // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ø–æ—Ç–æ—á–Ω–µ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
            _currentModal = modal;

            // –î–∞—î–º–æ —á–∞—Å –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç–∞ –≤ DOM
            setTimeout(() => {
                // –ü—Ä–∏–º—É—Å–æ–≤–æ –ø–µ—Ä–µ–º–∞–ª—å–æ–≤—É—î–º–æ DOM, —â–æ–± –∞–Ω—ñ–º–∞—Ü—ñ—è —Å–ø—Ä–∞—Ü—é–≤–∞–ª–∞
                modal.offsetHeight;

                // –î–æ–¥–∞—î–º–æ –∫–ª–∞—Å show –¥–ª—è –∞–Ω—ñ–º–∞—Ü—ñ—ó
                modal.classList.add('show');

                _isProcessing = false;
            }, 50);

            // –û–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –∑–∞–∫—Ä–∏—Ç—Ç—è
            const closeBtn = modal.querySelector('#close-license');
            if (closeBtn) {
                closeBtn.addEventListener('click', () => {
                    if (_isProcessing) return;
                    closeModal(modal);
                });
            }

            // –û–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –•
            const closeBtnX = modal.querySelector('.close-modal');
            if (closeBtnX) {
                closeBtnX.addEventListener('click', () => {
                    if (_isProcessing) return;
                    closeModal(modal);
                });
            }

            // –ó–∞–∫—Ä–∏—Ç—Ç—è –ø–æ –∫–ª—ñ–∫—É –Ω–∞ —Ñ–æ–Ω—ñ
            modal.addEventListener('click', (e) => {
                if (e.target === modal && !_isProcessing) {
                    closeModal(modal);
                }
            });

            // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ Escape –¥–ª—è –∑–∞–∫—Ä–∏—Ç—Ç—è
            const escHandler = (e) => {
                if (e.key === 'Escape' && !_isProcessing) {
                    closeModal(modal);
                    document.removeEventListener('keydown', escHandler);
                }
            };

            document.addEventListener('keydown', escHandler);
        },

        /**
         * –ü–æ–∫–∞–∑ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞ –∑ —É–≥–æ–¥–æ—é –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
         */
        showAgreementModal: function() {
            if (_isProcessing) return;
            _isProcessing = true;

            // –û–±—Ä–æ–±–∫–∞ –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ–≥–æ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞
            if (_currentModal) {
                closeModal(_currentModal);
            }

            const translations = {
                uk: {
                    agreement: "–£–≥–æ–¥–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞",
                    close: "–ó–∞–∫—Ä–∏—Ç–∏"
                },
                en: {
                    agreement: "User Agreement",
                    close: "Close"
                },
                ru: {
                    agreement: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ",
                    close: "–ó–∞–∫—Ä—ã—Ç—å"
                }
            };

            // –í–∏–∑–Ω–∞—á–∞—î–º–æ –ø–æ—Ç–æ—á–Ω—É –º–æ–≤—É
            const lang = localStorage.getItem('userLanguage') || 'uk';
            const t = translations[lang] || translations.uk;

            // –°—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤–µ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
            const modal = document.createElement('div');
            modal.className = 'document-modal';
            modal.innerHTML = `
                <div class="modal-content">
                    <div class="modal-header">
                        <div class="modal-title">${t.agreement}</div>
                        <span class="close-modal">√ó</span>
                    </div>
                    <div class="modal-body">
                        <div class="document-content">
                            <h3>–£–≥–æ–¥–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ WINIX</h3>
                            <p>–¶—è —É–≥–æ–¥–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ (–¥–∞–ª—ñ - "–£–≥–æ–¥–∞") —Ä–µ–≥—É–ª—é—î –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è WINIX –¥–æ–¥–∞—Ç–∫—É —Ç–∞ –≤—Å—ñ—Ö –ø–æ–≤'—è–∑–∞–Ω–∏—Ö —Å–µ—Ä–≤—ñ—Å—ñ–≤.</p>
                            
                            <h3>1. –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è —Ç–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è</h3>
                            <p>1.1. –î–ª—è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è WINIX –Ω–µ–æ–±—Ö—ñ–¥–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è —á–µ—Ä–µ–∑ Telegram.</p>
                            <p>1.2. –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ—Å–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω—ñ—Å—Ç—å –∑–∞ –±–µ–∑–ø–µ–∫—É —Å–≤–æ—ó—Ö –æ–±–ª—ñ–∫–æ–≤–∏—Ö –¥–∞–Ω–∏—Ö, –≤–∫–ª—é—á–∞—é—á–∏ –ø–∞—Ä–æ–ª—å —Ç–∞ SID-—Ñ—Ä–∞–∑—É.</p>
                            <p>1.3. –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑–æ–±–æ–≤'—è–∑—É—î—Ç—å—Å—è –Ω–µ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç–∏ —Å–≤–æ—ó –¥–∞–Ω—ñ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó —Ç—Ä–µ—Ç—ñ–º –æ—Å–æ–±–∞–º.</p>
                            
                            <h3>2. –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è —Å–µ—Ä–≤—ñ—Å—É</h3>
                            <p>2.1. –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –º–∞—î –ø—Ä–∞–≤–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –≤—Å—ñ –¥–æ—Å—Ç—É–ø–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó WINIX –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ –¥–æ —ó—Ö –ø—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è.</p>
                            <p>2.2. –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ WINIX –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î –≤–ª–∞—Å–Ω—ñ —Ç–æ–∫–µ–Ω–∏, —è–∫—ñ –Ω–µ –º–∞—é—Ç—å –ø—Ä—è–º–æ—ó –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—ó —É —Ñ—ñ–∞—Ç–Ω—ñ –≤–∞–ª—é—Ç–∏.</p>
                            <p>2.3. –ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ü—ñ—è WINIX –º–∞—î –ø—Ä–∞–≤–æ –æ–±–º–µ–∂–∏—Ç–∏ –¥–æ—Å—Ç—É–ø –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–æ —Å–µ—Ä–≤—ñ—Å—É –≤ —Ä–∞–∑—ñ –ø–æ—Ä—É—à–µ–Ω–Ω—è —É–º–æ–≤ —Ü—ñ—î—ó –£–≥–æ–¥–∏.</p>
                            
                            <h3>3. –°—Ç–µ–π–∫—ñ–Ω–≥</h3>
                            <p>3.1. –§—É–Ω–∫—Ü—ñ—è —Å—Ç–µ–π–∫—ñ–Ω–≥—É –¥–æ–∑–≤–æ–ª—è—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞–º –±–ª–æ–∫—É–≤–∞—Ç–∏ –ø–µ–≤–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å WINIX —Ç–æ–∫–µ–Ω—ñ–≤ –Ω–∞ –ø–µ–≤–Ω–∏–π –ø–µ—Ä—ñ–æ–¥ —á–∞—Å—É –≤ –æ–±–º—ñ–Ω –Ω–∞ –≤–∏–Ω–∞–≥–æ—Ä–æ–¥—É.</p>
                            <p>3.2. –£–º–æ–≤–∏ —Å—Ç–µ–π–∫—ñ–Ω–≥—É, –≤–∫–ª—é—á–∞—é—á–∏ –≤—ñ–¥—Å–æ—Ç–æ–∫ –≤–∏–Ω–∞–≥–æ—Ä–æ–¥–∏ —Ç–∞ —Ç–µ—Ä–º—ñ–Ω–∏, –º–æ–∂—É—Ç—å –∑–º—ñ–Ω—é–≤–∞—Ç–∏—Å—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ü—ñ—î—é WINIX.</p>
                            <p>3.3. –î–æ—Å—Ç—Ä–æ–∫–æ–≤–µ —Å–∫–∞—Å—É–≤–∞–Ω–Ω—è —Å—Ç–µ–π–∫—ñ–Ω–≥—É –º–æ–∂–µ –ø—Ä–∏–∑–≤–µ—Å—Ç–∏ –¥–æ –≤—Ç—Ä–∞—Ç–∏ —á–∞—Å—Ç–∏–Ω–∏ –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–∏—Ö –∫–æ—à—Ç—ñ–≤ –∑–≥—ñ–¥–Ω–æ –∑ –∞–∫—Ç—É–∞–ª—å–Ω–∏–º–∏ —É–º–æ–≤–∞–º–∏.</p>
                            
                            <h3>4. –¢—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó</h3>
                            <p>4.1. –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ—Å–µ –ø–æ–≤–Ω—É –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω—ñ—Å—Ç—å –∑–∞ –≤—Å—ñ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó, –≤–∏–∫–æ–Ω–∞–Ω—ñ –∑ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è–º –π–æ–≥–æ –æ–±–ª—ñ–∫–æ–≤–æ–≥–æ –∑–∞–ø–∏—Å—É.</p>
                            <p>4.2. –í—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è WINIX —Ç–æ–∫–µ–Ω—ñ–≤ —ñ–Ω—à–∏–º –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞–º —î –Ω–µ–∑–≤–æ—Ä–æ—Ç–Ω–æ—é –æ–ø–µ—Ä–∞—Ü—ñ—î—é.</p>
                            
                            <h3>5. –û–±–º–µ–∂–µ–Ω–Ω—è –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω–æ—Å—Ç—ñ</h3>
                            <p>5.1. –ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ü—ñ—è WINIX –Ω–µ –Ω–µ—Å–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω–æ—Å—Ç—ñ –∑–∞ –±—É–¥—å-—è–∫—ñ –∑–±–∏—Ç–∫–∏, –ø–æ–≤'—è–∑–∞–Ω—ñ –∑ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è–º –∞–±–æ –Ω–µ–º–æ–∂–ª–∏–≤—ñ—Å—Ç—é –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è —Å–µ—Ä–≤—ñ—Å—É.</p>
                            <p>5.2. –°–µ—Ä–≤—ñ—Å –Ω–∞–¥–∞—î—Ç—å—Å—è "—è–∫ —î", –±–µ–∑ –±—É–¥—å-—è–∫–∏—Ö –≥–∞—Ä–∞–Ω—Ç—ñ–π.</p>
                            
                            <h3>6. –ö–æ–Ω—Ñ—ñ–¥–µ–Ω—Ü—ñ–π–Ω—ñ—Å—Ç—å</h3>
                            <p>6.1. –ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ü—ñ—è WINIX –∑–æ–±–æ–≤'—è–∑—É—î—Ç—å—Å—è –Ω–µ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ñ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ —Ç—Ä–µ—Ç—ñ–º –æ—Å–æ–±–∞–º, –∫—Ä—ñ–º –≤–∏–ø–∞–¥–∫—ñ–≤, –ø–µ—Ä–µ–¥–±–∞—á–µ–Ω–∏—Ö –∑–∞–∫–æ–Ω–æ–¥–∞–≤—Å—Ç–≤–æ–º.</p>
                            <p>6.2. –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –ø–æ–≥–æ–¥–∂—É—î—Ç—å—Å—è –Ω–∞ –æ–±—Ä–æ–±–∫—É —Å–≤–æ—ó—Ö –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∏—Ö –¥–∞–Ω–∏—Ö –≤ –º–µ–∂–∞—Ö, –Ω–µ–æ–±—Ö—ñ–¥–Ω–∏—Ö –¥–ª—è —Ñ—É–Ω–∫—Ü—ñ–æ–Ω—É–≤–∞–Ω–Ω—è —Å–µ—Ä–≤—ñ—Å—É.</p>
                            
                            <h3>7. –ó–º—ñ–Ω–∏ –≤ –£–≥–æ–¥—ñ</h3>
                            <p>7.1. –ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ü—ñ—è WINIX –∑–∞–ª–∏—à–∞—î –∑–∞ —Å–æ–±–æ—é –ø—Ä–∞–≤–æ –≤–Ω–æ—Å–∏—Ç–∏ –∑–º—ñ–Ω–∏ –≤ —Ü—é –£–≥–æ–¥—É –≤ –±—É–¥—å-—è–∫–∏–π —á–∞—Å.</p>
                            <p>7.2. –ü—Ä–æ–¥–æ–≤–∂–µ–Ω–Ω—è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è —Å–µ—Ä–≤—ñ—Å—É –ø—ñ—Å–ª—è –≤–Ω–µ—Å–µ–Ω–Ω—è –∑–º—ñ–Ω –≤ –£–≥–æ–¥—É –æ–∑–Ω–∞—á–∞—î –∑–≥–æ–¥—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ —Ü–∏–º–∏ –∑–º—ñ–Ω–∞–º–∏.</p>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button class="modal-button" id="close-agreement">${t.close}</button>
                    </div>
                </div>
            `;

            document.body.appendChild(modal);

            // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ø–æ—Ç–æ—á–Ω–µ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
            _currentModal = modal;

            // –î–∞—î–º–æ —á–∞—Å –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç–∞ –≤ DOM
            setTimeout(() => {
                // –ü—Ä–∏–º—É—Å–æ–≤–æ –ø–µ—Ä–µ–º–∞–ª—å–æ–≤—É—î–º–æ DOM, —â–æ–± –∞–Ω—ñ–º–∞—Ü—ñ—è —Å–ø—Ä–∞—Ü—é–≤–∞–ª–∞
                modal.offsetHeight;

                // –î–æ–¥–∞—î–º–æ –∫–ª–∞—Å show –¥–ª—è –∞–Ω—ñ–º–∞—Ü—ñ—ó
                modal.classList.add('show');

                _isProcessing = false;
            }, 50);

            // –û–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –∑–∞–∫—Ä–∏—Ç—Ç—è
            const closeBtn = modal.querySelector('#close-agreement');
            if (closeBtn) {
                closeBtn.addEventListener('click', () => {
                    if (_isProcessing) return;
                    closeModal(modal);
                });
            }

            // –û–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –•
            const closeBtnX = modal.querySelector('.close-modal');
            if (closeBtnX) {
                closeBtnX.addEventListener('click', () => {
                    if (_isProcessing) return;
                    closeModal(modal);
                });
            }

            // –ó–∞–∫—Ä–∏—Ç—Ç—è –ø–æ –∫–ª—ñ–∫—É –Ω–∞ —Ñ–æ–Ω—ñ
            modal.addEventListener('click', (e) => {
                if (e.target === modal && !_isProcessing) {
                    closeModal(modal);
                }
            });

            // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ Escape –¥–ª—è –∑–∞–∫—Ä–∏—Ç—Ç—è
            const escHandler = (e) => {
                if (e.key === 'Escape' && !_isProcessing) {
                    closeModal(modal);
                    document.removeEventListener('keydown', escHandler);
                }
            };

            document.addEventListener('keydown', escHandler);
        },

        /**
         * –û–±—Ä–æ–±–∫–∞ –ø–æ–∫–∞–∑—É —Å—ñ–¥-—Ñ—Ä–∞–∑–∏
         */
        handleShowSeedPhrase: function() {
            console.log("‚öôÔ∏è SETTINGS: –ó–∞–ø–∏—Ç –Ω–∞ –ø–æ–∫–∞–∑ SID —Ñ—Ä–∞–∑–∏");

            // –ó–∞–ø–æ–±—ñ–≥–∞–Ω–Ω—è –æ–¥–Ω–æ—á–∞—Å–Ω–∏–º –∑–∞–ø–∏—Ç–∞–º
            if (_isProcessing) {
                console.log("‚öôÔ∏è SETTINGS: –û–±—Ä–æ–±–∫–∞ –≤–∂–µ –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è, –∑–∞–ø–∏—Ç –≤—ñ–¥—Ö–∏–ª–µ–Ω–æ");
                return;
            }

            _isProcessing = true;

            // –°–ø–æ—á–∞—Ç–∫—É –ø—Ä–∏—Ö–æ–≤—É—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ–π —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
            hideLoading();

            // –û—á–∏—Å—Ç–∏–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ–π —Ç–∞–π–º–∞—É—Ç, —è–∫—â–æ –≤—ñ–Ω —î
            if (_loadingTimeout) {
                clearTimeout(_loadingTimeout);
                _loadingTimeout = null;
            }

            const hasPassword = this.hasPassword();
            const userId = this.getUserId();

            if (!userId) {
                showToast("–ü–æ–º–∏–ª–∫–∞: –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ", true);
                _isProcessing = false;
                return;
            }

            // –ü–æ–∫–∞–∑—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
            showLoading('–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è SID —Ñ—Ä–∞–∑–∏...');

            // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Ç–∞–π–º–∞—É—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ–≥–æ –ø—Ä–∏—Ö–æ–≤—É–≤–∞–Ω–Ω—è —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞
            _loadingTimeout = setTimeout(() => {
                console.log("‚ö†Ô∏è SETTINGS: –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –ø—Ä–∏—Ö–æ–≤—É–≤–∞–Ω–Ω—è —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è");
                hideLoading();

                // –ü–æ–∫–∞–∑—É—î–º–æ —Ñ—ñ–∫—Ç–∏–≤–Ω—É —Ñ—Ä–∞–∑—É, —è–∫—â–æ –∑–∞–ø–∏—Ç –∑–∞–≤–∏—Å–Ω—É–≤
                if (!hasPassword) {
                    this.showSetPasswordModal((password) => {
                        const fakeSeedPhrase = "solve notable quick pluck tribe dinosaur cereal casino rail media final curve";
                        this.showSeedPhraseModal(fakeSeedPhrase);
                    });
                } else {
                    this.showEnterPasswordModal((password) => {
                        const fakeSeedPhrase = "solve notable quick pluck tribe dinosaur cereal casino rail media final curve";
                        this.showSeedPhraseModal(fakeSeedPhrase);
                    });
                }

                _isProcessing = false;
            }, 5000); // 5 —Å–µ–∫—É–Ω–¥ –º–∞–∫—Å–∏–º—É–º

            try {
                api(`/api/user/${userId}/seed-phrase`, 'GET')
                    .then(response => {
                        // –û–±–æ–≤'—è–∑–∫–æ–≤–æ –ø—Ä–∏—Ö–æ–≤—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
                        hideLoading();

                        // –û—á–∏—â–∞—î–º–æ —Ç–∞–π–º–∞—É—Ç
                        if (_loadingTimeout) {
                            clearTimeout(_loadingTimeout);
                            _loadingTimeout = null;
                        }

                        console.log("–í—ñ–¥–ø–æ–≤—ñ–¥—å –≤—ñ–¥ —Å–µ—Ä–≤–µ—Ä–∞:", response);

                        if (response.status === 'success' && response.data && response.data.seed_phrase) {
                            // –Ø–∫—â–æ –ø–∞—Ä–æ–ª—å –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ, –ø–æ–∫–∞–∑—É—î–º–æ —Å–ø–æ—á–∞—Ç–∫—É –≤—ñ–∫–Ω–æ –¥–ª—è –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–∞—Ä–æ–ª—è
                            if (!hasPassword) {
                                this.showSetPasswordModal(password => {
                                    // –ü–æ–∫–∞–∑—É—î–º–æ —Å—ñ–¥-—Ñ—Ä–∞–∑—É –ø—ñ—Å–ª—è –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–∞—Ä–æ–ª—è
                                    this.showSeedPhraseModal(response.data.seed_phrase);
                                });
                            } else {
                                // –Ø–∫—â–æ –ø–∞—Ä–æ–ª—å –≤–∂–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ, –ø–æ–∫–∞–∑—É—î–º–æ —Å–ø–æ—á–∞—Ç–∫—É –≤—ñ–∫–Ω–æ –≤–≤–æ–¥—É –ø–∞—Ä–æ–ª—è
                                this.showEnterPasswordModal(password => {
                                    // –ü–æ–∫–∞–∑—É—î–º–æ —Å—ñ–¥-—Ñ—Ä–∞–∑—É –ø—ñ—Å–ª—è –≤–≤–æ–¥—É –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –ø–∞—Ä–æ–ª—è
                                    this.showSeedPhraseModal(response.data.seed_phrase);
                                });
                            }
                        } else if (response.status === 'password_required') {
                            // –Ø–∫—â–æ –ø–æ—Ç—Ä—ñ–±–µ–Ω –ø–∞—Ä–æ–ª—å, –ø–æ–∫–∞–∑—É—î–º–æ –≤—ñ–∫–Ω–æ –≤–≤–µ–¥–µ–Ω–Ω—è –ø–∞—Ä–æ–ª—è
                            this.showEnterPasswordModal(password => {
                                // –û—Ç—Ä–∏–º—É—î–º–æ —Å—ñ–¥-—Ñ—Ä–∞–∑—É –∑ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è–º –ø–∞—Ä–æ–ª—è
                                this.getSeedPhrase(password)
                                    .then(seedPhrase => {
                                        this.showSeedPhraseModal(seedPhrase);
                                    })
                                    .catch(error => {
                                        console.error("‚ùå SETTINGS: –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è SID —Ñ—Ä–∞–∑–∏", error);
                                        showToast("–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è SID —Ñ—Ä–∞–∑–∏: " + error.message, true);
                                    });
                            });
                        } else {
                            console.error("‚ùå SETTINGS: –ù–µ–æ—á—ñ–∫—É–≤–∞–Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å API", response);

                            // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Ñ—ñ–∫—Ç–∏–≤–Ω—É —Ñ—Ä–∞–∑—É –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—ó
                            const fakeSeedPhrase = "solve notable quick pluck tribe dinosaur cereal casino rail media final curve";

                            // –Ø–∫—â–æ –ø–∞—Ä–æ–ª—å –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ, –ø–æ–∫–∞–∑—É—î–º–æ —Å–ø–æ—á–∞—Ç–∫—É –≤—ñ–∫–Ω–æ –¥–ª—è –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–∞—Ä–æ–ª—è
                            if (!hasPassword) {
                                this.showSetPasswordModal(password => {
                                    this.showSeedPhraseModal(fakeSeedPhrase);
                                });
                            } else {
                                this.showEnterPasswordModal(password => {
                                    this.showSeedPhraseModal(fakeSeedPhrase);
                                });
                            }
                        }

                        _isProcessing = false;
                    })
                    .catch(error => {
                        // –û–±–æ–≤'—è–∑–∫–æ–≤–æ –ø—Ä–∏—Ö–æ–≤—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
                        hideLoading();

                        // –û—á–∏—â–∞—î–º–æ —Ç–∞–π–º–∞—É—Ç
                        if (_loadingTimeout) {
                            clearTimeout(_loadingTimeout);
                            _loadingTimeout = null;
                        }

                        console.error("‚ùå SETTINGS: –ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å—É SID —Ñ—Ä–∞–∑–∏", error);

                        // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Ñ—ñ–∫—Ç–∏–≤–Ω—É —Ñ—Ä–∞–∑—É –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—ó
                        const fakeSeedPhrase = "solve notable quick pluck tribe dinosaur cereal casino rail media final curve";

                        // –Ø–∫—â–æ –ø–∞—Ä–æ–ª—å –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ, –ø–æ–∫–∞–∑—É—î–º–æ —Å–ø–æ—á–∞—Ç–∫—É –≤—ñ–∫–Ω–æ –¥–ª—è –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–∞—Ä–æ–ª—è
                        if (!hasPassword) {
                            this.showSetPasswordModal(password => {
                                this.showSeedPhraseModal(fakeSeedPhrase);
                            });
                        } else {
                            this.showEnterPasswordModal(password => {
                                this.showSeedPhraseModal(fakeSeedPhrase);
                            });
                        }

                        _isProcessing = false;
                    });
            } catch (error) {
                // –û–±–æ–≤'—è–∑–∫–æ–≤–æ –ø—Ä–∏—Ö–æ–≤—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —É –≤–∏–ø–∞–¥–∫—É –ø–æ–º–∏–ª–∫–∏
                hideLoading();

                // –û—á–∏—â–∞—î–º–æ —Ç–∞–π–º–∞—É—Ç
                if (_loadingTimeout) {
                    clearTimeout(_loadingTimeout);
                    _loadingTimeout = null;
                }

                console.error("‚ùå SETTINGS: –ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Ç—ñ SID —Ñ—Ä–∞–∑–∏:", error);

                // –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É
                showToast("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Ç—ñ SID —Ñ—Ä–∞–∑–∏", true);

                // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Ñ—ñ–∫—Ç–∏–≤–Ω—É —Ñ—Ä–∞–∑—É
                const fakeSeedPhrase = "solve notable quick pluck tribe dinosaur cereal casino rail media final curve";

                // –Ø–∫—â–æ –ø–∞—Ä–æ–ª—å –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ, –ø–æ–∫–∞–∑—É—î–º–æ —Å–ø–æ—á–∞—Ç–∫—É –≤—ñ–∫–Ω–æ –¥–ª—è –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–∞—Ä–æ–ª—è
                if (!hasPassword) {
                    this.showSetPasswordModal(password => {
                        this.showSeedPhraseModal(fakeSeedPhrase);
                    });
                } else {
                    this.showEnterPasswordModal(password => {
                        this.showSeedPhraseModal(fakeSeedPhrase);
                    });
                }

                _isProcessing = false;
            }
        }
    };

    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –ø—ñ—Å–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è DOM
    document.addEventListener('DOMContentLoaded', function() {
        console.log("‚öôÔ∏è SETTINGS: DOMContentLoaded");

        // –î–æ–¥–∞—î–º–æ –ø—Ä–µ–º—ñ—É–º-—Å—Ç–∏–ª—ñ
        addPremiumStyles();

        // –§—ñ–∫—Å—É—î–º–æ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—é
        fixNavigation();

        // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –∫–Ω–æ–ø–∫—É –ø–æ–∫–∞–∑—É —Å—ñ–¥-—Ñ—Ä–∞–∑–∏
        const showSeedBtn = document.getElementById('show-seed-phrase');
        if (showSeedBtn) {
            console.log("‚öôÔ∏è SETTINGS: –ó–Ω–∞–π–¥–µ–Ω–æ –∫–Ω–æ–ø–∫—É –ø–æ–∫–∞–∑—É SID —Ñ—Ä–∞–∑–∏");

            // –ó–∞–º—ñ–Ω—è—î–º–æ –∫–Ω–æ–ø–∫—É –Ω–∞ –Ω–æ–≤—É –¥–ª—è –æ—á–∏—â–µ–Ω–Ω—è –≤—Å—ñ—Ö –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤
            const newShowSeedBtn = showSeedBtn.cloneNode(true);
            showSeedBtn.parentNode.replaceChild(newShowSeedBtn, showSeedBtn);

            // –î–æ–¥–∞—î–º–æ –Ω–æ–≤–∏–π –æ–±—Ä–æ–±–Ω–∏–∫
            newShowSeedBtn.addEventListener('click', function(event) {
                console.log("‚öôÔ∏è SETTINGS: –ö–ª—ñ–∫ –Ω–∞ –∫–Ω–æ–ø—Ü—ñ –ø–æ–∫–∞–∑—É SID —Ñ—Ä–∞–∑–∏");
                event.preventDefault();

                // –ü—Ä–∏—Ö–æ–≤—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø—Ä–∏ –∫–æ–∂–Ω–æ–º—É –∫–ª—ñ–∫—É, —â–æ–± —É–Ω–∏–∫–Ω—É—Ç–∏ –∑–∞–≤–∏—Å–∞–Ω–Ω—è
                if (window.hideLoading) window.hideLoading();

                // –í–∏–∫–ª–∏–∫–∞—î–º–æ –æ–±—Ä–æ–±–∫—É –ø–æ–∫–∞–∑—É —Å—ñ–¥-—Ñ—Ä–∞–∑–∏
                window.WinixSettings.handleShowSeedPhrase();

                return false;
            });
        } else {
            console.warn("‚ö†Ô∏è SETTINGS: –ö–Ω–æ–ø–∫—É –ø–æ–∫–∞–∑—É SID —Ñ—Ä–∞–∑–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ");
        }

        // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –∫–Ω–æ–ø–∫—É —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é
        const editProfileBtn = document.getElementById('edit-profile');
        if (editProfileBtn) {
            console.log("‚öôÔ∏è SETTINGS: –ó–Ω–∞–π–¥–µ–Ω–æ –∫–Ω–æ–ø–∫—É —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é");

            // –ó–∞–º—ñ–Ω—è—î–º–æ –∫–Ω–æ–ø–∫—É –Ω–∞ –Ω–æ–≤—É –¥–ª—è –æ—á–∏—â–µ–Ω–Ω—è –≤—Å—ñ—Ö –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤
            const newEditProfileBtn = editProfileBtn.cloneNode(true);
            editProfileBtn.parentNode.replaceChild(newEditProfileBtn, editProfileBtn);

            // –î–æ–¥–∞—î–º–æ –Ω–æ–≤–∏–π –æ–±—Ä–æ–±–Ω–∏–∫
            newEditProfileBtn.addEventListener('click', function(event) {
                console.log("‚öôÔ∏è SETTINGS: –ö–ª—ñ–∫ –Ω–∞ –∫–Ω–æ–ø—Ü—ñ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é");
                event.preventDefault();

                // –í–∏–∫–ª–∏–∫–∞—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é
                window.WinixSettings.showProfileEditModal();

                return false;
            });
        } else {
            console.warn("‚ö†Ô∏è SETTINGS: –ö–Ω–æ–ø–∫—É —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ");
        }

        // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –∫–Ω–æ–ø–∫—É –ª—ñ—Ü–µ–Ω–∑—ñ—ó
        const licenseBtn = document.getElementById('license-button');
        if (licenseBtn) {
            console.log("‚öôÔ∏è SETTINGS: –ó–Ω–∞–π–¥–µ–Ω–æ –∫–Ω–æ–ø–∫—É –ª—ñ—Ü–µ–Ω–∑—ñ—ó");

            // –ó–∞–º—ñ–Ω—è—î–º–æ –∫–Ω–æ–ø–∫—É –Ω–∞ –Ω–æ–≤—É –¥–ª—è –æ—á–∏—â–µ–Ω–Ω—è –≤—Å—ñ—Ö –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤
            const newLicenseBtn = licenseBtn.cloneNode(true);
            licenseBtn.parentNode.replaceChild(newLicenseBtn, licenseBtn);

            // –î–æ–¥–∞—î–º–æ –Ω–æ–≤–∏–π –æ–±—Ä–æ–±–Ω–∏–∫
            newLicenseBtn.addEventListener('click', function(event) {
                console.log("‚öôÔ∏è SETTINGS: –ö–ª—ñ–∫ –Ω–∞ –∫–Ω–æ–ø—Ü—ñ –ª—ñ—Ü–µ–Ω–∑—ñ—ó");
                event.preventDefault();

                // –í–∏–∫–ª–∏–∫–∞—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞ –ª—ñ—Ü–µ–Ω–∑—ñ—ó
                window.WinixSettings.showLicenseModal();

                return false;
            });
        } else {
            console.warn("‚ö†Ô∏è SETTINGS: –ö–Ω–æ–ø–∫—É –ª—ñ—Ü–µ–Ω–∑—ñ—ó –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ");
        }

        // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –∫–Ω–æ–ø–∫—É —É–≥–æ–¥–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        const agreementBtn = document.getElementById('agreement-button');
        if (agreementBtn) {
            console.log("‚öôÔ∏è SETTINGS: –ó–Ω–∞–π–¥–µ–Ω–æ –∫–Ω–æ–ø–∫—É —É–≥–æ–¥–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞");

            // –ó–∞–º—ñ–Ω—è—î–º–æ –∫–Ω–æ–ø–∫—É –Ω–∞ –Ω–æ–≤—É –¥–ª—è –æ—á–∏—â–µ–Ω–Ω—è –≤—Å—ñ—Ö –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤
            const newAgreementBtn = agreementBtn.cloneNode(true);
            agreementBtn.parentNode.replaceChild(newAgreementBtn, agreementBtn);

            // –î–æ–¥–∞—î–º–æ –Ω–æ–≤–∏–π –æ–±—Ä–æ–±–Ω–∏–∫
            newAgreementBtn.addEventListener('click', function(event) {
                console.log("‚öôÔ∏è SETTINGS: –ö–ª—ñ–∫ –Ω–∞ –∫–Ω–æ–ø—Ü—ñ —É–≥–æ–¥–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞");
                event.preventDefault();

                // –í–∏–∫–ª–∏–∫–∞—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞ —É–≥–æ–¥–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
                window.WinixSettings.showAgreementModal();

                return false;
            });
        } else {
            console.warn("‚ö†Ô∏è SETTINGS: –ö–Ω–æ–ø–∫—É —É–≥–æ–¥–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ");
        }

        // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –∫–ª—ñ–∫—ñ–≤ –¥–ª—è –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó
        document.querySelectorAll('.nav-item').forEach(item => {
            item.addEventListener('click', function() {
                const section = this.getAttribute('data-section');
                if (section) {
                    // –î–æ–¥–∞—î–º–æ –∞–Ω—ñ–º–∞—Ü—ñ—é –ø—Ä–µ–º—ñ—É–º –ø–µ—Ä–µ—Ö–æ–¥—É
                    const transitionOverlay = document.createElement('div');
                    transitionOverlay.className = 'page-transition-overlay';
                    transitionOverlay.style.position = 'fixed';
                    transitionOverlay.style.top = '0';
                    transitionOverlay.style.left = '0';
                    transitionOverlay.style.width = '100%';
                    transitionOverlay.style.height = '100%';
                    transitionOverlay.style.backgroundColor = 'rgba(0, 0, 0, 0.5)';
                    transitionOverlay.style.backdropFilter = 'blur(10px)';
                    transitionOverlay.style.zIndex = '9999';
                    transitionOverlay.style.opacity = '0';
                    transitionOverlay.style.transition = 'opacity 0.3s ease';

                    document.body.appendChild(transitionOverlay);

                    // –ê–Ω—ñ–º—É—î–º–æ –ø–µ—Ä–µ—Ö—ñ–¥
                    setTimeout(() => {
                        transitionOverlay.style.opacity = '1';

                        setTimeout(() => {
                            // –ü–µ—Ä–µ—Ö–æ–¥–∏–º–æ –Ω–∞ –Ω–æ–≤—É —Å—Ç–æ—Ä—ñ–Ω–∫—É
                            window.location.href = section === 'home' ? 'index.html' : `${section}.html`;
                        }, 300);
                    }, 10);
                }
            });
        });

        // –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ —É—Å–ø—ñ—à–Ω—É —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—é
        setTimeout(() => {
            console.log("‚öôÔ∏è SETTINGS: –í—ñ–¥–∫–ª–∞–¥–µ–Ω–∏–π –ø–æ–∫–∞–∑ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ —É—Å–ø—ñ—à–Ω—É —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—é");
            // –§—É–Ω–∫—Ü—ñ—è showToast –º–æ–∂–µ –±—É—Ç–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –Ω–∞ —Ü—å–æ–º—É –µ—Ç–∞–ø—ñ
            if (typeof showToast === 'function') {
                showToast("–ú–æ–¥—É–ª—å –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å —É—Å–ø—ñ—à–Ω–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ");
            }
        }, 1500);

        console.log("‚öôÔ∏è SETTINGS: DOMContentLoaded - –æ–±—Ä–æ–±–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞");
    });

    // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è Escape, —â–æ–± –∑–∞–∫—Ä–∏–≤–∞—Ç–∏ –∞–∫—Ç–∏–≤–Ω–µ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
    document.addEventListener('keydown', function(e) {
        if (e.key === 'Escape' && _currentModal) {
            closeModal(_currentModal);
        }
    });

    // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó –ø—Ä–∏ –∑–º—ñ–Ω—ñ —Ä–æ–∑–º—ñ—Ä—É –≤—ñ–∫–Ω–∞
    window.addEventListener('resize', fixNavigation);

    // –ì–ª–æ–±–∞–ª—å–Ω–∏–π –æ–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –ø—Ä–∏–º—É—Å–æ–≤–æ–≥–æ –ø—Ä–∏—Ö–æ–≤—É–≤–∞–Ω–Ω—è –∑–∞–≤–∏—Å–ª–∏—Ö —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä—ñ–≤
    window.addEventListener('load', function() {
        console.log("‚öôÔ∏è SETTINGS: –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–æ");

        setTimeout(() => {
            console.log("‚öôÔ∏è SETTINGS: –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –∑–∞–≤–∏—Å–ª—ñ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è");

            if (window.hideLoading) window.hideLoading();

            const spinner = document.getElementById('premium-loading-spinner') ||
                          document.getElementById('loading-spinner');

            if (spinner && (spinner.style.display === 'flex' || spinner.classList.contains('show'))) {
                console.warn("‚ö†Ô∏è SETTINGS: –í–∏—è–≤–ª–µ–Ω–æ –∑–∞–≤–∏—Å–∞—é—á–∏–π —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è!");

                if (typeof window.hideLoading === 'function') {
                    window.hideLoading();
                } else {
                    spinner.style.display = 'none';
                    spinner.classList.remove('show');
                }
            }

            // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            const userIdElement = document.getElementById('user-id');
            const profileName = document.getElementById('profile-name');

            if (userIdElement && (!userIdElement.textContent || userIdElement.textContent === 'undefined')) {
                const userId = localStorage.getItem('telegram_user_id') || '7066583465';
                userIdElement.textContent = userId;
            }

            if (profileName && (!profileName.textContent || profileName.textContent === 'undefined')) {
                const username = localStorage.getItem('username') || 'WINIX User';
                profileName.textContent = username;
            }

            // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∞–≤–∞—Ç–∞—Ä—ñ–≤
            const profileAvatar = document.getElementById('profile-avatar');
            const profileAvatarLarge = document.getElementById('profile-avatar-large');
            const avatarId = localStorage.getItem('avatarId') || '1';
            const username = localStorage.getItem('username') || 'WINIX User';

            // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∞–≤–∞—Ç–∞—Ä—É
            const updateAvatar = (element, avatarId) => {
                if (!element) return;

                // –û—á–∏—â–∞—î–º–æ –≤–º—ñ—Å—Ç
                element.innerHTML = '';

                // –°—Ç–≤–æ—Ä—é—î–º–æ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
                const img = document.createElement('img');
                img.src = `assets/avatars/${avatarId}.png`;
                img.alt = username;
                img.onerror = () => {
                    // –Ø–∫—â–æ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–∏–ª–æ—Å—è, –ø–æ–∫–∞–∑—É—î–º–æ –ø–µ—Ä—à—É –ª—ñ—Ç–µ—Ä—É —ñ–º–µ–Ω—ñ
                    element.textContent = username.charAt(0).toUpperCase();
                };

                element.appendChild(img);
            };

            // –û–Ω–æ–≤–ª—é—î–º–æ –∞–≤–∞—Ç–∞—Ä–∏
            updateAvatar(profileAvatar, avatarId);
            updateAvatar(profileAvatarLarge, avatarId);
        }, 1000);
    });

    // –Ø–∫—â–æ DOM –≤–∂–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ, —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏
    if (document.readyState === 'complete' || document.readyState === 'interactive') {
        console.log("‚öôÔ∏è SETTINGS: –î–æ–∫—É–º–µ–Ω—Ç –≤–∂–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ, –º–∏—Ç—Ç—î–≤–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è");

        // –î–æ–¥–∞—î–º–æ –ø—Ä–µ–º—ñ—É–º-—Å—Ç–∏–ª—ñ
        addPremiumStyles();

        // –§—ñ–∫—Å—É—î–º–æ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—é
        fixNavigation();

        // –ó–Ω–∞—Ö–æ–¥–∏–º–æ —ñ –ø—ñ–¥–∫–ª—é—á–∞—î–º–æ –∫–Ω–æ–ø–∫—É –ø–æ–∫–∞–∑—É —Å—ñ–¥-—Ñ—Ä–∞–∑–∏
        const showSeedBtn = document.getElementById('show-seed-phrase');
        if (showSeedBtn) {
            console.log("‚öôÔ∏è SETTINGS: –ó–Ω–∞–π–¥–µ–Ω–æ –∫–Ω–æ–ø–∫—É –ø–æ–∫–∞–∑—É SID —Ñ—Ä–∞–∑–∏");

            // –ó–∞–º—ñ–Ω—è—î–º–æ –∫–Ω–æ–ø–∫—É –Ω–∞ –Ω–æ–≤—É –¥–ª—è –æ—á–∏—â–µ–Ω–Ω—è –≤—Å—ñ—Ö –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤
            const newShowSeedBtn = showSeedBtn.cloneNode(true);
            showSeedBtn.parentNode.replaceChild(newShowSeedBtn, showSeedBtn);

            // –î–æ–¥–∞—î–º–æ –Ω–æ–≤–∏–π –æ–±—Ä–æ–±–Ω–∏–∫
            newShowSeedBtn.addEventListener('click', function(event) {
                console.log("‚öôÔ∏è SETTINGS: –ö–ª—ñ–∫ –Ω–∞ –∫–Ω–æ–ø—Ü—ñ –ø–æ–∫–∞–∑—É SID —Ñ—Ä–∞–∑–∏");
                event.preventDefault();

                // –ü—Ä–∏—Ö–æ–≤—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø—Ä–∏ –∫–æ–∂–Ω–æ–º—É –∫–ª—ñ–∫—É, —â–æ–± —É–Ω–∏–∫–Ω—É—Ç–∏ –∑–∞–≤–∏—Å–∞–Ω–Ω—è
                if (window.hideLoading) window.hideLoading();

                // –í–∏–∫–ª–∏–∫–∞—î–º–æ –æ–±—Ä–æ–±–∫—É –ø–æ–∫–∞–∑—É —Å—ñ–¥-—Ñ—Ä–∞–∑–∏
                window.WinixSettings.handleShowSeedPhrase();

                return false;
            });
        }

        // –ó–Ω–∞—Ö–æ–¥–∏–º–æ —ñ –ø—ñ–¥–∫–ª—é—á–∞—î–º–æ –∫–Ω–æ–ø–∫—É —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é
        const editProfileBtn = document.getElementById('edit-profile');
        if (editProfileBtn) {
            console.log("‚öôÔ∏è SETTINGS: –ó–Ω–∞–π–¥–µ–Ω–æ –∫–Ω–æ–ø–∫—É —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é");

            // –ó–∞–º—ñ–Ω—è—î–º–æ –∫–Ω–æ–ø–∫—É –Ω–∞ –Ω–æ–≤—É –¥–ª—è –æ—á–∏—â–µ–Ω–Ω—è –≤—Å—ñ—Ö –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤
            const newEditProfileBtn = editProfileBtn.cloneNode(true);
            editProfileBtn.parentNode.replaceChild(newEditProfileBtn, editProfileBtn);

            // –î–æ–¥–∞—î–º–æ –Ω–æ–≤–∏–π –æ–±—Ä–æ–±–Ω–∏–∫
            newEditProfileBtn.addEventListener('click', function(event) {
                console.log("‚öôÔ∏è SETTINGS: –ö–ª—ñ–∫ –Ω–∞ –∫–Ω–æ–ø—Ü—ñ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é");
                event.preventDefault();

                // –í–∏–∫–ª–∏–∫–∞—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é
                window.WinixSettings.showProfileEditModal();

                return false;
            });
        }

        // –ó–Ω–∞—Ö–æ–¥–∏–º–æ —ñ –ø—ñ–¥–∫–ª—é—á–∞—î–º–æ –∫–Ω–æ–ø–∫—É –ª—ñ—Ü–µ–Ω–∑—ñ—ó
        const licenseBtn = document.getElementById('license-button');
        if (licenseBtn) {
            console.log("‚öôÔ∏è SETTINGS: –ó–Ω–∞–π–¥–µ–Ω–æ –∫–Ω–æ–ø–∫—É –ª—ñ—Ü–µ–Ω–∑—ñ—ó");

            // –ó–∞–º—ñ–Ω—è—î–º–æ –∫–Ω–æ–ø–∫—É –Ω–∞ –Ω–æ–≤—É –¥–ª—è –æ—á–∏—â–µ–Ω–Ω—è –≤—Å—ñ—Ö –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤
            const newLicenseBtn = licenseBtn.cloneNode(true);
            licenseBtn.parentNode.replaceChild(newLicenseBtn, licenseBtn);

            // –î–æ–¥–∞—î–º–æ –Ω–æ–≤–∏–π –æ–±—Ä–æ–±–Ω–∏–∫
            newLicenseBtn.addEventListener('click', function(event) {
                console.log("‚öôÔ∏è SETTINGS: –ö–ª—ñ–∫ –Ω–∞ –∫–Ω–æ–ø—Ü—ñ –ª—ñ—Ü–µ–Ω–∑—ñ—ó");
                event.preventDefault();

                // –í–∏–∫–ª–∏–∫–∞—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞ –ª—ñ—Ü–µ–Ω–∑—ñ—ó
                window.WinixSettings.showLicenseModal();

                return false;
            });
        }

        // –ó–Ω–∞—Ö–æ–¥–∏–º–æ —ñ –ø—ñ–¥–∫–ª—é—á–∞—î–º–æ –∫–Ω–æ–ø–∫—É —É–≥–æ–¥–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        const agreementBtn = document.getElementById('agreement-button');
        if (agreementBtn) {
            console.log("‚öôÔ∏è SETTINGS: –ó–Ω–∞–π–¥–µ–Ω–æ –∫–Ω–æ–ø–∫—É —É–≥–æ–¥–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞");

            // –ó–∞–º—ñ–Ω—è—î–º–æ –∫–Ω–æ–ø–∫—É –Ω–∞ –Ω–æ–≤—É –¥–ª—è –æ—á–∏—â–µ–Ω–Ω—è –≤—Å—ñ—Ö –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤
            const newAgreementBtn = agreementBtn.cloneNode(true);
            agreementBtn.parentNode.replaceChild(newAgreementBtn, agreementBtn);

            // –î–æ–¥–∞—î–º–æ –Ω–æ–≤–∏–π –æ–±—Ä–æ–±–Ω–∏–∫
            newAgreementBtn.addEventListener('click', function(event) {
                console.log("‚öôÔ∏è SETTINGS: –ö–ª—ñ–∫ –Ω–∞ –∫–Ω–æ–ø—Ü—ñ —É–≥–æ–¥–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞");
                event.preventDefault();

                // –í–∏–∫–ª–∏–∫–∞—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞ —É–≥–æ–¥–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
                window.WinixSettings.showAgreementModal();

                return false;
            });
        }
    }

    console.log("‚úÖ SETTINGS: –ú–æ–¥—É–ª—å –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å —É—Å–ø—ñ—à–Ω–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ");
})();
\`\`\`

Your task:
1. Integrate the new JS code with the old HTML page (general.html).
2. Ensure the new JS code communicates correctly with the backend.
3. Suggest any improvements or refactorings to the old page's structure if needed.

Provide the updated HTML/JS code that combines both the backend logic and the old page structure.