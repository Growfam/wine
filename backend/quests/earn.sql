-- ===================================================================
-- –°–•–ï–ú–ê –¢–ê–ë–õ–ò–¶–¨ SUPABASE –î–õ–Ø –°–ò–°–¢–ï–ú–ò –ó–ê–í–î–ê–ù–¨ WINIX
-- ===================================================================

-- üë§ –ö–û–†–ò–°–¢–£–í–ê–ß–Ü (–æ—Å–Ω–æ–≤–Ω–∞ —Ç–∞–±–ª–∏—Ü—è —ñ—Å–Ω—É—î —è–∫ 'winix')
-- –†–æ–∑—à–∏—Ä–µ–Ω–∞ –≤–µ—Ä—Å—ñ—è –∑ –ø–æ–ª—è–º–∏ –¥–ª—è —Å–∏—Å—Ç–µ–º–∏ –∑–∞–≤–¥–∞–Ω—å
ALTER TABLE winix ADD COLUMN IF NOT EXISTS
    language_code VARCHAR(10) DEFAULT 'uk',
    last_activity TIMESTAMPTZ DEFAULT NOW(),
    first_name VARCHAR(100),
    last_name VARCHAR(100),
    notifications_enabled BOOLEAN DEFAULT true,
    newbie_bonus_claimed BOOLEAN DEFAULT false;

-- üéØ –ó–ê–í–î–ê–ù–ù–Ø
CREATE TABLE IF NOT EXISTS tasks (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    title VARCHAR(255) NOT NULL,
    description TEXT,
    instructions TEXT,

    -- –¢–∏–ø —ñ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞
    type VARCHAR(50) NOT NULL, -- 'telegram', 'social', 'daily', 'referral'
    platform VARCHAR(50), -- 'telegram', 'youtube', 'twitter', 'discord'
    action VARCHAR(50), -- 'subscribe', 'follow', 'join', 'like'

    -- –í–∏–Ω–∞–≥–æ—Ä–æ–¥–∞
    winix_reward DECIMAL(15,2) DEFAULT 0,
    tickets_reward INTEGER DEFAULT 0,

    -- –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è
    url TEXT,
    channel_username VARCHAR(100),
    requirements JSONB DEFAULT '{}',
    metadata JSONB DEFAULT '{}',

    -- –°—Ç–∞—Ç—É—Å —ñ –ø—Ä—ñ–æ—Ä–∏—Ç–µ—Ç
    is_active BOOLEAN DEFAULT true,
    priority INTEGER DEFAULT 1,
    max_completions INTEGER, -- NULL = –Ω–µ–æ–±–º–µ–∂–µ–Ω–æ
    current_completions INTEGER DEFAULT 0,

    -- –ß–∞—Å–æ–≤—ñ –æ–±–º–µ–∂–µ–Ω–Ω—è
    start_date TIMESTAMPTZ,
    end_date TIMESTAMPTZ,
    expires_at TIMESTAMPTZ,

    -- –ê—É–¥–∏—Ç
    created_at TIMESTAMPTZ DEFAULT NOW(),
    updated_at TIMESTAMPTZ DEFAULT NOW(),
    created_by VARCHAR(100),

    -- –Ü–Ω–¥–µ–∫—Å–∏
    CONSTRAINT valid_task_type CHECK (type IN ('telegram', 'social', 'daily', 'referral', 'wallet')),
    CONSTRAINT valid_platform CHECK (platform IN ('telegram', 'youtube', 'twitter', 'discord', 'ton')),
    CONSTRAINT positive_rewards CHECK (winix_reward >= 0 AND tickets_reward >= 0)
);

-- –Ü–Ω–¥–µ–∫—Å–∏ –¥–ª—è tasks
CREATE INDEX IF NOT EXISTS idx_tasks_type ON tasks(type);
CREATE INDEX IF NOT EXISTS idx_tasks_active ON tasks(is_active);
CREATE INDEX IF NOT EXISTS idx_tasks_priority ON tasks(priority DESC);
CREATE INDEX IF NOT EXISTS idx_tasks_dates ON tasks(start_date, end_date);

-- üìã –°–¢–ê–ù –í–ò–ö–û–ù–ê–ù–ù–Ø –ó–ê–í–î–ê–ù–¨ –ö–û–†–ò–°–¢–£–í–ê–ß–ê–ú–ò
CREATE TABLE IF NOT EXISTS user_tasks (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    telegram_id VARCHAR(50) NOT NULL,
    task_id UUID NOT NULL REFERENCES tasks(id) ON DELETE CASCADE,

    -- –°—Ç–∞—Ç—É—Å
    status VARCHAR(20) DEFAULT 'available', -- 'available', 'started', 'pending', 'completed', 'claimed', 'expired'
    progress INTEGER DEFAULT 0, -- 0-100%

    -- –ß–∞—Å–æ–≤—ñ –º—ñ—Ç–∫–∏
    started_at TIMESTAMPTZ,
    completed_at TIMESTAMPTZ,
    claimed_at TIMESTAMPTZ,
    expires_at TIMESTAMPTZ,

    -- –î–∞–Ω—ñ –≤–µ—Ä–∏—Ñ—ñ–∫–∞—Ü—ñ—ó
    verification_data JSONB DEFAULT '{}',
    verification_attempts INTEGER DEFAULT 0,
    last_verification_at TIMESTAMPTZ,

    -- –í–∏–Ω–∞–≥–æ—Ä–æ–¥–∞
    reward_winix DECIMAL(15,2),
    reward_tickets INTEGER,
    reward_transaction_id VARCHAR(100),

    -- –ê—É–¥–∏—Ç
    created_at TIMESTAMPTZ DEFAULT NOW(),
    updated_at TIMESTAMPTZ DEFAULT NOW(),

    -- –£–Ω—ñ–∫–∞–ª—å–Ω—ñ—Å—Ç—å
    UNIQUE(telegram_id, task_id),

    -- –ü–µ—Ä–µ–≤—ñ—Ä–∫–∏
    CONSTRAINT valid_status CHECK (status IN ('available', 'started', 'pending', 'completed', 'claimed', 'expired')),
    CONSTRAINT valid_progress CHECK (progress >= 0 AND progress <= 100)
);

-- –Ü–Ω–¥–µ–∫—Å–∏ –¥–ª—è user_tasks
CREATE INDEX IF NOT EXISTS idx_user_tasks_telegram_id ON user_tasks(telegram_id);
CREATE INDEX IF NOT EXISTS idx_user_tasks_status ON user_tasks(status);
CREATE INDEX IF NOT EXISTS idx_user_tasks_task_id ON user_tasks(task_id);
CREATE INDEX IF NOT EXISTS idx_user_tasks_completed ON user_tasks(completed_at DESC);

-- üí∞ –¢–†–ê–ù–ó–ê–ö–¶–Ü–á (—Ü–µ–Ω—Ç—Ä–∞–ª—ñ–∑–æ–≤–∞–Ω–∞ —Ç–∞–±–ª–∏—Ü—è)
CREATE TABLE IF NOT EXISTS transactions (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    telegram_id VARCHAR(50) NOT NULL,

    -- –¢–∏–ø —ñ —Å—É–º–∞
    type VARCHAR(50) NOT NULL, -- 'task_reward', 'daily_bonus', 'flex_reward', 'wallet_connection_bonus', 'referral_bonus'
    amount_winix DECIMAL(15,2) DEFAULT 0,
    amount_tickets INTEGER DEFAULT 0,
    amount_flex INTEGER DEFAULT 0,

    -- –°—Ç–∞—Ç—É—Å
    status VARCHAR(20) DEFAULT 'pending', -- 'pending', 'completed', 'failed', 'cancelled'

    -- –ü–æ—Å–∏–ª–∞–Ω–Ω—è
    reference_type VARCHAR(50), -- 'task', 'daily', 'flex_level', 'wallet'
    reference_id VARCHAR(100),

    -- –û–ø–∏—Å
    description TEXT,
    metadata JSONB DEFAULT '{}',

    -- –ë–∞–ª–∞–Ω—Å–∏ –¥–æ/–ø—ñ—Å–ª—è
    balance_before JSONB,
    balance_after JSONB,

    -- –ü–æ–º–∏–ª–∫–∏
    error_message TEXT,
    retry_count INTEGER DEFAULT 0,

    -- –ê—É–¥–∏—Ç
    created_at TIMESTAMPTZ DEFAULT NOW(),
    updated_at TIMESTAMPTZ DEFAULT NOW(),
    processed_at TIMESTAMPTZ,

    -- –ü–µ—Ä–µ–≤—ñ—Ä–∫–∏
    CONSTRAINT valid_transaction_type CHECK (type IN ('task_reward', 'daily_bonus', 'flex_reward', 'wallet_connection_bonus', 'referral_bonus', 'admin_adjustment', 'purchase', 'withdrawal')),
    CONSTRAINT valid_status CHECK (status IN ('pending', 'completed', 'failed', 'cancelled'))
);

-- –Ü–Ω–¥–µ–∫—Å–∏ –¥–ª—è transactions
CREATE INDEX IF NOT EXISTS idx_transactions_telegram_id ON transactions(telegram_id);
CREATE INDEX IF NOT EXISTS idx_transactions_type ON transactions(type);
CREATE INDEX IF NOT EXISTS idx_transactions_status ON transactions(status);
CREATE INDEX IF NOT EXISTS idx_transactions_created ON transactions(created_at DESC);
CREATE INDEX IF NOT EXISTS idx_transactions_reference ON transactions(reference_type, reference_id);

-- üìÖ –©–û–î–ï–ù–ù–Ü –ë–û–ù–£–°–ò
CREATE TABLE IF NOT EXISTS daily_bonus_status (
    telegram_id VARCHAR(50) PRIMARY KEY,

    -- Streak —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è
    current_streak INTEGER DEFAULT 0,
    longest_streak INTEGER DEFAULT 0,
    last_claim_date DATE,
    next_available_date TIMESTAMPTZ,

    -- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    total_days_claimed INTEGER DEFAULT 0,
    total_winix_earned DECIMAL(15,2) DEFAULT 0,
    total_tickets_earned INTEGER DEFAULT 0,

    -- –ü–æ—Ç–æ—á–Ω–∏–π —Ü–∏–∫–ª (1-30 –¥–Ω—ñ–≤)
    current_day_number INTEGER DEFAULT 1,
    cycle_start_date DATE,

    -- –ê—É–¥–∏—Ç
    created_at TIMESTAMPTZ DEFAULT NOW(),
    updated_at TIMESTAMPTZ DEFAULT NOW(),

    -- –ü–µ—Ä–µ–≤—ñ—Ä–∫–∏
    CONSTRAINT valid_streak CHECK (current_streak >= 0 AND longest_streak >= 0),
    CONSTRAINT valid_day_number CHECK (current_day_number >= 1 AND current_day_number <= 30)
);

-- üìÖ –Ü–°–¢–û–†–Ü–Ø –©–û–î–ï–ù–ù–ò–• –ë–û–ù–£–°–Ü–í
CREATE TABLE IF NOT EXISTS daily_bonus_entries (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    telegram_id VARCHAR(50) NOT NULL,

    -- –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è
    claim_date DATE NOT NULL,
    day_number INTEGER NOT NULL,
    streak_at_claim INTEGER NOT NULL,

    -- –í–∏–Ω–∞–≥–æ—Ä–æ–¥–∞
    winix_amount DECIMAL(15,2) NOT NULL,
    tickets_amount INTEGER NOT NULL,

    -- –ú—ñ—Ç–∫–∏
    is_special_day BOOLEAN DEFAULT false,
    multiplier_applied DECIMAL(3,2) DEFAULT 1.0,

    -- –¢—Ä–∞–Ω–∑–∞–∫—Ü—ñ—è
    transaction_id UUID REFERENCES transactions(id),

    -- –ê—É–¥–∏—Ç
    created_at TIMESTAMPTZ DEFAULT NOW(),

    -- –Ü–Ω–¥–µ–∫—Å–∏
    FOREIGN KEY (telegram_id) REFERENCES daily_bonus_status(telegram_id) ON DELETE CASCADE
);

-- –Ü–Ω–¥–µ–∫—Å–∏ –¥–ª—è daily_bonus_entries
CREATE INDEX IF NOT EXISTS idx_daily_entries_telegram_id ON daily_bonus_entries(telegram_id);
CREATE INDEX IF NOT EXISTS idx_daily_entries_date ON daily_bonus_entries(claim_date DESC);

-- üíé FLEX CLAIMS (—ñ—Å—Ç–æ—Ä—ñ—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è FLEX –≤–∏–Ω–∞–≥–æ—Ä–æ–¥)
CREATE TABLE IF NOT EXISTS flex_claims (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    telegram_id VARCHAR(50) NOT NULL,

    -- –†—ñ–≤–µ–Ω—å —ñ –±–∞–ª–∞–Ω—Å
    flex_level VARCHAR(20) NOT NULL, -- 'bronze', 'silver', 'gold', 'diamond'
    flex_balance INTEGER NOT NULL,

    -- –í–∏–Ω–∞–≥–æ—Ä–æ–¥–∞
    winix_amount DECIMAL(15,2) NOT NULL,
    tickets_amount INTEGER NOT NULL,

    -- –¢—Ä–∞–Ω–∑–∞–∫—Ü—ñ—è
    transaction_id UUID REFERENCES transactions(id),

    -- –ß–∞—Å–æ–≤—ñ –æ–±–º–µ–∂–µ–Ω–Ω—è
    claim_date DATE NOT NULL,
    can_claim_again_at TIMESTAMPTZ NOT NULL,

    -- –ê—É–¥–∏—Ç
    created_at TIMESTAMPTZ DEFAULT NOW(),

    -- –ü–µ—Ä–µ–≤—ñ—Ä–∫–∏
    CONSTRAINT valid_flex_level CHECK (flex_level IN ('bronze', 'silver', 'gold', 'diamond')),
    CONSTRAINT positive_flex_balance CHECK (flex_balance >= 0)
);

-- –Ü–Ω–¥–µ–∫—Å–∏ –¥–ª—è flex_claims
CREATE INDEX IF NOT EXISTS idx_flex_claims_telegram_id ON flex_claims(telegram_id);
CREATE INDEX IF NOT EXISTS idx_flex_claims_date ON flex_claims(claim_date DESC);
CREATE INDEX IF NOT EXISTS idx_flex_claims_level ON flex_claims(flex_level);

-- üîó TON –ì–ê–ú–ê–ù–¶–Ü
CREATE TABLE IF NOT EXISTS wallets (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    telegram_id VARCHAR(50) NOT NULL,

    -- –ê–¥—Ä–µ—Å–∞ —ñ –∫–ª—é—á—ñ
    address VARCHAR(100) NOT NULL UNIQUE,
    public_key VARCHAR(200),

    -- –ú–µ—Ä–µ–∂–∞
    chain VARCHAR(20) DEFAULT '-239', -- TON mainnet
    provider VARCHAR(50), -- 'tonkeeper', 'tonhub', etc.

    -- –°—Ç–∞—Ç—É—Å
    status VARCHAR(20) DEFAULT 'connected', -- 'connected', 'disconnected', 'verified'
    is_verified BOOLEAN DEFAULT false,

    -- –í–µ—Ä–∏—Ñ—ñ–∫–∞—Ü—ñ—è
    verification_signature TEXT,
    verification_message TEXT,
    verification_type VARCHAR(50),
    verified_at TIMESTAMPTZ,

    -- –ë–æ–Ω—É—Å–∏
    connection_bonus_claimed BOOLEAN DEFAULT false,
    connection_bonus_amount DECIMAL(15,2),
    connection_bonus_transaction_id UUID REFERENCES transactions(id),

    -- –ú–µ—Ç–∞–¥–∞–Ω—ñ
    metadata JSONB DEFAULT '{}',
    user_agent TEXT,
    ip_address INET,

    -- –ê—É–¥–∏—Ç
    connected_at TIMESTAMPTZ DEFAULT NOW(),
    disconnected_at TIMESTAMPTZ,
    updated_at TIMESTAMPTZ DEFAULT NOW(),

    -- –£–Ω—ñ–∫–∞–ª—å–Ω—ñ—Å—Ç—å
    UNIQUE(telegram_id, address),

    -- –ü–µ—Ä–µ–≤—ñ—Ä–∫–∏
    CONSTRAINT valid_wallet_status CHECK (status IN ('connected', 'disconnected', 'verified'))
);

-- –Ü–Ω–¥–µ–∫—Å–∏ –¥–ª—è wallets
CREATE INDEX IF NOT EXISTS idx_wallets_telegram_id ON wallets(telegram_id);
CREATE INDEX IF NOT EXISTS idx_wallets_address ON wallets(address);
CREATE INDEX IF NOT EXISTS idx_wallets_status ON wallets(status);

-- üìä –ê–ù–ê–õ–Ü–¢–ò–ß–ù–Ü –ü–û–î–Ü–á
CREATE TABLE IF NOT EXISTS analytics_events (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),

    -- –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á
    telegram_id VARCHAR(50),
    session_id VARCHAR(100),

    -- –ü–æ–¥—ñ—è
    event_type VARCHAR(50) NOT NULL,
    category VARCHAR(50) NOT NULL,
    action VARCHAR(50) NOT NULL,
    label VARCHAR(100),
    value INTEGER,

    -- –î–µ—Ç–∞–ª—ñ
    properties JSONB DEFAULT '{}',
    severity VARCHAR(20) DEFAULT 'normal', -- 'low', 'normal', 'high', 'critical'

    -- –ö–æ–Ω—Ç–µ–∫—Å—Ç
    page_url TEXT,
    referrer TEXT,
    user_agent TEXT,
    ip_address INET,

    -- –ê—É–¥–∏—Ç
    timestamp TIMESTAMPTZ DEFAULT NOW(),
    processed_at TIMESTAMPTZ,

    -- –ü–µ—Ä–µ–≤—ñ—Ä–∫–∏
    CONSTRAINT valid_severity CHECK (severity IN ('low', 'normal', 'high', 'critical'))
);

-- –Ü–Ω–¥–µ–∫—Å–∏ –¥–ª—è analytics_events
CREATE INDEX IF NOT EXISTS idx_analytics_telegram_id ON analytics_events(telegram_id);
CREATE INDEX IF NOT EXISTS idx_analytics_event_type ON analytics_events(event_type);
CREATE INDEX IF NOT EXISTS idx_analytics_timestamp ON analytics_events(timestamp DESC);
CREATE INDEX IF NOT EXISTS idx_analytics_category_action ON analytics_events(category, action);

-- üîç –í–ï–†–ò–§–Ü–ö–ê–¶–Ü–á
CREATE TABLE IF NOT EXISTS verifications (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    user_id VARCHAR(50) NOT NULL,
    task_id UUID REFERENCES tasks(id) ON DELETE CASCADE,

    -- –¢–∏–ø –≤–µ—Ä–∏—Ñ—ñ–∫–∞—Ü—ñ—ó
    verification_type VARCHAR(50) NOT NULL,
    platform VARCHAR(50),

    -- –°—Ç–∞—Ç—É—Å
    status VARCHAR(20) DEFAULT 'pending', -- 'pending', 'in_progress', 'completed', 'failed', 'expired'

    -- –î–∞–Ω—ñ
    verification_data JSONB DEFAULT '{}',
    external_id VARCHAR(200), -- ID –≤ –∑–æ–≤–Ω—ñ—à–Ω—ñ–π —Å–∏—Å—Ç–µ–º—ñ

    -- –°–ø—Ä–æ–±–∏
    attempts INTEGER DEFAULT 0,
    max_attempts INTEGER DEFAULT 3,

    -- –†–µ–∑—É–ª—å—Ç–∞—Ç
    verified_at TIMESTAMPTZ,
    failure_reason TEXT,

    -- –¢–µ—Ä–º—ñ–Ω–∏
    started_at TIMESTAMPTZ DEFAULT NOW(),
    expires_at TIMESTAMPTZ,

    -- –ê—É–¥–∏—Ç
    created_at TIMESTAMPTZ DEFAULT NOW(),
    updated_at TIMESTAMPTZ DEFAULT NOW(),

    -- –ü–µ—Ä–µ–≤—ñ—Ä–∫–∏
    CONSTRAINT valid_verification_status CHECK (status IN ('pending', 'in_progress', 'completed', 'failed', 'expired')),
    CONSTRAINT valid_attempts CHECK (attempts >= 0 AND attempts <= max_attempts)
);

-- –Ü–Ω–¥–µ–∫—Å–∏ –¥–ª—è verifications
CREATE INDEX IF NOT EXISTS idx_verifications_user_id ON verifications(user_id);
CREATE INDEX IF NOT EXISTS idx_verifications_task_id ON verifications(task_id);
CREATE INDEX IF NOT EXISTS idx_verifications_status ON verifications(status);
CREATE INDEX IF NOT EXISTS idx_verifications_type ON verifications(verification_type);

-- üéñÔ∏è –î–û–°–Ø–ì–ù–ï–ù–ù–Ø/–ë–ï–ô–î–ñ–Ü (—Ä–æ–∑—à–∏—Ä–µ–Ω–Ω—è —ñ—Å–Ω—É—é—á–æ—ó –ª–æ–≥—ñ–∫–∏)
CREATE TABLE IF NOT EXISTS achievements (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    telegram_id VARCHAR(50) NOT NULL,

    -- –¢–∏–ø –¥–æ—Å—è–≥–Ω–µ–Ω–Ω—è
    achievement_type VARCHAR(50) NOT NULL, -- 'badge_winner', 'badge_beginner', 'badge_rich', 'first_task', etc.

    -- –°—Ç–∞—Ç—É—Å
    is_unlocked BOOLEAN DEFAULT false,
    is_claimed BOOLEAN DEFAULT false,

    -- –í–∏–Ω–∞–≥–æ—Ä–æ–¥–∞
    reward_winix DECIMAL(15,2) DEFAULT 0,
    reward_tickets INTEGER DEFAULT 0,
    reward_transaction_id UUID REFERENCES transactions(id),

    -- –ü—Ä–æ–≥—Ä–µ—Å
    current_progress INTEGER DEFAULT 0,
    required_progress INTEGER NOT NULL,

    -- –ß–∞—Å–æ–≤—ñ –º—ñ—Ç–∫–∏
    unlocked_at TIMESTAMPTZ,
    claimed_at TIMESTAMPTZ,

    -- –ê—É–¥–∏—Ç
    created_at TIMESTAMPTZ DEFAULT NOW(),
    updated_at TIMESTAMPTZ DEFAULT NOW(),

    -- –£–Ω—ñ–∫–∞–ª—å–Ω—ñ—Å—Ç—å
    UNIQUE(telegram_id, achievement_type),

    -- –ü–µ—Ä–µ–≤—ñ—Ä–∫–∏
    CONSTRAINT valid_progress CHECK (current_progress >= 0 AND current_progress <= required_progress)
);

-- –Ü–Ω–¥–µ–∫—Å–∏ –¥–ª—è achievements
CREATE INDEX IF NOT EXISTS idx_achievements_telegram_id ON achievements(telegram_id);
CREATE INDEX IF NOT EXISTS idx_achievements_type ON achievements(achievement_type);
CREATE INDEX IF NOT EXISTS idx_achievements_unlocked ON achievements(is_unlocked);

-- ===================================================================
-- –§–£–ù–ö–¶–Ü–á –¢–ê –¢–†–ò–ì–ï–†–ò
-- ===================================================================

-- –§—É–Ω–∫—Ü—ñ—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è updated_at
CREATE OR REPLACE FUNCTION update_updated_at_column()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = NOW();
    RETURN NEW;
END;
$$ language 'plpgsql';

-- –¢—Ä–∏–≥–µ—Ä–∏ –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è updated_at
DROP TRIGGER IF EXISTS update_tasks_updated_at ON tasks;
CREATE TRIGGER update_tasks_updated_at BEFORE UPDATE ON tasks
    FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();

DROP TRIGGER IF EXISTS update_user_tasks_updated_at ON user_tasks;
CREATE TRIGGER update_user_tasks_updated_at BEFORE UPDATE ON user_tasks
    FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();

DROP TRIGGER IF EXISTS update_transactions_updated_at ON transactions;
CREATE TRIGGER update_transactions_updated_at BEFORE UPDATE ON transactions
    FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();

DROP TRIGGER IF EXISTS update_daily_bonus_status_updated_at ON daily_bonus_status;
CREATE TRIGGER update_daily_bonus_status_updated_at BEFORE UPDATE ON daily_bonus_status
    FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();

DROP TRIGGER IF EXISTS update_wallets_updated_at ON wallets;
CREATE TRIGGER update_wallets_updated_at BEFORE UPDATE ON wallets
    FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();

DROP TRIGGER IF EXISTS update_verifications_updated_at ON verifications;
CREATE TRIGGER update_verifications_updated_at BEFORE UPDATE ON verifications
    FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();

DROP TRIGGER IF EXISTS update_achievements_updated_at ON achievements;
CREATE TRIGGER update_achievements_updated_at BEFORE UPDATE ON achievements
    FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();

-- ===================================================================
-- –ü–û–ß–ê–¢–ö–û–í–Ü –î–ê–ù–Ü
-- ===================================================================

-- –ü—Ä–∏–∫–ª–∞–¥–∏ –∑–∞–≤–¥–∞–Ω—å
INSERT INTO tasks (title, description, type, platform, action, winix_reward, tickets_reward, url, is_active, priority) VALUES
('–ü—ñ–¥–ø–∏—Å–∫–∞ –Ω–∞ Telegram –∫–∞–Ω–∞–ª', '–ü—ñ–¥–ø–∏—à—ñ—Ç—å—Å—è –Ω–∞ –æ—Ñ—ñ—Ü—ñ–π–Ω–∏–π –∫–∞–Ω–∞–ª WINIX', 'telegram', 'telegram', 'subscribe', 100.0, 1, 'https://t.me/winix_official', true, 10),
('–õ–∞–π–∫ YouTube –≤—ñ–¥–µ–æ', '–ü–æ—Å—Ç–∞–≤—Ç–µ –ª–∞–π–∫ –Ω–∞—à–æ–º—É –≤—ñ–¥–µ–æ –Ω–∞ YouTube', 'social', 'youtube', 'like', 50.0, 1, 'https://youtube.com/watch?v=example', true, 8),
('–ü—ñ–¥–ø–∏—Å–∫–∞ –Ω–∞ Twitter', '–ü—ñ–¥–ø–∏—à—ñ—Ç—å—Å—è –Ω–∞ –Ω–∞—à Twitter –∞–∫–∞—É–Ω—Ç', 'social', 'twitter', 'follow', 75.0, 1, 'https://twitter.com/winix_official', true, 7),
('–ü—ñ–¥–∫–ª—é—á–∏—Ç–∏ TON –≥–∞–º–∞–Ω–µ—Ü—å', '–ü—ñ–¥–∫–ª—é—á—ñ—Ç—å –≤–∞—à TON –≥–∞–º–∞–Ω–µ—Ü—å –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –±–æ–Ω—É—Å—É', 'wallet', 'ton', 'connect', 200.0, 2, null, true, 9)
ON CONFLICT DO NOTHING;

-- –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è FLEX —Ä—ñ–≤–Ω—ñ–≤ (–º–æ–∂–Ω–∞ –∑–±–µ—Ä–µ–≥—Ç–∏ –≤ –æ–∫—Ä–µ–º—ñ–π —Ç–∞–±–ª–∏—Ü—ñ)
CREATE TABLE IF NOT EXISTS flex_levels_config (
    level VARCHAR(20) PRIMARY KEY,
    required_flex INTEGER NOT NULL,
    winix_reward DECIMAL(15,2) NOT NULL,
    tickets_reward INTEGER NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    icon VARCHAR(50),
    color VARCHAR(20)
);

INSERT INTO flex_levels_config (level, required_flex, winix_reward, tickets_reward, name, description, icon, color) VALUES
('bronze', 1000, 50.0, 1, '–ë—Ä–æ–Ω–∑–æ–≤–∏–π', '–ü–æ—á–∞—Ç–∫–æ–≤–∏–π —Ä—ñ–≤–µ–Ω—å FLEX', 'ü•â', '#CD7F32'),
('silver', 5000, 150.0, 2, '–°—Ä—ñ–±–Ω–∏–π', '–°–µ—Ä–µ–¥–Ω—ñ–π —Ä—ñ–≤–µ–Ω—å FLEX', 'ü•à', '#C0C0C0'),
('gold', 15000, 400.0, 5, '–ó–æ–ª–æ—Ç–∏–π', '–í–∏—Å–æ–∫–∏–π —Ä—ñ–≤–µ–Ω—å FLEX', 'ü•á', '#FFD700'),
('diamond', 50000, 1000.0, 10, '–î—ñ–∞–º–∞–Ω—Ç–æ–≤–∏–π', '–ü—Ä–µ–º—ñ—É–º —Ä—ñ–≤–µ–Ω—å FLEX', 'üíé', '#B9F2FF')
ON CONFLICT DO NOTHING;