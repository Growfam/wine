"""
–ú–∞—Ä—à—Ä—É—Ç–∏ —Å–∏—Å—Ç–µ–º–∏ –∑–∞–≤–¥–∞–Ω—å WINIX
–¶–µ–Ω—Ç—Ä–∞–ª—ñ–∑–æ–≤–∞–Ω–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –≤—Å—ñ—Ö –º–∞—Ä—à—Ä—É—Ç—ñ–≤
"""

import logging
from typing import Any
from flask import Flask

logger = logging.getLogger(__name__)


def register_quests_routes(app: Flask) -> bool:
    """
    –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –≤—Å—ñ—Ö –º–∞—Ä—à—Ä—É—Ç—ñ–≤ —Å–∏—Å—Ç–µ–º–∏ –∑–∞–≤–¥–∞–Ω—å

    Args:
        app: Flask –¥–æ–¥–∞—Ç–æ–∫

    Returns:
        bool: True —è–∫—â–æ –≤—Å—ñ –º–∞—Ä—à—Ä—É—Ç–∏ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–æ —É—Å–ø—ñ—à–Ω–æ
    """
    logger.info("=== –†–ï–Ñ–°–¢–†–ê–¶–Ü–Ø –ú–ê–†–®–†–£–¢–Ü–í –°–ò–°–¢–ï–ú–ò –ó–ê–í–î–ê–ù–¨ ===")

    success_count = 0
    total_routes = 0

    # –ú–∞—Ä—à—Ä—É—Ç–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó
    try:
        from .auth_routes import register_auth_routes
        if register_auth_routes(app):
            success_count += 1
            logger.info("‚úÖ Auth –º–∞—Ä—à—Ä—É—Ç–∏ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–æ")
        else:
            logger.error("‚ùå –ü–æ–º–∏–ª–∫–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó auth –º–∞—Ä—à—Ä—É—Ç—ñ–≤")
        total_routes += 1
    except Exception as e:
        logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó auth –º–∞—Ä—à—Ä—É—Ç—ñ–≤: {e}", exc_info=True)
        total_routes += 1

    # –ú–∞—Ä—à—Ä—É—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
    try:
        from .user_routes import register_user_routes
        if register_user_routes(app):
            success_count += 1
            logger.info("‚úÖ User –º–∞—Ä—à—Ä—É—Ç–∏ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–æ")
        else:
            logger.error("‚ùå –ü–æ–º–∏–ª–∫–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó user –º–∞—Ä—à—Ä—É—Ç—ñ–≤")
        total_routes += 1
    except Exception as e:
        logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó user –º–∞—Ä—à—Ä—É—Ç—ñ–≤: {e}", exc_info=True)
        total_routes += 1

    # –ú–∞—Ä—à—Ä—É—Ç–∏ —â–æ–¥–µ–Ω–Ω–∏—Ö –±–æ–Ω—É—Å—ñ–≤
    try:
        from .daily_routes import register_daily_routes
        if register_daily_routes(app):
            success_count += 1
            logger.info("‚úÖ Daily –º–∞—Ä—à—Ä—É—Ç–∏ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–æ")
        else:
            logger.error("‚ùå –ü–æ–º–∏–ª–∫–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó daily –º–∞—Ä—à—Ä—É—Ç—ñ–≤")
        total_routes += 1
    except Exception as e:
        logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó daily –º–∞—Ä—à—Ä—É—Ç—ñ–≤: {e}", exc_info=True)
        total_routes += 1

    # –õ–æ–≥—É—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    if success_count == total_routes:
        logger.info(f"üéâ –í—Å—ñ {total_routes} –≥—Ä—É–ø –º–∞—Ä—à—Ä—É—Ç—ñ–≤ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–æ —É—Å–ø—ñ—à–Ω–æ!")
    else:
        logger.warning(f"‚ö†Ô∏è –ó–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–æ {success_count}/{total_routes} –≥—Ä—É–ø –º–∞—Ä—à—Ä—É—Ç—ñ–≤")

    # –õ–æ–≥—É—î–º–æ –∑–∞–≥–∞–ª—å–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å –º–∞—Ä—à—Ä—É—Ç—ñ–≤
    quests_routes_count = 0
    for rule in app.url_map.iter_rules():
        if '/api/' in rule.rule and any(prefix in rule.rule for prefix in ['/auth/', '/user/', '/daily/']):
            quests_routes_count += 1

    logger.info(f"üìä –ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –º–∞—Ä—à—Ä—É—Ç—ñ–≤ —Å–∏—Å—Ç–µ–º–∏ –∑–∞–≤–¥–∞–Ω—å: {quests_routes_count}")

    return success_count == total_routes


# –ï–∫—Å–ø–æ—Ä—Ç –æ—Å–Ω–æ–≤–Ω–æ—ó —Ñ—É–Ω–∫—Ü—ñ—ó
__all__ = ['register_quests_routes']