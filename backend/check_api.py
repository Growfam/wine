#!/usr/bin/env python3
"""
–¢–µ—Å—Ç API —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ—ó —Å–∏—Å—Ç–µ–º–∏
"""
import requests
import json


def test_referral_api(user_id):
    base_url = "http://localhost:8080"  # –ó–º—ñ–Ω—ñ—Ç—å –Ω–∞ –≤–∞—à URL

    print(f"\nüîç –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è API –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {user_id}")

    # 1. –¢–µ—Å—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    print("\nüìä –¢–µ—Å—Ç /api/referrals/stats/")
    try:
        response = requests.get(f"{base_url}/api/referrals/stats/{user_id}")
        print(f"Status: {response.status_code}")
        if response.status_code == 200:
            data = response.json()
            print(f"Success: {data.get('success', False)}")
            if 'statistics' in data:
                print(f"–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: {json.dumps(data['statistics'], indent=2)}")
            if 'referrals' in data:
                print(f"–†–µ—Ñ–µ—Ä–∞–ª—ñ–≤ L1: {len(data['referrals'].get('level1', []))}")
                print(f"–†–µ—Ñ–µ—Ä–∞–ª—ñ–≤ L2: {len(data['referrals'].get('level2', []))}")
        else:
            print(f"–ü–æ–º–∏–ª–∫–∞: {response.text}")
    except Exception as e:
        print(f"–ü–æ–º–∏–ª–∫–∞ –∑–∞–ø–∏—Ç—É: {e}")

    # 2. –¢–µ—Å—Ç –±–µ–π–¥–∂—ñ–≤
    print("\nüèÜ –¢–µ—Å—Ç /api/badges/")
    try:
        response = requests.get(f"{base_url}/api/badges/{user_id}")
        print(f"Status: {response.status_code}")
        if response.status_code == 200:
            data = response.json()
            print(f"–ë–µ–π–¥–∂—ñ–≤: {data.get('total_badges', 0)}")
            print(f"–î–æ—Å—Ç—É–ø–Ω–∏—Ö: {len(data.get('available_badges', []))}")
            if data.get('badges'):
                for badge in data['badges']:
                    print(f"  - {badge['badge_type']}: {'‚úÖ Claimed' if badge['claimed'] else '‚ùå Not claimed'}")
    except Exception as e:
        print(f"–ü–æ–º–∏–ª–∫–∞ –∑–∞–ø–∏—Ç—É: {e}")

    # 3. –¢–µ—Å—Ç –∑–∞–≤–¥–∞–Ω—å
    print("\nüìã –¢–µ—Å—Ç /api/tasks/")
    try:
        response = requests.get(f"{base_url}/api/tasks/{user_id}")
        print(f"Status: {response.status_code}")
        if response.status_code == 200:
            data = response.json()
            if data.get('tasks'):
                for task in data['tasks']:
                    progress = task.get('completion_percentage', 0)
                    print(f"  - {task['task_type']}: {progress}% ({'‚úÖ' if task['completed'] else '‚ùå'})")
    except Exception as e:
        print(f"–ü–æ–º–∏–ª–∫–∞ –∑–∞–ø–∏—Ç—É: {e}")


if __name__ == "__main__":
    user_id = input("–í–≤–µ–¥—ñ—Ç—å ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞: ").strip()
    if user_id:
        test_referral_api(user_id)