Інструкція для розробки бекенду реферальної системи Winix
Загальний опис проекту
Реферальна система Winix - це платформа, що дозволяє користувачам запрошувати нових учасників та отримувати за це винагороду. Система включає дворівневу структуру рефералів, різні типи винагород (прямі бонуси, відсоткові нарахування, бейджі, завдання).
Технічні вимоги

Мова програмування: Python
Фреймворк: Flask
База даних: SQL (з використанням SQLAlchemy ORM)
Формат API: REST JSON
Аутентифікація: Токен-базована
Структура коду: Модульна, файли не більше 200-500 рядків

Структура проекту
Проект повинен відповідати наявній структурі папок і файлів. Основні папки для розробки:

models - моделі бази даних
referrals - контролери та маршрути для реферальної системи
badges - логіка роботи з бейджами

Структура бази даних SQL
База даних повинна містити наступні таблиці:
1. Таблиця referrals
sqlCREATE TABLE referrals (
    id SERIAL PRIMARY KEY,
    referrer_id INTEGER NOT NULL,
    referee_id INTEGER NOT NULL,
    level INTEGER DEFAULT 1,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (referrer_id) REFERENCES users(id),
    FOREIGN KEY (referee_id) REFERENCES users(id),
    UNIQUE (referee_id)
);
2. Таблиця direct_bonuses
sqlCREATE TABLE direct_bonuses (
    id SERIAL PRIMARY KEY,
    referrer_id INTEGER NOT NULL,
    referee_id INTEGER NOT NULL,
    amount INTEGER DEFAULT 50,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (referrer_id) REFERENCES users(id),
    FOREIGN KEY (referee_id) REFERENCES users(id),
    UNIQUE (referee_id)
);
3. Таблиця percentage_rewards
sqlCREATE TABLE percentage_rewards (
    id SERIAL PRIMARY KEY,
    user_id INTEGER NOT NULL,
    referral_id INTEGER NOT NULL,
    level INTEGER NOT NULL,
    rate FLOAT NOT NULL,
    base_amount INTEGER NOT NULL,
    reward_amount INTEGER NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id),
    FOREIGN KEY (referral_id) REFERENCES users(id)
);
4. Таблиця referral_activities
sqlCREATE TABLE referral_activities (
    id SERIAL PRIMARY KEY,
    user_id INTEGER NOT NULL,
    draws_participation INTEGER DEFAULT 0,
    invited_referrals INTEGER DEFAULT 0,
    is_active BOOLEAN DEFAULT FALSE,
    reason_for_activity VARCHAR(50),
    last_updated TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id),
    UNIQUE (user_id)
);
5. Таблиця user_badges
sqlCREATE TABLE user_badges (
    id SERIAL PRIMARY KEY,
    user_id INTEGER NOT NULL,
    badge_type VARCHAR(20) NOT NULL,
    earned_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    claimed BOOLEAN DEFAULT FALSE,
    reward_amount INTEGER NOT NULL,
    FOREIGN KEY (user_id) REFERENCES users(id),
    UNIQUE (user_id, badge_type)
);
6. Таблиця user_tasks
sqlCREATE TABLE user_tasks (
    id SERIAL PRIMARY KEY,
    user_id INTEGER NOT NULL,
    task_type VARCHAR(30) NOT NULL,
    progress INTEGER DEFAULT 0,
    threshold INTEGER NOT NULL,
    completed BOOLEAN DEFAULT FALSE,
    claimed BOOLEAN DEFAULT FALSE,
    reward_amount INTEGER NOT NULL,
    FOREIGN KEY (user_id) REFERENCES users(id),
    UNIQUE (user_id, task_type)
);
7. Таблиця draws
sqlCREATE TABLE draws (
    id SERIAL PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    date TIMESTAMP NOT NULL
);
8. Таблиця draw_participants
sqlCREATE TABLE draw_participants (
    id SERIAL PRIMARY KEY,
    draw_id INTEGER NOT NULL,
    user_id INTEGER NOT NULL,
    is_winner BOOLEAN DEFAULT FALSE,
    prize_amount INTEGER DEFAULT 0,
    FOREIGN KEY (draw_id) REFERENCES draws(id),
    FOREIGN KEY (user_id) REFERENCES users(id),
    UNIQUE (draw_id, user_id)
);
Ці таблиці складають основу для реалізації всіх функцій реферальної системи Winix. При потребі можна додавати індекси для оптимізації запитів.