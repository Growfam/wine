#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–∏–π —Ç–µ—Å—Ç —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–ª—è –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º.
"""

import requests
import json
import time

API_BASE_URL = "http://localhost:8080"
TEST_USER_ID = f"debug_user_{int(time.time())}"

print("üîç –î—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞...")

# 1. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—ñ —Å–µ—Ä–≤–µ—Ä–∞
print(f"\n1. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ {API_BASE_URL}")
try:
    response = requests.get(f"{API_BASE_URL}/api/health", timeout=5)
    print(f"   ‚úÖ –°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–Ω–∏–π: {response.status_code}")
    print(f"   üìÑ –í—ñ–¥–ø–æ–≤—ñ–¥—å: {response.json()}")
except Exception as e:
    print(f"   ‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π: {e}")
    exit(1)

# 2. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –µ–Ω–¥–ø–æ—ñ–Ω—Ç—É —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
print(f"\n2. –¢–µ—Å—Ç —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {TEST_USER_ID}")
create_data = {
    "telegram_id": TEST_USER_ID,
    "username": "Debug User",
    "referrer_id": None
}

try:
    response = requests.post(
        f"{API_BASE_URL}/api/user/create",
        json=create_data,
        headers={'Content-Type': 'application/json'},
        timeout=10
    )
    
    print(f"   üìä –°—Ç–∞—Ç—É—Å –∫–æ–¥: {response.status_code}")
    print(f"   üìÑ Headers: {dict(response.headers)}")
    
    try:
        response_data = response.json()
        print(f"   üìÑ –í—ñ–¥–ø–æ–≤—ñ–¥—å JSON:")
        print(json.dumps(response_data, indent=4, ensure_ascii=False))
    except:
        print(f"   üìÑ –í—ñ–¥–ø–æ–≤—ñ–¥—å (—Ç–µ–∫—Å—Ç): {response.text}")
        
    if response.status_code in [200, 201]:
        print("   ‚úÖ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —É—Å–ø—ñ—à–Ω–µ!")
    else:
        print("   ‚ùå –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –≤–¥–∞–ª–æ—Å—è")
        
except Exception as e:
    print(f"   ‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø–∏—Ç—É: {e}")

# 3. –î–æ–¥–∞—Ç–∫–æ–≤–∞ –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
print(f"\n3. –î—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞")

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ debug –µ–Ω–¥–ø–æ—ñ–Ω—Ç—É
try:
    response = requests.get(f"{API_BASE_URL}/debug", timeout=10)
    if response.status_code == 200:
        debug_data = response.json()
        print("   ‚úÖ Debug –µ–Ω–¥–ø–æ—ñ–Ω—Ç –ø—Ä–∞—Ü—é—î")
        
        # Supabase —Å—Ç–∞—Ç—É—Å
        supabase_test = debug_data.get('environment', {}).get('supabase_test', {})
        print(f"   üîó Supabase: {'‚úÖ' if supabase_test.get('success') else '‚ùå'} {supabase_test.get('message', '')}")
        
        # –ú–∞—Ä—à—Ä—É—Ç–∏
        routes = debug_data.get('routes', [])
        user_routes = [r for r in routes if '/api/user' in r.get('path', '')]
        print(f"   üõ£Ô∏è  –ú–∞—Ä—à—Ä—É—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –∑–Ω–∞–π–¥–µ–Ω–æ: {len(user_routes)}")
        for route in user_routes[:5]:  # –ü–æ–∫–∞–∑—É—î–º–æ –ø–µ—Ä—à—ñ 5
            print(f"      - {route.get('methods', [])} {route.get('path', '')}")
    else:
        print(f"   ‚ö†Ô∏è Debug –µ–Ω–¥–ø–æ—ñ–Ω—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π: {response.status_code}")
except Exception as e:
    print(f"   ‚ùå –ü–æ–º–∏–ª–∫–∞ debug: {e}")

# 4. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å–ø–µ—Ü–∏—Ñ—ñ—á–Ω–æ–≥–æ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –µ–Ω–¥–ø–æ—ñ–Ω—Ç—É
print(f"\n4. –¢–µ—Å—Ç —Å–ø–µ—Ü—ñ–∞–ª—å–Ω–æ–≥–æ –µ–Ω–¥–ø–æ—ñ–Ω—Ç—É")
try:
    response = requests.get(f"{API_BASE_URL}/api/test/user-creation", timeout=10)
    print(f"   üìä –°—Ç–∞—Ç—É—Å: {response.status_code}")
    if response.status_code == 200:
        data = response.json()
        print(f"   ‚úÖ –¢–µ—Å—Ç–æ–≤–∏–π –µ–Ω–¥–ø–æ—ñ–Ω—Ç –ø—Ä–∞—Ü—é—î")
        print(f"   üìÑ –†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç—É:")
        print(json.dumps(data, indent=4, ensure_ascii=False))
    else:
        print(f"   ‚ùå –¢–µ—Å—Ç–æ–≤–∏–π –µ–Ω–¥–ø–æ—ñ–Ω—Ç –Ω–µ –ø—Ä–∞—Ü—é—î: {response.text}")
except Exception as e:
    print(f"   ‚ùå –ü–æ–º–∏–ª–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –µ–Ω–¥–ø–æ—ñ–Ω—Ç—É: {e}")

print(f"\n‚úÖ –î—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")

# 5. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó
print(f"\nüí° –Ø–∫—â–æ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –ø—Ä–∞—Ü—é—î:")
print("   1. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ, —á–∏ –∑–∞–ø—É—â–µ–Ω–∏–π Flask —Å–µ—Ä–≤–µ—Ä")
print("   2. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ª–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞ (python main.py)")
print("   3. –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—è, —â–æ –∑–º—ñ–Ω–Ω—ñ Supabase –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω—ñ –≤ .env")
print("   4. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ —ñ–Ω—Ç–µ—Ä–Ω–µ—Ç—É")
print("   5. –°–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–∏ —Å–µ—Ä–≤–µ—Ä")


